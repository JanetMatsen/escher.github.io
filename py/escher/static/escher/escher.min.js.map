{"version":3,"file":"escher.min.js","sources":["node_modules/browser-pack/_prelude.js","js/src/Behavior.js","js/src/Brush.js","js/src/BuildInput.js","js/src/Builder.js","js/src/CallbackManager.js","js/src/Canvas.js","js/src/CobraModel.js","js/src/DataMenu.js","js/src/DirectionArrow.js","js/src/Draw.js","js/src/KeyManager.js","js/src/Map.js","js/src/PlacedDiv.js","js/src/QuickJump.js","js/src/Scale.js","js/src/ScaleEditor.js","js/src/SearchBar.js","js/src/SearchIndex.js","js/src/Settings.js","js/src/SettingsMenu.js","js/src/TextEditInput.js","js/src/Tooltip.js","js/src/TooltipContainer.js","js/src/UndoStack.js","js/src/ZoomContainer.js","js/src/build.js","js/src/complete.ly.js","js/src/data_styles.js","js/src/inline.js","js/src/main.js","js/src/static.js","js/src/ui.js","js/src/utils.js","node_modules/baconjs/dist/Bacon.js","node_modules/filesaverjs/FileSaver.js","node_modules/mousetrap/mousetrap.js","node_modules/tinier/lib/tinier.js","node_modules/underscore/underscore.js","node_modules/vkbeautify/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","escher","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","map","undo_stack","empty_behavior","rotation_mode_enabled","rotation_drag","d3","behavior","drag","selectable_mousedown","text_label_mousedown","text_label_click","selectable_drag","node_mouseover","node_mouseout","label_mousedown","label_mouseover","label_mouseout","bezier_drag","bezier_mouseover","bezier_mouseout","reaction_label_drag","node_label_drag","dragging","turn_everything_on","toggle_selectable_click","toggle_selectable_drag","toggle_label_drag","toggle_label_mouseover","turn_everything_off","toggle_rotation_mode","on_off","show_center","sel","selectAll","data","enter","append","attr","center","x","y","on","cur","utils","d3_transform_catch","new_loc","event","dx","translate","dy","bind","current","parseFloat","style","hide_center","select","average_location","nodes","xs","ys","node_id","node","undefined","push","mean","selection_node","selection_background","callback_manager","run","selected_nodes","get_selected_nodes","Object","keys","console","warn","selected_node_ids","reactions","beziers","start_fn","d","sourceEvent","stopPropagation","drag_fn","angle","total_angle","updated","build","rotate_nodes","draw_these_nodes","node_ids","draw_these_reactions","reaction_ids","end_fn","undo_fn","these_nodes","forEach","id","redo_fn","center_fn","_get_generic_angular_drag","selectable_click","defaultPrevented","select_selectable","shiftKey","parentNode","classed","toggle_text_label_edit","text_edit_mousedown","selection","coords_a","coords","preventDefault","mouse","_get_selectable_drag","_get_bezier_drag","label_drag","_get_reaction_label_drag","_get_node_label_drag","type","toggle_bezier_drag","String","turn_off_drag","combine_nodes_and_draw","fixed_node_id","dragged_node_id","dragged_node","fixed_node","updated_segment_objs","connected_segments","segment_obj","segment","reaction_id","segments","segment_id","from_node_id","to_node_id","error","clone","delete_node_data","draw_everything","the_timeout","total_displacement","node_ids_to_drag","text_label_ids_to_drag","move_label","text_label_id","displacement","text_label","text_labels","set_dragging","indexOf","__data__","bigg_id","node_group","setTimeout","insertBefore","firstChild","grabbed","get_selected_node_ids","selected_text_label_ids","get_selected_text_label_ids","c_plus_c","move_node_and_dependents","unique_concat","draw_these_text_labels","node_to_combine_array","each","saved_dragged_node","segment_objs_moved_to_combine","updated_reactions","filter","saved_displacement","saved_node_ids","saved_text_label_ids","saved_reaction_ids","c_times_scalar","clearTimeout","move_bezier","bez","bezier_id","bezier","draw_these_beziers","_get_generic_drag","reaction","label_x","label_y","relative_to_selection","rel","location","saved_d","saved_location","get_center","angle_for_event","saved_angle","saved_center","Behavior","make_class","prototype","is_enabled","insert_after","brush_sel","insert_before_node","nextSibling","enabled","toggle","selection_brush","setup_selection_brush","remove","selectable_selection","size_and_location","canvas","width","height","brush_fn","svg","brush","scale","identity","domain","settings","get_option","set_conditional","set_status","shift_key_on","extent","target","sx","sy","clear","Brush","zoom_container","new_sel","placed_div","PlacedDiv","hide","c","completely","backgroundColor","input","text","hide_dropdown","default_angle","direction_arrow","DirectionArrow","set_rotation","setup_map_callbacks","setup_zoom_callbacks","target_coords","set","selected_node","is_active","reload","show_dropdown","hide_target","count","place_at_selected","is_visible","toggle_start_reaction_listener","_","isNull","reload_at_selected","place","show","clear_escape","key_manager","add_escape_listener","blur","repaint","setText","focus","hideDropDown","deselect_text_labels","select_single_node","set_location","starting_from_scratch","already_drawn","drawn_id","cobra_model","show_names","allow_duplicates","options","cobra_reactions","cobra_metabolites","metabolites","has_data_on_reactions","selected_m_name","reaction_data","reaction_data_styles","name","bold_mets_in_str","str","mets","replace","RegExp","join","reaction_suggestions","reaction_name","show_r_name","met_bigg_id","html","data_string","matches","met_id","show_met_names","show_gene_names","flatten","genes","g_obj","reaction_string","CobraModel","build_reaction_string","reversibility","lower_bound","upper_bound","concat","sort_fn","Math","abs","toLowerCase","sort","complete","check_and_build","new_reaction_from_scratch","get_rotation","new_reaction_for_metabolite","onEnter","onChange","start_reaction_listener","deselect_nodes","show_target","BuildInput","map_data","model_data","embedded_css","builder_embed","datum","__builder__","set_options","menu","scroll_behavior","use_3d_transform","check_browser","enable_editing","enable_keys","enable_search","fill_screen","zoom_to_element","full_screen_button","ignore_bootstrap","starting_reaction","never_ask_before_quit","unique_map_id","primary_metabolite_radius","secondary_metabolite_radius","marker_radius","gene_font_size","hide_secondary_metabolites","show_gene_reaction_rules","hide_all_labels","reaction_styles","reaction_compare_style","reaction_scale","color","size","reaction_no_data_color","reaction_no_data_size","gene_data","and_method_in_gene_reaction_rule","metabolite_data","metabolite_styles","metabolite_compare_style","metabolite_scale","metabolite_no_data_color","metabolite_no_data_size","identifiers_on_map","highlight_missing","allow_building_duplicate_reactions","cofactors","tooltip_component","DefaultTooltip","enable_tooltips","first_load_callback","check_for_parent_tag","set_option","option","new_value","conditional","Settings","scales","streams","onValue","val","has","reduce","has_found","scale_el","CallbackManager","load_model","load_map","_update_data","status_bus","new_behavior","set_scroll_behavior","draw_all_nodes","draw_all_reactions","select_none","should_update_data","from_cobra_json","isUndefined","remove_child_nodes","ZoomContainer","zoomed_sel","Map","from_data","build_input","text_edit_input","TextEditInput","tooltip_container","TooltipContainer","_setup_modes","menu_div","search_bar_div","button_div","search_bar","SearchBar","search_index","settings_bar","settings_div","SettingsMenu","slice","_get_keys","assigned_keys","input_list","update","_set_up_menu","_set_up_button_panel","element_id","zoom_to_reaction","zoom_to_node","zoom_extent_canvas","get_size","start_coords","zoom_extent_nodes","_setup_status","_setup_quick_jump","zoom_mode","view_mode","_setup_confirm_before_exit","_set_mode","mode","_toggle_direction_buttons","toggle_pan_drag","toggle_resize","build_mode","brush_mode","rotate_mode","text_mode","set_reaction_data","set_gene_data","clear_gene_reaction_rules","set_metabolite_data","update_model","update_map","kind","should_draw","make_gene_data_object","all_reactions","extend","data_styles","import_and_check","met_data_object","reaction_data_object","gene_data_object","update_metabolite_data","update_reaction_data","apply_metabolite_data_to_map","apply_reaction_data_to_map","apply_gene_data_to_map","update_model_timer","delay","apply_metabolite_data","apply_reaction_data","apply_gene_data","menu_selection","load_map_for_file","check_map","map_name","load_model_for_file","load_reaction_data_for_file","load_metabolite_data_for_file","load_gene_data_for_file","ui","dropdown_menu","button","key","save","key_text","assign","load","fn","pre_fn","failure_fn","save_svg","save_png","clear_map","model_menu","convert_map","clear_model","disable_model_clear_convert","dropdown","data_menu","load_reaction_data","accept_csv","clear_reaction_data","divider","clear_gene_data","clear_metabolite_data","disable_clears","edit_menu","undo","redo","toggle_primary","cycle_primary","select_all","invert_selection","view_menu","zoom_in","zoom_out","extent_nodes","extent_canvas","search","full_screen","toggle_beziers","show_settings","select_button","$","find","ids","this_id","b_id","button_selection","menu_option","button_panel","individual_button","icon","tooltip","radio_button_group","direction_buttons","button_group","direction_arrow_left","direction_arrow_right","direction_arrow_up","direction_arrow_down","status_bar","status","load_fn","new_map_name","quick_jump_path","callback","confirm","url","name_to_url","json","quick_jump","QuickJump","was_enabled","zoom","zoom_on","load_metabolite_data","load_gene_data","ignore_with_input","delete","delete_selected","delete_del","toggle_selected_node_primary","cycle_primary_node","right","down","left","up","onbeforeunload","Builder","callbacks","this_arg","pass_args","Array","arguments","a_name","split_name","split","apply","resize_enabled","setup","stop_propagation","transform_string","current_transform","tr","ldragresize","oldx","min","dragbar_width","mouse_node","mouse_node_mult","rect","top","bottom","rdragresize","dragx","max","tdragresize","oldy","bdragresize","dragy","drag_right","origin","drag_left","drag_top","drag_bottom","Canvas","stoichiometries","is_reversible","format","number","reactant_bits","product_bits","the_metabolite","coefficient","the_id","model","gene_ids","genes_for_gene_reaction_rule","gene_reaction_rule","gene_id","gene","met","styles","compare_style","apply_reaction_data_to_reactions","apply_metabolite_data_to_nodes","gene_data_obj","apply_gene_data_to_reactions","load_with_files","files","select_sel","update_callback","addEventListener","load_datafile","value","file","this_file","load_the_file","list","getdatafiles","datafiles","empty","path_for_arrow","arrow_container","arrow","_setup_drag","transform","rotate","rotation","displace_rotation","d_rotation","b","d_angle","to_degrees","create_membrane","enter_selection","update_membrane","update_selection","create_reaction","create_reaction_label","update_reaction","drawn_nodes","defs","update_reaction_label","draw_a_nested_object","create_segment","update_segment","tool","group","label_mousedown_fn","label_mouseover_fn","label_mouseout_fn","label","add_gene_height","all_genes_g","show_gene_string","gene_string","show_gene_reaction_rule","sd","gene_string_for_data","td","gene_g","exit","should_size","should_color","no_data_size","no_data_color","primary_r","secondary_r","get_arrow_size","reaction_size","isNaN","get_disp","arrow_size","node_is_primary","arrow_height","start","end","b1","b2","disp","from_node_coefficient","direction","displaced_coords","to_node_coefficient","curve","show_missing","reaction_color","arrowheads","node_type","get_angle","loc","show_arrowhead_flux","stoichiometry_labels","labels","disp_factor","rotate_coords","create_bezier","update_bezier","show_beziers","drag_behavior","mouseover","mouseout","drawn_reactions","seg_data","segment_d","create_node","metabolite_groups","update_node","has_data_on_nodes","mousedown_fn","click_fn","mouseover_fn","mouseout_fn","label_drag_behavior","hideNode","marker_r","metabolite_data_styles","no_data_style","node_label","should_scale","metabolite_size","should_color_data","metabolite_color","create_text_label","update_text_label","reaction_arrow_displacement","displace","check_undefined","new_x","new_y","hyp","distance","Draw","ctrl_equals_cmd","mousetrap","Mousetrap","isBoolean","stopCallback","_add_cmd","key_ar","isArray","new_ar","k","reset","key_id","assigned_key","key_to_bind","input_blocking","add_enter_listener","one_time","add_key_listener","key_name","unbind","KeyManager","css","canvas_size_and_loc","map_id","map_description","generate_map_id","setup_defs","setup_containers","largest_ids","Scale","calc_data_stats","connect_to_settings","get_data_statistics","UndoStack","draw","SearchIndex","beziers_enabled","rotation_on","listen_for_full_screen","get_largest_id","obj","current_largest","parseInt","Date","now","toString","n_id","insert","r_id","g_id","segments_to_delete","s_id","from_node","to_node","midpoint","c_minus_c","label_id","new_beziers_for_reactions","largest_segment_id","reset_containers","time","_status_timer","has_cobra_model","draw_all_text_labels","draw_beziers","clear_deleted","draw_all_beziers","clear_deleted_reactions","reaction_subset","object_slice_for_ids_ref","update_fn","draw_an_object","bezier_ids","bezier_ids_for_reaction_ids","clear_deleted_segments","clear_deleted_beziers","clear_deleted_nodes","node_subset","create_fn","text_label_ids","clear_deleted_text_labels","text_label_subset","bezier_subset","hide_beziers","has_data","data_statistics","on_array","array","same","vals","quartiles","funcs","ar","new_val","get_selected_text_labels","selected_text_labels","select_metabolite_with_id","node_selection","selected","classable_node","classable_selection","node_count","out","select_text_label","text_label_selection","p","delete_selectable","segments_and_reactions_for_nodes","segment_objs_w_segments","saved_nodes","saved_segment_objs_w_segments","saved_reactions","saved_text_labels","delete_and_draw","segment_objs","delete_segment_data","delete_reaction_data","delete_text_label_data","changed_r_scale","changed_m_scale","extend_nodes","extend_reactions","reaction_ids_to_draw","seg_id","seg_o","new_beziers_for_segments","scale_changed","found","so","bez_id","bezier_id_for_segment_id","extend_and_draw_metabolite","new_nodes","selected_node_id","cobra_reaction","reactant_ids","coeff","metabolite_id","metabolite","label_d","reaction_redo","reaction_undo","new_reactions","reaction_bigg_id","apply_undo_redo","extend_and_draw_reaction","new_beziers","new_coords","translate_off_screen","new_reaction","saved_beziers","reactions_to_draw","connected_anchor_ids","segment_info","connected_anchor_id","related_node_ids","conn_met_id","conn_node","a_selected_node_id","nodes_to_draw","last_i","last_node","last_is_primary","last_coords","last_segment","last_segment_info","primary_node_id","last_bezier","related_node_id","this_is_primary","these_coords","this_segment_info","this_segment","this_bezier","old_connected_segments","new_connected_segments","go","reaction_ids_to_draw_o","these_reactions","segment_ids_for_reactions","segment_obj_w_segment","these_ids","new_text_label","edit_text_label","saved_value","edit_and_draw","record_id","margin","_zoom_extent","new_zoom","new_pos","go_to","zoom_to_text_label","highlight_reaction","highlight","highlight_node","highlight_text_label","full_screen_event","document","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","full_screen_listener","unlisten_for_full_screen","removeEventListener","full_screen_on","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","download_json","map_for_export","homepage","schema","new_segment","attrs","new_node","t_id","canvas_el","new_canvas_el","save_map","callback_before","callback_after","map_type","window_scale","window_translate","mouse_node_size_and_trans","w","h","_go_to_svg","hidden_sel","download_svg","download_png","reactions_not_found","reaction_attrs","met_nodes_not_found","metabolite_attrs","model_reaction_id","model_reaction","model_metabolite_id","model_metabolite","n_reactions_not_found","n_met_nodes_not_found","status_delay","div","visible","map_size","load_callback","selector","url_comp","parse_url_components","default_value","view_options","change_map","success","replace_state_for_map_name","reset_selection","selectedIndex","href","history","replaceState","linear","x_size","y_size","clamp","scale_path","path","x_fn","y_fn","match","p0","p1","p2","reg","p3","p4","p5","p6","scale_decimals","scale_fn","precision","sort_scale","stats","sorted","v","color_range","size_range","range","update_metabolite","changed","grad_id","unique_string","input_width","input_height","data_not_loaded","input_label_group","nd","no_data_container","add_group","trash_group","input_group","gradient","pickers_group","no_data","update_no_data","bar_w","bar_h","x_disp","_data_not_loaded","sc","sc_size","bring_to_front","d2","get_this_val","set_scale","sorted_domain","frac","stops","pickers","new_d","buf","floor","invert","trashes","add","last_ind","j","th","inputs","disabled","stat_types","opts","sind","label_w","ins","ScaleEditor","container","previous","next","counter","results","on_input_fn","_drop_duplicates","debounce","uniq","item","comp_keys","clear_next","clear_previous","index","record","overwrite","check_record","substring","re","exec","conditional_options","bacon","Bus","force_update_bus","Observable","convert_to_conditional_stream","_convert_to_conditional_stream","force_update_with_bus","_force_update_with_bus","busses","_create_conditional_setting","bus","stream","status_stream","is_not_hold_event","not","toProperty","is_not_first_clear","scan","is_not_first_hold","combined","combineAsArray","held","flatMap","fromArray","unheld","merge","initial_value","hold_changes","abandon_changes","accept_changes","toggle_abs_and_apply_data","background","box","view_gui","rse","style_gui","mse","clear_enter","abs_callback","cell","style_cells","get_styles","checked","option_name","string","boolean_options","pan","active_target","_accept_changes","_add_and_edit","decompartmentalizeCheck","decompartmentalize","capitalizeFirstLetter","charAt","toUpperCase","tinier","createComponent","createInterface","interfaceTypes","createElement","render","containerStyle","min-width","min-height","border-radius","border","padding","background-color","text-align","font-size","font-family","box-shadow","idStyle","font-weight","buttonStyle","margin-top","typeLabelStyle","position","displayName","biggId","reducers","setContainerData","args","state","methods","openBigg","pref","open","decomp","biggButtonText","el","onClick","cancel_hide_tooltip","tooltip_function","isFunction","tinier_tooltip","checkType","COMPONENT","delay_hide_timeout","delay_hide","contains","stack_size","stack","oldest","newest","end_of_stack","top_of_stack","_incr","_decr","css3_transform_container","_scroll_behavior","_use_3d_transform","_pan_drag_on","_zoom_behavior","_zoom_timeout","_svg_scale","_svg_translate","_update_scroll","set_use_3d_transform","err","log","wheel_fn","ev","sensitivity","returnValue","get_directional_disp","wheel_delta","delta","the_delt","new_translate","wheelDeltaX","deltaX","wheelDeltaY","deltaY","translate_array","_go_to_3d","svg_scale","svg_translate","n_scale","n_translate","tranform","_clear_3d","defer","zoom_by","amount","shift","PI","new_reaction_id","selected_node_coords","reaction_length","main_axis","anchor_distance","reactant_ranks","product_ranks","reactant_count","product_count","reaction_is_reversed","formula","new_metabolite","carbons","Infinity","max_rank","old","primary_reactant_index","primary_product_index","is_primary","new_anchors","anchors","dis","anchor_ids","new_id","general_node_type","new_anchor_groups","from_id","to_id","new_segment_id","reverse_flux","primary_index","met_loc","calculate_new_metabolite_coordinates","new_node_id","circle","Boolean","metabolites_array","rotate_around","coord","updated_node_ids","updated_reaction_ids","move_node_and_labels","tbez","is_reversed","ds","draw_at_index","b1_strength","b2_strength","w2","secondary_dis","num_slots","de","reaction_axis","new_label","seg_bez","these","config","calculateWidthForText","spacer","visibility","outline","whiteSpace","fontSize","fontFamily","fontWeight","body","appendChild","innerHTML","getBoundingClientRect","get_document","get_window","promptInnerHTML","hintColor","dropDownBorderColor","dropDownZIndex","dropDownOnHoverBackgroundColor","txtInput","spellcheck","txtHint","cloneNode","borderColor","boxShadow","verticalAlign","wrapper","prompt","overflow","marginLeft","dropDown","textAlign","zIndex","cursor","borderStyle","borderWidth","overflowX","overflowY","createDropDownController","elem","rows","ix","oldIndex","current_row","onMouseOver","onMouseOut","onDblClick","onmouseselection","refresh","token","vph","innerHeight","documentElement","clientHeight","distanceToTop","distanceToBottom","divRow","onmouseover","onmouseout","onmousedown","ondblclick","__hint","rs","display_limit","divRow2","maxHeight","move","step","get_current_row","dropDownController","leftSide","registerOnTextChangeOldValue","get_hint","onArrowDown","onArrowUp","onTab","startFrom","hint","getText","optionsLength","registerOnTextChange","txt","handler","keyDownHandler","keyCode","m","hasTextChanged","align_gene_data_to_reactions","aligned","null_val","first_gene_id","this_gene_data","existing_d","pnt","check","array_to_object","float_for_data","check_finite","isFinite","take_abs","diff","fold","log2_fold","_parse_float_or_null","fs","reverse_flux_for_data","rule","gene_values","null_or_d","out_text","genes_found","replace_gene_in_rule","RETURN_ARG","new_str","any_num","any","EMPTY_LINES","TRAILING_NEWLINE","result","text_for_data","csv_converter","csv_rows","converted","row","AND_OR","ALL_PARENS","unique_strings_array","evaluate_gene_reaction_rule","curr_val","all_null","new_curr_val","EXCESS_PARENS","OR_EXPRESSION","nums","OR","sum","AND_EXPRESSION","AND","num","Number","escape_reg_exp","ESCAPE_REG","space_or_par_start","space_or_par_finish","escaped","r_data","version","DataMenu","static","libs","underscore","baconjs","vkbeautify","load_map_model_from_url","map_download_url","model_download_url","local_index","opt","map_path","_get_path","model_name","model_path","hasOwnProperty","encodeURIComponent","organism","_button_with_sel","set_button","s2","pull_right","ul","li","link","set_json_or_csv_input_button","set_json_input_button","post_fn","load_json","click","load_json_or_csv","_check_filesaver","Blob","alert","defaults","must_be_float","has_key","hasChildNodes","removeChild","lastChild","load_css","css_path","ends_with","suffix","load_files","files_to_load","final_callback","remaining","is_internal","constructor","instance","container_sel","parent_node_selector","children_selector","object","id_key","create_function","update_function","exit_function","draw_object","make_array_ref","object_data_key","make_array","it","compare_arrays","a1","a2","arr","column","nk","isObject","mapObject","obj1","obj2","attrname","arrays","new_array","func","wait","immediate","timeout","context","later","callNow","object_slice_for_ids","subset","coords1","coords2","scalar","JSON","stringify","blob","saveAs","File","FileReader","FileList","reader","onload","parse","onabort","onerror","readAsText","debug_event","onload_function","errors","csv","parseRows","svg_sel","do_beautify","xml","XMLSerializer","serializeToString","getContext","svg_size","getBBox","svg_width","svg_height","base_image","Image","src","btoa","fillStyle","fillRect","drawImage","toBlob","rotate_coords_recursive","coords_array","rot","cos","sin","denominator","numerator","atan","radians","point","gamma","atan2","beta","sqrt","pow","names","compartmentalize","compartment_id","no_compartment","avg","median","half","random_characters","possible","random","tag","tagName","download_url","the_window","query","vars","pair","decodeURIComponent","ownerDocument","defaultView","transform_attr","browser","tem","ua","navigator","userAgent","M","test","appName","appVersion","splice","Source","obs","sync","lazy","queue","ConsumingSource","BufferingSource","Desc","method","Some","Event","eventIdCounter","Next","valueF","eager","_isNext","valueInternal","Initial","End","desc","idCounter","initialDesc","CompositeUnsubscribe","ss","unsubscribe","unsubscribed","subscriptions","starting","Dispatcher","_subscribe","_handleEvent","subscribe","handleEvent","pushing","ended","prevError","unsubSrc","EventStream","assertFunction","dispatcher","registerObs","PropertyDispatcher","property","None","currentValueRootId","propertyEnded","Property","unsubAll","subscribeAll","guardedSink","sink","Bacon","valueAndEnd","endEvent","_slice","Exception","nop","former","cloneArray","assert","message","condition","assertObservableIsProperty","_isObservable","_isProperty","assertEventStream","_isEventStream","assertObservable","isObservable","assertArray","assertNoArguments","prop","inherit","child","parent","hasProp","ctor","indexWhere","head","always","negate","tail","filtered","toArray","last","all","without","seed","cached","_isNone","me","internals","recursionDepth","UpdateBarrier","rootEvent","waiterObs","waiters","afters","aftersIndex","flushed","afterTransaction","whenDoneWith","obsWaiters","flush","flushWaiters","deps","obsId","flushDepsOf","dep","internalDeps","inTransaction","after","currentEventId","wrappedSubscribe","unsubd","shouldUnsub","doUnsub","unsub","reply","noMore","hasWaiters","_isSource","markEnded","consume","mayHave","hasAtLeast","values","isTrigger","fromObservable","_isDesc","findDeps","describe","ref","_len","_key","withDesc","withMethodCallSupport","wrapped","_len2","_key2","methodName","makeFunctionArgs","makeFunction_","partiallyApplied","applied","_len3","_key3","toSimpleExtractor","fieldValue","toFieldExtractor","parts","partFuncs","isFieldKey","_len4","_key4","makeFunction","convertArgsToFunction","sampled","sampledBy","_ref","_ref2","toCombinator","toFieldKey","_isSome","getOrElse","get","isDefined","inspect","toOption","more","_isEvent","isEvent","isEnd","isInitial","isNext","isError","hasValue","fmap","_isInitial","toNext","initialEvent","nextEvent","toEvent","subscribeInternal","onValues","onError","onEnd","_name","withDescription","subscription","_this2","unsubMe","iterable","hasSubscribers","removeSub","pushIt","pushToSubscriptions","tmp","len","sub","unsubscribeFromSource","_this","initValue_","initValue","initSent","subbed","sendInit","toEventStream","withHandler","never","when","usage","sources","pats","patterns","patSources","constantToFunction","pat","ixs","triggerFound","needsBarrier","containsDuplicateDeps","resultStream","triggers","ends","i1","cannotSync","source","cannotMatch","nonFlattened","trigger","part","flushLater","flushWhileTriggers","pop","events","i2","_p","observables","checkObservable","groupSimultaneous","_len5","_key5","_len6","_key6","maybeSubSource","_this3","dispatchingId","valId","changes","_this4","_this5","constant","fromBinder","binder","eventTransformer","unbound","shouldUnbind","unbinder","_len7","_key7","_len8","_key8","argumentsToObservables","argumentsToObservablesAndFunction","_len9","_key9","combineWith","_argumentsToObservablesAndFunction","combine","other","combinator","withStateMachine","initState","fromF","newState","outputs","output","equals","isNone","skipDuplicates","isEqual","prev","awaiting","and","or","scheduler","setInterval","clearInterval","getTime","bufferWithTime","bufferWithTimeOrCount","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","schedule","onInput","onFlush","scheduled","valuesToPush","_this6","delayMs","_this7","_len10","_key10","once","unsubRight","unsubLeft","flatMap_","makeSpawner","flatMapFirst","makeObservable","root","firstOnly","limit","rootDep","childDeps","composite","spawn","checkQueue","checkEnd","__","unsubRoot","flatMapWithConcurrencyLimit","_len11","_key11","flatMapConcat","sender","bufferingThrottle","minimumInterval","newSink","subscribeInput","_this8","unsubscribeInput","plug","_this9","liftCallback","_len12","_key12","fromCallback","_len13","_key13","fromNodeCallback","_len14","_key14","combineTemplate","template","ctxStack","setValue","applyStreamValue","constantValue","mkContext","pushContext","newContext","compile","popContext","compileTemplate","rootContext","addPropertyInitValueToStream","justInitValue","mapEnd","skipErrors","takeUntil","stopper","endMarker","_event$value","flatMapLatest","delayChanges","debounceImmediate","decode","cases","resultProperty","_this10","acc","initHandled","prevTuple","tuple","doAction","doEnd","doError","doLog","_len15","_key15","endOnError","_len16","_key16","take","first","mapError","flatMapError","sampler","thisSource","samplerSource","sample","interval","_len17","_key17","eventMethods","findHandlerMethods","methodPair","addListener","fromEventTarget","eventName","_findHandlerMethods","fromEvent","fromPoll","poll","fromPromise","promise","abort","bound","then","done","groupBy","keyF","limitF","similar","limited","pushNeeded","holdWhen","valve","onHold","bufferedValues","srcIsEnded","subscribed","endIfBothEnded","toSend","asEventStream","_this11","off","jQuery","Zepto","lastEvent","_len18","_key18","mergeAll","smartSink","unsubBoth","sinks","repeatedly","repeat","generator","flag","subscribeNext","retry","retries","retriesDone","isRetryable","finished","valueStream","pause","sequentially","skip","skipUntil","starter","started","skipWhile","ok","_len19","_key19","slidingWindow","minValues","spies","running","spy","startWith","takeWhile","_len20","_key20","throttle","firstToPromise","PromiseCtr","_this12","Promise","resolve","reject","toPromise","initial","lateBindFirst","_len22","_key22","_len21","_key21","Function","zipAsArray","_len23","_key23","zipWith","_len24","_key24","_len25","_key25","observablesAndFunction","zip","view","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","revoker","revokeObjectURL","dispatch","filesaver","event_types","listener","auto_bom","FileSaver","no_auto_bom","object_url","target_view","blob_changed","dispatch_all","fs_error","onloadend","base64Data","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","abortable","create_if_not_found","create","exclusive","download","chrome","webkitSlice","TEMPORARY","getDirectory","dir","getFile","createWriter","writer","onwriteend","toURL","ABORT_ERR","write","WRITING","NOT_FOUND_ERR","FS_proto","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","content","_addEvent","attachEvent","_characterFromEvent","character","fromCharCode","which","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","_stopPropagation","cancelBubble","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","action","_keysFromString","combination","_getKeyInfo","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","element","ancestor","targetElement","_resetSequences","doNotReset","activeSequences","_sequenceLevels","_nextExpectedAction","_getMatches","sequenceName","level","_callbacks","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","srcElement","_handleKeyEvent","_ignoreNextKeyup","handleKey","_resetSequenceTimer","_resetTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","_directMap","info","_ignoreNextKeypress","_handleKey","maxLevel","processedSequenceCallback","ignoreThisKeypress","_bindMultiple","combinations",8,9,13,16,17,18,20,27,32,33,34,35,36,37,38,39,40,45,46,91,93,224,106,107,109,110,111,186,187,188,189,190,191,192,219,220,221,222,"~","!","@","#","%","^","&","*","(",")","+",":","\"","<",">","?","|","command","return","escape","plus","mod","platform","className","isContentEditable","addKeycodes","documentMousetrap","noop","fromPairs","pairs","accum","_extends2","_extends","_typeof","isString","isNumber","notNull","mapValues","newObj","reduceValues","zipArrays","lenLongest","res","_loop","zipObjects","objects","allKeys","_i","_object","filterValues","tagType","NULL","fns","defaultFn","throwUnrecognizedType","ARRAY","OBJECT","hasChildren","_match","ARRAY_OF","OBJECT_OF","checkRenderResultRecurse","userBindings","_match2","updateRecurse","recurse","objOf","arOf","component","checkRenderResult","updateEl","address","diffVal","lastRenderedEl","stateCallers","patchReducersWithState","callReducer","signals","patchSignals","callSignal","patchMethods","callMethod","arg","DESTROY","willUnmount","bindings","shouldUpdate","CREATE","UPDATE","willMount","willUpdate","verbose","didMount","didUpdate","dropNodes","tree","_match3","NODE","updateComponents","renderResult","_match4","newAddress","addressWith","nextRenderResult","children","addressEqual","treeGet","treeSet","_extends3","_head","rest","treeSetMutable","_tail","_last","makeTree","mutable","checkState","modelNode","_match5","computeDiffValue","lastState","isValidFn","triggeringAddress","stateValid","lastStateValid","componentTriggeredUpdate","diffWithModel","_match6","longest","diffWithModelMin","minSignals","minUpdate","makeSignal","_onFns","makeOneSignalAPI","isCollection","_callFns","_ref3","onName","argObject","makeSignalsAPI","signalNames","makeChildSignalsAPI","_match7","reduceChildren","_match8","runSignalSetup","signalsAPI","childSignalsAPI","signalSetup","childSignals","mergeSignals","diffNode","signalNode","_match9","upChild","upAddress","_ref4","_reduceChildren","hasCreated","destroyed","childAddress","childSignalsAPINode","_ref6","newUpChild","_newUpAddress","_children","_ret2","_runSignalSetup","newUpAddress","_ref5","callbackObj","upCallbackObj","signal","_ref7","objectOf","arrayOf","defaultShouldUpdate","_ref8","checkInputs","patchInitNoArg","patchReducersOneArg","reducer","reducersRaw","signalName","makeCallMethod","stateTree","localState","makeCallSignal","makeCallReducer","topComponent","bindingTree","signalTree","triggeringComponent","newLocalState","_diffWithModelMin","localSignals","newSignals","minUpdateBindings","minUpdateEl","minUpdateState","newBindings","makeStateCallers","appEl","topBinding","initialState","setStateReducer","_ref9","setState","getState","setStateNoRender","signalsCall","reverseObject","keyBy","addressToObj","_ref10","objectForBindingsArray","binding","_j","_l","_binding","objectForBindings","objectForBindingsObject","attributesIn","attributes","ELEMENT","addressIn","BINDING","explicitNamespace","prefix","NAMESPACES","newName","explicit","createDOMElement","tinierEl","_explicitNamespace","ns","namespaceURI","xhtml","updateDOMElement","getStyles","cssText","toCamelCase","stripOn","setAttributeCheckBool","namespace","valToSet","setAttribute","setAttributeNS","thenFn","parentNamespace","LISTENER_OBJECT","onFn","ATTRIBUTE_RENAME","_explicitNamespace2","ATTRIBUTE_APPLY","_explicitNamespace3","_name2","_explicit","sv","sk","setProperty","attributeNames","ATTRIBUTE_RENAME_REV","removeAttribute","tStyle","removeProperty","flattenElementsAr","removeExtraNodes","childNodes","isElement","tinierElementsAr","tinierElements","isTinierBinding","childrenWithKeys","from","elementsByID","bindingsAr","isTinierElement","movedEl","replaceChild","elToUpdate","newEl","newEl2","_el","Text","textContent","createTextNode","__esModule","Symbol","iterator","STRING","NUMBER","BOOLEAN","ANY","NO_ARGUMENT","TOP","xlink","xmlns","createReduce","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","ObjProto","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","argCount","collection","accumulator","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","every","some","includes","include","fromIndex","guard","invoke","isFunc","pluck","where","findWhere","computed","lastComputed","shuffle","rand","shuffled","sortBy","criteria","indexBy","countBy","partition","pass","fail","drop","compact","shallow","strict","startIndex","isArguments","difference","unique","isSorted","seen","union","intersection","argsLength","unzip","findLastIndex","low","high","mid","lastIndexOf","stop","ceil","executeBound","sourceFunc","boundFunc","callingContext","TypeError","partial","boundArgs","bindAll","memoize","hasher","cache","leading","trailing","timestamp","wrap","compose","times","before","hasEnumBug","propertyIsEnumerable","functions","extendOwn","pick","oiteratee","omit","props","tap","interceptor","isMatch","eq","aStack","bStack","areArrays","aCtor","bCtor","isEmpty","nodeType","Int8Array","noConflict","propertyOf","escapeMap","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","fallback","uniqueId","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","offset","variable","argument","chain","_chain","mixin","valueOf","toJSON","createShiftArr","space","isSubquery","parenthesisLevel","split_sql","tab","inComment","deep","sql","ar_by_quote","xmlmin","preserveComments","jsonmin","cssmin","sqlmin"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpl4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhzxruEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjpflhvattbrihaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7mBA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvtjilxgzgsourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Behavior. Defines the set of click and drag behaviors for the map, and keeps\n * track of which behaviors are activated.\n *\n * A Behavior instance has the following attributes:\n *\n * my_behavior.rotation_drag, my_behavior.text_label_mousedown,\n * my_behavior.text_label_click, my_behavior.selectable_mousedown,\n * my_behavior.selectable_click, my_behavior.selectable_drag,\n * my_behavior.node_mouseover, my_behavior.node_mouseout,\n * my_behavior.label_mousedown, my_behavior.label_mouseover,\n * my_behavior.label_mouseout, my_behavior.bezier_drag,\n * my_behavior.bezier_mouseover, my_behavior.bezier_mouseout,\n * my_behavior.reaction_label_drag, my_behavior.node_label_drag,\n *\n */\n\n/* global d3 */\n\nvar utils = require('./utils')\nvar build = require('./build')\n\n\nvar Behavior = utils.make_class()\n// methods\nBehavior.prototype = {\n  init: init,\n  toggle_rotation_mode: toggle_rotation_mode,\n  turn_everything_on: turn_everything_on,\n  turn_everything_off: turn_everything_off,\n  // toggle\n  toggle_selectable_click: toggle_selectable_click,\n  toggle_text_label_edit: toggle_text_label_edit,\n  toggle_selectable_drag: toggle_selectable_drag,\n  toggle_label_drag: toggle_label_drag,\n  toggle_label_mouseover: toggle_label_mouseover,\n  toggle_bezier_drag: toggle_bezier_drag,\n  // util\n  turn_off_drag: turn_off_drag,\n  // get drag behaviors\n  _get_selectable_drag: _get_selectable_drag,\n  _get_bezier_drag: _get_bezier_drag,\n  _get_reaction_label_drag: _get_reaction_label_drag,\n  _get_node_label_drag: _get_node_label_drag,\n  _get_generic_drag: _get_generic_drag,\n  _get_generic_angular_drag: _get_generic_angular_drag\n}\nmodule.exports = Behavior\n\n\n// definitions\nfunction init( map, undo_stack) {\n  this.map = map\n  this.undo_stack = undo_stack\n\n  // make an empty function that can be called as a behavior and does nothing\n  this.empty_behavior = function () {}\n\n  // rotation mode operates separately from the rest\n  this.rotation_mode_enabled = false\n  this.rotation_drag = d3.behavior.drag()\n\n  // behaviors to be applied\n  this.selectable_mousedown = null\n  this.text_label_mousedown = null\n  this.text_label_click = null\n  this.selectable_drag = this.empty_behavior\n  this.node_mouseover = null\n  this.node_mouseout = null\n  this.label_mousedown = null\n  this.label_mouseover = null\n  this.label_mouseout = null\n  this.bezier_drag = this.empty_behavior\n  this.bezier_mouseover = null\n  this.bezier_mouseout = null\n  this.reaction_label_drag = this.empty_behavior\n  this.node_label_drag = this.empty_behavior\n  this.dragging = false\n  this.turn_everything_on()\n}\n\n/**\n * Toggle everything except rotation mode and text mode.\n */\nfunction turn_everything_on () {\n  this.toggle_selectable_click(true)\n  this.toggle_selectable_drag(true)\n  this.toggle_label_drag(true)\n  this.toggle_label_mouseover(true)\n}\n\n/**\n * Toggle everything except rotation mode and text mode.\n */\nfunction turn_everything_off () {\n  this.toggle_selectable_click(false)\n  this.toggle_selectable_drag(false)\n  this.toggle_label_drag(false)\n  this.toggle_label_mouseover(false)\n}\n\nfunction toggle_rotation_mode (on_off) {\n  /** Listen for rotation, and rotate selected nodes.\n\n   */\n  if (on_off === undefined) {\n    this.rotation_mode_enabled = !this.rotation_mode_enabled\n  } else {\n    this.rotation_mode_enabled = on_off\n  }\n\n  var selection_node = this.map.sel.selectAll('.node-circle')\n  var selection_background = this.map.sel.selectAll('#canvas')\n\n  if (this.rotation_mode_enabled) {\n    this.map.callback_manager.run('start_rotation')\n\n    var selected_nodes = this.map.get_selected_nodes()\n    if (Object.keys(selected_nodes).length === 0) {\n      console.warn('No selected nodes')\n      return\n    }\n\n    // show center\n    this.center = average_location(selected_nodes)\n    show_center.call(this)\n\n    // this.set_status('Drag to rotate.')\n    var map = this.map\n    var selected_node_ids = Object.keys(selected_nodes)\n    var reactions = this.map.reactions\n    var nodes = this.map.nodes\n    var beziers = this.map.beziers\n\n    var start_fn = function (d) {\n      // silence other listeners\n      d3.event.sourceEvent.stopPropagation()\n    }\n    var drag_fn = function (d, angle, total_angle, center) {\n      var updated = build.rotate_nodes(selected_nodes, reactions,\n                                       beziers, angle, center)\n      map.draw_these_nodes(updated.node_ids)\n      map.draw_these_reactions(updated.reaction_ids)\n    }\n    var end_fn = function (d) {}\n    var undo_fn = function (d, total_angle, center) {\n      // undo\n      var these_nodes = {}\n      selected_node_ids.forEach(function (id) {\n        these_nodes[id] = nodes[id]\n      })\n      var updated = build.rotate_nodes(these_nodes, reactions,\n                                       beziers, -total_angle,\n                                       center)\n      map.draw_these_nodes(updated.node_ids)\n      map.draw_these_reactions(updated.reaction_ids)\n    }\n    var redo_fn = function (d, total_angle, center) {\n      // redo\n      var these_nodes = {}\n      selected_node_ids.forEach(function (id) {\n        these_nodes[id] = nodes[id]\n      })\n      var updated = build.rotate_nodes(these_nodes, reactions,\n                                       beziers, total_angle,\n                                       center)\n      map.draw_these_nodes(updated.node_ids)\n      map.draw_these_reactions(updated.reaction_ids) }\n    var center_fn = function () {\n      return this.center\n    }.bind(this)\n    this.rotation_drag = this._get_generic_angular_drag(start_fn, drag_fn,\n                                                        end_fn, undo_fn,\n                                                        redo_fn, center_fn,\n                                                        this.map.sel)\n    selection_background.call(this.rotation_drag)\n    this.selectable_drag = this.rotation_drag\n  } else {\n    // turn off all listeners\n    hide_center.call(this)\n    selection_node.on('mousedown.center', null)\n    selection_background.on('mousedown.center', null)\n    selection_background.on('mousedown.drag', null)\n    selection_background.on('touchstart.drag', null)\n    this.rotation_drag = null\n    this.selectable_drag = null\n  }\n\n  // definitions\n  function show_center() {\n    var s = this.map.sel.selectAll('#rotation-center').data([0])\n    var enter = s.enter().append('g').attr('id', 'rotation-center')\n\n    enter.append('path').attr('d', 'M-32 0 L32 0')\n      .attr('class', 'rotation-center-line')\n    enter.append('path').attr('d', 'M0 -32 L0 32')\n      .attr('class', 'rotation-center-line')\n\n    s.attr('transform', 'translate('+this.center.x+','+this.center.y+')')\n      .attr('visibility', 'visible')\n\n    s.call(d3.behavior.drag()\n           .on('drag', function (sel) {\n             var cur = utils.d3_transform_catch(sel.attr('transform')),\n             new_loc = [d3.event.dx + cur.translate[0],\n                        d3.event.dy + cur.translate[1]]\n             sel.attr('transform', 'translate('+new_loc+')')\n             this.center = { x: new_loc[0], y: new_loc[1] }\n           }.bind(this, s)))\n    s.on('mouseover', function () {\n      var current = parseFloat(this.selectAll('path').style('stroke-width'))\n      this.selectAll('path').style('stroke-width', current * 2 + 'px')\n    }.bind(s))\n    s.on('mouseout', function () {\n      this.selectAll('path').style('stroke-width', null)\n    }.bind(s))\n  }\n  function hide_center(sel) {\n    this.map.sel.select('#rotation-center')\n      .attr('visibility', 'hidden')\n  }\n  function average_location(nodes) {\n    var xs = []\n    var ys = []\n    for (var node_id in nodes) {\n      var node = nodes[node_id]\n      if (node.x !== undefined)\n        xs.push(node.x)\n      if (node.y !== undefined)\n        ys.push(node.y)\n    }\n    return { x: utils.mean(xs),\n             y: utils.mean(ys) }\n  }\n}\n\n/**\n * With no argument, toggle the node click on or off. Pass in a boolean argument\n * to set the on/off state.\n */\nfunction toggle_selectable_click (on_off) {\n  if (on_off === undefined) {\n    on_off = this.selectable_mousedown === null\n  }\n  if (on_off) {\n    var map = this.map\n    this.selectable_mousedown = function (d) {\n      // stop propogation for the buildinput to work right\n      d3.event.stopPropagation()\n      // this.parentNode.__data__.was_selected = d3.select(this.parentNode).classed('selected')\n      // d3.select(this.parentNode).classed('selected', true)\n    }\n    this.selectable_click = function (d) {\n      // stop propogation for the buildinput to work right\n      d3.event.stopPropagation()\n      // click suppressed. This DOES have en effect.\n      if (d3.event.defaultPrevented) return\n      // turn off the temporary selection so select_selectable\n      // works. This is a bit of a hack.\n      // if (!this.parentNode.__data__.was_selected)\n      //     d3.select(this.parentNode).classed('selected', false)\n      map.select_selectable(this, d, d3.event.shiftKey)\n      // this.parentNode.__data__.was_selected = false\n    }\n    this.node_mouseover = function (d) {\n      d3.select(this).style('stroke-width', null)\n      var current = parseFloat(d3.select(this).style('stroke-width'))\n      if (!d3.select(this.parentNode).classed('selected'))\n        d3.select(this).style('stroke-width', current * 3 + 'px')\n    }\n    this.node_mouseout = function (d) {\n      d3.select(this).style('stroke-width', null)\n    }\n  } else {\n    this.selectable_mousedown = null\n    this.selectable_click = null\n    this.node_mouseover = null\n    this.node_mouseout = null\n    this.map.sel.select('#nodes')\n      .selectAll('.node-circle').style('stroke-width', null)\n  }\n}\n\n/**\n * With no argument, toggle the text edit on mousedown on/off. Pass in a boolean\n * argument to set the on/off state. The backup state is equal to\n * selectable_mousedown.\n */\nfunction toggle_text_label_edit (on_off) {\n  if (on_off === undefined) {\n    on_off = this.text_edit_mousedown == null\n  }\n  if (on_off) {\n    var map = this.map\n    var selection = this.selection\n    this.text_label_mousedown = function () {\n      if (d3.event.defaultPrevented) {\n        return // mousedown suppressed\n      }\n      // run the callback\n      var coords_a = utils.d3_transform_catch(d3.select(this).attr('transform'))\n          .translate\n      var coords = { x: coords_a[0], y: coords_a[1] }\n      map.callback_manager.run('edit_text_label', null, d3.select(this), coords)\n      d3.event.stopPropagation()\n    }\n    this.text_label_click = null\n    this.map.sel.select('#text-labels')\n      .selectAll('.label')\n      .classed('edit-text-cursor', true)\n    // add the new-label listener\n    this.map.sel.on('mousedown.new_text_label', function (node) {\n      // silence other listeners\n      d3.event.preventDefault()\n      var coords = {\n        x: d3.mouse(node)[0],\n        y: d3.mouse(node)[1],\n      }\n      this.map.callback_manager.run('new_text_label', null, coords)\n    }.bind(this, this.map.sel.node()))\n  } else {\n    this.text_label_mousedown = this.selectable_mousedown\n    this.text_label_click = this.selectable_click\n    this.map.sel.select('#text-labels')\n      .selectAll('.label')\n      .classed('edit-text-cursor', false)\n    // remove the new-label listener\n    this.map.sel.on('mousedown.new_text_label', null)\n    this.map.callback_manager.run('hide_text_label_editor')\n  }\n}\n\n/**\n * With no argument, toggle the node drag & bezier drag on or off. Pass in a\n * boolean argument to set the on/off state.\n */\nfunction toggle_selectable_drag (on_off) {\n  if (on_off === undefined) {\n    on_off = this.selectable_drag === this.empty_behavior\n  }\n  if (on_off) {\n    this.selectable_drag = this._get_selectable_drag(this.map, this.undo_stack)\n    this.bezier_drag = this._get_bezier_drag(this.map, this.undo_stack)\n  } else {\n    this.selectable_drag = this.empty_behavior\n    this.bezier_drag = this.empty_behavior\n  }\n}\n\n/**\n * With no argument, toggle the label drag on or off. Pass in a boolean argument\n * to set the on/off state.\n * @param {Boolean} on_off - The new on/off state.\n */\nfunction toggle_label_drag (on_off) {\n  if (on_off === undefined) {\n    on_off = this.label_drag === this.empty_behavior\n  }\n  if (on_off) {\n    this.reaction_label_drag = this._get_reaction_label_drag(this.map)\n    this.node_label_drag = this._get_node_label_drag(this.map)\n  } else {\n    this.reaction_label_drag = this.empty_behavior\n    this.node_label_drag = this.empty_behavior\n  }\n}\n\n/**\n * With no argument, toggle the tooltips on mouseover labels.\n * @param {Boolean} on_off - The new on/off state.\n */\nfunction toggle_label_mouseover (on_off) {\n  if (on_off === undefined) {\n    on_off = this.label_mouseover === null\n  }\n\n  if (on_off) {\n\n    // Show/hide tooltip.\n    // @param {String} type - 'reaction_label' or 'node_label'\n    // @param {Object} d - D3 data for DOM element\n    this.label_mouseover = function (type, d) {\n      if (!this.dragging) {\n        this.map.callback_manager.run('show_tooltip', null, type, d)\n      }\n    }.bind(this)\n\n    this.label_mouseout = function () {\n      this.map.callback_manager.run('delay_hide_tooltip')\n    }.bind(this)\n\n  } else {\n    this.label_mouseover = null\n  }\n}\n\n/**\n * With no argument, toggle the bezier drag on or off. Pass in a boolean\n * argument to set the on/off state.\n */\nfunction toggle_bezier_drag (on_off) {\n  if (on_off === undefined) {\n    on_off = this.bezier_drag === this.empty_behavior\n  }\n  if (on_off) {\n    this.bezier_drag = this._get_bezier_drag(this.map)\n    this.bezier_mouseover = function (d) {\n      d3.select(this).style('stroke-width', String(3)+'px')\n    }\n    this.bezier_mouseout = function (d) {\n      d3.select(this).style('stroke-width', String(1)+'px')\n    }\n  } else {\n    this.bezier_drag = this.empty_behavior\n    this.bezier_mouseover = null\n    this.bezier_mouseout = null\n  }\n}\n\nfunction turn_off_drag (sel) {\n  sel.on('mousedown.drag', null)\n  sel.on('touchstart.drag', null)\n}\n\n/**\n * Drag the selected nodes and text labels.\n */\nfunction _get_selectable_drag (map, undo_stack) {\n\n  // define some variables\n  var behavior = d3.behavior.drag()\n  var the_timeout = null\n  var total_displacement = null\n  // for nodes\n  var node_ids_to_drag = null\n  var reaction_ids = null\n  // for text labels\n  var text_label_ids_to_drag = null\n  var move_label = function (text_label_id, displacement) {\n    var text_label = map.text_labels[text_label_id]\n    text_label.x = text_label.x + displacement.x\n    text_label.y = text_label.y + displacement.y\n  }\n  var set_dragging = function (on_off) {\n    this.dragging = on_off\n  }.bind(this)\n\n  behavior.on('dragstart', function (d) {\n    set_dragging(true)\n\n    // silence other listeners (e.g. nodes BELOW this one)\n    d3.event.sourceEvent.stopPropagation()\n    // remember the total displacement for later\n    total_displacement = { x: 0, y: 0 }\n\n    // If a text label is selected, the rest is not necessary\n    if (d3.select(this).attr('class').indexOf('label') === -1) {\n      // Note that dragstart is called even for a click event\n      var data = this.parentNode.__data__,\n      bigg_id = data.bigg_id,\n      node_group = this.parentNode\n      // Move element to back (for the next step to work). Wait 200ms\n      // before making the move, becuase otherwise the element will be\n      // deleted before the click event gets called, and selection\n      // will stop working.\n      the_timeout = setTimeout(function () {\n        node_group.parentNode.insertBefore(node_group,\n                                           node_group.parentNode.firstChild)\n      }, 200)\n      // prepare to combine metabolites\n      map.sel.selectAll('.metabolite-circle')\n        .on('mouseover.combine', function (d) {\n          if (d.bigg_id === bigg_id && d.node_id !== data.node_id) {\n            d3.select(this).style('stroke-width', String(12) + 'px')\n              .classed('node-to-combine', true)\n          }\n        })\n        .on('mouseout.combine', function (d) {\n          if (d.bigg_id === bigg_id) {\n            map.sel.selectAll('.node-to-combine')\n              .style('stroke-width', String(2) + 'px')\n              .classed('node-to-combine', false)\n          }\n        })\n    }\n  })\n\n  behavior.on('drag', function (d) {\n    // if this node is not already selected, then select this one and\n    // deselect all other nodes. Otherwise, leave the selection alone.\n    if (!d3.select(this.parentNode).classed('selected')) {\n      map.select_selectable(this, d)\n    }\n\n    // get the grabbed id\n    var grabbed = {}\n    if (d3.select(this).attr('class').indexOf('label') === -1) {\n      // if it is a node\n      grabbed['type'] = 'node'\n      grabbed['id'] = this.parentNode.__data__.node_id\n    } else {\n      // if it is a text label\n      grabbed['type'] = 'label'\n      grabbed['id'] = this.__data__.text_label_id\n    }\n\n    var selected_node_ids = map.get_selected_node_ids()\n    var selected_text_label_ids = map.get_selected_text_label_ids()\n    node_ids_to_drag = []; text_label_ids_to_drag = []\n    // choose the nodes and text labels to drag\n    if (grabbed['type']=='node' &&\n        selected_node_ids.indexOf(grabbed['id']) === -1) {\n      node_ids_to_drag.push(grabbed['id'])\n    } else if (grabbed['type'] === 'label' &&\n               selected_text_label_ids.indexOf(grabbed['id']) === -1) {\n      text_label_ids_to_drag.push(grabbed['id'])\n    } else {\n      node_ids_to_drag = selected_node_ids\n      text_label_ids_to_drag = selected_text_label_ids\n    }\n    reaction_ids = []\n    var displacement = {\n      x: d3.event.dx,\n      y: d3.event.dy,\n    }\n    total_displacement = utils.c_plus_c(total_displacement, displacement)\n    node_ids_to_drag.forEach(function (node_id) {\n      // update data\n      var node = map.nodes[node_id],\n      updated = build.move_node_and_dependents(node, node_id,\n                                               map.reactions,\n                                               map.beziers,\n                                               displacement)\n      reaction_ids = utils.unique_concat([ reaction_ids, updated.reaction_ids ])\n      // remember the displacements\n      // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 }\n      // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement)\n    })\n    text_label_ids_to_drag.forEach(function (text_label_id) {\n      move_label(text_label_id, displacement)\n      // remember the displacements\n      // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 }\n      // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement)\n    })\n    // draw\n    map.draw_these_nodes(node_ids_to_drag)\n    map.draw_these_reactions(reaction_ids)\n    map.draw_these_text_labels(text_label_ids_to_drag)\n  })\n\n  behavior.on('dragend', function () {\n    set_dragging(false)\n\n    if (node_ids_to_drag === null) {\n      // Dragend can be called when drag has not been called. In this,\n      // case, do nothing.\n      total_displacement = null\n      node_ids_to_drag = null\n      text_label_ids_to_drag = null\n      reaction_ids = null\n      the_timeout = null\n      return\n    }\n    // look for mets to combine\n    var node_to_combine_array = []\n    map.sel.selectAll('.node-to-combine').each(function (d) {\n      node_to_combine_array.push(d.node_id)\n    })\n    if (node_to_combine_array.length === 1) {\n      // If a node is ready for it, combine nodes\n      var fixed_node_id = node_to_combine_array[0],\n      dragged_node_id = this.parentNode.__data__.node_id,\n      saved_dragged_node = utils.clone(map.nodes[dragged_node_id]),\n      segment_objs_moved_to_combine = combine_nodes_and_draw(fixed_node_id,\n                                                             dragged_node_id)\n      undo_stack.push(function () {\n        // undo\n        // put the old node back\n        map.nodes[dragged_node_id] = saved_dragged_node\n        var fixed_node = map.nodes[fixed_node_id],\n            updated_reactions = []\n        segment_objs_moved_to_combine.forEach(function (segment_obj) {\n          var segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id]\n          if (segment.from_node_id==fixed_node_id) {\n            segment.from_node_id = dragged_node_id\n          } else if (segment.to_node_id==fixed_node_id) {\n            segment.to_node_id = dragged_node_id\n          } else {\n            console.error('Segment does not connect to fixed node')\n          }\n          // removed this segment_obj from the fixed node\n          fixed_node.connected_segments = fixed_node.connected_segments.filter(function (x) {\n            return !(x.reaction_id==segment_obj.reaction_id && x.segment_id==segment_obj.segment_id)\n          })\n          if (updated_reactions.indexOf(segment_obj.reaction_id)==-1)\n            updated_reactions.push(segment_obj.reaction_id)\n        })\n        map.draw_these_nodes([dragged_node_id])\n        map.draw_these_reactions(updated_reactions)\n      }, function () {\n        // redo\n        combine_nodes_and_draw(fixed_node_id, dragged_node_id)\n      })\n\n    } else {\n      // otherwise, drag node\n\n      // add to undo/redo stack\n      // remember the displacement, dragged nodes, and reactions\n      var saved_displacement = utils.clone(total_displacement),\n      // BUG TODO this variable disappears!\n      // Happens sometimes when you drag a node, then delete it, then undo twice\n      saved_node_ids = utils.clone(node_ids_to_drag),\n      saved_text_label_ids = utils.clone(text_label_ids_to_drag),\n      saved_reaction_ids = utils.clone(reaction_ids)\n      undo_stack.push(function () {\n        // undo\n        saved_node_ids.forEach(function (node_id) {\n          var node = map.nodes[node_id]\n          build.move_node_and_dependents(node, node_id, map.reactions,\n                                         map.beziers,\n                                         utils.c_times_scalar(saved_displacement, -1))\n        })\n        saved_text_label_ids.forEach(function (text_label_id) {\n          move_label(text_label_id,\n                     utils.c_times_scalar(saved_displacement, -1))\n        })\n        map.draw_these_nodes(saved_node_ids)\n        map.draw_these_reactions(saved_reaction_ids)\n        map.draw_these_text_labels(saved_text_label_ids)\n      }, function () {\n        // redo\n        saved_node_ids.forEach(function (node_id) {\n          var node = map.nodes[node_id]\n          build.move_node_and_dependents(node, node_id, map.reactions,\n                                         map.beziers,\n                                         saved_displacement)\n        })\n        saved_text_label_ids.forEach(function (text_label_id) {\n          move_label(text_label_id, saved_displacement)\n        })\n        map.draw_these_nodes(saved_node_ids)\n        map.draw_these_reactions(saved_reaction_ids)\n        map.draw_these_text_labels(saved_text_label_ids)\n      })\n    }\n\n    // stop combining metabolites\n    map.sel.selectAll('.metabolite-circle')\n      .on('mouseover.combine', null)\n      .on('mouseout.combine', null)\n\n    // clear the timeout\n    clearTimeout(the_timeout)\n\n    // clear the shared variables\n    total_displacement = null\n    node_ids_to_drag = null\n    text_label_ids_to_drag = null\n    reaction_ids = null\n    the_timeout = null\n  })\n\n  return behavior\n\n  // definitions\n  function combine_nodes_and_draw (fixed_node_id, dragged_node_id) {\n    var dragged_node = map.nodes[dragged_node_id]\n    var fixed_node = map.nodes[fixed_node_id]\n    var updated_segment_objs = []\n    dragged_node.connected_segments.forEach(function (segment_obj) {\n      // change the segments to reflect\n      var segment\n      try {\n        segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id]\n        if (segment === undefined) throw new Error('undefined segment')\n      } catch (e) {\n        console.warn('Could not find connected segment ' + segment_obj.segment_id)\n        return\n      }\n      if (segment.from_node_id==dragged_node_id) segment.from_node_id = fixed_node_id\n      else if (segment.to_node_id==dragged_node_id) segment.to_node_id = fixed_node_id\n      else {\n        console.error('Segment does not connect to dragged node')\n        return\n      }\n      // moved segment_obj to fixed_node\n      fixed_node.connected_segments.push(segment_obj)\n      updated_segment_objs.push(utils.clone(segment_obj))\n      return\n    })\n    // delete the old node\n    map.delete_node_data([dragged_node_id])\n    // turn off the class\n    map.sel.selectAll('.node-to-combine').classed('node-to-combine', false)\n    // draw\n    map.draw_everything()\n    // return for undo\n    return updated_segment_objs\n  }\n}\n\nfunction _get_bezier_drag (map) {\n  var move_bezier = function (reaction_id, segment_id, bez, bezier_id,\n                              displacement) {\n    var segment = map.reactions[reaction_id].segments[segment_id]\n    segment[bez] = utils.c_plus_c(segment[bez], displacement)\n    map.beziers[bezier_id].x = segment[bez].x\n    map.beziers[bezier_id].y = segment[bez].y\n  }\n  var start_fn = function (d) {\n    d.dragging = true\n  }\n  var drag_fn = function (d, displacement, total_displacement) {\n    // draw\n    move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                displacement)\n    map.draw_these_reactions([d.reaction_id], false)\n    map.draw_these_beziers([d.bezier_id])\n  }\n  var end_fn = function (d) {\n    d.dragging = false\n  }\n  var undo_fn = function (d, displacement) {\n    move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                utils.c_times_scalar(displacement, -1))\n    map.draw_these_reactions([d.reaction_id], false)\n    map.draw_these_beziers([d.bezier_id])\n  }\n  var redo_fn = function (d, displacement) {\n    move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                displacement)\n    map.draw_these_reactions([d.reaction_id], false)\n    map.draw_these_beziers([d.bezier_id])\n  }\n  return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                this.map.sel)\n}\n\nfunction _get_reaction_label_drag (map) {\n  var move_label = function (reaction_id, displacement) {\n    var reaction = map.reactions[reaction_id]\n    reaction.label_x = reaction.label_x + displacement.x\n    reaction.label_y = reaction.label_y + displacement.y\n  }\n  var start_fn = function (d) {\n    // hide tooltips when drag starts\n    map.callback_manager.run('hide_tooltip')\n  }\n  var drag_fn = function (d, displacement, total_displacement) {\n    // draw\n    move_label(d.reaction_id, displacement)\n    map.draw_these_reactions([ d.reaction_id ])\n  }\n  var end_fn = function (d) {\n  }\n  var undo_fn = function (d, displacement) {\n    move_label(d.reaction_id, utils.c_times_scalar(displacement, -1))\n    map.draw_these_reactions([ d.reaction_id ])\n  }\n  var redo_fn = function (d, displacement) {\n    move_label(d.reaction_id, displacement)\n    map.draw_these_reactions([ d.reaction_id ])\n  }\n  return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                this.map.sel)\n}\n\nfunction _get_node_label_drag (map) {\n  var move_label = function (node_id, displacement) {\n    var node = map.nodes[node_id]\n    node.label_x = node.label_x + displacement.x\n    node.label_y = node.label_y + displacement.y\n  }\n  var start_fn = function (d) {\n    // hide tooltips when drag starts\n    map.callback_manager.run('hide_tooltip')\n  }\n  var drag_fn = function (d, displacement, total_displacement) {\n    // draw\n    move_label(d.node_id, displacement)\n    map.draw_these_nodes([ d.node_id ])\n  }\n  var end_fn = function (d) {\n  }\n  var undo_fn = function (d, displacement) {\n    move_label(d.node_id, utils.c_times_scalar(displacement, -1))\n    map.draw_these_nodes ([ d.node_id ])\n  }\n  var redo_fn = function (d, displacement) {\n    move_label(d.node_id, displacement)\n    map.draw_these_nodes([ d.node_id ])\n  }\n  return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                this.map.sel)\n}\n\n/**\n * Make a generic drag behavior, with undo/redo.\n *\n * start_fn: function (d) Called at dragstart.\n *\n * drag_fn: function (d, displacement, total_displacement) Called during drag.\n *\n * end_fn\n *\n * undo_fn\n *\n * redo_fn\n *\n * relative_to_selection: a d3 selection that the locations are calculated\n * against.\n *\n */\nfunction _get_generic_drag (start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                            relative_to_selection) {\n  // define some variables\n  var behavior = d3.behavior.drag()\n  var total_displacement\n  var undo_stack = this.undo_stack\n  var rel = relative_to_selection.node()\n\n  behavior.on('dragstart', function (d) {\n    this.dragging = true\n\n    // silence other listeners\n    d3.event.sourceEvent.stopPropagation()\n    total_displacement = { x: 0, y: 0 }\n    start_fn(d)\n  }.bind(this))\n\n  behavior.on('drag', function (d) {\n    // update data\n    var displacement = {\n      x: d3.event.dx,\n      y: d3.event.dy,\n    }\n    var location = {\n      x: d3.mouse(rel)[0],\n      y: d3.mouse(rel)[1],\n    }\n\n    // remember the displacement\n    total_displacement = utils.c_plus_c(total_displacement, displacement)\n    drag_fn(d, displacement, total_displacement, location)\n  }.bind(this))\n\n  behavior.on('dragend', function (d) {\n    this.dragging = false\n\n    // add to undo/redo stack\n    // remember the displacement, dragged nodes, and reactions\n    var saved_d = utils.clone(d)\n    var saved_displacement = utils.clone(total_displacement) // BUG TODO this variable disappears!\n    var saved_location = {\n      x: d3.mouse(rel)[0],\n      y: d3.mouse(rel)[1],\n    }\n\n    undo_stack.push(function () {\n      // undo\n      undo_fn(saved_d, saved_displacement, saved_location)\n    }, function () {\n      // redo\n      redo_fn(saved_d, saved_displacement, saved_location)\n    })\n    end_fn(d)\n  }.bind(this))\n\n  return behavior\n}\n\n/** Make a generic drag behavior, with undo/redo. Supplies angles in place of\n * displacements.\n *\n * start_fn: function (d) Called at dragstart.\n *\n * drag_fn: function (d, displacement, total_displacement) Called during drag.\n *\n * end_fn:\n *\n * undo_fn:\n *\n * redo_fn:\n *\n * get_center:\n *\n * relative_to_selection: a d3 selection that the locations are calculated\n * against.\n *\n */\nfunction _get_generic_angular_drag (start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                   get_center, relative_to_selection) {\n\n  // define some variables\n  var behavior = d3.behavior.drag()\n  var total_angle\n  var undo_stack = this.undo_stack\n  var rel = relative_to_selection.node()\n\n  behavior.on('dragstart', function (d) {\n    this.dragging = true\n\n    // silence other listeners\n    d3.event.sourceEvent.stopPropagation()\n    total_angle = 0\n    start_fn(d)\n  }.bind(this))\n\n  behavior.on('drag', function (d) {\n    // update data\n    var displacement = {\n      x: d3.event.dx,\n      y: d3.event.dy,\n    }\n    var location = {\n      x: d3.mouse(rel)[0],\n      y: d3.mouse(rel)[1],\n    }\n    var center = get_center()\n    var angle = utils.angle_for_event(displacement, location, center)\n    // remember the displacement\n    total_angle = total_angle + angle\n    drag_fn(d, angle, total_angle, center)\n  }.bind(this))\n\n  behavior.on('dragend', function (d) {\n    this.dragging = false\n\n    // add to undo/redo stack\n    // remember the displacement, dragged nodes, and reactions\n    var saved_d = utils.clone(d)\n    var saved_angle = total_angle\n    var saved_center = utils.clone(get_center())\n\n    undo_stack.push(function () {\n      // undo\n      undo_fn(saved_d, saved_angle, saved_center)\n    }, function () {\n      // redo\n      redo_fn(saved_d, saved_angle, saved_center)\n    })\n    end_fn(d)\n  }.bind(this))\n\n  return behavior\n}\n","/* global d3 */\n\nvar utils = require('./utils')\n\n/**\n * Define a brush to select elements in a map.\n * @param {D3 Selection} selection - A d3 selection to place the brush in.\n * @param {Boolean} is_enabled - Whether to turn the brush on.\n * @param {escher.Map} map - The map where the brush will be active.\n * @param {String} insert_after - A d3 selector string to choose the svg element\n *                                that the brush will be inserted after. Often a\n *                                canvas element (e.g. '.canvas-group').\n */\nvar Brush = utils.make_class()\nBrush.prototype = {\n  init: init,\n  toggle: toggle,\n  setup_selection_brush: setup_selection_brush,\n}\nmodule.exports = Brush\n\n// definitions\nfunction init (selection, is_enabled, map, insert_after) {\n  this.brush_sel = selection.append('g').attr('id', 'brush-container')\n  var node = this.brush_sel.node()\n  var insert_before_node = selection.select(insert_after).node().nextSibling\n  if (node !== insert_before_node) {\n    node.parentNode.insertBefore(node, insert_before_node)\n  }\n  this.enabled = is_enabled\n  this.map = map\n}\n\n/**\n * Returns a boolean for the on/off status of the brush\n * @return {Boolean}\n */\nfunction brush_is_enabled () {\n  return this.map.sel.select('.brush').empty()\n}\n\n/**\n * Turn the brush on or off\n * @param {Boolean} on_off\n */\nfunction toggle (on_off) {\n  if (on_off === undefined) {\n    on_off = !this.enabled\n  }\n  if (on_off) {\n    this.selection_brush = this.setup_selection_brush()\n  } else {\n    this.brush_sel.selectAll('.brush').remove()\n  }\n}\n\nfunction setup_selection_brush () {\n  var map = this.map\n  var selection = this.brush_sel\n  var selectable_selection = map.sel.selectAll('#nodes,#text-labels')\n  var size_and_location = map.canvas.size_and_location()\n  var width = size_and_location.width\n  var height = size_and_location.height\n  var x = size_and_location.x\n  var y = size_and_location.y\n\n  // clear existing brush\n  selection.selectAll('g').remove()\n\n  var brush_fn = d3.svg.brush()\n        .x(d3.scale.identity().domain([ x, x + width ]))\n        .y(d3.scale.identity().domain([ y, y + height ]))\n        .on('brushstart', function () {\n          // unhide secondary metabolites if they are hidden\n          if (map.settings.get_option('hide_secondary_metabolites')) {\n            map.settings.set_conditional('hide_secondary_metabolites', false)\n            map.draw_everything()\n            map.set_status('Showing secondary metabolites. You can hide them ' +\n                           'again in Settings.', 2000)\n          }\n        })\n        .on('brush', function () {\n          var shift_key_on = d3.event.sourceEvent.shiftKey\n          var extent = d3.event.target.extent()\n          // When shift is pressed, ignore the currently selected nodes.\n          // Otherwise, brush all nodes.\n          var selection = shift_key_on ?\n                selectable_selection.selectAll('.node:not(.selected),.text-label:not(.selected)') :\n                selectable_selection.selectAll('.node,.text-label')\n          selection.classed('selected', function (d) {\n            var sx = d.x\n            var sy = d.y\n            return (extent[0][0] <= sx && sx < extent[1][0] &&\n                    extent[0][1] <= sy && sy < extent[1][1])\n          })\n        })\n        .on('brushend', function () {\n          d3.event.target.clear()\n          d3.select(this).call(d3.event.target)\n        })\n  var brush = selection.append('g')\n        .attr('class', 'brush')\n        .call(brush_fn)\n\n  // turn off the mouse crosshair\n  selection.selectAll('.background')\n    .classed('cursor-grab', false)\n    .classed('cursor-grabbing', false)\n    .style('cursor', null)\n\n  return brush\n}\n","/** BuildInput\n\n Arguments\n ---------\n\n selection: A d3 selection for the BuildInput.\n\n map: A Map instance.\n\n zoom_container: A ZoomContainer instance.\n\n settings: A Settings instance.\n\n  */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar completely = require('./complete.ly');\nvar DirectionArrow = require('./DirectionArrow');\nvar CobraModel = require('./CobraModel');\n\nvar _ = require('underscore');\n\n\nvar BuildInput = utils.make_class();\nBuildInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    toggle: toggle,\n    show_dropdown: show_dropdown,\n    hide_dropdown: hide_dropdown,\n    place_at_selected: place_at_selected,\n    place: place,\n    reload_at_selected: reload_at_selected,\n    reload: reload,\n    toggle_start_reaction_listener: toggle_start_reaction_listener,\n    hide_target: hide_target,\n    show_target: show_target\n};\nmodule.exports = BuildInput;\n\n\nfunction init(selection, map, zoom_container, settings) {\n    // set up container\n    var new_sel = selection.append('div').attr('id', 'rxn-input');\n    this.placed_div = PlacedDiv(new_sel, map, {x: 240, y: 0});\n    this.placed_div.hide();\n\n    // set up complete.ly\n    var c = completely(new_sel.node(), { backgroundColor: '#eee' });\n\n    d3.select(c.input);\n    this.completely = c;\n    // close button\n    new_sel.append('button').attr('class', \"button input-close-button\")\n        .text(\"×\")\n        .on('mousedown', function() { this.hide_dropdown(); }.bind(this));\n\n    // map\n    this.map = map;\n    // set up the reaction direction arrow\n    var default_angle = 90; // degrees\n    this.direction_arrow = new DirectionArrow(map.sel);\n    this.direction_arrow.set_rotation(default_angle);\n    this.setup_map_callbacks(map);\n\n    // zoom container\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n\n    // settings\n    this.settings = settings;\n\n    // toggle off\n    this.toggle(false);\n    this.target_coords = null;\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('select_metabolite_with_id.input', function(selected_node, coords) {\n        if (this.is_active) {\n            this.reload(selected_node, coords, false);\n            this.show_dropdown(coords);\n        }\n        this.hide_target();\n    }.bind(this));\n    map.callback_manager.set('select_selectable.input', function(count, selected_node, coords) {\n        this.hide_target();\n        if (count == 1 && this.is_active && coords) {\n            this.reload(selected_node, coords, false);\n            this.show_dropdown(coords);\n        } else {\n            this.toggle(false);\n        }\n    }.bind(this));\n    map.callback_manager.set('deselect_nodes', function() {\n        this.direction_arrow.hide();\n        this.hide_dropdown();\n    }.bind(this));\n\n    // svg export\n    map.callback_manager.set('before_svg_export', function() {\n        this.direction_arrow.hide();\n        this.hide_target();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.input', function() {\n        if (this.is_active) {\n            this.place_at_selected();\n        }\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n    if (this.is_active) {\n        this.toggle_start_reaction_listener(true);\n        if (_.isNull(this.target_coords))\n            this.reload_at_selected();\n        else\n            this.placed_div.place(this.target_coords);\n        this.show_dropdown();\n        this.map.set_status('Click on the canvas or an existing metabolite');\n        this.direction_arrow.show();\n    } else {\n        this.toggle_start_reaction_listener(false);\n        this.hide_dropdown();\n        this.map.set_status(null);\n        this.direction_arrow.hide();\n    }\n}\n\nfunction show_dropdown(coords) {\n    // escape key\n    this.clear_escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this.hide_dropdown();\n        }.bind(this), true);\n    // dropdown\n    this.completely.input.blur();\n    this.completely.repaint();\n    this.completely.setText('');\n    this.completely.input.focus();\n}\n\nfunction hide_dropdown() {\n    // escape key\n    if (this.clear_escape) this.clear_escape();\n    this.clear_escape = null;\n    // dropdown\n    this.placed_div.hide();\n    this.completely.input.blur();\n    this.completely.hideDropDown();\n}\n\nfunction place_at_selected() {\n    /** Place autocomplete box at the first selected node. */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    this.place(coords);\n}\n\nfunction place(coords) {\n    this.placed_div.place(coords);\n    this.direction_arrow.set_location(coords);\n    this.direction_arrow.show();\n}\n\nfunction reload_at_selected() {\n    /** Reload data for autocomplete box and redraw box at the first selected\n     node. */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return false;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    // reload the reaction input\n    this.reload(selected_node, coords, false);\n    return true;\n}\n\nfunction reload(selected_node, coords, starting_from_scratch) {\n    /** Reload data for autocomplete box and redraw box at the new\n     coordinates. */\n\n    // try finding the selected node\n    if (!starting_from_scratch && !selected_node) {\n        console.error('No selected node, and not starting from scratch');\n        return;\n    }\n\n    this.place(coords);\n\n    if (this.map.cobra_model===null) {\n        this.completely.setText('Cannot add: No model.');\n        return;\n    }\n\n    // settings\n    var show_names = this.settings.get_option('identifiers_on_map') == 'name',\n        allow_duplicates = this.settings.get_option('allow_building_duplicate_reactions');\n\n    // Find selected\n    var options = [],\n        cobra_reactions = this.map.cobra_model.reactions,\n        cobra_metabolites = this.map.cobra_model.metabolites,\n        reactions = this.map.reactions,\n        has_data_on_reactions = this.map.has_data_on_reactions,\n        reaction_data = this.map.reaction_data,\n        reaction_data_styles = this.map.reaction_data_styles,\n        selected_m_name = (selected_node ? (show_names ? selected_node.name : selected_node.bigg_id) : ''),\n        bold_mets_in_str = function(str, mets) {\n            return str.replace(new RegExp('(^| )(' + mets.join('|') + ')($| )', 'g'),\n                               '$1<b>$2</b>$3');\n        };\n\n    // for reactions\n    var reaction_suggestions = {};\n    for (var bigg_id in cobra_reactions) {\n        var reaction = cobra_reactions[bigg_id],\n            reaction_name = reaction.name,\n            show_r_name = (show_names ? reaction_name : bigg_id);\n\n        // ignore drawn reactions\n        if ((!allow_duplicates) && already_drawn(bigg_id, reactions))\n            continue;\n\n        // check segments for match to selected metabolite\n        for (var met_bigg_id in reaction.metabolites) {\n\n            // if starting with a selected metabolite, check for that id\n            if (starting_from_scratch || met_bigg_id == selected_node.bigg_id) {\n\n                // don't add suggestions twice\n                if (bigg_id in reaction_suggestions) continue;\n\n                var met_name = cobra_metabolites[met_bigg_id].name;\n\n                if (has_data_on_reactions) {\n                    options.push({ reaction_data: reaction.data,\n                                   html: ('<b>' + show_r_name + '</b>' +\n                                          ': ' +\n                                          reaction.data_string),\n                                   matches: [show_r_name],\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                } else {\n                    // get the metabolite names or IDs\n                    var mets = {},\n                        show_met_names = [],\n                        met_id;\n                    if (show_names) {\n                        for (met_id in reaction.metabolites) {\n                            var name = cobra_metabolites[met_id].name;\n                            mets[name] = reaction.metabolites[met_id];\n                            show_met_names.push(name);\n                        }\n                    } else {\n                        mets = utils.clone(reaction.metabolites);\n                        for (met_id in reaction.metabolites) {\n                            show_met_names.push(met_id);\n                        }\n                    }\n                    var show_gene_names = _.flatten(reaction.genes.map(function(g_obj) {\n                        return [g_obj.name, g_obj.bigg_id];\n                    }));\n                    // get the reaction string\n                    var reaction_string = CobraModel.build_reaction_string(mets,\n                                                                           reaction.reversibility,\n                                                                           reaction.lower_bound,\n                                                                           reaction.upper_bound);\n                    options.push({ html: ('<b>' + show_r_name + '</b>' +\n                                          '\\t' +\n                                          bold_mets_in_str(reaction_string, [selected_m_name])),\n                                   matches: [show_r_name].concat(show_met_names).concat(show_gene_names),\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                }\n            }\n        }\n    }\n\n    // Generate the array of reactions to suggest and sort it\n    var sort_fn;\n    if (has_data_on_reactions) {\n        sort_fn = function(x, y) {\n            return Math.abs(y.reaction_data) - Math.abs(x.reaction_data);\n        };\n    } else {\n        sort_fn = function(x, y) {\n            return (x.html.toLowerCase() < y.html.toLowerCase() ? -1 : 1);\n        };\n    }\n    options = options.sort(sort_fn);\n    // set up the box with data\n    var complete = this.completely;\n    complete.options = options;\n\n    // TODO test this behavior\n    // if (strings_to_display.length==1) complete.setText(strings_to_display[0]);\n    // else complete.setText(\"\");\n    complete.setText('');\n\n    var direction_arrow = this.direction_arrow,\n        check_and_build = function(id) {\n            if (id !== null) {\n                // make sure the selected node exists, in case changes were made in the meantime\n                if (starting_from_scratch) {\n                    this.map.new_reaction_from_scratch(id,\n                                                       coords,\n                                                       direction_arrow.get_rotation());\n                } else {\n                    if (!(selected_node.node_id in this.map.nodes)) {\n                        console.error('Selected node no longer exists');\n                        this.hide_dropdown();\n                        return;\n                    }\n                    this.map.new_reaction_for_metabolite(id,\n                                                         selected_node.node_id,\n                                                         direction_arrow.get_rotation());\n                }\n            }\n        }.bind(this);\n    complete.onEnter = function(id) {\n        this.setText('');\n        this.onChange('');\n        check_and_build(id);\n    };\n\n    //definitions\n    function already_drawn(bigg_id, reactions) {\n        for (var drawn_id in reactions) {\n            if (reactions[drawn_id].bigg_id==bigg_id)\n                return true;\n        }\n        return false;\n    };\n}\n\nfunction toggle_start_reaction_listener(on_off) {\n    /** Toggle listening for a click to place a new reaction on the canvas. */\n    if (on_off===undefined)\n        this.start_reaction_listener = !this.start_reaction_listener;\n    else if (this.start_reaction_listener==on_off)\n        return;\n    else\n        this.start_reaction_listener = on_off;\n\n    if (this.start_reaction_listener) {\n        this.map.sel.on('click.start_reaction', function(node) {\n            // TODO fix this hack\n            if (this.direction_arrow.dragging) return;\n            // reload the reaction input\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            // unselect metabolites\n            this.map.deselect_nodes();\n            this.map.deselect_text_labels();\n            // reload the reaction input\n            this.reload(null, coords, true);\n            // generate the target symbol\n            this.show_target(this.map, coords);\n            // show the dropdown\n            this.show_dropdown(coords);\n        }.bind(this, this.map.sel.node()));\n        this.map.sel.classed('start-reaction-cursor', true);\n    } else {\n        this.map.sel.on('click.start_reaction', null);\n        this.map.sel.classed('start-reaction-cursor', false);\n        this.hide_target();\n    }\n}\n\nfunction hide_target() {\n    if (this.target_coords)\n        this.map.sel.selectAll('.start-reaction-target').remove();\n    this.target_coords = null;\n}\n\nfunction show_target(map, coords) {\n    var s = map.sel.selectAll('.start-reaction-target').data([12, 5]);\n    s.enter().append('circle')\n        .classed('start-reaction-target', true)\n        .attr('r', function(d) { return d; })\n        .style('stroke-width', 4);\n    s.style('visibility', 'visible')\n        .attr('transform', 'translate('+coords.x+','+coords.y+')');\n    this.target_coords = coords;\n}\n","/**\n * For documentation of this class, see docs/javascript_api.rst\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar BuildInput = require('./BuildInput');\nvar ZoomContainer = require('./ZoomContainer');\nvar Map = require('./Map');\nvar CobraModel = require('./CobraModel');\nvar Brush = require('./Brush');\nvar CallbackManager = require('./CallbackManager');\nvar ui = require('./ui');\nvar SearchBar = require('./SearchBar');\nvar Settings = require('./Settings');\nvar SettingsMenu = require('./SettingsMenu');\nvar TextEditInput = require('./TextEditInput');\nvar QuickJump = require('./QuickJump');\nvar data_styles = require('./data_styles');\nvar builder_embed = require('./inline').builder_embed;\nvar TooltipContainer = require('./TooltipContainer')\nvar DefaultTooltip = require('./Tooltip').DefaultTooltip\nvar _ = require('underscore')\n\nvar Builder = utils.make_class();\nBuilder.prototype = {\n    init: init,\n    load_map: load_map,\n    load_model: load_model,\n    _set_mode: _set_mode,\n    view_mode: view_mode,\n    build_mode: build_mode,\n    brush_mode: brush_mode,\n    zoom_mode: zoom_mode,\n    rotate_mode: rotate_mode,\n    text_mode: text_mode,\n    set_reaction_data: set_reaction_data,\n    set_metabolite_data: set_metabolite_data,\n    set_gene_data: set_gene_data,\n    _update_data: _update_data,\n    _toggle_direction_buttons: _toggle_direction_buttons,\n    _set_up_menu: _set_up_menu,\n    _set_up_button_panel: _set_up_button_panel,\n    _setup_status: _setup_status,\n    _setup_quick_jump: _setup_quick_jump,\n    _setup_modes: _setup_modes,\n    _get_keys: _get_keys,\n    _setup_confirm_before_exit: _setup_confirm_before_exit\n};\nmodule.exports = Builder;\n\n\nfunction init (map_data, model_data, embedded_css, selection, options) {\n\n  // defaults\n  if (!selection) {\n    selection = d3.select('body').append('div')\n  }\n  if (!options) {\n    options = {}\n  }\n  if (!embedded_css) {\n    embedded_css = builder_embed\n  }\n\n  this.map_data = map_data\n  this.model_data = model_data\n  this.embedded_css = embedded_css\n  this.selection = selection\n\n  // apply this object as data for the selection\n  this.selection.datum(this)\n  this.selection.__builder__ = this\n\n  // set defaults\n  this.options = utils.set_options(options, {\n    // view options\n    menu: 'all',\n    scroll_behavior: 'pan',\n    use_3d_transform: !utils.check_browser('safari'),\n    enable_editing: true,\n    enable_keys: true,\n    enable_search: true,\n    fill_screen: false,\n    zoom_to_element: null,\n    full_screen_button: false,\n    ignore_bootstrap: false,\n    // map, model, and styles\n    starting_reaction: null,\n    never_ask_before_quit: false,\n    unique_map_id: null,\n    primary_metabolite_radius: 20,\n    secondary_metabolite_radius: 10,\n    marker_radius: 5,\n    gene_font_size: 18,\n    hide_secondary_metabolites: false,\n    show_gene_reaction_rules: false,\n    hide_all_labels: false,\n    // applied data\n    // reaction\n    reaction_data: null,\n    reaction_styles: ['color', 'size', 'text'],\n    reaction_compare_style: 'log2_fold',\n    reaction_scale: [{ type: 'min', color: '#c8c8c8', size: 12 },\n                     { type: 'median', color: '#9696ff', size: 20 },\n                     { type: 'max', color: '#ff0000', size: 25 }],\n    reaction_no_data_color: '#dcdcdc',\n    reaction_no_data_size: 8,\n    // gene\n    gene_data: null,\n    and_method_in_gene_reaction_rule: 'mean',\n    // metabolite\n    metabolite_data: null,\n    metabolite_styles: ['color', 'size', 'text'],\n    metabolite_compare_style: 'log2_fold',\n    metabolite_scale: [ { type: 'min', color: '#fffaf0', size: 20 },\n                        { type: 'median', color: '#f1c470', size: 30 },\n                        { type: 'max', color: '#800000', size: 40 } ],\n    metabolite_no_data_color: '#ffffff',\n    metabolite_no_data_size: 10,\n    // View and build options\n    identifiers_on_map: 'bigg_id',\n    highlight_missing: false,\n    allow_building_duplicate_reactions: false,\n    cofactors: ['atp', 'adp', 'nad', 'nadh', 'nadp', 'nadph', 'gtp', 'gdp',\n                'h', 'coa', 'ump', 'h20', 'ppi'],\n    // Extensions\n    tooltip_component: DefaultTooltip,\n    enable_tooltips: true,\n    // Callbacks\n    first_load_callback: null,\n  }, {\n    primary_metabolite_radius: true,\n    secondary_metabolite_radius: true,\n    marker_radius: true,\n    gene_font_size: true,\n    reaction_no_data_size: true,\n    metabolite_no_data_size: true,\n  })\n\n  // check the location\n  if (utils.check_for_parent_tag(this.selection, 'svg')) {\n    throw new Error('Builder cannot be placed within an svg node '+\n                    'becuase UI elements are html-based.')\n  }\n\n  // Initialize the settings\n  var set_option = function (option, new_value) {\n    this.options[option] = new_value\n  }.bind(this)\n  var get_option = function (option) {\n    return this.options[option]\n  }.bind(this)\n  // the options that are erased when the settings menu is canceled\n  var conditional = [ 'hide_secondary_metabolites', 'show_gene_reaction_rules',\n                      'hide_all_labels', 'scroll_behavior', 'reaction_styles',\n                      'reaction_compare_style', 'reaction_scale',\n                      'reaction_no_data_color', 'reaction_no_data_size',\n                      'and_method_in_gene_reaction_rule', 'metabolite_styles',\n                      'metabolite_compare_style', 'metabolite_scale',\n                      'metabolite_no_data_color', 'metabolite_no_data_size',\n                      'identifiers_on_map', 'highlight_missing',\n                      'allow_building_duplicate_reactions', 'enable_tooltips' ]\n  this.settings = new Settings(set_option, get_option, conditional)\n\n  // check the scales have max and min\n  var scales = [ 'reaction_scale', 'metabolite_scale' ]\n  scales.forEach(function(name) {\n    this.settings.streams[name].onValue(function(val) {\n      ['min', 'max'].forEach(function(type) {\n        var has = val.reduce(function(has_found, scale_el) {\n          return has_found || (scale_el.type == type)\n        }, false)\n        if (!has) {\n          val.push({ type: type, color: '#ffffff', size: 10 })\n          this.settings.set_conditional(name, val)\n        }\n      }.bind(this))\n    }.bind(this))\n  }.bind(this))\n  // TODO warn about repeated types in the scale\n\n  // set up this callback manager\n  this.callback_manager = CallbackManager()\n  if (this.options.first_load_callback !== null) {\n    this.callback_manager.set('first_load', this.options.first_load_callback)\n  }\n\n  // load the model, map, and update data in both\n  this.load_model(this.model_data, false)\n  this.load_map(this.map_data, false)\n  this._update_data(true, true)\n\n  // Setting callbacks. TODO enable atomic updates. Right now, every time the\n  // menu closes, everything is drawn.\n  this.settings.status_bus\n    .onValue(function(x) {\n      if (x === 'accepted') {\n        this._update_data(true, true, [ 'reaction', 'metabolite' ], false)\n        if (this.zoom_container !== null) {\n          var new_behavior = this.settings.get_option('scroll_behavior')\n          this.zoom_container.set_scroll_behavior(new_behavior)\n        }\n        if (this.map !== null) {\n          this.map.draw_all_nodes(false)\n          this.map.draw_all_reactions(true, false)\n          this.map.select_none()\n        }\n      }\n    }.bind(this))\n\n  this.callback_manager.run('first_load', this)\n}\n\nfunction load_model(model_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Check the cobra model\n    if (model_data === null)\n        this.cobra_model = null;\n    else\n        this.cobra_model = CobraModel.from_cobra_json(model_data);\n\n    if (this.map) {\n        this.map.cobra_model = this.cobra_model;\n        if (should_update_data)\n            this._update_data(true, false);\n        if (this.settings.get_option('highlight_missing'))\n            this.map.draw_all_reactions(false, false);\n    }\n\n    this.callback_manager.run('load_model', null, model_data, should_update_data);\n}\n\n/**\n * For documentation of this function, see docs/javascript_api.rst\n */\nfunction load_map(map_data, should_update_data) {\n    if (_.isUndefined(should_update_data))\n        should_update_data = true\n\n    // Begin with some definitions\n    var selectable_mousedown_enabled = true\n    var shift_key_on = false\n\n    // remove the old builder\n    utils.remove_child_nodes(this.selection)\n\n    // set up the zoom container\n    this.zoom_container = new ZoomContainer(this.selection,\n                                            this.options.scroll_behavior,\n                                            this.options.use_3d_transform,\n                                            this.options.fill_screen)\n    var zoomed_sel = this.zoom_container.zoomed_sel\n    var svg = this.zoom_container.svg\n\n    // remove the old map side effects\n    if (this.map)\n        this.map.key_manager.toggle(false)\n\n    if (map_data !== null) {\n        // import map\n        this.map = Map.from_data(map_data,\n                                 svg,\n                                 this.embedded_css,\n                                 zoomed_sel,\n                                 this.zoom_container,\n                                 this.settings,\n                                 this.cobra_model,\n                                 this.options.enable_search)\n    } else {\n        // new map\n        this.map = new Map(svg,\n                           this.embedded_css,\n                           zoomed_sel,\n                           this.zoom_container,\n                           this.settings,\n                           this.cobra_model,\n                           null,\n                           this.options.enable_search)\n    }\n    // zoom container status changes\n    this.zoom_container.callback_manager.set('svg_start', function() {\n        this.map.set_status('Drawing ...')\n    }.bind(this))\n    this.zoom_container.callback_manager.set('svg_finish', function() {\n        this.map.set_status('')\n    }.bind(this))\n\n    // set the data for the map\n    if (should_update_data)\n        this._update_data(false, true)\n\n    // set up the reaction input with complete.ly\n    this.build_input = new BuildInput(this.selection, this.map,\n                                      this.zoom_container, this.settings)\n\n    // set up the text edit input\n    this.text_edit_input = new TextEditInput(this.selection, this.map,\n                                             this.zoom_container)\n\n    // set up the tooltip container\n    this.tooltip_container = new TooltipContainer(this.selection, this.map,\n                                                  this.options.tooltip_component,\n                                                  this.zoom_container)\n\n    // set up the Brush\n    this.brush = new Brush(zoomed_sel, false, this.map, '.canvas-group')\n    this.map.canvas.callback_manager.set('resize', function() {\n        this.brush.toggle(true)\n    }.bind(this))\n\n    // set up the modes\n    this._setup_modes(this.map, this.brush, this.zoom_container)\n\n    var s = this.selection\n            .append('div').attr('class', 'search-menu-container')\n            .append('div').attr('class', 'search-menu-container-inline'),\n        menu_div = s.append('div'),\n        search_bar_div = s.append('div'),\n        button_div = this.selection.append('div')\n\n    // set up the search bar\n    this.search_bar = new SearchBar(search_bar_div, this.map.search_index,\n                                this.map)\n    // set up the hide callbacks\n    this.search_bar.callback_manager.set('show', function() {\n        this.settings_bar.toggle(false)\n    }.bind(this))\n\n    // set up the settings\n    var settings_div = this.selection.append('div')\n    this.settings_bar = new SettingsMenu(settings_div, this.settings, this.map,\n                                         function(type, on_off) {\n                                             // temporarily set the abs type, for\n                                             // previewing it in the Settings\n                                             // menu\n                                             var o = this.options[type + '_styles']\n                                             if (on_off && o.indexOf('abs') == -1)\n                                                 o.push('abs')\n                                             else if (!on_off) {\n                                                 var i = o.indexOf('abs')\n                                                 if (i != -1)\n                                                     this.options[type + '_styles'] = o.slice(0, i).concat(o.slice(i + 1))\n                                             }\n                                             this._update_data(false, true, type)\n                                         }.bind(this))\n    this.settings_bar.callback_manager.set('show', function() {\n        this.search_bar.toggle(false)\n    }.bind(this))\n\n    // set up key manager\n    var keys = this._get_keys(this.map, this.zoom_container,\n                              this.search_bar, this.settings_bar,\n                              this.options.enable_editing,\n                              this.options.full_screen_button)\n    this.map.key_manager.assigned_keys = keys\n    // tell the key manager about the reaction input and search bar\n    this.map.key_manager.input_list = [this.build_input, this.search_bar,\n                                       this.settings_bar, this.text_edit_input]\n    // make sure the key manager remembers all those changes\n    this.map.key_manager.update()\n    // turn it on/off\n    this.map.key_manager.toggle(this.options.enable_keys)\n\n    // set up menu and status bars\n    if (this.options.menu === 'all') {\n        if (this.options.ignore_bootstrap)\n            console.error('Cannot create the dropdown menus if ignore_bootstrap = true')\n        else\n            this._set_up_menu(menu_div, this.map, this.map.key_manager, keys,\n                              this.options.enable_editing, this.options.enable_keys,\n                              this.options.full_screen_button)\n    }\n\n    this._set_up_button_panel(button_div, keys, this.options.enable_editing,\n                              this.options.enable_keys,\n                              this.options.full_screen_button,\n                              this.options.menu, this.options.ignore_bootstrap)\n\n    // setup selection box\n    if (this.options.zoom_to_element) {\n        var type = this.options.zoom_to_element.type,\n            element_id = this.options.zoom_to_element.id\n        if (typeof type === 'undefined' || ['reaction', 'node'].indexOf(type) == -1)\n            throw new Error('zoom_to_element type must be \"reaction\" or \"node\"')\n        if (typeof element_id === 'undefined')\n            throw new Error('zoom_to_element must include id')\n        if (type == 'reaction')\n            this.map.zoom_to_reaction(element_id)\n        else if (type == 'node')\n            this.map.zoom_to_node(element_id)\n    } else if (map_data !== null) {\n        this.map.zoom_extent_canvas()\n    } else {\n        if (this.options.starting_reaction !== null && this.cobra_model !== null) {\n            // Draw default reaction if no map is provided\n            var size = this.zoom_container.get_size()\n            var start_coords = { x: size.width / 2,\n                                 y: size.height / 4 }\n            this.map.new_reaction_from_scratch(this.options.starting_reaction, start_coords, 90)\n            this.map.zoom_extent_nodes()\n        } else {\n            this.map.zoom_extent_canvas()\n        }\n    }\n\n    // status in both modes\n    var status = this._setup_status(this.selection, this.map)\n\n    // set up quick jump\n    this._setup_quick_jump(this.selection)\n\n    // start in zoom mode for builder, view mode for viewer\n    if (this.options.enable_editing)\n        this.zoom_mode()\n    else\n        this.view_mode()\n\n    // confirm before leaving the page\n    if (this.options.enable_editing)\n        this._setup_confirm_before_exit()\n\n    // draw\n    this.map.draw_everything()\n}\n\nfunction _set_mode(mode) {\n  this.search_bar.toggle(false)\n  // input\n  this.build_input.toggle(mode == 'build')\n  this.build_input.direction_arrow.toggle(mode == 'build')\n  if (this.options.menu == 'all' && this.options.enable_editing) {\n    this._toggle_direction_buttons(mode == 'build')\n  }\n  // brush\n  this.brush.toggle(mode == 'brush')\n  // zoom\n  this.zoom_container.toggle_pan_drag(mode == 'zoom' || mode == 'view')\n  // resize canvas\n  this.map.canvas.toggle_resize(mode == 'zoom' || mode == 'brush')\n  // Behavior. Be careful of the order becuase rotation and\n  // toggle_selectable_drag both use Behavior.selectable_drag.\n  if (mode  ==  'rotate') {\n    this.map.behavior.toggle_selectable_drag(false) // before toggle_rotation_mode\n    this.map.behavior.toggle_rotation_mode(true)\n  } else {\n    this.map.behavior.toggle_rotation_mode(mode == 'rotate') // before toggle_selectable_drag\n    this.map.behavior.toggle_selectable_drag(mode == 'brush')\n  }\n  this.map.behavior.toggle_selectable_click(mode == 'build' || mode == 'brush')\n  this.map.behavior.toggle_label_drag(mode == 'brush')\n  this.map.behavior.toggle_label_mouseover(true)\n  this.map.behavior.toggle_text_label_edit(mode == 'text')\n  this.map.behavior.toggle_bezier_drag(mode == 'brush')\n  // edit selections\n  if (mode == 'view' || mode == 'text')\n    this.map.select_none()\n  if (mode == 'rotate')\n    this.map.deselect_text_labels()\n  this.map.draw_everything()\n}\n\nfunction view_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('view_mode');\n    this._set_mode('view');\n}\n\nfunction build_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('build_mode');\n    this._set_mode('build');\n}\n\nfunction brush_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('brush_mode');\n    this._set_mode('brush');\n}\n\nfunction zoom_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('zoom_mode');\n    this._set_mode('zoom');\n}\n\nfunction rotate_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('rotate_mode');\n    this._set_mode('rotate');\n}\n\nfunction text_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('text_mode');\n    this._set_mode('text');\n}\n\nfunction set_reaction_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.reaction_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_gene_data(data, clear_gene_reaction_rules) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (clear_gene_reaction_rules) // default undefined\n        this.settings.set_conditional('show_gene_reaction_rules', false);\n    this.options.gene_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_metabolite_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.metabolite_data = data;\n    this._update_data(true, true, 'metabolite');\n    this.map.set_status('');\n}\n\nfunction _update_data(update_model, update_map, kind, should_draw) {\n    /** Set data and settings for the model.\n\n     Arguments\n     ---------\n\n     update_model: (Boolean) Update data for the model.\n\n     update_map: (Boolean) Update data for the map.\n\n     kind: (Optional, Default: all) An array defining which data is being\n     updated that can include any of: ['reaction', 'metabolite'].\n\n     should_draw: (Optional, Default: true) Whether to redraw the update\n     sections of the map.\n\n     */\n\n    // defaults\n    if (kind === undefined)\n        kind = ['reaction', 'metabolite'];\n    if (should_draw === undefined)\n        should_draw = true;\n\n    var update_metabolite_data = (kind.indexOf('metabolite') != -1),\n        update_reaction_data = (kind.indexOf('reaction') != -1),\n        met_data_object,\n        reaction_data_object,\n        gene_data_object;\n\n    // -------------------\n    // First map, and draw\n\n    // metabolite data\n    if (update_metabolite_data && update_map && this.map !== null) {\n        met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                       'metabolite_data');\n        this.map.apply_metabolite_data_to_map(met_data_object);\n        if (should_draw)\n            this.map.draw_all_nodes(false);\n    }\n\n    // reaction data\n    if (update_reaction_data) {\n        if (this.options.reaction_data !== null && update_map && this.map !== null) {\n            reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                'reaction_data');\n            this.map.apply_reaction_data_to_map(reaction_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (this.options.gene_data !== null && update_map && this.map !== null) {\n            gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                     this.cobra_model, this.map);\n            this.map.apply_gene_data_to_map(gene_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (update_map && this.map !== null) {\n            // clear the data\n            this.map.apply_reaction_data_to_map(null);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        }\n    }\n\n    // ----------------------------------------------------------------\n    // Then the model, after drawing. Delay by 5ms so the the map draws\n    // first.\n    // ----------------------------------------------------------------\n\n    // if this function runs again, cancel the previous model update\n    if (this.update_model_timer)\n        clearTimeout(this.update_model_timer);\n\n    var delay = 5;\n    this.update_model_timer = setTimeout(function() {\n\n        // metabolite_data\n        if (update_metabolite_data && update_model && this.cobra_model !== null) {\n            // if we haven't already made this\n            if (!met_data_object)\n                met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                               'metabolite_data');\n            this.cobra_model.apply_metabolite_data(met_data_object,\n                                                   this.options.metabolite_styles,\n                                                   this.options.metabolite_compare_style);\n        }\n\n        // reaction data\n        if (update_reaction_data) {\n            if (this.options.reaction_data !== null && update_model && this.cobra_model !== null) {\n                // if we haven't already made this\n                if (!reaction_data_object)\n                    reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                        'reaction_data');\n                this.cobra_model.apply_reaction_data(reaction_data_object,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            } else if (this.options.gene_data !== null && update_model && this.cobra_model !== null) {\n                if (!gene_data_object)\n                    gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                             this.cobra_model, this.map);\n                this.cobra_model.apply_gene_data(gene_data_object,\n                                                 this.options.reaction_styles,\n                                                 this.options.identifiers_on_map,\n                                                 this.options.reaction_compare_style,\n                                                 this.options.and_method_in_gene_reaction_rule);\n            } else if (update_model && this.cobra_model !== null) {\n                // clear the data\n                this.cobra_model.apply_reaction_data(null,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            }\n        }\n\n        // callback\n        this.callback_manager.run('update_data', null, update_model, update_map, kind, should_draw);\n\n    }.bind(this), delay);\n\n    // definitions\n    function make_gene_data_object(gene_data, cobra_model, map) {\n        var all_reactions = {};\n        if (cobra_model !== null)\n            utils.extend(all_reactions, cobra_model.reactions);\n        // extend, overwrite\n        if (map !== null)\n            utils.extend(all_reactions, map.reactions, true);\n\n        // this object has reaction keys and values containing associated genes\n        return data_styles.import_and_check(gene_data, 'gene_data', all_reactions);\n    }\n}\n\nfunction _set_up_menu(menu_selection, map, key_manager, keys, enable_editing,\n                      enable_keys, full_screen_button, ignore_bootstrap) {\n    var menu = menu_selection.attr('id', 'menu')\n            .append('ul')\n            .attr('class', 'nav nav-pills')\n    // map dropdown\n    ui.dropdown_menu(menu, 'Map')\n        .button({ key: keys.save,\n                  text: 'Save map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+S)' : null) })\n        .button({ text: 'Load map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+O)' : null),\n                  input: { assign: key_manager.assigned_keys.load,\n                           key: 'fn',\n                           fn: load_map_for_file.bind(this),\n                           pre_fn: function() {\n                               map.set_status('Loading map ...')\n                           },\n                           failure_fn: function() {\n                               map.set_status('')\n                           }}\n                })\n        .button({ key: keys.save_svg,\n                  text: 'Export as SVG',\n                  key_text: (enable_keys ? ' (Ctrl+Shift+S)' : null) })\n        .button({ key: keys.save_png,\n                  text: 'Export as PNG',\n                  key_text: (enable_keys ? ' (Ctrl+Shift+P)' : null) })\n        .button({ key: keys.clear_map,\n                  text: 'Clear map' })\n    // model dropdown\n    var model_menu = ui.dropdown_menu(menu, 'Model')\n            .button({ text: 'Load COBRA model JSON',\n                      key_text: (enable_keys ? ' (Ctrl+M)' : null),\n                      input: { assign: key_manager.assigned_keys.load_model,\n                               key: 'fn',\n                               fn: load_model_for_file.bind(this),\n                               pre_fn: function() {\n                                   map.set_status('Loading model ...')\n                               },\n                               failure_fn: function() {\n                                   map.set_status('')\n                               } }\n                    })\n            .button({ id: 'convert_map',\n                      key: keys.convert_map,\n                      text: 'Update names and gene reaction rules using model' })\n            .button({ id: 'clear_model',\n                      key: keys.clear_model,\n                      text: 'Clear model' })\n    // disable the clear and convert buttons\n    var disable_model_clear_convert = function() {\n        model_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if ((d.id == 'clear_model' || d.id == 'convert_map') &&\n                    this.cobra_model === null)\n                    return true\n                return null\n            }.bind(this))\n    }.bind(this)\n    disable_model_clear_convert()\n    this.callback_manager.set('load_model', disable_model_clear_convert)\n\n    // data dropdown\n    var data_menu = ui.dropdown_menu(menu, 'Data')\n            .button({ input: { assign: key_manager.assigned_keys.load_reaction_data,\n                               key: 'fn',\n                               fn: load_reaction_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading reaction data ...')\n                               },\n                               failure_fn: function() {\n                                   map.set_status('')\n                               }},\n                      text: 'Load reaction data' })\n            .button({ key: keys.clear_reaction_data,\n                      text: 'Clear reaction data' })\n            .divider()\n            .button({ input: { fn: load_gene_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading gene data ...')\n                               },\n                               failure_fn: function() {\n                                   map.set_status('')\n                               }},\n                      text: 'Load gene data' })\n            .button({ key: keys.clear_gene_data,\n                      text: 'Clear gene data' })\n            .divider()\n            .button({ input: { fn: load_metabolite_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading metabolite data ...')\n                               },\n                               failure_fn: function() {\n                                   map.set_status('')\n                               }},\n                      text: 'Load metabolite data' })\n            .button({ key: keys.clear_metabolite_data,\n                      text: 'Clear metabolite data' })\n\n    // update the buttons\n    var disable_clears = function() {\n        data_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if (!d) return null\n                if (d.text == 'Clear reaction data' && this.options.reaction_data === null)\n                    return true\n                if (d.text == 'Clear gene data' && this.options.gene_data === null)\n                    return true\n                if (d.text == 'Clear metabolite data' && this.options.metabolite_data === null)\n                    return true\n                return null\n            }.bind(this))\n    }.bind(this)\n    disable_clears()\n    this.callback_manager.set('update_data', disable_clears)\n\n    // edit dropdown\n    var edit_menu = ui.dropdown_menu(menu, 'Edit', true)\n    if (enable_editing) {\n        edit_menu\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-menu-button',\n                      text: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-menu-button',\n                      text: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-menu-button',\n                      text: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-menu-button',\n                      text: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-menu-button',\n                      text: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) })\n            .divider()\n            .button({ key: keys.delete,\n                      text: 'Delete',\n                      key_text: (enable_keys ? ' (Del)' : null) })\n            .button({ key: keys.undo,\n                      text: 'Undo',\n                      key_text: (enable_keys ? ' (Ctrl+Z)' : null) })\n            .button({ key: keys.redo,\n                      text: 'Redo',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+Z)' : null) })\n            .button({ key: keys.toggle_primary,\n                      text: 'Toggle primary/secondary',\n                      key_text: (enable_keys ? ' (P)' : null) })\n            .button({ key: keys.cycle_primary,\n                      text: 'Rotate reactant locations',\n                      key_text: (enable_keys ? ' (C)' : null) })\n            .button({ key: keys.select_all,\n                      text: 'Select all',\n                      key_text: (enable_keys ? ' (Ctrl+A)' : null) })\n            .button({ key: keys.select_none,\n                      text: 'Select none',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+A)' : null) })\n            .button({ key: keys.invert_selection,\n                      text: 'Invert selection' })\n    } else {\n        edit_menu.button({ key: keys.view_mode,\n                           id: 'view-mode-menu-button',\n                           text: 'View mode' })\n    }\n\n    // view dropdown\n    var view_menu = ui.dropdown_menu(menu, 'View', true)\n            .button({ key: keys.zoom_in,\n                      text: 'Zoom in',\n                      key_text: (enable_keys ? ' (Ctrl and +)' : null) })\n            .button({ key: keys.zoom_out,\n                      text: 'Zoom out',\n                      key_text: (enable_keys ? ' (Ctrl and -)' : null) })\n            .button({ key: keys.extent_nodes,\n                      text: 'Zoom to nodes',\n                      key_text: (enable_keys ? ' (Ctrl+0)' : null) })\n            .button({ key: keys.extent_canvas,\n                      text: 'Zoom to canvas',\n                      key_text: (enable_keys ? ' (Ctrl+1)' : null) })\n            .button({ key: keys.search,\n                      text: 'Find',\n                      key_text: (enable_keys ? ' (Ctrl+F)' : null) })\n    if (full_screen_button) {\n        view_menu.button({ key: keys.full_screen,\n                           text: 'Full screen',\n                           key_text: (enable_keys ? ' (Ctrl+2)' : null) })\n    }\n    if (enable_editing) {\n        view_menu.button({ key: keys.toggle_beziers,\n                           id: 'bezier-button',\n                           text: 'Show control points',\n                           key_text: (enable_keys ? ' (B)' : null) })\n        map.callback_manager\n            .set('toggle_beziers.button', function(on_off) {\n                menu.select('#bezier-button').select('.dropdown-button-text')\n                    .text((on_off ? 'Hide' : 'Show') +\n                          ' control points' +\n                          (enable_keys ? ' (B)' : ''))\n            })\n    }\n    view_menu.divider()\n        .button({ key: keys.show_settings,\n                  text: 'Settings',\n                  key_text: (enable_keys ? ' (Ctrl+,)' : null) })\n\n    // help\n    menu.append('a')\n        .attr('class', 'help-button')\n        .attr('target', '#')\n        .attr('href', 'https://escher.readthedocs.org')\n        .text('?')\n\n    // set up mode callbacks\n    var select_button = function(id) {\n        // toggle the button\n        $(this.selection.node()).find('#' + id)\n            .button('toggle')\n\n        // menu buttons\n        var ids = ['zoom-mode-menu-button', 'brush-mode-menu-button',\n                   'build-mode-menu-button', 'rotate-mode-menu-button',\n                   'view-mode-menu-button', 'text-mode-menu-button']\n        ids.forEach(function(this_id) {\n            var b_id = this_id.replace('-menu', '')\n            this.selection.select('#' + this_id)\n                .select('span')\n                .classed('glyphicon', b_id == id)\n                .classed('glyphicon-ok', b_id == id)\n        }.bind(this))\n    }\n    this.callback_manager.set('zoom_mode', select_button.bind(this, 'zoom-mode-button'))\n    this.callback_manager.set('brush_mode', select_button.bind(this, 'brush-mode-button'))\n    this.callback_manager.set('build_mode', select_button.bind(this, 'build-mode-button'))\n    this.callback_manager.set('rotate_mode', select_button.bind(this, 'rotate-mode-button'))\n    this.callback_manager.set('view_mode', select_button.bind(this, 'view-mode-button'))\n    this.callback_manager.set('text_mode', select_button.bind(this, 'text-mode-button'))\n\n    // definitions\n    function load_map_for_file(error, map_data) {\n        /** Load a map. This reloads the whole builder. */\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Error loading map: ' + error, 2000)\n            return\n        }\n\n        try {\n            check_map(map_data)\n            this.load_map(map_data)\n            this.map.set_status('Loaded map ' + map_data[0].map_name, 3000)\n        } catch (e) {\n            console.warn(e)\n            this.map.set_status('Error loading map: ' + e, 2000)\n        }\n\n        // definitions\n        function check_map(data) {\n            /** Perform a quick check to make sure the map is mostly valid.\n\n             */\n\n            if (!('map_id' in data[0] && 'reactions' in data[1] &&\n                  'nodes' in data[1] && 'canvas' in data[1]))\n                throw new Error('Bad map data.')\n        }\n    }\n    function load_model_for_file(error, data) {\n        /** Load a cobra model. Redraws the whole map if the\n         highlight_missing option is true.\n\n         */\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Error loading model: ' + error, 2000)\n            return\n        }\n\n        try {\n            this.load_model(data, true)\n            this.build_input.toggle(false)\n            if ('id' in data)\n                this.map.set_status('Loaded model ' + data.id, 3000)\n            else\n                this.map.set_status('Loaded model (no model id)', 3000)\n        } catch (e) {\n            console.warn(e)\n            this.map.set_status('Error loading model: ' + e, 2000)\n        }\n\n    }\n    function load_reaction_data_for_file(error, data) {\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Could not parse file as JSON or CSV', 2000)\n            return\n        }\n        // turn off gene data\n        if (data !== null)\n            this.set_gene_data(null)\n\n        this.set_reaction_data(data)\n    }\n    function load_metabolite_data_for_file(error, data) {\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Could not parse file as JSON or CSV', 2000)\n            return\n        }\n        this.set_metabolite_data(data)\n    }\n    function load_gene_data_for_file(error, data) {\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Could not parse file as JSON or CSV', 2000)\n            return\n        }\n        // turn off reaction data\n        if (data !== null)\n            this.set_reaction_data(null)\n\n        // turn on gene_reaction_rules\n        this.settings.set_conditional('show_gene_reaction_rules', true)\n\n        this.set_gene_data(data)\n    }\n}\n\nfunction _set_up_button_panel(button_selection, keys, enable_editing,\n                              enable_keys, full_screen_button, menu_option,\n                              ignore_bootstrap) {\n    var button_panel = button_selection.append('ul')\n            .attr('class', 'nav nav-pills nav-stacked')\n            .attr('id', 'button-panel')\n\n    // buttons\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_in,\n                           text: '+',\n                           icon: 'glyphicon glyphicon-plus-sign',\n                           tooltip: 'Zoom in',\n                           key_text: (enable_keys ? ' (Ctrl and +)' : null),\n                           ignore_bootstrap: ignore_bootstrap })\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_out,\n                           text: '–',\n                           icon: 'glyphicon glyphicon-minus-sign',\n                           tooltip: 'Zoom out',\n                           key_text: (enable_keys ? ' (Ctrl and -)' : null),\n                           ignore_bootstrap: ignore_bootstrap  })\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.extent_canvas,\n                           text: '↔',\n                           icon: 'glyphicon glyphicon-resize-full',\n                           tooltip: 'Zoom to canvas',\n                           key_text: (enable_keys ? ' (Ctrl+1)' : null),\n                           ignore_bootstrap: ignore_bootstrap  })\n    if (full_screen_button) {\n        ui.individual_button(button_panel.append('li'),\n            {   key: keys.full_screen,\n                text: '▣',\n                icon: 'glyphicon glyphicon-fullscreen',\n                tooltip: 'Full screen',\n                key_text: (enable_keys ? ' (Ctrl+2)' : null),\n                ignore_bootstrap: ignore_bootstrap\n            })\n    }\n\n    // mode buttons\n    if (enable_editing && menu_option === 'all') {\n        ui.radio_button_group(button_panel.append('li'))\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-button',\n                      text: 'Z',\n                      icon: 'glyphicon glyphicon-move',\n                      tooltip: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n            .button({ key: keys.brush_mode,\n                      text: 'V',\n                      id: 'brush-mode-button',\n                      icon: 'glyphicon glyphicon-hand-up',\n                      tooltip: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n            .button({ key: keys.build_mode,\n                      text: 'N',\n                      id: 'build-mode-button',\n                      icon: 'glyphicon glyphicon-plus',\n                      tooltip: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n            .button({ key: keys.rotate_mode,\n                      text: 'R',\n                      id: 'rotate-mode-button',\n                      icon: 'glyphicon glyphicon-repeat',\n                      tooltip: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n            .button({ key: keys.text_mode,\n                      text: 'T',\n                      id: 'text-mode-button',\n                      icon: 'glyphicon glyphicon-font',\n                      tooltip: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n\n        // arrow buttons\n        this.direction_buttons = button_panel.append('li')\n        var o = ui.button_group(this.direction_buttons)\n                .button({ key: keys.direction_arrow_left,\n                          text: '←',\n                          icon: 'glyphicon glyphicon-arrow-left',\n                          tooltip: 'Direction arrow (←)',\n                          ignore_bootstrap: ignore_bootstrap  })\n                .button({ key: keys.direction_arrow_right,\n                          text: '→',\n                          icon: 'glyphicon glyphicon-arrow-right',\n                          tooltip: 'Direction arrow (→)',\n                          ignore_bootstrap: ignore_bootstrap  })\n                .button({ key: keys.direction_arrow_up,\n                          text: '↑',\n                          icon: 'glyphicon glyphicon-arrow-up',\n                          tooltip: 'Direction arrow (↑)',\n                          ignore_bootstrap: ignore_bootstrap  })\n                .button({ key: keys.direction_arrow_down,\n                          text: '↓',\n                          icon: 'glyphicon glyphicon-arrow-down',\n                          tooltip: 'Direction arrow (↓)',\n                          ignore_bootstrap: ignore_bootstrap  })\n    }\n}\n\nfunction _toggle_direction_buttons(on_off) {\n    if (_.isUndefined(on_off))\n        on_off = !this.direction_buttons.style('display') === 'block'\n    this.direction_buttons.style('display', on_off ? 'block' : 'none')\n}\n\nfunction _setup_status(selection, map) {\n    var status_bar = selection.append('div').attr('id', 'status');\n    map.callback_manager.set('set_status', function(status) {\n        status_bar.html(status);\n    });\n    return status_bar;\n}\n\nfunction _setup_quick_jump(selection) {\n    // function to load a map\n    var load_fn = function(new_map_name, quick_jump_path, callback) {\n        if (this.options.enable_editing && !this.options.never_ask_before_quit) {\n            if (!(confirm(('You will lose any unsaved changes.\\n\\n' +\n                           'Are you sure you want to switch maps?')))) {\n                if (callback) callback(false)\n                return\n            }\n        }\n        this.map.set_status('Loading map ' + new_map_name + ' ...');\n        var url = utils.name_to_url(new_map_name, quick_jump_path);\n        d3.json(url, function(error, data) {\n            if (error) {\n                console.warn('Could not load data: ' + error)\n                this.map.set_status('Could not load map', 2000)\n                if (callback) callback(false)\n                return\n            }\n            // run callback before load_map so the new map has the correct\n            // quick_jump menu\n            if (callback) callback(true)\n            // now reload\n            this.load_map(data)\n            this.map.set_status('')\n        }.bind(this))\n    }.bind(this)\n\n    // make the quick jump object\n    this.quick_jump = QuickJump(selection, load_fn)\n}\n\nfunction _setup_modes (map, brush, zoom_container) {\n  // set up zoom+pan and brush modes\n  var was_enabled = {}\n  map.callback_manager.set('start_rotation', function () {\n    was_enabled.brush = brush.enabled\n    brush.toggle(false)\n    was_enabled.zoom = zoom_container.zoom_on\n    zoom_container.toggle_pan_drag(false)\n    was_enabled.selectable_mousedown = map.behavior.selectable_mousedown !== null\n    map.behavior.toggle_selectable_click(false)\n    was_enabled.label_mouseover = map.behavior.label_mouseover !== null\n    map.behavior.toggle_label_mouseover(false)\n  })\n  map.callback_manager.set('end_rotation', function () {\n    brush.toggle(was_enabled.brush)\n    zoom_container.toggle_pan_drag(was_enabled.zoom)\n    map.behavior.toggle_selectable_click(was_enabled.selectable_mousedown)\n    map.behavior.toggle_label_mouseover(was_enabled.label_mouseover)\n    was_enabled = {}\n  })\n}\n\nfunction _get_keys(map, zoom_container, search_bar, settings_bar, enable_editing, full_screen_button) {\n\n        var keys = {\n        save: {\n            key: 'ctrl+s',\n            target: map,\n            fn: map.save\n        },\n        save_svg: {\n            key: 'ctrl+shift+s',\n            target: map,\n            fn: map.save_svg\n        },\n        save_png: {\n            key: 'ctrl+shift+p',\n            target: map,\n            fn: map.save_png\n        },\n        load: {\n            key: 'ctrl+o',\n            fn: null  // defined by button\n        },\n        convert_map: {\n            target: map,\n            fn: map.convert_map\n        },\n        clear_map: {\n            target: map,\n            fn: map.clear_map\n        },\n        load_model: {\n            key: 'ctrl+m',\n            fn: null // defined by button\n        },\n        clear_model: {\n            fn: this.load_model.bind(this, null, true)\n        },\n        load_reaction_data: { fn: null }, // defined by button\n        clear_reaction_data: {\n            target: this,\n            fn: function() { this.set_reaction_data(null); }\n        },\n        load_metabolite_data: { fn: null }, // defined by button\n        clear_metabolite_data: {\n            target: this,\n            fn: function() { this.set_metabolite_data(null); }\n        },\n        load_gene_data: { fn: null }, // defined by button\n        clear_gene_data: {\n            target: this,\n            fn: function() { this.set_gene_data(null, true); }\n        },\n        zoom_in: {\n            key: 'ctrl+=',\n            target: zoom_container,\n            fn: zoom_container.zoom_in\n        },\n        zoom_out: {\n            key: 'ctrl+-',\n            target: zoom_container,\n            fn: zoom_container.zoom_out\n        },\n        extent_nodes: {\n            key: 'ctrl+0',\n            target: map,\n            fn: map.zoom_extent_nodes\n        },\n        extent_canvas: {\n            key: 'ctrl+1',\n            target: map,\n            fn: map.zoom_extent_canvas\n        },\n        search: {\n            key: 'ctrl+f',\n            fn: search_bar.toggle.bind(search_bar, true)\n        },\n        view_mode: {\n            target: this,\n            fn: this.view_mode,\n            ignore_with_input: true\n        },\n        show_settings: {\n            key: 'ctrl+,',\n            target: settings_bar,\n            fn: settings_bar.toggle\n        }\n    };\n    if (full_screen_button) {\n        utils.extend(keys, {\n            full_screen: {\n                key: 'ctrl+2',\n                target: map,\n                fn: map.full_screen\n            }\n        })\n    }\n    if (enable_editing) {\n        utils.extend(keys, {\n            build_mode: {\n                key: 'n',\n                target: this,\n                fn: this.build_mode,\n                ignore_with_input: true\n            },\n            zoom_mode: {\n                key: 'z',\n                target: this,\n                fn: this.zoom_mode,\n                ignore_with_input: true\n            },\n            brush_mode: {\n                key: 'v',\n                target: this,\n                fn: this.brush_mode,\n                ignore_with_input: true\n            },\n            rotate_mode: {\n                key: 'r',\n                target: this,\n                fn: this.rotate_mode,\n                ignore_with_input: true\n            },\n            text_mode: {\n                key: 't',\n                target: this,\n                fn: this.text_mode,\n                ignore_with_input: true\n            },\n            toggle_beziers: {\n                key: 'b',\n                target: map,\n                fn: map.toggle_beziers,\n                ignore_with_input: true\n            },\n            delete: {\n                key: 'ctrl+backspace',\n                target: map,\n                fn: map.delete_selected,\n                ignore_with_input: true\n            },\n            delete_del: {\n                key: 'del',\n                target: map,\n                fn: map.delete_selected,\n                ignore_with_input: true\n            },\n            toggle_primary: {\n                key: 'p',\n                target: map,\n                fn: map.toggle_selected_node_primary,\n                ignore_with_input: true\n            },\n            cycle_primary: {\n                key: 'c',\n                target: map,\n                fn: map.cycle_primary_node,\n                ignore_with_input: true\n            },\n            direction_arrow_right: {\n                key: 'right',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.right,\n                ignore_with_input: true\n            },\n            direction_arrow_down: {\n                key: 'down',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.down,\n                ignore_with_input: true\n            },\n            direction_arrow_left: {\n                key: 'left',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.left,\n                ignore_with_input: true\n            },\n            direction_arrow_up: {\n                key: 'up',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.up,\n                ignore_with_input: true\n            },\n            undo: {\n                key: 'ctrl+z',\n                target: map.undo_stack,\n                fn: map.undo_stack.undo\n            },\n            redo: {\n                key: 'ctrl+shift+z',\n                target: map.undo_stack,\n                fn: map.undo_stack.redo\n            },\n            select_all: {\n                key: 'ctrl+a',\n                target: map,\n                fn: map.select_all\n            },\n            select_none: {\n                key: 'ctrl+shift+a',\n                target: map,\n                fn: map.select_none\n            },\n            invert_selection: {\n                target: map,\n                fn: map.invert_selection\n            }\n        });\n    }\n    return keys;\n}\n\nfunction _setup_confirm_before_exit() {\n    /** Ask if the user wants to exit the page (to avoid unplanned refresh).\n\n     */\n\n    window.onbeforeunload = function(e) {\n        // If we haven't been passed the event get the window.event\n        e = e || window.event;\n        return  (this.options.never_ask_before_quit ? null :\n                 'You will lose any unsaved changes.');\n    }.bind(this);\n}\n","/** CallbackManager */\n\nvar utils = require('./utils');\nvar _ = require('underscore');\n\n\nvar CallbackManager = utils.make_class();\nCallbackManager.prototype = {\n    init: init,\n    set: set,\n    remove: remove,\n    run: run\n};\nmodule.exports = CallbackManager;\n\n\nfunction init() {\n\n}\n\n\nfunction set(name, fn) {\n    /** As in d3 callbacks, you can namespace your callbacks after a period:\n\n     select_metabolite.direction_arrow\n     select_metabolite.input\n\n     Both are called by select_metabolite\n\n\n     TODO add *arguments to set, as in _.defer()\n\n     */\n    if (this.callbacks===undefined) this.callbacks = {};\n    if (this.callbacks[name]===undefined) this.callbacks[name] = [];\n    this.callbacks[name].push(fn);\n\n    return this;\n}\n\n\nfunction remove(name) {\n    /** Remove a callback by name\n\n     */\n    if (this.callbacks===undefined || Object.keys(this.callbacks).length==0) {\n        console.warn('No callbacks to remove');\n    }\n    delete this.callbacks[name];\n    return this;\n}\n\n\nfunction run(name, this_arg) {\n    /** Run all callbacks that match the portion of name before the period ('.').\n\n     Arguments\n     ---------\n\n     name: The callback name, which can include a tag after a '.' to\n     specificy a particular callback.\n\n     this_arg: (Optional, Default: null) The object assigned to `this` in\n     the callback.\n\n     */\n    if (_.isUndefined(this.callbacks)) return this;\n    if (_.isUndefined(this_arg)) this_arg = null;\n    // pass all but the first (name) argument to the callback\n    var pass_args = Array.prototype.slice.call(arguments, 2);\n    // look for matching callback names\n    for (var a_name in this.callbacks) {\n        var split_name = a_name.split('.')[0];\n        if (split_name==name) {\n            this.callbacks[a_name].forEach(function(fn) {\n                fn.apply(this_arg, pass_args);\n            });\n        }\n    }\n    return this;\n}\n","/** Canvas. Defines a canvas that accepts drag/zoom events and can be resized.\n\n Canvas(selection, x, y, width, height)\n\n Adapted from http://bl.ocks.org/mccannf/1629464.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Canvas = utils.make_class();\nCanvas.prototype = {\n    init: init,\n    toggle_resize: toggle_resize,\n    setup: setup,\n    size_and_location: size_and_location\n};\nmodule.exports = Canvas;\n\n\nfunction init(selection, size_and_location) {\n    this.selection = selection;\n    this.x = size_and_location.x;\n    this.y = size_and_location.y;\n    this.width = size_and_location.width;\n    this.height = size_and_location.height;\n\n    // enable by default\n    this.resize_enabled = true;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    this.setup();\n}\n\nfunction toggle_resize(on_off) {\n    /** Turn the resize on or off\n\n     */\n    if (on_off===undefined) on_off = !this.resize_enabled;\n\n    if (on_off) {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'auto');\n    } else {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'none');\n    }\n}\n\nfunction setup() {\n    var self = this,\n        extent = {\"x\": this.width, \"y\": this.height},\n        dragbar_width = 100,\n        mouse_node_mult = 10,\n        new_sel = this.selection.append('g')\n            .classed('canvas-group', true)\n            .data([{x: this.x, y: this.y}]);\n\n    var mouse_node = new_sel.append('rect')\n            .attr('id', 'mouse-node')\n            .attr(\"width\", this.width*mouse_node_mult)\n            .attr(\"height\", this.height*mouse_node_mult)\n            .attr(\"transform\", \"translate(\"+[self.x - this.width*mouse_node_mult/2,\n                                             self.y - this.height*mouse_node_mult/2]+\")\")\n            .attr('pointer-events', 'all');\n    this.mouse_node = mouse_node;\n\n    var rect = new_sel.append('rect')\n            .attr('id', 'canvas')\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height)\n            .attr(\"transform\", \"translate(\"+[self.x, self.y]+\")\");\n\n    var drag_right = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", rdragresize),\n        drag_left = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", ldragresize),\n        drag_top = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", tdragresize),\n        drag_bottom = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", bdragresize);\n\n    var left = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"id\", \"dragleft\")\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_left);\n\n    var right = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + self.width - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragright\")\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_right);\n\n    var top = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y - (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", dragbar_width)\n            .attr(\"id\", \"dragtop\")\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_top);\n\n    var bottom = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y + self.height - (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragbottom\")\n            .attr(\"height\", dragbar_width)\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_bottom);\n\n    // definitions\n    function stop_propagation() {\n        d3.event.sourceEvent.stopPropagation();\n    }\n    function transform_string(x, y, current_transform) {\n        var tr = utils.d3_transform_catch(current_transform),\n            translate = tr.translate;\n        if (x!==null) translate[0] = x;\n        if (y!==null) translate[1] = y;\n        return 'translate('+translate+')';\n    }\n    function ldragresize(d) {\n        var oldx = d.x;\n        d.x = Math.min(d.x + self.width - (dragbar_width / 2), d3.event.x);\n        self.x = d.x;\n        self.width = self.width + (oldx - d.x);\n        left.attr(\"transform\", function(d) {\n            return transform_string(d.x - (dragbar_width / 2), null, left.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, mouse_node.attr('transform'));\n        }).attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, rect.attr('transform'));\n        }).attr(\"width\", self.width);\n        top.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, top.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, bottom.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function rdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragx = Math.max(d.x + (dragbar_width/2), d.x + self.width + d3.event.dx);\n        //recalculate width\n        self.width = dragx - d.x;\n        //move the right drag handle\n        right.attr(\"transform\", function(d) {\n            return transform_string(dragx - (dragbar_width/2), null, right.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"width\", self.width);\n        top.attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function tdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var oldy = d.y;\n        d.y = Math.min(d.y + self.height - (dragbar_width / 2), d3.event.y);\n        self.y = d.y;\n        self.height = self.height + (oldy - d.y);\n        top.attr(\"transform\", function(d) {\n            return transform_string(null, d.y - (dragbar_width / 2), top.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, mouse_node.attr('transform'));\n        }).attr(\"width\", self.height*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, rect.attr('transform'));\n        }).attr(\"height\", self.height);\n        left.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), left.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n        right.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), right.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function bdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragy = Math.max(d.y + (dragbar_width/2), d.y + self.height + d3.event.dy);\n        //recalculate width\n        self.height = dragy - d.y;\n        //move the right drag handle\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(null, dragy - (dragbar_width/2), bottom.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"height\", self.height*mouse_node_mult);\n        rect.attr(\"height\", self.height);\n        left.attr(\"height\", self.height - dragbar_width);\n        right.attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n}\n\nfunction size_and_location() {\n    return { x: this.x,\n             y: this.y,\n             width: this.width,\n             height: this.height };\n}\n","/** CobraModel\n *\n */\n\nvar utils = require('./utils')\nvar data_styles = require('./data_styles')\n\nvar CobraModel = utils.make_class()\n// class methods\nCobraModel.from_cobra_json = from_cobra_json\nCobraModel.build_reaction_string = build_reaction_string\n// instance methods\nCobraModel.prototype = { init: init,\n                         apply_reaction_data: apply_reaction_data,\n                         apply_metabolite_data: apply_metabolite_data,\n                         apply_gene_data: apply_gene_data,\n                       }\nmodule.exports = CobraModel\n\n// class methods\nfunction build_reaction_string(stoichiometries, is_reversible) {\n    /** Return a reaction string for the given stoichiometries.\n\n     Adapted from cobra.core.Reaction.build_reaction_string().\n\n     Arguments\n     ---------\n\n     stoichiometries: An object with metabolites as keys and\n     stoichiometries as values.\n\n     is_reversible: Boolean. Whether the reaction is reversible.\n\n     */\n\n    var format = function(number) {\n        if (number == 1)\n            return \"\"\n        return String(number) + \" \"\n    }\n    var reactant_dict = {},\n        product_dict = {},\n        reactant_bits = [],\n        product_bits = []\n    for (var the_metabolite in stoichiometries) {\n        var coefficient = stoichiometries[the_metabolite]\n        if (coefficient > 0)\n            product_bits.push(format(coefficient) + the_metabolite)\n        else\n            reactant_bits.push(format(Math.abs(coefficient)) + the_metabolite)\n    }\n    var reaction_string = reactant_bits.join(' + ')\n    if (is_reversible) {\n        reaction_string += ' ↔ '\n    } else {\n        reaction_string += ' → '\n    }\n    reaction_string += product_bits.join(' + ')\n    return reaction_string\n}\n\nfunction from_cobra_json(model_data) {\n    /** Use a JSON Cobra model exported by COBRApy to make a new CobraModel\n     object.\n\n     The COBRA \"id\" becomes a \"bigg_id\", and \"upper_bound\" and \"lower_bound\"\n     bounds become \"reversibility\".\n\n     Fills out a \"genes\" list.\n\n     */\n    // reactions and metabolites\n    if (!(model_data.reactions && model_data.metabolites))\n        throw new Error('Bad model data.')\n\n    // make a gene dictionary\n    var genes = {}\n    for (var i = 0, l = model_data.genes.length; i < l; i++) {\n        var r = model_data.genes[i],\n            the_id = r.id\n        genes[the_id] = r\n    }\n\n    var model = new CobraModel()\n\n    model.reactions = {}\n    for (var i = 0, l = model_data.reactions.length; i<l; i++) {\n        var r = model_data.reactions[i],\n            the_id = r.id,\n            reaction = utils.clone(r)\n        delete reaction.id\n        reaction.bigg_id = the_id\n        // add the appropriate genes\n        reaction.genes = []\n\n        // set reversibility\n        reaction.reversibility = (reaction.lower_bound < 0 && reaction.upper_bound > 0)\n        if (reaction.upper_bound <= 0 && reaction.lower_bound < 0) {\n            // reverse stoichiometries\n            for (var met_id in reaction.metabolites) {\n                reaction.metabolites[met_id] = -reaction.metabolites[met_id]\n            }\n        }\n        delete reaction.lower_bound\n        delete reaction.upper_bound\n\n        if ('gene_reaction_rule' in reaction) {\n            var gene_ids = data_styles.genes_for_gene_reaction_rule(reaction.gene_reaction_rule)\n            gene_ids.forEach(function(gene_id) {\n                if (gene_id in genes) {\n                    var gene = utils.clone(genes[gene_id])\n                    // rename id to bigg_id\n                    gene.bigg_id = gene.id\n                    delete gene.id\n                    reaction.genes.push(gene)\n                } else {\n                    console.warn('Could not find gene for gene_id ' + gene_id)\n                }\n            })\n        }\n        model.reactions[the_id] = reaction\n    }\n    model.metabolites = {}\n    for (var i=0, l=model_data.metabolites.length; i<l; i++) {\n        var r = model_data.metabolites[i],\n            the_id = r.id,\n            met = utils.clone(r)\n        delete met.id\n        met.bigg_id = the_id\n        model.metabolites[the_id] = met\n    }\n    return model\n}\n\n// instance methods\nfunction init() {\n  this.reactions = {}\n  this.metabolites = {}\n}\n\nfunction apply_reaction_data(reaction_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_reaction_data overrides apply_gene_data.\n\n     */\n    data_styles.apply_reaction_data_to_reactions(this.reactions, reaction_data,\n                                                 styles, compare_style)\n}\n\nfunction apply_metabolite_data(metabolite_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     */\n    data_styles.apply_metabolite_data_to_nodes(this.metabolites, metabolite_data,\n                                               styles, compare_style)\n}\n\n/**\n * Apply data to model. This is only used to display options in\n * BuildInput. Overrides apply_reaction_data.\n */\nfunction apply_gene_data (gene_data_obj, styles, identifiers_on_map,\n                         compare_style, and_method_in_gene_reaction_rule) {\n    data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                             styles, identifiers_on_map,\n                                             compare_style,\n                                             and_method_in_gene_reaction_rule)\n}\n","/** DataMenu */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = function(options) {\n    var o = utils.set_options(options, {\n        selection: null,\n        getdatafiles: null,\n        datafiles: null,\n        update_callback: null,\n        target: null});\n\n    if (o.selection===null)\n        throw new Error('No selection provided for DataMenu');\n\n    // setup dropdown menu\n    // Append menu if it doesn't exist\n    var menu = o.selection.select('.data-menu');\n    if (menu.empty()) {\n        menu = o.selection.append('div')\n            .attr('class','data-menu');\n    }\n    var select_sel = menu.append('form')\n            .append('select').attr('class','dropdown-menu');\n\n    if (o.getdatafiles) {\n        if (o.datafiles) {\n            console.warn('DataMenu: getdatafiles option overrides datafiles');\n        }\n        d3.json(o.getdatafiles, function(error, d) {\n            // returns json object:  { data: [file0, file1, ...] }\n            if (error) {\n                return console.warn(error);\n            } else {\n                load_with_files(o.target, d.data, select_sel, o.update_callback, o.selection);\n            }\n            return null;\n        });\n    } else if (o.datafiles) {\n        load_with_files(o.target, o.datafiles, select_sel, o.update_callback, o.selection);\n    } else {\n        console.warn('DataMenu: No datafiles given');\n    }\n\n    return { update: update };\n\n    // definitions\n    function load_with_files(t, files, select_sel, update_callback, selection) {\n\n        //when it changes\n        select_sel.node().addEventListener(\"change\", function() {\n            load_datafile(t, this.value, selection, update_callback);\n        }, false);\n\n        var file = files[0];\n\n        update(files, select_sel);\n        load_datafile(t, file, selection, update_callback);\n    };\n    function load_datafile(t, this_file, selection, callback) {\n        utils.load_the_file(t, this_file, function(error, data) {\n            if (error) {\n                return console.warn(error);\n                selection.append('error loading');\n                o.data = null;\n            } else {\n                o.data = data;\n                if (callback) {\n                    callback(data);\n                }\n            }\n        });\n    };\n\n    function update(list, select_sel) {\n        // update select element with d3 selection /select_sel/ to have options\n        // given by /list/\n        // TODO remove paths from file list\n        select_sel.selectAll(\".menu-option\")\n            .data(list)\n            .enter()\n            .append('option')\n            .attr('value', function (d) { return d; } )\n            .text(function (d) { return d; } );\n        // TODO set value to default_filename_index\n        select_sel.node().focus();\n    };\n\n    function get_data() {\n        return o.data;\n    };\n};\n","/** DirectionArrow. A constructor for an arrow that can be rotated and dragged,\n and supplies its direction. */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar DirectionArrow = utils.make_class();\nDirectionArrow.prototype = {\n    init: init,\n    set_location: set_location,\n    set_rotation: set_rotation,\n    displace_rotation: displace_rotation,\n    get_rotation: get_rotation,\n    toggle: toggle,\n    show: show,\n    hide: hide,\n    right: right,\n    left: left,\n    up: up,\n    down: down,\n    _setup_drag: _setup_drag\n};\nmodule.exports = DirectionArrow;\n\n\n// definitions\nfunction init(sel) {\n    this.arrow_container = sel.append('g')\n        .attr('id', 'direction-arrow-container')\n        .attr('transform', 'translate(0,0)rotate(0)');\n    this.arrow = this.arrow_container.append('path')\n        .classed('direction-arrow', true)\n        .attr('d', path_for_arrow())\n        .style('visibility', 'hidden')\n        .attr('transform', 'translate(30,0)scale(2.5)');\n\n    this.sel = sel;\n    this.center = { x: 0, y: 0 };\n\n    this._setup_drag();\n    this.dragging = false;\n\n    this.is_visible = false;\n    this.show();\n\n    // definitions\n    function path_for_arrow() {\n        return \"M0 -5 L0 5 L20 5 L20 10 L30 0 L20 -10 L20 -5 Z\";\n    }\n}\nfunction set_location(coords) {\n    /** Move the arrow to coords.\n     */\n    this.center = coords;\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+coords.x+','+coords.y+')rotate('+transform.rotate+')');\n}\nfunction set_rotation(rotation) {\n    /** Rotate the arrow to rotation.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')rotate('+rotation+')');\n}\nfunction displace_rotation(d_rotation) {\n    /** Displace the arrow rotation by a set amount.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')'+\n                              'rotate('+(transform.rotate+d_rotation)+')');\n}\nfunction get_rotation() {\n    /** Returns the arrow rotation.\n     */\n    return utils.d3_transform_catch(this.arrow_container.attr('transform')).rotate;\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_visible = !this.is_visible;\n    else this.is_visible = on_off;\n    this.arrow.style('visibility', this.is_visible ? 'visible' : 'hidden');\n}\nfunction show() {\n    this.toggle(true);\n}\nfunction hide() {\n    this.toggle(false);\n}\nfunction right() {\n    this.set_rotation(0);\n}\nfunction down() {\n    this.set_rotation(90);\n}\nfunction left() {\n    this.set_rotation(180);\n}\nfunction up() {\n    this.set_rotation(270);\n}\n\nfunction _setup_drag() {\n    var b = d3.behavior.drag()\n            .on(\"dragstart\", function(d) {\n                // silence other listeners\n                d3.event.sourceEvent.stopPropagation();\n                this.dragging = true;\n            }.bind(this))\n            .on(\"drag.direction_arrow\", function(d) {\n                var displacement = { x: d3.event.dx,\n                                     y: d3.event.dy },\n                    location = { x: d3.mouse(this.sel.node())[0],\n                                 y: d3.mouse(this.sel.node())[1] },\n                    d_angle = utils.angle_for_event(displacement,\n                                                    location,\n                                                    this.center);\n                this.displace_rotation(utils.to_degrees(d_angle));\n            }.bind(this))\n            .on(\"dragend\", function(d) {\n                setTimeout(function() {\n                    this.dragging = false;\n                }.bind(this), 200);\n            }.bind(this));\n    this.arrow_container.call(b);\n}\n","/** Draw. Manages creating, updating, and removing objects during d3 data binding.\n\n Arguments\n ---------\n\n behavior: An escher.Behavior object.\n\n settings: An escher.Settings object.\n\n Callbacks\n ---------\n\n draw.callback_manager.run('create_membrane', draw, enter_selection);\n draw.callback_manager.run('update_membrane', draw, update_selection);\n draw.callback_manager.run('create_reaction', draw, enter_selection);\n draw.callback_manager.run('update_reaction', draw, update_selection);\n draw.callback_manager.run('create_reaction_label', draw, enter_selection);\n draw.callback_manager.run('update_reaction_label', draw, update_selection);\n draw.callback_manager.run('create_segment', draw, enter_selection);\n draw.callback_manager.run('update_segment', draw, update_selection);\n draw.callback_manager.run('create_bezier', draw, enter_selection);\n draw.callback_manager.run('update_bezier', draw, update_selection);\n draw.callback_manager.run('create_node', draw, enter_selection);\n draw.callback_manager.run('update_node', draw, update_selection);\n draw.callback_manager.run('create_text_label', draw, enter_selection);\n draw.callback_manager.run('update_text_label', draw, update_selection);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Draw = utils.make_class();\n// instance methods\nDraw.prototype = {\n    init: init,\n    create_reaction: create_reaction,\n    update_reaction: update_reaction,\n    create_bezier: create_bezier,\n    update_bezier: update_bezier,\n    create_node: create_node,\n    update_node: update_node,\n    create_text_label: create_text_label,\n    update_text_label: update_text_label,\n    create_membrane: create_membrane,\n    update_membrane: update_membrane,\n    create_reaction_label: create_reaction_label,\n    update_reaction_label: update_reaction_label,\n    create_segment: create_segment,\n    update_segment: update_segment\n};\nmodule.exports = Draw;\n\n// definitions\nfunction init(behavior, settings) {\n    this.behavior = behavior;\n    this.settings = settings;\n    this.callback_manager = new CallbackManager();\n}\n\nfunction create_membrane(enter_selection) {\n    enter_selection.append('rect')\n        .attr('class', 'membrane');\n    this.callback_manager.run('create_membrane', this, enter_selection);\n}\n\nfunction update_membrane(update_selection) {\n    update_selection\n        .attr('width', function(d){ return d.width; })\n        .attr('height', function(d){ return d.height; })\n        .attr('transform', function(d){return 'translate('+d.x+','+d.y+')';})\n        .style('stroke-width', function(d) { return 10; })\n        .attr('rx', function(d){ return 20; })\n        .attr('ry', function(d){ return 20; });\n\n    this.callback_manager.run('update_membrane', this, update_selection);\n}\n\nfunction create_reaction(enter_selection) {\n    // attributes for new reaction group\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'r'+d.reaction_id; })\n        .attr('class', 'reaction')\n        .call(this.create_reaction_label.bind(this));\n\n    this.callback_manager.run('create_reaction', this, enter_selection);\n    return;\n}\n\nfunction update_reaction(update_selection, scale, cobra_model, drawn_nodes,\n                         defs, has_data_on_reactions) {\n    /** Run on the update selection for reactions.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     cobra_model: A CobraModel object.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     defs: The defs object generated by utils.setup_defs() (e.g. Map.defs).\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    // update reaction label\n    update_selection.select('.reaction-label-group')\n        .call(function(sel) {\n            return this.update_reaction_label(sel, has_data_on_reactions);\n        }.bind(this));\n\n    // draw segments\n    utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                               this.create_segment.bind(this),\n                               function(sel) {\n                                   return this.update_segment(sel, scale, cobra_model,\n                                                              drawn_nodes, defs,\n                                                              has_data_on_reactions);\n                               }.bind(this),\n                               function(sel) {\n                                   sel.remove();\n                               });\n\n    // run the callback\n    this.callback_manager.run('update_reaction', this, update_selection);\n}\n\nfunction create_reaction_label(enter_selection, tool) {\n  /** Draw reaction label for selection.\n\n   */\n\n  var group = enter_selection.append('g')\n        .attr('class', 'reaction-label-group')\n  group.append('text')\n    .attr('class', 'reaction-label label')\n  group.append('g')\n    .attr('class', 'all-genes-label-group')\n\n  this.callback_manager.run('create_reaction_label', this, enter_selection);\n}\n\n/**\n * Run on the update selection for reaction labels.\n * @param {D3 Selection} update_selection - The D3.js update selection.\n * @param {Boolean} has_data_on_reactions - Whether data needs to be drawn.\n */\nfunction update_reaction_label (update_selection, has_data_on_reactions) {\n  var decimal_format = d3.format('.4g')\n  var identifiers_on_map = this.settings.get_option('identifiers_on_map')\n  var reaction_data_styles = this.settings.get_option('reaction_styles')\n  var show_gene_reaction_rules = this.settings.get_option('show_gene_reaction_rules')\n  var hide_all_labels = this.settings.get_option('hide_all_labels')\n  var gene_font_size = this.settings.get_option('gene_font_size')\n  var label_mousedown_fn = this.behavior.label_mousedown\n  var label_mouseover_fn = this.behavior.label_mouseover\n  var label_mouseout_fn = this.behavior.label_mouseout\n\n  // label location\n  update_selection\n    .attr('transform', function(d) {\n      return 'translate(' + d.label_x + ',' + d.label_y + ')'\n    })\n    .call(this.behavior.turn_off_drag)\n    .call(this.behavior.reaction_label_drag)\n\n  // update label visibility\n  var label = update_selection.select('.reaction-label')\n    .attr('visibility', hide_all_labels ? 'hidden' : 'visible')\n  if (!hide_all_labels) {\n    label\n      .text(function(d) {\n        var t = d[identifiers_on_map];\n        if (has_data_on_reactions && reaction_data_styles.indexOf('text') != -1)\n          t += ' ' + d.data_string\n        return t\n      })\n      .on('mousedown', label_mousedown_fn)\n      .on('mouseover', function (d) {\n        label_mouseover_fn('reaction_label', d)\n      })\n      .on('mouseout', label_mouseout_fn)\n  }\n\n  var add_gene_height = function (y, i) {\n    return y + (gene_font_size * 1.5 * (i + 1))\n  }\n\n  // gene label\n  var all_genes_g = update_selection.select('.all-genes-label-group')\n      .selectAll('.gene-label-group')\n      .data(function (d) {\n        var show_gene_string = ('gene_string' in d &&\n                                d.gene_string !== null &&\n                                show_gene_reaction_rules &&\n                                (!hide_all_labels) &&\n                                reaction_data_styles.indexOf('text') !== -1)\n        var show_gene_reaction_rule = ('gene_reaction_rule' in d &&\n                                       d.gene_reaction_rule !== null &&\n                                       show_gene_reaction_rules &&\n                                       (!hide_all_labels) )\n        if (show_gene_string) {\n          // TODO do we ever use gene_string?\n          console.warn('Showing gene_string. See TODO in source.')\n          return d.gene_string\n        } else if (show_gene_reaction_rule) {\n          // make the gene string with no data\n          var sd = data_styles.gene_string_for_data(d.gene_reaction_rule, null,\n                                                    d.genes, null,\n                                                    identifiers_on_map, null)\n          // add coords for tooltip\n          sd.forEach(function (td, i) {\n            td.label_x = d.label_x\n            td.label_y = add_gene_height(d.label_y, i)\n          })\n          return sd\n        } else {\n          return []\n        }\n      })\n  // enter\n  var gene_g = all_genes_g.enter()\n    .append('g')\n    .attr('class', 'gene-label-group')\n  gene_g.append('text')\n    .attr('class', 'gene-label')\n    .style('font-size', gene_font_size + 'px')\n    .on('mousedown', label_mousedown_fn)\n    .on('mouseover', function (d) {\n      label_mouseover_fn('gene_label', d)\n    })\n    .on('mouseout', label_mouseout_fn)\n  // update\n  all_genes_g.attr('transform', function (d, i) {\n    return 'translate(0, ' + add_gene_height(0, i) + ')'\n  })\n  // update text\n  all_genes_g.select('text').text(function (d) {\n    return d['text']\n  })\n  // exit\n  all_genes_g.exit()\n    .remove()\n\n  this.callback_manager.run('update_reaction_label', this, update_selection)\n}\n\nfunction create_segment(enter_selection) {\n    // create segments\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'segment-group')\n            .attr('id', function(d) { return 's'+d.segment_id; });\n\n    // create reaction arrow\n    g.append('path')\n        .attr('class', 'segment');\n\n    g.append('g')\n        .attr('class', 'arrowheads');\n\n    g.append('g')\n        .attr('class', 'stoichiometry-labels');\n\n    this.callback_manager.run('create_segment', this, enter_selection);\n}\n\nfunction update_segment(update_selection, scale, cobra_model,\n                        drawn_nodes, defs, has_data_on_reactions) {\n    var reaction_data_styles = this.settings.get_option('reaction_styles'),\n        should_size = (has_data_on_reactions && reaction_data_styles.indexOf('size') != -1),\n        should_color = (has_data_on_reactions && reaction_data_styles.indexOf('color') != -1),\n        no_data_size = this.settings.get_option('reaction_no_data_size'),\n        no_data_color = this.settings.get_option('reaction_no_data_color');\n\n    // update segment attributes\n    var highlight_missing  = this.settings.get_option('highlight_missing'),\n        hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        get_arrow_size = function(data, should_size) {\n            var width = 20,\n                height = 13;\n            if (should_size) {\n                height = (data === null ? no_data_size : scale.reaction_size(data));\n                // check for nan\n                if (isNaN(height))\n                    height = no_data_size;\n                width = height * 2;\n            }\n            return { width: width, height: height };\n        },\n        get_disp = function(arrow_size, reversibility, coefficient, node_is_primary) {\n            var arrow_height = ((reversibility || coefficient > 0) ?\n                                arrow_size.height :\n                                0),\n                r = node_is_primary ? primary_r : secondary_r;\n            return r + arrow_height + 10;\n        };\n    // update arrows\n    update_selection\n        .selectAll('.segment')\n        .datum(function() {\n            return this.parentNode.__data__;\n        })\n        .style('visibility', function(d) {\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        })\n        .attr('d', function(d) {\n            if (d.from_node_id === null || d.to_node_id === null)\n                return null;\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id],\n                b1 = d.b1,\n                b2 = d.b2;\n            // if metabolite, then displace the arrow\n            if (start['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.from_node_coefficient,\n                                    start.node_is_primary);\n                var direction = (b1 === null) ? end : b1;\n                start = displaced_coords(disp, start, direction, 'start');\n            }\n            if (end['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.to_node_coefficient,\n                                    end.node_is_primary);\n                var direction = (b2 === null) ? start : b2;\n                end = displaced_coords(disp, direction, end, 'end');\n            }\n            var curve = ('M' + start.x + ',' + start.y + ' ');\n            if (b1 !== null && b2 !== null) {\n                curve += ('C' + b1.x + ',' + b1.y + ' ' +\n                          b2.x + ',' + b2.y + ' ');\n            }\n            curve += (end.x + ',' + end.y);\n            return curve;\n        })\n        .style('stroke', function(d) {\n            var reaction_id = this.parentNode.parentNode.__data__.bigg_id,\n                show_missing = (highlight_missing &&\n                                cobra_model !== null &&\n                                !(reaction_id in cobra_model.reactions));\n            if (show_missing) {\n                return 'red';\n            }\n            if (should_color) {\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            return null;\n        })\n        .style('stroke-width', function(d) {\n            if (should_size) {\n                var f = d.data;\n                return f === null ? no_data_size : scale.reaction_size(f);\n            } else {\n                return null;\n            }\n        });\n\n    // new arrowheads\n    var arrowheads = update_selection.select('.arrowheads')\n            .selectAll('.arrowhead')\n            .data(function (d) {\n                var arrowheads = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return arrowheads;\n\n                if (start.node_type == 'metabolite' && (d.reversibility || d.from_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.from_node_coefficient,\n                                        start.node_is_primary),\n                        direction = (b1 === null) ? end : b1,\n                        rotation = utils.to_degrees(utils.get_angle([start, direction])) + 90,\n                        loc = displaced_coords(disp, start, direction, 'start');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.from_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                if (end.node_type == 'metabolite' && (d.reversibility || d.to_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.to_node_coefficient,\n                                        end.node_is_primary),\n                        direction = (b2 === null) ? start : b2,\n                        rotation = utils.to_degrees(utils.get_angle([end, direction])) + 90,\n                        loc = displaced_coords(disp, direction, end, 'end');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.to_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                return arrowheads;\n            });\n    arrowheads.enter().append('path')\n        .classed('arrowhead', true);\n    // update arrowheads\n    arrowheads.attr('d', function(d) {\n        return ('M' + [-d.size.width / 2, 0] +\n                ' L' + [0, d.size.height] +\n                ' L' + [d.size.width / 2, 0] + ' Z');\n    }).attr('transform', function(d) {\n        return 'translate(' + d.x + ',' + d.y + ')rotate(' + d.rotation + ')';\n    }).style('fill', function(d) {\n        if (should_color) {\n            if (d.show_arrowhead_flux) {\n                // show the flux\n                var f = d.data;\n                return f===null ? no_data_color : scale.reaction_color(f);\n            } else {\n                // if the arrowhead is not filled because it is reversed\n                return '#FFFFFF';\n            }\n        }\n        // default fill color\n        return null;\n    }).style('stroke', function(d) {\n        if (should_color) {\n            // show the flux color in the stroke whether or not the fill is present\n            var f = d.data;\n            return f===null ? no_data_color : scale.reaction_color(f);\n        }\n        // default stroke color\n        return null;\n    });\n    // remove\n    arrowheads.exit().remove();\n\n    // new stoichiometry labels\n    var stoichiometry_labels = update_selection.select('.stoichiometry-labels')\n            .selectAll('.stoichiometry-label')\n            .data(function (d) {\n                var labels = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2,\n                    disp_factor = 1.5;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return labels;\n\n                if (start.node_type=='metabolite' && (Math.abs(d.from_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b1 === null) ? end : b1;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, start));\n                    var loc = displaced_coords(disp, start, direction, 'start');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.from_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                if (end.node_type=='metabolite' && (Math.abs(d.to_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b2 === null) ? start : b2;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, end));\n                    var loc = displaced_coords(disp, direction, end, 'end');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.to_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                return labels;\n            });\n\n    // add labels\n    stoichiometry_labels.enter()\n        .append('text')\n        .attr('class', 'stoichiometry-label')\n        .attr('text-anchor', 'middle');\n    // update stoichiometry_labels\n    stoichiometry_labels\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .text(function(d) {\n            return d.coefficient;\n        })\n        .style('fill', function (d) {\n            if (should_color) {\n                // show the flux color\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            // default segment color\n            return null;\n        });\n    // remove\n    stoichiometry_labels.exit().remove();\n\n    this.callback_manager.run('update_segment', this, update_selection);\n}\n\nfunction create_bezier(enter_selection) {\n    var g = enter_selection.append('g')\n            .attr('id', function(d) { return d.bezier_id; })\n            .attr('class', function(d) { return 'bezier'; });\n    g.append('path')\n        .attr('class', 'connect-line');\n    g.append('circle')\n        .attr('class', function(d) { return 'bezier-circle '+d.bezier; })\n        .style('stroke-width', String(1)+'px')\n        .attr('r', String(7)+'px');\n\n    this.callback_manager.run('create_bezier', this, enter_selection);\n}\n\nfunction update_bezier(update_selection, show_beziers, drag_behavior,\n                       mouseover, mouseout, drawn_nodes, drawn_reactions) {\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n\n    if (!show_beziers) {\n        update_selection.attr('visibility', 'hidden');\n        return;\n    } else {\n        update_selection.attr('visibility', 'visible');\n    }\n\n    // hide secondary\n    update_selection\n        .style('visibility', function(d) {\n            var seg_data = drawn_reactions[d.reaction_id].segments[d.segment_id],\n                start = drawn_nodes[seg_data.from_node_id],\n                end = drawn_nodes[seg_data.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        });\n\n    // draw bezier points\n    update_selection.select('.bezier-circle')\n        .call(this.behavior.turn_off_drag)\n        .call(drag_behavior)\n        .on('mouseover', mouseover)\n        .on('mouseout', mouseout)\n        .attr('transform', function(d) {\n            if (d.x==null || d.y==null) return '';\n            return 'translate('+d.x+','+d.y+')';\n        });\n\n    // update bezier line\n    update_selection\n        .select('.connect-line')\n        .attr('d', function(d) {\n            var node,\n                segment_d = drawn_reactions[d.reaction_id].segments[d.segment_id];\n            node = (d.bezier=='b1' ?\n                    drawn_nodes[segment_d.from_node_id] :\n                    drawn_nodes[segment_d.to_node_id]);\n            if (d.x==null || d.y==null || node.x==null || node.y==null)\n                return '';\n            return 'M'+d.x+', '+d.y+' '+(node.x)+','+(node.y);\n        });\n\n    this.callback_manager.run('update_bezier', this, update_selection);\n}\n\nfunction create_node(enter_selection, drawn_nodes, drawn_reactions) {\n    /** Run on enter selection for nodes.\n\n     Arguments\n     ---------\n\n     enter_selection: The D3.js enter selection.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     drawn_reactions: The reactions object (e.g. Map.reactions).\n\n     */\n\n    // create nodes\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'node')\n            .attr('id', function(d) { return 'n'+d.node_id; });\n\n    // create metabolite circle and label\n    g.append('circle')\n        .attr('class', function(d) {\n            var c = 'node-circle';\n            if (d.node_type!==null)\n                c += (' ' + d.node_type + '-circle');\n            return c;\n        });\n    // labels\n    var metabolite_groups = g.filter(function(d) {\n        return d.node_type=='metabolite';\n    });\n    metabolite_groups.append('text')\n        .attr('class', 'node-label label');\n\n    this.callback_manager.run('create_node', this, enter_selection);\n}\n\n/**\n * Run on the update selection for nodes.\n * @param {D3 Selection} update_selection - The D3.js update selection.\n * @param {Scale} scale - A Scale object.\n * @param {Boolean} has_data_on_nodes - Boolean to determine whether data needs to be drawn.\n * @param {Function} mousedown_fn - A function to call on mousedown for a node.\n * @param {Function} click_fn - A function to call on click for a node.\n * @param {Function} mouseover_fn - A function to call on mouseover for a node.\n * @param {Function} mouseout_fn - A function to call on mouseout for a node.\n * @param {D3 Behavior} drag_behavior - The D3.js drag behavior object for the nodes.\n * @param {D3 Behavior} label_drag_behavior - The D3.js drag behavior object for the node labels.\n */\nfunction update_node (update_selection, scale, has_data_on_nodes,\n                      mousedown_fn, click_fn, mouseover_fn, mouseout_fn,\n                      drag_behavior, label_drag_behavior) {\n  // update circle and label location\n  var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites')\n  var primary_r = this.settings.get_option('primary_metabolite_radius')\n  var secondary_r = this.settings.get_option('secondary_metabolite_radius')\n  var marker_r = this.settings.get_option('marker_radius')\n  var hide_all_labels = this.settings.get_option('hide_all_labels')\n  var identifiers_on_map = this.settings.get_option('identifiers_on_map')\n  var metabolite_data_styles = this.settings.get_option('metabolite_styles')\n  var no_data_style = { color: this.settings.get_option('metabolite_no_data_color'),\n                        size: this.settings.get_option('metabolite_no_data_size') }\n  var label_mousedown_fn = this.behavior.label_mousedown\n  var label_mouseover_fn = this.behavior.label_mouseover\n  var label_mouseout_fn = this.behavior.label_mouseout\n\n  var mg = update_selection\n    .select('.node-circle')\n    .attr('transform', function(d) {\n      return 'translate(' + d.x + ',' + d.y + ')'\n    })\n    .style('visibility', function(d) {\n      return hideNode(d, hide_secondary_metabolites) ? 'hidden' : null\n    })\n    .attr('r', function(d) {\n      if (d.node_type === 'metabolite') {\n        var should_scale = (has_data_on_nodes &&\n                            metabolite_data_styles.indexOf('size') !== -1)\n        if (should_scale) {\n          var f = d.data\n          return f === null ? no_data_style['size'] : scale.metabolite_size(f)\n        } else {\n          return d.node_is_primary ? primary_r : secondary_r\n        }\n      }\n      // midmarkers and multimarkers\n      return marker_r\n    })\n    .style('fill', function(d) {\n      if (d.node_type=='metabolite') {\n        var should_color_data = (has_data_on_nodes &&\n                                 metabolite_data_styles.indexOf('color') !== -1)\n        if (should_color_data) {\n          var f = d.data\n          return f === null ? no_data_style['color'] : scale.metabolite_color(f)\n        } else {\n          return null\n        }\n      }\n      // midmarkers and multimarkers\n      return null\n    })\n    .call(this.behavior.turn_off_drag)\n    .call(drag_behavior)\n    .on('mousedown', mousedown_fn)\n    .on('click', click_fn)\n    .on('mouseover', mouseover_fn)\n    .on('mouseout', mouseout_fn)\n\n  // update node label visibility\n  var node_label = update_selection\n      .select('.node-label')\n    .attr('visibility', hide_all_labels ? 'hidden' : 'visible')\n  if (!hide_all_labels) {\n    node_label\n      .style('visibility', function(d) {\n        return hideNode(d, hide_secondary_metabolites) ? 'hidden' : null\n      })\n      .attr('transform', function(d) {\n        return 'translate(' + d.label_x + ',' + d.label_y + ')'\n      })\n      .text(function(d) {\n        var t = d[identifiers_on_map]\n        if (has_data_on_nodes && metabolite_data_styles.indexOf('text') !== -1)\n          t += ' ' + d.data_string\n        return t\n      })\n      .call(this.behavior.turn_off_drag)\n      .call(label_drag_behavior)\n      .on('mousedown', label_mousedown_fn)\n      .on('mouseover', function (d) {\n        label_mouseover_fn('node_label', d)\n      })\n      .on('mouseout', label_mouseout_fn)\n  }\n\n  this.callback_manager.run('update_node', this, update_selection)\n\n  function hideNode (d, hide_secondary_metabolites) {\n    return (d.node_type === 'metabolite' &&\n            hide_secondary_metabolites &&\n            !d.node_is_primary)\n  }\n}\n\nfunction create_text_label(enter_selection) {\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'l'+d.text_label_id; })\n        .attr('class', 'text-label')\n        .append('text')\n        .attr('class', 'label');\n\n    this.callback_manager.run('create_text_label', this, enter_selection);\n}\n\nfunction update_text_label (update_selection) {\n  var mousedown_fn = this.behavior.text_label_mousedown\n  var click_fn = this.behavior.text_label_click\n  var drag_behavior = this.behavior.selectable_drag\n  var turn_off_drag = this.behavior.turn_off_drag\n\n  update_selection\n    .select('.label')\n    .text(function (d) { return d.text })\n    .attr('transform', function (d) {\n      return 'translate(' + d.x + ',' + d.y + ')'\n    })\n    .on('mousedown', mousedown_fn)\n    .on('click', click_fn)\n    .call(turn_off_drag)\n    .call(drag_behavior)\n\n  this.callback_manager.run('update_text_label', this, update_selection)\n}\n\nfunction displaced_coords(reaction_arrow_displacement, start, end, displace) {\n    utils.check_undefined(arguments, ['reaction_arrow_displacement', 'start', 'end', 'displace']);\n\n    var length = reaction_arrow_displacement,\n        hyp = utils.distance(start, end),\n        new_x, new_y;\n    if (!length || !hyp) console.error('Bad value');\n    if (displace=='start') {\n        new_x = start.x + length * (end.x - start.x) / hyp,\n        new_y = start.y + length * (end.y - start.y) / hyp;\n    } else if (displace=='end') {\n        new_x = end.x - length * (end.x - start.x) / hyp,\n        new_y = end.y - length * (end.y - start.y) / hyp;\n    } else { console.error('bad displace value: ' + displace); }\n    return {x: new_x, y: new_y};\n}\n","/** KeyManager\n\n Manage key listeners and events.\n\n Arguments\n ---------\n\n assigned_keys (default: {}): An object defining keys to bind.\n\n input_list (default: []): A list of inputs that will override keyboard\n shortcuts when in focus.\n\n selection (default: global): A node to bind the events to.\n\n ctrl_equals_cmd (default: false): If true, then control and command have the\n same effect.\n\n */\n\n\nvar utils = require('./utils');\nvar Mousetrap = require('mousetrap');\nvar _ = require('underscore');\n\n\nvar KeyManager = utils.make_class();\n// instance methods\nKeyManager.prototype = {\n    init: init,\n    update: update,\n    toggle: toggle,\n    add_escape_listener: add_escape_listener,\n    add_enter_listener: add_enter_listener,\n    add_key_listener: add_key_listener\n};\nmodule.exports = KeyManager;\n\n\n// instance methods\nfunction init(assigned_keys, input_list, selection, ctrl_equals_cmd) {\n    // default Arguments\n    this.assigned_keys = assigned_keys || {};\n    this.input_list = input_list || [];\n    this.mousetrap = selection ? new Mousetrap(selection) : new Mousetrap;\n    this.ctrl_equals_cmd = (!_.isBoolean(ctrl_equals_cmd)) ? false : ctrl_equals_cmd;\n\n    // Fix mousetrap behavior; by default, it ignore shortcuts when inputs are\n    // in focus.\n    // TODO NOT WORKING https://craig.is/killing/mice\n    // consider swithching to https://github.com/PolicyStat/combokeys\n    this.mousetrap.stopCallback = function() { return false; };\n\n    this.enabled = true;\n    this.update();\n}\n\n\nfunction _add_cmd(key, ctrl_equals_cmd) {\n    /** If ctrl_equals_cmd is true and key has ctrl+ in it, return an array with\n     ctrl+ and meta+ variations.\n\n     */\n    if (!ctrl_equals_cmd) return key;\n    var key_ar = _.isArray(key) ? key : [key];\n    var new_ar = key_ar.reduce(function(c, k) {\n        var n = k.replace('ctrl+', 'meta+');\n        if (n !== k) c.push(n);\n        return c;\n    }, key_ar.slice());\n    return new_ar.length === key_ar.length ? key : new_ar;\n}\n\n/**\n * Updated key bindings if attributes have changed.\n */\nfunction update() {\n    this.mousetrap.reset();\n    if (!this.enabled) return;\n\n    // loop through keys\n    for (var key_id in this.assigned_keys) {\n        var assigned_key = this.assigned_keys[key_id];\n\n        // OK if this is missing\n        if (!assigned_key.key) continue;\n\n        var key_to_bind = _add_cmd(assigned_key.key, this.ctrl_equals_cmd);\n        // remember the input_list\n        assigned_key.input_list = this.input_list;\n        this.mousetrap.bind(key_to_bind, function(e) {\n            // check inputs\n            var input_blocking = false;\n            if (this.ignore_with_input) {\n                for (var i = 0, l = this.input_list.length; i < l; i++) {\n                    if (this.input_list[i].is_visible()) {\n                        input_blocking = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!input_blocking) {\n                if (this.fn) this.fn.call(this.target);\n                else console.warn('No function for key: ' + this.key);\n                e.preventDefault();\n            }\n        }.bind(assigned_key), 'keydown');\n    }\n}\n\n\nfunction toggle(on_off) {\n    /** Turn the key manager on or off.\n\n     */\n    if (_.isUndefined(on_off)) on_off = !this.enabled;\n    this.enabled = on_off;\n    this.update();\n}\n\n\nfunction add_enter_listener(callback, one_time) {\n    /** Call the callback when the enter key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener('enter', callback, one_time);\n}\n\n\nfunction add_escape_listener(callback, one_time) {\n    /** Call the callback when the escape key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener('escape', callback, one_time);\n}\n\n\nfunction add_key_listener(key_name, callback, one_time) {\n    /** Call the callback when the key is pressed, then unregisters the\n     listener. Returns a function that will unbind the event.\n\n     callback: The callback function with no arguments.\n\n     key_name: A key name, or list of key names, as defined by the mousetrap\n     library: https://craig.is/killing/mice\n\n     one_time: If True, then cancel the listener after the first execution.\n\n     */\n\n    if (_.isUndefined(one_time)) one_time = false;\n\n    // unbind function ready to go\n    var unbind = this.mousetrap.unbind.bind(this.mousetrap, key_name);\n\n    this.mousetrap.bind(_add_cmd(key_name, this.ctrl_equals_cmd), function(e) {\n        e.preventDefault();\n        callback();\n        if (one_time) unbind();\n    });\n\n    return unbind;\n}\n","/** Map\n\n Defines the metabolic map data, and manages drawing and building.\n\n Arguments\n ---------\n\n svg: The parent SVG container for the map.\n\n css:\n\n selection: A d3 selection for a node to place the map inside.\n\n selection:\n\n zoom_container:\n\n settings:\n\n cobra_model:\n\n canvas_size_and_loc:\n\n enable_search:\n\n map_name: (Optional, Default: 'new map')\n\n map_id: (Optional, Default: A string of random characters.)\n\n map_description: (Optional, Default: '')\n\n Callbacks\n ---------\n\n map.callback_manager.run('set_status', null, status);\n map.callback_manager.run('toggle_beziers', null, beziers_enabled);\n map.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n map.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n map.callback_manager.run('deselect_nodes');\n map.callback_manager.run('select_text_label');\n map.callback_manager.run('before_svg_export');\n map.callback_manager.run('after_svg_export');\n map.callback_manager.run('before_png_export');\n map.callback_manager.run('after_png_export');\n map.callback_manager.run('before_convert_map');\n map.callback_manager.run('after_convert_map');\n this.callback_manager.run('calc_data_stats__reaction', null, changed);\n this.callback_manager.run('calc_data_stats__metabolite', null, changed);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar Draw = require('./Draw');\nvar Behavior = require('./Behavior');\nvar Scale = require('./Scale');\nvar build = require('./build');\nvar UndoStack = require('./UndoStack');\nvar CallbackManager = require('./CallbackManager');\nvar KeyManager = require('./KeyManager');\nvar Canvas = require('./Canvas');\nvar data_styles = require('./data_styles');\nvar SearchIndex = require('./SearchIndex');\n\nvar bacon = require('baconjs');\nvar _ = require('underscore');\n\n\nvar Map = utils.make_class();\n// class methods\nMap.from_data = from_data;\n// instance methods\nMap.prototype = {\n    // setup\n    init: init,\n    // more setup\n    setup_containers: setup_containers,\n    reset_containers: reset_containers,\n    // appearance\n    set_status: set_status,\n    clear_map: clear_map,\n    // selection\n    select_all: select_all,\n    select_none: select_none,\n    invert_selection: invert_selection,\n    select_selectable: select_selectable,\n    select_metabolite_with_id: select_metabolite_with_id,\n    select_single_node: select_single_node,\n    deselect_nodes: deselect_nodes,\n    select_text_label: select_text_label,\n    deselect_text_labels: deselect_text_labels,\n    // build\n    new_reaction_from_scratch: new_reaction_from_scratch,\n    extend_nodes: extend_nodes,\n    extend_reactions: extend_reactions,\n    new_reaction_for_metabolite: new_reaction_for_metabolite,\n    cycle_primary_node: cycle_primary_node,\n    toggle_selected_node_primary: toggle_selected_node_primary,\n    new_text_label: new_text_label,\n    edit_text_label: edit_text_label,\n    // delete\n    delete_selected: delete_selected,\n    delete_selectable: delete_selectable,\n    delete_node_data: delete_node_data,\n    delete_segment_data: delete_segment_data,\n    delete_reaction_data: delete_reaction_data,\n    delete_text_label_data: delete_text_label_data,\n    // find\n    get_selected_node_ids: get_selected_node_ids,\n    get_selected_nodes: get_selected_nodes,\n    get_selected_text_label_ids: get_selected_text_label_ids,\n    get_selected_text_labels: get_selected_text_labels,\n    segments_and_reactions_for_nodes: segments_and_reactions_for_nodes,\n    // draw\n    draw_everything: draw_everything,\n    // draw reactions\n    draw_all_reactions: draw_all_reactions,\n    draw_these_reactions: draw_these_reactions,\n    clear_deleted_reactions: clear_deleted_reactions,\n    // draw nodes\n    draw_all_nodes: draw_all_nodes,\n    draw_these_nodes: draw_these_nodes,\n    clear_deleted_nodes: clear_deleted_nodes,\n    // draw text_labels\n    draw_all_text_labels: draw_all_text_labels,\n    draw_these_text_labels: draw_these_text_labels,\n    clear_deleted_text_labels: clear_deleted_text_labels,\n    // draw beziers\n    draw_all_beziers: draw_all_beziers,\n    draw_these_beziers: draw_these_beziers,\n    clear_deleted_beziers: clear_deleted_beziers,\n    toggle_beziers: toggle_beziers,\n    hide_beziers: hide_beziers,\n    show_beziers: show_beziers,\n    // data\n    has_cobra_model: has_cobra_model,\n    apply_reaction_data_to_map: apply_reaction_data_to_map,\n    apply_metabolite_data_to_map: apply_metabolite_data_to_map,\n    apply_gene_data_to_map: apply_gene_data_to_map,\n    // data statistics\n    get_data_statistics: get_data_statistics,\n    calc_data_stats: calc_data_stats,\n    // zoom\n    zoom_extent_nodes: zoom_extent_nodes,\n    zoom_extent_canvas: zoom_extent_canvas,\n    _zoom_extent: _zoom_extent,\n    get_size: get_size,\n    zoom_to_reaction: zoom_to_reaction,\n    zoom_to_node: zoom_to_node,\n    zoom_to_text_label: zoom_to_text_label,\n    highlight_reaction: highlight_reaction,\n    highlight_node: highlight_node,\n    highlight_text_label: highlight_text_label,\n    highlight: highlight,\n    // full screen\n    listen_for_full_screen: listen_for_full_screen,\n    unlisten_for_full_screen: unlisten_for_full_screen,\n    full_screen: full_screen,\n    // io\n    save: save,\n    map_for_export: map_for_export,\n    save_svg: save_svg,\n    save_png: save_png,\n    convert_map: convert_map\n};\nmodule.exports = Map;\n\n\n// -------------------------------------------------------------------------\n// setup\n\nfunction init(svg, css, selection, zoom_container, settings,\n              cobra_model, canvas_size_and_loc, enable_search,\n              map_name, map_id, map_description) {\n    if (canvas_size_and_loc === null) {\n        var size = zoom_container.get_size()\n        canvas_size_and_loc = {x: -size.width, y: -size.height,\n                               width: size.width*3, height: size.height*3}\n    }\n\n    if (_.isUndefined(map_name) || map_name === null || map_name == '')\n        map_name = 'new_map'\n    else\n        map_name = String(map_name)\n    if (_.isUndefined(map_id) || map_id === null || map_id == '')\n        map_id = utils.generate_map_id()\n    else\n        map_id = String(map_id)\n    if (_.isUndefined(map_description) || map_description === null)\n        map_description = ''\n    else\n        map_description = String(map_description)\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager()\n\n    // set up the defs\n    this.svg = svg\n    this.defs = utils.setup_defs(svg, css)\n\n    // make the canvas\n    this.canvas = new Canvas(selection, canvas_size_and_loc)\n\n    this.setup_containers(selection)\n    this.sel = selection\n    this.zoom_container = zoom_container\n\n    this.settings = settings\n\n    // set the model AFTER loading the datasets\n    this.cobra_model = cobra_model\n\n    this.largest_ids = { reactions: -1,\n                         nodes: -1,\n                         segments: -1,\n                         text_labels: -1 }\n\n    // make the scales\n    this.scale = new Scale()\n    // initialize stats\n    this.calc_data_stats('reaction')\n    this.calc_data_stats('metabolite')\n    this.scale.connect_to_settings(this.settings, this,\n                                   get_data_statistics.bind(this))\n\n    // make the undo/redo stack\n    this.undo_stack = new UndoStack()\n\n    // make a behavior object\n    this.behavior = new Behavior(this, this.undo_stack)\n\n    // draw manager\n    this.draw = new Draw(this.behavior, this.settings)\n\n    // make a key manager\n    this.key_manager = new KeyManager()\n    this.key_manager.ctrl_equals_cmd = true\n\n    // make the search index\n    this.enable_search = enable_search\n    this.search_index = new SearchIndex()\n\n    // map properties\n    this.map_name = map_name\n    this.map_id = map_id\n    this.map_description = map_description\n\n    // deal with the window\n    var window_translate = {'x': 0, 'y': 0},\n        window_scale = 1\n\n    // hide beziers\n    this.beziers_enabled = false\n\n    // data\n    this.has_data_on_reactions = false\n    this.has_data_on_nodes = false\n\n    this.nodes = {}\n    this.reactions = {}\n    this.beziers = {}\n    this.text_labels = {}\n\n    // update data with null to populate data-specific attributes\n    this.apply_reaction_data_to_map(null)\n    this.apply_metabolite_data_to_map(null)\n    this.apply_gene_data_to_map(null)\n\n    // rotation mode off\n    this.rotation_on = false\n\n    // set up full screen listener\n    this.listen_for_full_screen(function () {\n        setTimeout(function() {\n            this.zoom_extent_canvas()\n        }.bind(this), 50)\n    }.bind(this))\n}\n\n// -------------------------------------------------------------------------\n// Import\n\nfunction from_data(map_data, svg, css, selection, zoom_container, settings,\n                   cobra_model, enable_search) {\n    /** Load a json map and add necessary fields for rendering.\n\n     */\n\n    var canvas = map_data[1].canvas,\n        map_name = map_data[0].map_name,\n        map_id = map_data[0].map_id,\n        map_description = (map_data[0].map_description.replace(/(\\nLast Modified.*)+$/g, '')\n                           + '\\nLast Modified ' + Date(Date.now()).toString()),\n        map = new Map(svg, css, selection, zoom_container, settings,\n                      cobra_model, canvas, enable_search,\n                      map_name, map_id, map_description);\n\n    map.reactions = map_data[1].reactions;\n    map.nodes = map_data[1].nodes;\n    map.text_labels = map_data[1].text_labels;\n\n    for (var n_id in map.nodes) {\n        var node = map.nodes[n_id];\n\n        // clear all the connected segments\n        node.connected_segments = [];\n\n        //  populate the nodes search index.\n        if (enable_search) {\n            if (node.node_type!='metabolite') continue;\n            map.search_index.insert('n'+n_id, { 'name': node.bigg_id,\n                                                'data': { type: 'metabolite',\n                                                          node_id: n_id }});\n            map.search_index.insert('n_name'+n_id, { 'name': node.name,\n                                                     'data': { type: 'metabolite',\n                                                               node_id: n_id }});\n        }\n    }\n\n    // Propagate coefficients and reversibility, build the connected\n    // segments, add bezier points, and populate the reaction search index.\n    for (var r_id in map.reactions) {\n        var reaction = map.reactions[r_id];\n\n        // reaction search index\n        if (enable_search) {\n            map.search_index.insert('r' + r_id,\n                                    { 'name': reaction.bigg_id,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            map.search_index.insert('r_name' + r_id,\n                                    { 'name': reaction.name,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                map.search_index.insert('r' + r_id + '_g' + g_id,\n                                        { 'name': gene.bigg_id,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n                map.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                        { 'name': gene.name,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n            }\n        }\n\n        // keep track of any bad segments\n        var segments_to_delete = [];\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id];\n\n            // propagate reversibility\n            segment.reversibility = reaction.reversibility;\n\n            // if there is an error with to_ or from_ nodes, remove this segment\n            if (!(segment.from_node_id in map.nodes) || !(segment.to_node_id in map.nodes)) {\n                console.warn('Bad node references in segment ' + s_id + '. Deleting segment.');\n                segments_to_delete.push(s_id);\n                continue\n            }\n\n            var from_node = map.nodes[segment.from_node_id],\n                to_node = map.nodes[segment.to_node_id];\n\n            // propagate coefficients\n            reaction.metabolites.forEach(function(met) {\n                if (met.bigg_id==from_node.bigg_id) {\n                    segment.from_node_coefficient = met.coefficient;\n                } else if (met.bigg_id==to_node.bigg_id) {\n                    segment.to_node_coefficient = met.coefficient;\n                }\n            });\n\n            // build connected segments\n            [from_node, to_node].forEach(function(node) {\n                node.connected_segments.push({ segment_id: s_id,\n                                               reaction_id: r_id });\n            });\n\n            // If the metabolite has no bezier points, then add them.\n            var start = map.nodes[segment.from_node_id],\n                end = map.nodes[segment.to_node_id];\n            if (start['node_type']=='metabolite' || end['node_type']=='metabolite') {\n                var midpoint = utils.c_plus_c(start, utils.c_times_scalar(utils.c_minus_c(end, start), 0.5));\n                if (segment.b1 === null) segment.b1 = midpoint;\n                if (segment.b2 === null) segment.b2 = midpoint;\n            }\n\n        }\n        // delete the bad segments\n        segments_to_delete.forEach(function(s_id) {\n            delete reaction.segments[s_id];\n        });\n    }\n\n    // add text_labels to the search index\n    if (enable_search) {\n        for (var label_id in map.text_labels) {\n            var label = map.text_labels[label_id];\n            map.search_index.insert('l'+label_id, { 'name': label.text,\n                                                    'data': { type: 'text_label',\n                                                              text_label_id: label_id }});\n        }\n    }\n\n    // populate the beziers\n    map.beziers = build.new_beziers_for_reactions(map.reactions);\n\n    // get largest ids for adding new reactions, nodes, text labels, and\n    // segments\n    map.largest_ids.reactions = get_largest_id(map.reactions);\n    map.largest_ids.nodes = get_largest_id(map.nodes);\n    map.largest_ids.text_labels = get_largest_id(map.text_labels);\n\n    var largest_segment_id = 0;\n    for (var id in map.reactions) {\n        largest_segment_id = get_largest_id(map.reactions[id].segments,\n                                            largest_segment_id);\n    }\n    map.largest_ids.segments = largest_segment_id;\n\n    // update data with null to populate data-specific attributes\n    map.apply_reaction_data_to_map(null);\n    map.apply_metabolite_data_to_map(null);\n    map.apply_gene_data_to_map(null);\n\n    return map;\n\n    // definitions\n    function get_largest_id(obj, current_largest) {\n        /** Return the largest integer key in obj, or current_largest, whichever is bigger. */\n        if (_.isUndefined(current_largest)) current_largest = 0;\n        if (_.isUndefined(obj)) return current_largest;\n        return Math.max.apply(null, Object.keys(obj).map(function(x) {\n            return parseInt(x);\n        }).concat([current_largest]));\n    }\n}\n\n// ---------------------------------------------------------------------\n// more setup\n\nfunction setup_containers(sel) {\n    sel.append('g')\n        .attr('id', 'reactions');\n    sel.append('g')\n        .attr('id', 'nodes');\n    sel.append('g')\n        .attr('id', 'beziers');\n    sel.append('g')\n        .attr('id', 'text-labels');\n}\nfunction reset_containers() {\n    this.sel.select('#reactions')\n        .selectAll('.reaction')\n        .remove();\n    this.sel.select('#nodes')\n        .selectAll('.node')\n        .remove();\n    this.sel.select('#beziers')\n        .selectAll('.bezier')\n        .remove();\n    this.sel.select('#text-labels')\n        .selectAll('.text-label')\n        .remove();\n}\n\n// -------------------------------------------------------------------------\n// Appearance\n\nfunction set_status(status, time) {\n    /** Set the status of the map, with an optional expiration\n     time. Rendering the status is taken care of by the Builder.\n\n     Arguments\n     ---------\n\n     status: The status string.\n\n     time: An optional time, in ms, after which the status is set to ''.\n\n     */\n\n    this.callback_manager.run('set_status', null, status);\n    // clear any other timers on the status bar\n    clearTimeout(this._status_timer);\n    this._status_timer = null;\n\n    if (time!==undefined) {\n        this._status_timer = setTimeout(function() {\n            this.callback_manager.run('set_status', null, '');\n        }.bind(this), time);\n    }\n}\nfunction clear_map() {\n    this.reactions = {};\n    this.beziers = {};\n    this.nodes = {};\n    this.text_labels = {};\n    this.map_name = 'new_map';\n    this.map_id = utils.generate_map_id();\n    this.map_description = '';\n    // reaction_data onto existing map reactions\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n    this.draw_everything();\n}\nfunction has_cobra_model() {\n    return (this.cobra_model !== null);\n}\nfunction draw_everything() {\n    /** Draw the all reactions, nodes, & text labels.\n\n     */\n    this.draw_all_reactions(true, true); // also draw beziers\n    this.draw_all_nodes(true);\n    this.draw_all_text_labels();\n}\n\nfunction draw_all_reactions(draw_beziers, clear_deleted) {\n    /** Draw all reactions, and clear deleted reactions.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (_.isUndefined(draw_beziers)) draw_beziers = true;\n    if (_.isUndefined(clear_deleted)) clear_deleted = true;\n\n    // Draw all reactions.\n    var reaction_ids = [];\n    for (var reaction_id in this.reactions) {\n        reaction_ids.push(reaction_id);\n    }\n    // If draw_beziers is true, just draw them all, rather than deciding\n    // which ones to draw.\n    this.draw_these_reactions(reaction_ids, false);\n    if (draw_beziers && this.beziers_enabled)\n        this.draw_all_beziers();\n\n    // Clear all deleted reactions.\n    if (clear_deleted)\n        this.clear_deleted_reactions(draw_beziers);\n}\n\nfunction draw_these_reactions(reaction_ids, draw_beziers) {\n    /** Draw specific reactions.\n\n     Does nothing with exit selection. Use clear_deleted_reactions to remove\n     reactions from the DOM.\n\n     Arguments\n     ---------\n\n     reactions_ids: An array of reaction_ids to update.\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     */\n    if (_.isUndefined(draw_beziers)) draw_beziers = true;\n\n    // find reactions for reaction_ids\n    var reaction_subset = utils.object_slice_for_ids_ref(this.reactions,\n                                                         reaction_ids);\n\n    // function to update reactions\n    var update_fn = function(sel) {\n        return this.draw.update_reaction(sel, this.scale, this.cobra_model,\n                                         this.nodes, this.defs,\n                                         this.has_data_on_reactions);\n    }.bind(this);\n\n    // draw the reactions\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', reaction_subset,\n                         'reaction_id', this.draw.create_reaction.bind(this.draw),\n                         update_fn);\n\n    if (draw_beziers) {\n        // particular beziers to draw\n        var bezier_ids = build.bezier_ids_for_reaction_ids(reaction_subset);\n        this.draw_these_beziers(bezier_ids);\n    }\n}\n\nfunction clear_deleted_reactions(draw_beziers) {\n    /** Remove any reactions that are not in *this.reactions*.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also clear deleted\n     bezier control points.\n\n     */\n    if (_.isUndefined(draw_beziers)) draw_beziers = true;\n\n    // remove deleted reactions and segments\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', this.reactions, 'reaction_id',\n                         null,\n                         clear_deleted_segments,\n                         function(sel) { sel.remove(); });\n\n    if (draw_beziers==true)\n        this.clear_deleted_beziers();\n\n    // definitions\n    function clear_deleted_segments(update_selection) {\n        // draw segments\n        utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                                   null,\n                                   null,\n                                   function(sel) { sel.remove(); });\n    };\n}\n\nfunction draw_all_nodes(clear_deleted) {\n    /** Draw all nodes, and clear deleted nodes.\n\n     Arguments\n     ---------\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (clear_deleted === undefined) clear_deleted = true;\n\n    var node_ids = [];\n    for (var node_id in this.nodes) {\n        node_ids.push(node_id);\n    }\n    this.draw_these_nodes(node_ids);\n\n    // clear the deleted nodes\n    if (clear_deleted)\n        this.clear_deleted_nodes();\n}\n\nfunction draw_these_nodes(node_ids) {\n    /** Draw specific nodes.\n\n     Does nothing with exit selection. Use clear_deleted_nodes to remove\n     nodes from the DOM.\n\n     Arguments\n     ---------\n\n     nodes_ids: An array of node_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var node_subset = utils.object_slice_for_ids_ref(this.nodes, node_ids);\n\n    // functions to create and update nodes\n    var create_fn = function(sel) {\n        return this.draw.create_node(sel,\n                                     this.nodes,\n                                     this.reactions);\n    }.bind(this),\n        update_fn = function(sel) {\n            return this.draw.update_node(sel,\n                                         this.scale,\n                                         this.has_data_on_nodes,\n                                         this.behavior.selectable_mousedown,\n                                         this.behavior.selectable_click,\n                                         this.behavior.node_mouseover,\n                                         this.behavior.node_mouseout,\n                                         this.behavior.selectable_drag,\n                                         this.behavior.node_label_drag);\n        }.bind(this);\n\n    // draw the nodes\n    utils.draw_an_object(this.sel, '#nodes', '.node', node_subset, 'node_id',\n                         create_fn, update_fn);\n}\n\nfunction clear_deleted_nodes() {\n    /** Remove any nodes that are not in *this.nodes*.\n\n     */\n    // run remove for exit selection\n    utils.draw_an_object(this.sel, '#nodes', '.node', this.nodes, 'node_id',\n                         null, null, function(sel) { sel.remove(); });\n}\n\nfunction draw_all_text_labels() {\n    // Draw all text_labels.\n    var text_label_ids = [];\n    for (var text_label_id in this.text_labels) {\n        text_label_ids.push(text_label_id);\n    }\n    this.draw_these_text_labels(text_label_ids);\n\n    // Clear all deleted text_labels.\n    this.clear_deleted_text_labels();\n}\n\nfunction draw_these_text_labels(text_label_ids) {\n    /** Draw specific text_labels.\n\n     Does nothing with exit selection. Use clear_deleted_text_labels to remove\n     text_labels from the DOM.\n\n     Arguments\n     ---------\n\n     text_labels_ids: An array of text_label_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var text_label_subset = utils.object_slice_for_ids_ref(this.text_labels, text_label_ids);\n\n    // function to update text_labels\n    var update_fn = function(sel) {\n        return this.draw.update_text_label(sel, this.behavior);;\n    }.bind(this);\n\n    // draw the text_labels\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         text_label_subset, 'text_label_id',\n                         this.draw.create_text_label.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_text_labels() {\n    /** Remove any text_labels that are not in *this.text_labels*.\n\n     */\n    // clear deleted\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         this.text_labels, 'text_label_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction draw_all_beziers() {\n    /** Draw all beziers, and clear deleted reactions.\n\n     */\n    var bezier_ids = [];\n    for (var bezier_id in this.beziers) {\n        bezier_ids.push(bezier_id);\n    }\n    this.draw_these_beziers(bezier_ids);\n\n    // clear delete beziers\n    this.clear_deleted_beziers();\n}\n\nfunction draw_these_beziers(bezier_ids) {\n    /** Draw specific beziers.\n\n     Does nothing with exit selection. Use clear_deleted_beziers to remove\n     beziers from the DOM.\n\n     Arguments\n     ---------\n\n     beziers_ids: An array of bezier_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var bezier_subset = utils.object_slice_for_ids_ref(this.beziers, bezier_ids);\n\n    // function to update beziers\n    var update_fn = function(sel) {\n        return this.draw.update_bezier(sel,\n                                       this.beziers_enabled,\n                                       this.behavior.bezier_drag,\n                                       this.behavior.bezier_mouseover,\n                                       this.behavior.bezier_mouseout,\n                                       this.nodes,\n                                       this.reactions);\n    }.bind(this);\n\n    // draw the beziers\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', bezier_subset,\n                         'bezier_id', this.draw.create_bezier.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_beziers() {\n    /** Remove any beziers that are not in *this.beziers*.\n\n     */\n    // remove deleted\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', this.beziers,\n                         'bezier_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction show_beziers() {\n    this.toggle_beziers(true);\n}\n\nfunction hide_beziers() {\n    this.toggle_beziers(false);\n}\n\nfunction toggle_beziers(on_off) {\n    if (_.isUndefined(on_off)) this.beziers_enabled = !this.beziers_enabled;\n    else this.beziers_enabled = on_off;\n    this.draw_all_beziers();\n    this.callback_manager.run('toggle_beziers', null, this.beziers_enabled);\n}\n\nfunction apply_reaction_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style');\n    var has_data = data_styles.apply_reaction_data_to_reactions(this.reactions, data,\n                                                                styles, compare_style);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\nfunction apply_metabolite_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('metabolite_styles'),\n        compare_style = this.settings.get_option('metabolite_compare_style');\n\n    var has_data = data_styles.apply_metabolite_data_to_nodes(this.nodes, data,\n                                                              styles, compare_style);\n    this.has_data_on_nodes = has_data;\n\n    return this.calc_data_stats('metabolite');\n}\n\nfunction apply_gene_data_to_map(gene_data_obj) {\n    /** Returns True if the scale has changed.\n\n     Arguments\n     ---------\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { rule: 'rule_string', genes: { gene_id: value } } }\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        and_method_in_gene_reaction_rule = this.settings.get_option('and_method_in_gene_reaction_rule');\n\n    var has_data = data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                                            styles, identifiers_on_map,\n                                                            compare_style,\n                                                            and_method_in_gene_reaction_rule);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\n// ------------------------------------------------\n// Data domains\nfunction get_data_statistics() {\n    return this.data_statistics;\n}\n\nfunction calc_data_stats(type) {\n    /** Returns True if the stats have changed.\n\n     Arguments\n     ---------\n\n     type: Either 'metabolite' or 'reaction'\n\n     */\n\n    if (['reaction', 'metabolite'].indexOf(type) == -1)\n        throw new Error('Bad type ' + type);\n\n    // make the data structure\n    if (!('data_statistics' in this)) {\n        this.data_statistics = {};\n        this.data_statistics[type] = {};\n    } else if (!(type in this.data_statistics)) {\n        this.data_statistics[type] = {};\n    }\n\n    var same = true;\n    // default min and max\n    var vals = [];\n    if (type == 'metabolite') {\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            // check number\n            if (node.data !== null)\n                vals.push(node.data);\n        }\n    } else if (type == 'reaction') {\n        for (var reaction_id in this.reactions) {\n            var reaction = this.reactions[reaction_id];\n            // check number\n            if (reaction.data !== null)\n                vals.push(reaction.data);\n        }\n    }\n\n    // calculate these statistics\n    var quartiles = utils.quartiles(vals),\n        funcs = [['min', on_array(Math.min)],\n                 ['max', on_array(Math.max)],\n                 ['mean', utils.mean],\n                 ['Q1', function() { return quartiles[0]; }],\n                 ['median', function() { return quartiles[1]; }],\n                 ['Q3', function() { return quartiles[2]; }]];\n    funcs.forEach(function(ar) {\n        var new_val, name = ar[0];\n        if (vals.length == 0) {\n            new_val = null;\n        } else {\n            var fn = ar[1];\n            new_val = fn(vals);\n        }\n        if (new_val != this.data_statistics[type][name])\n            same = false;\n        this.data_statistics[type][name] = new_val;\n    }.bind(this));\n\n    if (type == 'reaction')\n        this.callback_manager.run('calc_data_stats__reaction', null, !same);\n    else\n        this.callback_manager.run('calc_data_stats__metabolite', null, !same);\n    return !same;\n\n    // definitions\n    function on_array(fn) {\n        return function (array) { return fn.apply(null, array); };\n    }\n}\n\n// ---------------------------------------------------------------------\n// Node interaction\n\nfunction get_coords_for_node(node_id) {\n    var node = this.nodes[node_id],\n        coords = {'x': node.x, 'y': node.y};\n    return coords;\n}\nfunction get_selected_node_ids() {\n    var selected_node_ids = [];\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) { selected_node_ids.push(d.node_id); });\n    return selected_node_ids;\n}\nfunction get_selected_nodes() {\n    var selected_nodes = {},\n        self = this;\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_nodes[d.node_id] = this.nodes[d.node_id];\n        }.bind(this));\n    return selected_nodes;\n}\nfunction get_selected_text_label_ids() {\n    var selected_text_label_ids = [];\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) { selected_text_label_ids.push(d.text_label_id); });\n    return selected_text_label_ids;\n}\nfunction get_selected_text_labels() {\n    var selected_text_labels = {},\n        self = this;\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_text_labels[d.text_label_id] = this.text_labels[d.text_label_id];\n        }.bind(this));\n    return selected_text_labels;\n}\n\nfunction select_all() {\n    /** Select all nodes and text labels.\n\n     */\n    this.sel.selectAll('#nodes,#text-labels')\n        .selectAll('.node,.text-label')\n        .classed('selected', true);\n}\n\nfunction select_none() {\n    /** Deselect all nodes and text labels.\n\n     */\n    this.sel.selectAll('.selected')\n        .classed('selected', false);\n}\n\nfunction invert_selection() {\n    /** Invert selection of nodes and text labels.\n\n     */\n    var selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label');\n    selection.classed('selected', function() {\n        return !d3.select(this).classed('selected');\n    });\n}\n\nfunction select_metabolite_with_id(node_id) {\n    /** Select a metabolite with the given id, and turn off the reaction\n     target.\n\n     */\n    // deselect all text labels\n    this.deselect_text_labels();\n\n    var node_selection = this.sel.select('#nodes').selectAll('.node'),\n        coords,\n        selected_node;\n    node_selection.classed('selected', function(d) {\n        var selected = String(d.node_id) == String(node_id);\n        if (selected) {\n            selected_node = d;\n            coords = { x: d.x, y: d.y };\n        }\n        return selected;\n    });\n    this.sel.selectAll('.start-reaction-target').style('visibility', 'hidden');\n    this.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n}\n\nfunction select_selectable(node, d, shift_key_on) {\n    /** Select a metabolite or text label, and manage the shift key. */\n    shift_key_on = _.isUndefined(shift_key_on) ? false : shift_key_on;\n    var classable_selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label'),\n        classable_node;\n    if (d3.select(node).attr('class').indexOf('text-label') == -1) {\n        // node\n        classable_node = node.parentNode;\n    } else {\n        // text-label\n        classable_node = node;\n    }\n    // toggle selection\n    if (shift_key_on) {\n        // toggle this node\n        d3.select(classable_node)\n            .classed('selected', !d3.select(classable_node).classed('selected'));\n    } else {\n        // unselect all other nodes, and select this one\n        classable_selection.classed('selected', false);\n        d3.select(classable_node).classed('selected', true);\n    }\n    // run the select_metabolite callback\n    var selected_nodes = this.sel.select('#nodes').selectAll('.selected'),\n        node_count = 0,\n        coords,\n        selected_node;\n    selected_nodes.each(function(d) {\n        selected_node = d;\n        coords = { x: d.x, y: d.y };\n        node_count++;\n    });\n    this.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n}\n\nfunction select_single_node() {\n    /** Unselect all but one selected node, and return the node.\n\n     If no nodes are selected, return null.\n\n     */\n    var out = null,\n        self = this,\n        node_selection = this.sel.select('#nodes').selectAll('.selected');\n    node_selection.classed('selected', function(d, i) {\n        if (i==0) {\n            out = d;\n            return true;\n        } else {\n            return false;\n        }\n    });\n    return out;\n}\nfunction deselect_nodes() {\n    var node_selection = this.sel.select('#nodes').selectAll('.node');\n    node_selection.classed('selected', false);\n    this.callback_manager.run('deselect_nodes');\n}\nfunction select_text_label(sel, d) {\n    // deselect all nodes\n    this.deselect_nodes();\n    // find the new selection\n    // Ignore shift key and only allow single selection for now\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', function(p) { return d === p; });\n    var selected_text_labels = this.sel.select('#text-labels').selectAll('.selected'),\n        coords;\n    selected_text_labels.each(function(d) {\n        coords = { x: d.x, y: d.y };\n    });\n    this.callback_manager.run('select_text_label');\n}\n\nfunction deselect_text_labels() {\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', false);\n}\n\n// ---------------------------------------------------------------------\n// Delete\n\nfunction delete_selected() {\n    /** Delete the selected nodes and associated segments and reactions, and selected labels.\n\n     Undoable.\n\n     */\n    var selected_nodes = this.get_selected_nodes(),\n        selected_text_labels = this.get_selected_text_labels();\n    if (Object.keys(selected_nodes).length >= 1 ||\n        Object.keys(selected_text_labels).length >= 1)\n        this.delete_selectable(selected_nodes, selected_text_labels, true);\n}\n\nfunction delete_selectable(selected_nodes, selected_text_labels, should_draw) {\n    /** Delete the nodes and associated segments and reactions. Undoable.\n\n     Arguments\n     ---------\n\n     selected_nodes: An object that is a subset of map.nodes.\n\n     selected_text_labels: An object that is a subset of map.text_labels.\n\n     should_draw: A boolean argument to determine whether to draw the changes to the map.\n\n     */\n\n    var out = this.segments_and_reactions_for_nodes(selected_nodes),\n        segment_objs_w_segments = out.segment_objs_w_segments, // TODO repeated values here\n        reactions = out.reactions;\n\n    // copy nodes to undelete\n    var saved_nodes = utils.clone(selected_nodes),\n        saved_segment_objs_w_segments = utils.clone(segment_objs_w_segments),\n        saved_reactions = utils.clone(reactions),\n        saved_text_labels = utils.clone(selected_text_labels),\n        delete_and_draw = function(nodes, reactions, segment_objs,\n                                   selected_text_labels) {\n            // delete nodes, segments, and reactions with no segments\n            this.delete_node_data(Object.keys(selected_nodes));\n            this.delete_segment_data(segment_objs); // also deletes beziers\n            this.delete_reaction_data(Object.keys(reactions));\n            this.delete_text_label_data(Object.keys(selected_text_labels));\n\n            // apply the reaction and node data\n            var changed_r_scale = false,\n                changed_m_scale = false;\n            if (this.has_data_on_reactions)\n                changed_r_scale = this.calc_data_stats('reaction');\n            if (this.has_data_on_nodes)\n                changed_m_scale = this.calc_data_stats('metabolite');\n\n            // redraw\n            if (should_draw) {\n                if (changed_r_scale)\n                    this.draw_all_reactions(true, true);\n                else\n                    this.clear_deleted_reactions(); // also clears segments and beziers\n                if (changed_m_scale)\n                    this.draw_all_nodes(true);\n                else\n                    this.clear_deleted_nodes();\n                this.clear_deleted_text_labels();\n            }\n        }.bind(this);\n\n    // delete\n    delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                    selected_text_labels);\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // redraw the saved nodes, reactions, and segments\n\n        this.extend_nodes(saved_nodes);\n        this.extend_reactions(saved_reactions);\n        var reaction_ids_to_draw = Object.keys(saved_reactions);\n        for (var segment_id in saved_segment_objs_w_segments) {\n            var segment_obj = saved_segment_objs_w_segments[segment_id];\n\n            var segment = segment_obj.segment;\n            this.reactions[segment_obj.reaction_id]\n                .segments[segment_obj.segment_id] = segment;\n\n            // updated connected nodes\n            [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n                // not necessary for the deleted nodes\n                if (node_id in saved_nodes) return;\n                var node = this.nodes[node_id];\n                node.connected_segments.push({ reaction_id: segment_obj.reaction_id,\n                                               segment_id: segment_obj.segment_id });\n            }.bind(this));\n\n            // extend the beziers\n            var seg_id = segment_obj.segment_id,\n                r_id = segment_obj.reaction_id,\n                seg_o = {};\n            seg_o[seg_id] = segment_obj.segment;\n            utils.extend(this.beziers, build.new_beziers_for_segments(seg_o, r_id));\n\n            if (reaction_ids_to_draw.indexOf(segment_obj.reaction_id)==-1)\n                reaction_ids_to_draw.push(segment_obj.reaction_id);\n        }\n\n        // apply the reaction and node data\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(reaction_ids_to_draw);\n        } else {\n            if (should_draw) this.draw_these_reactions(reaction_ids_to_draw);\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (should_draw) {\n                if (scale_changed) this.draw_all_nodes(false);\n                else this.draw_these_nodes(Object.keys(saved_nodes));\n            }\n        } else {\n            if (should_draw) this.draw_these_nodes(Object.keys(saved_nodes));\n        }\n\n        // redraw the saved text_labels\n        utils.extend(this.text_labels, saved_text_labels);\n        if (should_draw) this.draw_these_text_labels(Object.keys(saved_text_labels));\n        // copy text_labels to re-delete\n        selected_text_labels = utils.clone(saved_text_labels);\n\n        // copy nodes to re-delete\n        selected_nodes = utils.clone(saved_nodes);\n        segment_objs_w_segments = utils.clone(saved_segment_objs_w_segments);\n        reactions = utils.clone(saved_reactions);\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                        selected_text_labels);\n    }.bind(this));\n}\n\nfunction delete_node_data(node_ids) {\n    /** Delete nodes, and remove from search index.\n     */\n    node_ids.forEach(function(node_id) {\n        if (this.enable_search && this.nodes[node_id].node_type=='metabolite') {\n            var found = (this.search_index.remove('n' + node_id)\n                         && this.search_index.remove('n_name' + node_id));\n            if (!found)\n                console.warn('Could not find deleted metabolite in search index');\n        }\n        delete this.nodes[node_id];\n    }.bind(this));\n}\n\nfunction delete_segment_data(segment_objs) {\n    /** Delete segments, update connected_segments in nodes, and delete\n     bezier points.\n\n     segment_objs: Object with values like { reaction_id: '123', segment_id: '456' }\n\n     */\n    for (var segment_id in segment_objs) {\n        var segment_obj = segment_objs[segment_id];\n        var reaction = this.reactions[segment_obj.reaction_id];\n\n        // segment already deleted\n        if (!(segment_obj.segment_id in reaction.segments)) return;\n\n        var segment = reaction.segments[segment_obj.segment_id];\n        // updated connected nodes\n        [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n            if (!(node_id in this.nodes)) return;\n            var node = this.nodes[node_id];\n            node.connected_segments = node.connected_segments.filter(function(so) {\n                return so.segment_id != segment_obj.segment_id;\n            });\n        }.bind(this));\n\n        // remove beziers\n        ['b1', 'b2'].forEach(function(bez) {\n            var bez_id = build.bezier_id_for_segment_id(segment_obj.segment_id, bez);\n            delete this.beziers[bez_id];\n        }.bind(this));\n\n        delete reaction.segments[segment_obj.segment_id];\n    }\n}\nfunction delete_reaction_data(reaction_ids) {\n    /** Delete reactions, segments, and beziers, and remove reaction from\n     search index.\n\n     */\n    reaction_ids.forEach(function(reaction_id) {\n        // remove beziers\n        var reaction = this.reactions[reaction_id];\n        for (var segment_id in reaction.segments) {\n            ['b1', 'b2'].forEach(function(bez) {\n                var bez_id = build.bezier_id_for_segment_id(segment_id, bez);\n                delete this.beziers[bez_id];\n            }.bind(this));\n        }\n        // delete reaction\n        delete this.reactions[reaction_id];\n        // remove from search index\n        var found = (this.search_index.remove('r' + reaction_id)\n                     && this.search_index.remove('r_name' + reaction_id));\n        if (!found)\n            console.warn('Could not find deleted reaction ' +\n                         reaction_id + ' in search index');\n        for (var g_id in reaction.genes) {\n            var found = (this.search_index.remove('r' + reaction_id + '_g' + g_id)\n                         && this.search_index.remove('r' + reaction_id + '_g_name' + g_id));\n            if (!found)\n                console.warn('Could not find deleted gene ' +\n                             g_id + ' in search index');\n        }\n    }.bind(this));\n}\nfunction delete_text_label_data(text_label_ids) {\n    /** delete text labels for an array of ids\n     */\n    text_label_ids.forEach(function(text_label_id) {\n        // delete label\n        delete this.text_labels[text_label_id];\n        // remove from search index\n        var found = this.search_index.remove('l'+text_label_id);\n        if (!found)\n            console.warn('Could not find deleted text label in search index');\n    }.bind(this));\n}\n\n// ---------------------------------------------------------------------\n// Building\n// ---------------------------------------------------------------------\n\n/**\n * Draw a reaction on a blank canvas.\n * @param {String} starting_reaction - bigg_id for a reaction to draw.\n * @param {Coords} coords - coordinates to start drawing\n */\nfunction new_reaction_from_scratch(starting_reaction, coords, direction) {\n    // If there is no cobra model, error\n    if (!this.cobra_model) {\n        console.error('No CobraModel. Cannot build new reaction')\n        return\n    }\n\n    // Set reaction coordinates and angle. Be sure to clone the reaction.\n    var cobra_reaction = utils.clone(this.cobra_model.reactions[starting_reaction])\n\n    // check for empty reactions\n    if (_.size(cobra_reaction.metabolites) === 0)\n        throw Error('No metabolites in reaction ' + cobra_reaction.bigg_id)\n\n    // create the first node\n    var reactant_ids = _.map(cobra_reaction.metabolites,\n                             function (coeff, met_id) { return [ coeff, met_id ] })\n            .filter(function (x) { return x[0] < 0 }) // coeff < 0\n            .map(function(x) { return x[1] }) // metabolite id\n    // get the first reactant or else the first product\n    var metabolite_id = (reactant_ids.length > 0 ?\n                         reactant_ids[0] :\n                         Object.keys(cobra_reaction.metabolites)[0])\n    var metabolite = this.cobra_model.metabolites[metabolite_id]\n    var selected_node_id = String(++this.largest_ids.nodes)\n    var label_d = { x: 30, y: 10 }\n    var selected_node = { connected_segments: [],\n                          x: coords.x,\n                          y: coords.y,\n                          node_is_primary: true,\n                          label_x: coords.x + label_d.x,\n                          label_y: coords.y + label_d.y,\n                          name: metabolite.name,\n                          bigg_id: metabolite_id,\n                          node_type: 'metabolite' }\n    var new_nodes = {}\n    new_nodes[selected_node_id] = selected_node\n\n    // draw\n    extend_and_draw_metabolite.apply(this, [ new_nodes, selected_node_id ])\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes)\n\n    // draw the reaction\n    var out = this.new_reaction_for_metabolite(starting_reaction,\n                                               selected_node_id,\n                                               direction, false),\n        reaction_redo = out.redo,\n        reaction_undo = out.undo\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // first undo the reaction\n        reaction_undo()\n        // get the nodes to delete\n        this.delete_node_data(Object.keys(new_nodes))\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes)\n        // draw\n        this.clear_deleted_nodes()\n        // deselect\n        this.deselect_nodes()\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id])\n        // now redo the reaction\n        reaction_redo()\n    }.bind(this))\n\n    return\n\n    // definitions\n    function extend_and_draw_metabolite(new_nodes, selected_node_id) {\n        this.extend_nodes(new_nodes)\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.apply_metabolite_data_to_nodes(new_nodes)\n            if (scale_changed) this.draw_all_nodes(false)\n            else this.draw_these_nodes([selected_node_id])\n        } else {\n            this.draw_these_nodes([selected_node_id])\n        }\n    }\n}\n\nfunction extend_nodes(new_nodes) {\n    /** Add new nodes to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_type != 'metabolite')\n                continue;\n            this.search_index.insert('n' + node_id,\n                                     { 'name': node.bigg_id,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n            this.search_index.insert('n_name' + node_id,\n                                     { 'name': node.name,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n        }\n    }\n    utils.extend(this.nodes, new_nodes);\n}\nfunction extend_reactions(new_reactions) {\n    /** Add new reactions to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var r_id in new_reactions) {\n            var reaction = new_reactions[r_id];\n            this.search_index.insert('r' + r_id, { 'name': reaction.bigg_id,\n                                                   'data': { type: 'reaction',\n                                                             reaction_id: r_id }});\n            this.search_index.insert('r_name' + r_id, { 'name': reaction.name,\n                                                        'data': { type: 'reaction',\n                                                                  reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                this.search_index.insert('r' + r_id + '_g' + g_id,\n                                         { 'name': gene.bigg_id,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n                this.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                         { 'name': gene.name,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n            }\n        }\n    }\n    utils.extend(this.reactions, new_reactions);\n}\n\n/**\n * Build a new reaction starting with selected_met. Undoable.\n * @param {String} reaction_bigg_id - The BiGG ID of the reaction to draw.\n * @param {String} selected_node_id - The ID of the node to begin drawing with.\n * @param {Number} direction - The direction to draw in.\n * @param {Boolean} [apply_undo_redo=true] - If true, then add to the undo\n * stack. Otherwise, just return the undo and redo functions.\n * @return An object of undo and redo functions:\n *   { undo: undo_function, redo: redo_function }\n */\nfunction new_reaction_for_metabolite(reaction_bigg_id, selected_node_id,\n                                     direction, apply_undo_redo) {\n    // default args\n    if (apply_undo_redo === undefined) apply_undo_redo = true;\n\n    // get the metabolite node\n    var selected_node = this.nodes[selected_node_id];\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = this.cobra_model.reactions[reaction_bigg_id];\n\n    // build the new reaction\n    var out = build.new_reaction(reaction_bigg_id, cobra_reaction,\n                                 this.cobra_model.metabolites,\n                                 selected_node_id,\n                                 utils.clone(selected_node),\n                                 this.largest_ids,\n                                 this.settings.get_option('cofactors'),\n                                 direction),\n        new_nodes = out.new_nodes,\n        new_reactions = out.new_reactions,\n        new_beziers = out.new_beziers;\n\n    // draw\n    extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                          new_beziers, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes),\n        saved_reactions = utils.clone(new_reactions),\n        saved_beziers = utils.clone(new_beziers);\n\n    // add to undo/redo stack\n    var undo_fn = function() {\n        // undo\n        // get the nodes to delete\n        delete new_nodes[selected_node_id];\n        this.delete_node_data(Object.keys(new_nodes));\n        this.delete_reaction_data(Object.keys(new_reactions)); // also deletes beziers\n        select_metabolite_with_id.apply(this, [selected_node_id]);\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        new_reactions = utils.clone(saved_reactions);\n        new_beziers = utils.clone(saved_beziers);\n        // draw\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, true);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.clear_deleted_reactions(true); // also clears segments and beziers\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(true);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.clear_deleted_nodes();\n        }\n    }.bind(this),\n        redo_fn = function () {\n            // redo\n            // clone the nodes and reactions, to redo this action later\n            extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                                  new_beziers, selected_node_id]);\n        }.bind(this);\n\n    if (apply_undo_redo)\n        this.undo_stack.push(undo_fn, redo_fn);\n\n    return { undo: undo_fn,\n             redo: redo_fn };\n\n    // definitions\n    function extend_and_draw_reaction(new_nodes, new_reactions, new_beziers,\n                                      selected_node_id) {\n        this.extend_reactions(new_reactions);\n        utils.extend(this.beziers, new_beziers);\n        // remove the selected node so it can be updated\n        this.delete_node_data([selected_node_id]); // TODO this is a hack. fix\n        this.extend_nodes(new_nodes);\n\n        // apply the reaction and node data to the scales\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.draw_these_reactions(Object.keys(new_reactions));\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.draw_these_nodes(Object.keys(new_nodes));\n        }\n\n        // select new primary metabolite\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_is_primary && node_id!=selected_node_id) {\n                this.select_metabolite_with_id(node_id);\n                var new_coords = { x: node.x, y: node.y };\n                if (this.zoom_container)\n                    this.zoom_container.translate_off_screen(new_coords);\n            }\n        }\n    }\n\n}\nfunction cycle_primary_node() {\n    var selected_nodes = this.get_selected_nodes();\n    // get the first node\n    var node_id = Object.keys(selected_nodes)[0],\n        node = selected_nodes[node_id],\n        reactions = this.reactions,\n        nodes = this.nodes;\n    // make the other reactants or products secondary\n    // 1. Get the connected anchor nodes for the node\n    var connected_anchor_ids = [],\n        reactions_to_draw;\n    nodes[node_id].connected_segments.forEach(function(segment_info) {\n        reactions_to_draw = [segment_info.reaction_id];\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        connected_anchor_ids.push(segment.from_node_id==node_id ?\n                                  segment.to_node_id : segment.from_node_id);\n    });\n    // can only be connected to one anchor\n    if (connected_anchor_ids.length != 1) {\n        console.error('Only connected nodes with a single reaction can be selected');\n        return;\n    }\n    var connected_anchor_id = connected_anchor_ids[0];\n    // 2. find nodes connected to the anchor that are metabolites\n    var related_node_ids = [node_id];\n    var segments = [];\n    nodes[connected_anchor_id].connected_segments.forEach(function(segment_info) { // deterministic order\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        var conn_met_id = segment.from_node_id == connected_anchor_id ? segment.to_node_id : segment.from_node_id,\n            conn_node = nodes[conn_met_id];\n        if (conn_node.node_type == 'metabolite' && conn_met_id != node_id) {\n            related_node_ids.push(String(conn_met_id));\n        }\n    });\n    // 3. make sure they only have 1 reaction connection, and check if\n    // they match the other selected nodes\n    for (var i=0; i<related_node_ids.length; i++) {\n        if (nodes[related_node_ids[i]].connected_segments.length > 1) {\n            console.error('Only connected nodes with a single reaction can be selected');\n            return;\n        }\n    }\n    for (var a_selected_node_id in selected_nodes) {\n        if (a_selected_node_id!=node_id && related_node_ids.indexOf(a_selected_node_id) == -1) {\n            console.warn('Selected nodes are not on the same reaction');\n            return;\n        }\n    }\n    // 4. change the primary node, and change coords, label coords, and beziers\n    var nodes_to_draw = [],\n        last_i = related_node_ids.length - 1,\n        last_node = nodes[related_node_ids[last_i]],\n        last_is_primary = last_node.node_is_primary,\n        last_coords = { x: last_node.x, y: last_node.y,\n                        label_x: last_node.label_x, label_y: last_node.label_y };\n    if (last_node.connected_segments.length > 1)\n        console.warn('Too many connected segments for node ' + last_node.node_id);\n    var last_segment_info = last_node.connected_segments[0], // guaranteed above to have only one\n        last_segment;\n    try {\n        last_segment = reactions[last_segment_info.reaction_id].segments[last_segment_info.segment_id];\n        if (last_segment === undefined) throw new Error('undefined segment');\n    } catch (e) {\n        console.error('Could not find connected segment ' + last_segment_info.segment_id);\n        return;\n    }\n    var last_bezier = { b1: last_segment.b1, b2: last_segment.b2 },\n        primary_node_id;\n    related_node_ids.forEach(function(related_node_id) {\n        var node = nodes[related_node_id],\n            this_is_primary = node.node_is_primary,\n            these_coords = { x: node.x, y: node.y,\n                             label_x: node.label_x, label_y: node.label_y },\n            this_segment_info = node.connected_segments[0],\n            this_segment = reactions[this_segment_info.reaction_id].segments[this_segment_info.segment_id],\n            this_bezier = { b1: this_segment.b1, b2: this_segment.b2 };\n        node.node_is_primary = last_is_primary;\n        node.x = last_coords.x; node.y = last_coords.y;\n        node.label_x = last_coords.label_x; node.label_y = last_coords.label_y;\n        this_segment.b1 = last_bezier.b1; this_segment.b2 = last_bezier.b2;\n        last_is_primary = this_is_primary;\n        last_coords = these_coords;\n        last_bezier = this_bezier;\n        if (node.node_is_primary) primary_node_id = related_node_id;\n        nodes_to_draw.push(related_node_id);\n    });\n    // 5. cycle the connected_segments array so the next time, it cycles differently\n    var old_connected_segments = nodes[connected_anchor_id].connected_segments,\n        last_i = old_connected_segments.length - 1,\n        new_connected_segments = [old_connected_segments[last_i]];\n    old_connected_segments.forEach(function(segment, i) {\n        if (last_i==i) return;\n        new_connected_segments.push(segment);\n    });\n    nodes[connected_anchor_id].connected_segments = new_connected_segments;\n    // 6. draw the nodes\n    this.draw_these_nodes(nodes_to_draw);\n    this.draw_these_reactions(reactions_to_draw);\n    // 7. select the primary node\n    this.select_metabolite_with_id(primary_node_id);\n    return;\n}\n\nfunction toggle_selected_node_primary() {\n    /** Toggle the primary/secondary status of each selected node.\n\n     Undoable.\n\n     */\n    var selected_node_ids = this.get_selected_node_ids(),\n        go = function(ids) {\n            var nodes_to_draw = {},\n                hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n            ids.forEach(function(id) {\n                if (!(id in this.nodes)) {\n                    console.warn('Could not find node: ' + id);\n                    return;\n                }\n                var node = this.nodes[id];\n                if (node.node_type == 'metabolite') {\n                    node.node_is_primary = !node.node_is_primary;\n                    nodes_to_draw[id] = node;\n                }\n            }.bind(this));\n            // draw the nodes\n            this.draw_these_nodes(Object.keys(nodes_to_draw));\n            // draw associated reactions\n            if (hide_secondary_metabolites) {\n                var out = this.segments_and_reactions_for_nodes(nodes_to_draw),\n                    reaction_ids_to_draw_o = {};\n                for (var id in out.segment_objs_w_segments) {\n                    var r_id = out.segment_objs_w_segments[id].reaction_id;\n                    reaction_ids_to_draw_o[r_id] = true;\n                }\n                this.draw_these_reactions(Object.keys(reaction_ids_to_draw_o));\n            }\n        }.bind(this);\n\n    // go\n    go(selected_node_ids);\n\n    // add to the undo stack\n    this.undo_stack.push(function () {\n        go(selected_node_ids);\n    }, function () {\n        go(selected_node_ids);\n    });\n}\n\nfunction segments_and_reactions_for_nodes(nodes) {\n    /** Get segments and reactions that should be deleted with node deletions\n\n     */\n    var segment_objs_w_segments = {},\n        these_reactions = {},\n        segment_ids_for_reactions = {},\n        reactions = this.reactions;\n    // for each node\n    for (var node_id in nodes) {\n        var node = nodes[node_id];\n        // find associated segments and reactions\n        node.connected_segments.forEach(function(segment_obj) {\n            var segment;\n            try {\n                segment = reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segments for node');\n                return;\n            }\n            var segment_obj_w_segment = utils.clone(segment_obj);\n            segment_obj_w_segment['segment'] = utils.clone(segment);\n            segment_objs_w_segments[segment_obj.segment_id] = segment_obj_w_segment;\n            if (!(segment_obj.reaction_id in segment_ids_for_reactions))\n                segment_ids_for_reactions[segment_obj.reaction_id] = [];\n            segment_ids_for_reactions[segment_obj.reaction_id].push(segment_obj.segment_id);\n        });\n    }\n    // find the reactions that should be deleted because they have no segments left\n    for (var reaction_id in segment_ids_for_reactions) {\n        var reaction = reactions[reaction_id],\n            these_ids = segment_ids_for_reactions[reaction_id],\n            has = true;\n        for (var segment_id in reaction.segments) {\n            if (these_ids.indexOf(segment_id)==-1) has = false;\n        }\n        if (has) these_reactions[reaction_id] = reaction;\n    }\n    return { segment_objs_w_segments: segment_objs_w_segments, reactions: these_reactions };\n}\n\nfunction new_text_label(coords, text) {\n    // make an label\n    var out = build.new_text_label(this.largest_ids, text, coords);\n    this.text_labels[out.id] = out.label;\n    var sel = this.draw_these_text_labels([out.id]);\n    // add to the search index\n    this.search_index.insert('l' + out.id, { 'name': text,\n                                             'data': { type: 'text_label',\n                                                       text_label_id: out.id }});\n    return out.id;\n}\n\nfunction edit_text_label(text_label_id, new_value, should_draw) {\n    // save old value\n    var saved_value = this.text_labels[text_label_id].text,\n        edit_and_draw = function(new_val, should_draw) {\n            // set the new value\n            this.text_labels[text_label_id].text = new_val;\n            if (should_draw) this.draw_these_text_labels([text_label_id]);\n            // update in the search index\n            var record_id = 'l' + text_label_id,\n                found = this.search_index.remove(record_id);\n            if (!found)\n                console.warn('Could not find modified text label in search index');\n            this.search_index.insert(record_id, { 'name': new_val,\n                                                  'data': { type: 'text_label',\n                                                            text_label_id: text_label_id }});\n        }.bind(this);\n\n    // edit the label\n    edit_and_draw(new_value, should_draw);\n\n    // add to undo stack\n    this.undo_stack.push(function() {\n        edit_and_draw(saved_value, should_draw);\n    }, function () {\n        edit_and_draw(new_value, should_draw);\n    });\n}\n\n// -------------------------------------------------------------------------\n// Zoom\n\nfunction zoom_extent_nodes(margin) {\n    /** Zoom to fit all the nodes.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'nodes');\n}\n\nfunction zoom_extent_canvas(margin) {\n    /** Zoom to fit the canvas.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'canvas');\n}\n\nfunction _zoom_extent(margin, mode) {\n    /** Zoom to fit the canvas or all the nodes. Returns error if one is\n     raised.\n\n     Arguments\n     ---------\n\n     margin: optional argument to set the margins.\n\n     mode: Values are 'nodes', 'canvas'.\n\n     */\n\n    // optional args\n    if (_.isUndefined(margin)) margin = (mode=='nodes' ? 0.2 : 0);\n    if (_.isUndefined(mode)) mode = 'canvas';\n\n    var new_zoom, new_pos,\n        size = this.get_size();\n    // scale margin to window size\n    margin = margin * size.height;\n\n    if (mode=='nodes') {\n        // get the extent of the nodes\n        var min = { x: null, y: null }, // TODO make infinity?\n            max = { x: null, y: null };\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            if (min.x===null) min.x = node.x;\n            if (min.y===null) min.y = node.y;\n            if (max.x===null) max.x = node.x;\n            if (max.y===null) max.y = node.y;\n\n            min.x = Math.min(min.x, node.x);\n            min.y = Math.min(min.y, node.y);\n            max.x = Math.max(max.x, node.x);\n            max.y = Math.max(max.y, node.y);\n        }\n        // set the zoom\n        new_zoom = Math.min((size.width - margin*2) / (max.x - min.x),\n                            (size.height - margin*2) / (max.y - min.y));\n        new_pos = { x: - (min.x * new_zoom) + margin + ((size.width - margin*2 - (max.x - min.x)*new_zoom) / 2),\n                    y: - (min.y * new_zoom) + margin + ((size.height - margin*2 - (max.y - min.y)*new_zoom) / 2) };\n    } else if (mode=='canvas') {\n        // center the canvas\n        new_zoom =  Math.min((size.width - margin*2) / (this.canvas.width),\n                             (size.height - margin*2) / (this.canvas.height));\n        new_pos = { x: - (this.canvas.x * new_zoom) + margin + ((size.width - margin*2 - this.canvas.width*new_zoom) / 2),\n                    y: - (this.canvas.y * new_zoom) + margin + ((size.height - margin*2 - this.canvas.height*new_zoom) / 2) };\n    } else {\n        return console.error('Did not recognize mode');\n    }\n    this.zoom_container.go_to(new_zoom, new_pos);\n    return null;\n}\n\nfunction get_size() {\n    return this.zoom_container.get_size();\n}\n\nfunction zoom_to_reaction(reaction_id) {\n    var reaction = this.reactions[reaction_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - reaction.label_x * new_zoom + size.width/2,\n                    y: - reaction.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_node(node_id) {\n    var node = this.nodes[node_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - node.label_x * new_zoom + size.width/2,\n                    y: - node.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_text_label(text_label_id) {\n    var text_label = this.text_labels[text_label_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - text_label.x * new_zoom + size.width/2,\n                    y: - text_label.y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction highlight_reaction(reaction_id) {\n    this.highlight(this.sel.selectAll('#r'+reaction_id).selectAll('text'));\n}\n\nfunction highlight_node(node_id) {\n    this.highlight(this.sel.selectAll('#n'+node_id).selectAll('text'));\n}\n\nfunction highlight_text_label(text_label_id) {\n    this.highlight(this.sel.selectAll('#l'+text_label_id).selectAll('text'));\n}\n\nfunction highlight(sel) {\n    this.sel.selectAll('.highlight')\n        .classed('highlight', false);\n    if (sel !== null) {\n        sel.classed('highlight', true);\n    }\n}\n\n// -------------------------------------------------------------------------\n// Full screen\n// -------------------------------------------------------------------------\n\nfunction full_screen_event () {\n    if      (document.fullscreenEnabled)       return 'fullscreenchange'\n    else if (document.mozFullScreenEnabled)    return 'mozfullscreenchange'\n    else if (document.webkitFullscreenEnabled) return 'webkitfullscreenchange'\n    else if (document.msFullscreenEnabled)     return 'MSFullscreenChange'\n    else                                       return null\n}\n\n/**\n * Call the function when full screen is enabled.\n *\n * To unregister the event listener for the full screen event,\n * unlisten_for_full_screen.\n */\nfunction listen_for_full_screen (fn) {\n    document.addEventListener(full_screen_event(), fn)\n    this.full_screen_listener = fn\n}\n\n/**\n * Remove the listener created by listen_for_full_screen.\n */\nfunction unlisten_for_full_screen () {\n    document.removeEventListener(full_screen_event(), this.full_screen_listener)\n}\n\n/**\n * Enter full screen if supported by the browser.\n */\nfunction full_screen() {\n    var sel = this.zoom_container.selection\n    var e = sel.node()\n    var d = document\n    var full_screen_on = (d.fullscreenElement || d.mozFullScreenElement ||\n                          d.webkitFullscreenElement || d.msFullscreenElement)\n    if (full_screen_on) {\n        // apply full heigh/width 100%\n        sel.classed('full-screen-on', false)\n        // exit\n        if      (d.exitFullscreen)       d.exitFullscreen()\n        else if (d.mozCancelFullScreen)  d.mozCancelFullScreen()\n        else if (d.webkitExitFullscreen) d.webkitExitFullscreen()\n        else if (d.msExitFullscreen)     d.msExitFullscreen()\n        else throw Error('Cannot exit full screen')\n    } else {\n        sel.classed('full-screen-on', true)\n        // enter\n        if      (e.requestFullscreen)       e.requestFullscreen()\n        else if (e.mozRequestFullScreen)    e.mozRequestFullScreen()\n        else if (e.webkitRequestFullscreen) e.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)\n        else if (e.msRequestFullscreen)     e.msRequestFullscreen()\n        else throw Error('Full screen does not seem to be supported on this system.')\n    }\n}\n\n// -------------------------------------------------------------------------\n// IO\n\nfunction save() {\n    utils.download_json(this.map_for_export(), this.map_name);\n}\n\n\nfunction map_for_export() {\n    var out = [{ \"map_name\": this.map_name,\n                 \"map_id\": this.map_id,\n                 \"map_description\": this.map_description,\n                 \"homepage\": \"https://escher.github.io\",\n                 \"schema\": \"https://escher.github.io/escher/jsonschema/1-0-0#\"\n               },\n               { reactions: utils.clone(this.reactions),\n                 nodes: utils.clone(this.nodes),\n                 text_labels: utils.clone(this.text_labels),\n                 canvas: this.canvas.size_and_location() }\n              ];\n\n    // remove extra data\n    for (var r_id in out[1].reactions) {\n        var reaction = out[1].reactions[r_id],\n            new_reaction = {};\n        ['name', 'bigg_id','reversibility', 'label_x', 'label_y',\n         'gene_reaction_rule', 'genes', 'metabolites'\n        ].forEach(function(attr) {\n            new_reaction[attr] = reaction[attr];\n        });\n        new_reaction['segments'] = {};\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id],\n                new_segment = {};\n            ['from_node_id', 'to_node_id', 'b1', 'b2'\n            ].forEach(function(attr) {\n                new_segment[attr] = segment[attr];\n            });\n            new_reaction['segments'][s_id] = new_segment;\n        }\n        out[1].reactions[r_id] = new_reaction;\n    }\n    for (var n_id in out[1].nodes) {\n        var node = out[1].nodes[n_id],\n            new_node = {},\n            attrs;\n        if (node.node_type == 'metabolite') {\n            attrs = ['node_type', 'x', 'y', 'bigg_id', 'name', 'label_x', 'label_y',\n                     'node_is_primary'];\n        } else {\n            attrs = ['node_type', 'x', 'y'];\n        }\n        attrs.forEach(function(attr) {\n            new_node[attr] = node[attr];\n        });\n        out[1].nodes[n_id] = new_node;\n    }\n    for (var t_id in out[1].text_labels) {\n        var text_label = out[1].text_labels[t_id],\n            new_text_label = {},\n            attrs = [\"x\", \"y\", \"text\"];\n        attrs.forEach(function(attr) {\n            new_text_label[attr] = text_label[attr];\n        });\n        out[1].text_labels[t_id] = new_text_label;\n    }\n    // canvas\n    var canvas_el = out[1].canvas,\n        new_canvas_el = {},\n        attrs = [\"x\", \"y\", \"width\", \"height\"];\n    attrs.forEach(function(attr) {\n        new_canvas_el[attr] = canvas_el[attr];\n    });\n    out[1].canvas = new_canvas_el;\n\n    return out;\n}\n\nfunction save_map(obj, callback_before, callback_after, map_type) {\n    /** Rescale the canvas and save as svg/png.\n\n     */\n\n    // run the before callback\n    obj.callback_manager.run(callback_before);\n\n    // turn ofo zoom and translate so that illustrator likes the map\n    var window_scale = obj.zoom_container.window_scale,\n        window_translate = obj.zoom_container.window_translate,\n        canvas_size_and_loc = obj.canvas.size_and_location(),\n        mouse_node_size_and_trans = {\n            w: obj.canvas.mouse_node.attr('width'),\n            h: obj.canvas.mouse_node.attr('height'),\n            transform: obj.canvas.mouse_node.attr('transform')\n        };\n\n    obj.zoom_container._go_to_svg(1.0, { x: -canvas_size_and_loc.x, y: -canvas_size_and_loc.y }, function() {\n        obj.svg.attr('width', canvas_size_and_loc.width);\n        obj.svg.attr('height', canvas_size_and_loc.height);\n        obj.canvas.mouse_node.attr('width', '0px');\n        obj.canvas.mouse_node.attr('height', '0px');\n        obj.canvas.mouse_node.attr('transform', null);\n\n        // hide the segment control points\n        var hidden_sel = obj.sel.selectAll('.multimarker-circle,.midmarker-circle,#canvas')\n            .style('visibility', 'hidden');\n\n        // do the export\n        if(map_type == 'svg') {\n            utils.download_svg('saved_map', obj.svg, true);\n        } else if(map_type == 'png') {\n            utils.download_png('saved_map', obj.svg, true);\n        }\n\n        // revert everything\n        obj.zoom_container._go_to_svg(window_scale, window_translate, function() {\n            obj.svg.attr('width', null);\n            obj.svg.attr('height', null);\n            obj.canvas.mouse_node.attr('width', mouse_node_size_and_trans.w);\n            obj.canvas.mouse_node.attr('height', mouse_node_size_and_trans.h);\n            obj.canvas.mouse_node.attr('transform', mouse_node_size_and_trans.transform);\n            // unhide the segment control points\n            hidden_sel.style('visibility', null);\n\n            // run the after callback\n            obj.callback_manager.run(callback_after);\n        }.bind(obj));\n    }.bind(obj));\n}\n\nfunction save_svg() {\n    save_map(this, 'before_svg_export', 'after_svg_export', 'svg');\n}\n\nfunction save_png() {\n    save_map(this, 'before_png_export', 'after_png_export', 'png');\n}\n\nfunction convert_map() {\n    /** Assign the descriptive names and gene_reaction_rules from the model\n     to the map.\n\n     If no map is loaded, then throw an Error.\n\n     If some reactions are not in the model, then warn in the status.\n\n     */\n    // run the before callback\n    this.callback_manager.run('before_convert_map');\n\n    // check the model\n    if (!this.has_cobra_model()) throw Error('No COBRA model loaded.');\n    var model = this.cobra_model;\n\n    // ids for reactions and metabolites not found in the model\n    var reactions_not_found = {},\n        reaction_attrs = ['name', 'gene_reaction_rule', 'genes'],\n        met_nodes_not_found = {},\n        metabolite_attrs = ['name'],\n        found;\n    // convert reactions\n    for (var reaction_id in this.reactions) {\n        var reaction = this.reactions[reaction_id];\n        found = false;\n        // find in cobra model\n        for (var model_reaction_id in model.reactions) {\n            var model_reaction = model.reactions[model_reaction_id];\n            if (model_reaction.bigg_id == reaction.bigg_id) {\n                reaction_attrs.forEach(function(attr) {\n                    reaction[attr] = model_reaction[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            reactions_not_found[reaction_id] = true;\n    }\n    // convert metabolites\n    for (var node_id in this.nodes) {\n        var node = this.nodes[node_id];\n        // only look at metabolites\n        if (node.node_type != 'metabolite') continue;\n        found = false;\n        // find in cobra model\n        for (var model_metabolite_id in model.metabolites) {\n            var model_metabolite = model.metabolites[model_metabolite_id];\n            if (model_metabolite.bigg_id == node.bigg_id) {\n                metabolite_attrs.forEach(function(attr) {\n                    node[attr] = model_metabolite[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            met_nodes_not_found[node_id] = true;\n    }\n\n    // status\n    var n_reactions_not_found = Object.keys(reactions_not_found).length,\n        n_met_nodes_not_found = Object.keys(met_nodes_not_found).length,\n        status_delay = 3000;\n    if (n_reactions_not_found == 0 &&\n        n_met_nodes_not_found == 0) {\n        this.set_status('Successfully converted attributes.', status_delay);\n    } else if (n_met_nodes_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else if (n_reactions_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_met_nodes_not_found +\n                        ' metabolites in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions and ' + n_met_nodes_not_found + ' metabolites in the model.',\n                        status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    }\n\n    // redraw\n    this.draw_everything();\n\n    // run the after callback\n    this.callback_manager.run('after_convert_map');\n}\n","/**\n * PlacedDiv. A container to position an html div to match the coordinates of a\n * SVG element.\n */\n\nvar utils = require('./utils')\n\nvar PlacedDiv = utils.make_class()\n// instance methods\nPlacedDiv.prototype = {\n  init: init,\n  is_visible: is_visible,\n  place: place,\n  hide: hide,\n}\nmodule.exports = PlacedDiv\n\nfunction init (div, map, displacement) {\n  this.div = div\n  this.map = map\n  this.displacement = displacement === undefined ? { x: 0, y: 0 } : displacement\n\n  this.visible = false\n}\n\nfunction is_visible () {\n  return this.visible\n}\n\n/**\n * Position the html div to match the given SVG coordinates.\n */\nfunction place (coords) {\n  // show the input\n  this.div.style('display', null)\n\n  // move the new input\n  var window_translate = this.map.zoom_container.window_translate\n  var window_scale = this.map.zoom_container.window_scale\n  var map_size = this.map.get_size()\n  var left = Math.max(20,\n                      Math.min(map_size.width - 270,\n                               (window_scale * coords.x + window_translate.x -\n                                this.displacement.x)))\n  var top = Math.max(20,\n                     Math.min(map_size.height - 40,\n                              (window_scale * coords.y + window_translate.y -\n                               this.displacement.y)))\n  this.div.style('position', 'absolute')\n    .style('display', 'block')\n    .style('left', left+'px')\n    .style('top', top+'px')\n\n  this.visible = true\n}\n\n/**\n * Hide the PlacedDiv.\n */\nfunction hide () {\n  if (this.visible) {\n    this.div.style('display', 'none')\n    this.visible = false\n  }\n}\n","/** A QuickJump menu to move between maps.\n\n Arguments\n ---------\n\n sel: The d3 selection of an html node to place the menu inside.\n\n options: An array of map names to jump to.\n\n load_callback: A callback function that accepts two arguments: map_name,\n and another callback which returns true or false for success or failure\n (callback purgatory).\n\n */\n\nvar utils = require('./utils');\n\n\nvar QuickJump = utils.make_class();\n// instance methods\nQuickJump.prototype = {\n    init: init,\n    reset_selection: reset_selection,\n    replace_state_for_map_name: replace_state_for_map_name\n};\nmodule.exports = QuickJump;\n\n\n// instance methods\nfunction init(sel, load_callback) {\n    // set up the menu\n    var select_sel = sel.append('select')\n            .attr('id', 'quick-jump-menu')\n            .attr('class', 'form-control');\n    this.selector = select_sel;\n\n    // get the options to show\n    var url_comp = utils.parse_url_components(window),\n        current = ('map_name' in url_comp) ? url_comp.map_name : null,\n        quick_jump_path = ('quick_jump_path' in url_comp) ? url_comp.quick_jump_path : null,\n        options = ('quick_jump' in url_comp) ? url_comp.quick_jump : [],\n        default_value = '— Jump to map —',\n        view_options = [default_value].concat(options);\n    if (current !== null) {\n        view_options = view_options.filter(function(o) {\n            return o != current;\n        });\n    }\n\n    select_sel.selectAll('option')\n        .data(view_options)\n        .enter()\n        .append('option')\n        .text(function(d) {\n            // works whether or not a '.' is present\n            return d.split('.').slice(-1)[0];\n        });\n\n    // only show if there are options\n    select_sel.style('display', view_options.length > 1 ? 'block' : 'none');\n\n    // on selection\n    var change_map = function(map_name) {\n        load_callback(map_name, quick_jump_path, function(success) {\n            if (success)\n                this.replace_state_for_map_name(map_name);\n            else\n                this.reset_selection();\n        }.bind(this));\n    }.bind(this);\n\n    select_sel.on('change', function() {\n        // get the new map\n        var map_name = this.options[this.selectedIndex].__data__;\n        change_map(map_name);\n    });\n}\n\nfunction reset_selection() {\n    this.selector.node().selectedIndex = 0;\n}\n\nfunction replace_state_for_map_name(map_name) {\n    /** Just changes the url to match the new map name. Does not actually\n     manage the HTML5 history.\n\n     */\n\n    // update the url with the new map\n    var url = window.location.href\n            .replace(/(map_name=)([^&]+)(&|$)/, '$1' + map_name + '$3');\n    window.history.replaceState('Not implemented', '', url);\n}\n","/** Scale */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Scale = utils.make_class();\nScale.prototype = {\n    init: init,\n    connect_to_settings: connect_to_settings\n};\nmodule.exports = Scale;\n\n\nfunction init() {\n    this.x = d3.scale.linear();\n    this.y = d3.scale.linear();\n    this.x_size = d3.scale.linear();\n    this.y_size = d3.scale.linear();\n    this.size = d3.scale.linear();\n    this.reaction_color = d3.scale.linear().clamp(true);\n    this.reaction_size = d3.scale.linear().clamp(true);\n    this.metabolite_color = d3.scale.linear().clamp(true);\n    this.metabolite_size = d3.scale.linear().clamp(true);\n    this.scale_path = function(path) {\n        var x_fn = this.x, y_fn = this.y;\n        // TODO: scale arrow width\n        var str = d3.format(\".2f\"),\n            path = path.replace(/(M|L)([0-9-.]+),?\\s*([0-9-.]+)/g, function (match, p0, p1, p2) {\n                return p0 + [str(x_fn(parseFloat(p1))), str(y_fn(parseFloat(p2)))].join(', ');\n            }),\n            reg = /C([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)/g;\n        path = path.replace(reg, function (match, p1, p2, p3, p4, p5, p6) {\n            return 'C'+str(x_fn(parseFloat(p1)))+','+\n                str(y_fn(parseFloat(p2)))+' '+\n                str(x_fn(parseFloat(p3)))+','+\n                str(y_fn(parseFloat(p4)))+' '+\n                [str(x_fn(parseFloat(p5)))+','+str(y_fn(parseFloat(p6)))];\n        });\n        return path;\n    }.bind(this);\n    this.scale_decimals = function(path, scale_fn, precision) {\n        var str = d3.format(\".\"+String(precision)+\"f\");\n        path = path.replace(/([0-9.]+)/g, function (match, p1) {\n            return str(scale_fn(parseFloat(p1)));\n        });\n        return path;\n    };\n}\n\nfunction connect_to_settings(settings, map, get_data_statistics) {\n    // domains\n    var update_reaction = function(s) {\n        var out = sort_scale(s, get_data_statistics()['reaction']);\n        this.reaction_color.domain(out.domain);\n        this.reaction_size.domain(out.domain);\n        this.reaction_color.range(out.color_range);\n        this.reaction_size.range(out.size_range);\n    }.bind(this);\n    var update_metabolite = function(s) {\n        var out = sort_scale(s, get_data_statistics()['metabolite']);\n        this.metabolite_color.domain(out.domain);\n        this.metabolite_size.domain(out.domain);\n        this.metabolite_color.range(out.color_range);\n        this.metabolite_size.range(out.size_range);\n    }.bind(this);\n\n    // scale changes\n    settings.streams['reaction_scale'].onValue(update_reaction);\n    settings.streams['metabolite_scale'].onValue(update_metabolite);\n    // stats changes\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) update_reaction(settings.get_option('reaction_scale'));\n    });\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) update_metabolite(settings.get_option('metabolite_scale'));\n    });\n\n    // definitions\n    function sort_scale(scale, stats) {\n        var sorted = scale.map(function(x) {\n            var v;\n            if (x.type in stats)\n                v = stats[x.type];\n            else if (x.type == 'value')\n                v = x.value;\n            else\n                throw new Error('Bad domain type ' + x.type);\n            return { v: v,\n                     color: x.color,\n                     size: x.size };\n        }).sort(function(a, b) {\n            return a.v - b.v;\n        });\n        return { domain: sorted.map(function(x) { return x.v; }),\n                 color_range: sorted.map(function(x) { return x.color; }),\n                 size_range: sorted.map(function(x) { return x.size; }) };\n    }\n}\n","/** ScaleEditor. An interactive UI to edit color and size scales.\n\n Attributes\n ----------\n\n sel: A d3 selection.\n\n type: A type, that should be unique on the page.\n\n settings: The Settings object.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar bacon = require('baconjs');\n\n\nvar ScaleEditor = utils.make_class();\n// instance methods\nScaleEditor.prototype = {\n    init: init,\n    update: update,\n    update_no_data: update_no_data,\n    _data_not_loaded: _data_not_loaded\n};\nmodule.exports = ScaleEditor;\n\n\n// instance methods\nfunction init(sel, type, settings, get_data_statistics) {\n    // sels\n    var grad_id = 'grad' + type + this.unique_string;\n    this.w = 400;\n    this.h = 30;\n    this.x = 20;\n    this.input_width = 90;\n    this.input_height = 24;\n    var b = sel.append('div')\n            .attr('class', 'scale-editor');\n    // no data loaded\n    this.data_not_loaded = b.append('div')\n        .attr('class', 'data-not-loaded')\n        .text((type == 'reaction' ? 'Reaction and gene' : 'Metabolite') + ' data not loaded');\n    // label\n    this.input_label_group = b.append('div')\n        .attr('class', 'input-label-group');\n    // no data\n    var nd = b.append('div')\n            .style('top', this.input_height * 3 + 56 + 10 + 'px')\n            .attr('class', 'no-data');\n    nd.append('span').text('Styles for ' + type + 's with no data')\n        .attr('class', 'no-data-heading');\n    this.no_data_container = nd.append('div');\n    var c = b.append('div')\n            .attr('class', 'centered');\n    this.add_group = c.append('div');\n    this.trash_group = c.append('div')\n        .attr('class', 'trash-container');\n    var svg = c.append('svg')\n            .attr('class', 'scale-svg');\n    this.input_group = c.append('div')\n        .attr('class', 'input-container');\n    this.gradient = svg.append('defs')\n        .append('linearGradient')\n        .attr('id', grad_id);\n    svg.append('rect')\n        .attr('class', 'rect')\n        .attr('fill', 'url(#' + grad_id + ')')\n        .attr('width', this.w + 'px')\n        .attr('height', this.h + 'px')\n        .attr('x', this.x + 'px'),\n    this.pickers_group = svg.append('g');\n\n    // settings\n    this.type = type;\n    this.settings = settings;\n    this.get_data_statistics = get_data_statistics;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    // collect data\n    this.no_data = {};\n    ['color', 'size'].forEach(function(s) {\n        this.no_data[s] = null;\n        this.settings.streams[this.type + '_no_data_' + s].onValue(function(val) {\n            this.no_data[s] = val;\n            this.update_no_data();\n        }.bind(this));\n    }.bind(this));\n\n    this.settings.streams[type + '_scale'].onValue(function(scale) {\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n}\n\nfunction update() {\n    var scale = this.scale,\n        stats = this.get_data_statistics()[this.type],\n        bar_w = 14,\n        bar_h = 35,\n        x_disp = this.x,\n        data_not_loaded = this._data_not_loaded();\n\n    // Must have max and min. Otherwise, assume that no data is loaded.\n    if (data_not_loaded) {\n        scale = [{ type: 'min', 'color': null, 'size': null },\n                 { type: 'max', 'color': null, 'size': null }];\n        stats = { 'min': 0, 'max': 1 };\n    }\n\n    var sc = d3.scale.linear()\n            .domain([0, this.w])\n            .range([stats.min, stats.max]),\n        sc_size = d3.scale.linear()\n            .domain([0, this.w])\n            .range([0, stats.max - stats.min]);\n\n    // ---------------------------------------------------------------------\n    // convenience functions\n    var bring_to_front = function(d, i) {\n        // bring an input set to the front\n        this.input_group.selectAll('.input-set').each(function(d2) {\n            d3.select(this).classed('selected-set', d === d2);\n        });\n    }.bind(this);\n\n    var get_this_val = function(d) {\n        return (d.type == 'value') ? d.value : stats[d.type];\n    };\n\n    var set_scale = function(scale) {\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this);\n\n    // ---------------------------------------------------------------------\n    // make the gradient\n    var sorted_domain = scale.map(function(d) {\n        return { frac: (get_this_val(d) - stats.min) / (stats.max - stats.min),\n                 color: d.color };\n    }).filter(function(d) {\n        return (d.frac >= 0 && d.frac <= 1.0);\n    }).sort(function(a, b) {\n        return a.frac - b.frac;\n    });\n    var stops = this.gradient.selectAll('stop')\n            .data(sorted_domain);\n    stops.enter()\n        .append('stop');\n    stops.attr('offset', function(d) {\n        return d.frac * 100 + '%';\n    }).style('stop-color', function (d) {\n        return d.color === null ? '#F1ECFA' : d.color;\n    });\n    stops.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // no data sign\n\n    this.data_not_loaded.style('visibility', (data_not_loaded ? null : 'hidden'));\n\n    // ---------------------------------------------------------------------\n    // make the pickers\n    var pickers = this.pickers_group\n            .selectAll('.picker')\n            .data(scale);\n    // drag\n    var drag = d3.behavior.drag();\n    drag.on('drag', function(d, i) {\n        // on drag, make it a value type\n        if (['value', 'min', 'max'].indexOf(scale[i].type) === -1) {\n            // get the current value and set it\n            scale[i].value = get_this_val(d);\n            scale[i].type = 'value';\n        }\n        // change the model on drag\n        var new_d = scale[i].value + sc_size(d3.event.dx),\n            buf = sc_size(bar_w + 2);\n        if (new_d > stats.max - buf) new_d = stats.max - buf;\n        if (new_d < stats.min + buf) new_d = stats.min + buf;\n        // round to 2 decimals\n        new_d = Math.floor(new_d * 100.0) / 100.0;\n        scale[i].value = new_d;\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // enter\n    pickers.enter()\n        .append('g')\n        .attr('class', 'picker')\n        .style('cursor', 'pointer')\n        .append('rect');\n    // update\n    pickers.select('rect')\n        .attr('x', function(d, i) {\n            var val = get_this_val(d),\n                buf = bar_w + 2;\n            if (d.type == 'value' && val <= stats.min)\n                return sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            if (d.type == 'value' && val >= stats.max)\n                return sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            return sc.invert(val) - (bar_w / 2) + x_disp;\n        })\n        .attr('width', bar_w + 'px')\n        .attr('height', bar_h + 'px')\n        .call(drag)\n        .on('mousedown', bring_to_front);\n    // exit\n    pickers.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the delete buttons\n    var trashes = this.trash_group.selectAll('span')\n            .data(scale);\n    // enter\n    trashes.enter()\n        .append('span');\n    // update\n    trashes.attr('class', function(d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return null;\n        return 'trash glyphicon glyphicon-trash';\n    }).style('left', function(d) {\n        return sc.invert(get_this_val(d)) - (bar_w / 2) + x_disp + 'px';\n    }).on('click', function (d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return;\n        scale = scale.slice(0, i).concat(scale.slice(i + 1));\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // exit\n    trashes.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the add button\n    var add = this.add_group.selectAll('.add')\n            .data(['add']);\n    // enter\n    add.enter()\n        .append('span')\n        .attr('class', 'add glyphicon glyphicon-plus');\n    // update\n    add.on('click', function (d) {\n        if (data_not_loaded) return;\n\n        var new_d = (stats.max + stats.min) / 2,\n            buf = sc_size(bar_w + 2),\n            last_ind = 0;\n        // try to make the new point not overlap\n        for (var j = 0, l = scale.length; j < l; j++) {\n            var th = get_this_val(scale[j]);\n            if (Math.abs(th - new_d) < buf) {\n                new_d = new_d + buf;\n                if (new_d > stats.max - buf) new_d = stats.max - buf;\n                if (new_d < stats.min + buf) new_d = stats.min + buf;\n            }\n            if (new_d > th)\n                last_ind = j;\n        }\n        // add\n        scale.push({ type: 'value',\n                     value: new_d,\n                     color: scale[last_ind].color,\n                     size: scale[last_ind].size });\n        set_scale(scale);\n    }.bind(this));\n    // exit\n    add.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // input labels\n    var labels = this.input_label_group.selectAll('.row-label')\n            .data(['Value:', 'Color:', 'Size:']);\n    // enter\n    labels.enter().append('div')\n        .attr('class', 'row-label')\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px');\n    // update\n    labels\n        .style('top', function(d, i) {\n            return 56 + (i * this.input_height) + 'px';\n        }.bind(this))\n        .text(function(d) { return d; });\n    // exit\n    labels.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // inputs\n    var inputs = this.input_group.selectAll('.input-set')\n            .data(scale);\n\n    // enter\n    var i = inputs.enter()\n            .append('div')\n            .attr('class', 'input-set');\n    i.append('input')\n        .attr('class', 'domain-input')\n        .style('width', this.input_width + 'px');\n    // type picker\n    i.append('select')\n        .attr('class', 'domain-type-picker'),\n    // color input\n    i.append('input')\n        .attr('class', 'color-input')\n        .style('width', this.input_width + 'px');\n    i.append('input')\n        .attr('type', 'color')\n        .style('visibility', function() {\n            // hide the input if the HTML5 color picker is not supported\n            return (this.type == 'text') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    i.append('input')\n        .attr('class', 'size-input')\n        .style('width', this.input_width + 'px');\n\n    // update\n    inputs.style('height', this.input_height * 3 + 'px')\n        .style('width', this.input_width + 'px')\n        .style('left', function(d) {\n            var val = get_this_val(d),\n                buf = bar_w + 2,\n                l;\n            if (d.type == 'value' && val <= stats.min)\n                l = sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            else if (d.type == 'value' && val >= stats.max)\n                l = sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            else\n                l = sc.invert(val) - (bar_w / 2) + x_disp;\n            // don't go over the right edge of the bar\n            if (l + this.input_width > this.w + this.x)\n                l = l - this.input_width + (bar_w / 2);\n            return l + 'px';\n        }.bind(this))\n        .on('mousedown', bring_to_front);\n\n    var format = d3.format('.4g');\n    inputs.select('.domain-input')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            if (d.type == 'value') {\n                this.value = get_this_val(d);\n                this.disabled = false;\n            } else {\n                this.value = d.type + ' (' + format(get_this_val(d)) + ')';\n                this.disabled = true;\n            }\n        }).on('change', function(d, i) {\n            var buf = sc_size(bar_w + 2),\n                new_d = parseFloat(this.value);\n            scale[i].value = new_d;\n            set_scale(scale);\n        });\n    // update type picker\n    var select = inputs.select('.domain-type-picker'),\n        // get the function types, except min and max\n        stat_types = (['value'].concat(Object.keys(stats))\n                      .filter(function(x) {\n                          return x != 'min' && x != 'max';\n                      })),\n        opts = select.selectAll('option').data(stat_types);\n    opts.enter().append('option');\n    opts.attr('value', function(d) { return d; })\n        .text(function(d) { return d; });\n    opts.exit().remove();\n    select.style('visibility', function(d) {\n        return (d.type == 'min' || d.type == 'max') ? 'hidden' : null;\n    })\n        .style('left', (this.input_width - 20) + 'px')\n        .style('width', '20px')\n        .each(function (d, i) {\n            var sind = 0;\n            d3.select(this).selectAll('option').each(function(_, i) {\n                if (this.value == d.type)\n                    sind = i;\n            });\n            this.selectedIndex = sind;\n        }).on('change', function(d, i) {\n            // set the value to the current location\n            if (this.value == 'value')\n                scale[i].value = stats[d.type];\n            // switch to the new type\n            scale[i].type = this.value;\n            // reload\n            set_scale(scale);\n        });\n    // update color input\n    inputs.select('.color-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.color-picker')\n        .style('left', (this.input_width - this.input_height) + 'px')\n        .style('top', this.input_height + 'px')\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '#dddddd' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.size-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height * 2 + 'px')\n        .each(function (d, i) {\n            this.value = (d.size === null ? '' : d.size);\n            this.disabled = (d.size === null);\n        }).on('change', function(d, i) {\n            scale[i].size = parseFloat(this.value);\n            set_scale(scale);\n        });\n\n    // exit\n    inputs.exit().remove();\n}\n\nfunction update_no_data() {\n    var no_data = this.no_data,\n        data_not_loaded = this._data_not_loaded(),\n        label_w = 40;\n\n    var ins = this.no_data_container\n            .selectAll('.input-group')\n            .data([['color', 'Color:'], ['size', 'Size:']]);\n    // enter\n    var t = ins.enter().append('div')\n            .attr('class', 'input-group');\n    t.append('span');\n    t.append('input');\n    t.append('input')\n        .attr('type', 'color')\n        .style('visibility', function(d) {\n            // hide the input if the HTML5 color picker is not supported,\n            // or if this is a size box\n            return (this.type == 'text' || d[0] != 'color') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    // update\n    ins.select('span')\n        .text(function(d) { return d[1]; })\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this));\n    var get_o = function(kind) {\n        return this.settings.get_option(this.type + '_no_data_' + kind);\n    }.bind(this);\n    ins.select('input')\n        .style('left', function(d, i) {\n            return (label_w + (label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this))\n        .style('height', this.input_height + 'px')\n        .style('width', this.input_width + 'px')\n        .each(function(d) {\n            // initial value\n            this.value = data_not_loaded ? '' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d) {\n            var val = d3.event.target.value;\n            if (d[0] == 'size')\n                val = parseFloat(val);\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    ins.select('.color-picker')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width) * (i + 1) - this.input_height) + 'px';\n        }.bind(this))\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = data_not_loaded ? '#dddddd' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d, i) {\n            var val = d3.event.target.value;\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    // exit\n    ins.exit().remove();\n}\n\nfunction _data_not_loaded() {\n    var stats = this.get_data_statistics()[this.type];\n    return (stats.max === null || stats.min === null);\n}\n","/** SearchBar */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\nvar _ = require('underscore');\n\nvar SearchBar = utils.make_class();\n// instance methods\nSearchBar.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    update: update,\n    next: next,\n    previous: previous\n};\nmodule.exports = SearchBar;\n\nfunction init(sel, search_index, map) {\n    var container = sel.attr('class', 'search-container')\n            .style('display', 'none');\n    this.input = container.append('input')\n        .attr('class', 'search-bar');\n    var group = container.append('div').attr('class', 'btn-group btn-group-sm');\n    group.append('button')\n        .attr('class', 'btn btn-default')\n        .on('click', this.previous.bind(this))\n        .append('span').attr('class', 'glyphicon glyphicon-chevron-left');\n    group.append('button')\n        .attr('class', 'btn btn-default')\n        .on('click', this.next.bind(this))\n        .append('span').attr('class', 'glyphicon glyphicon-chevron-right');\n    this.counter = container.append('div')\n        .attr('class', 'search-counter');\n    container.append('button')\n        .attr('class', 'btn btn-sm btn-default close-button')\n        .on('click', function() {\n            this.toggle(false);\n        }.bind(this))\n        .append('span').attr('class',  'glyphicon glyphicon-remove');\n\n    this.callback_manager = new CallbackManager();\n\n    this.selection = container;\n    this.map = map;\n    this.search_index = search_index;\n\n    this.current = 1;\n    this.results = null;\n\n    var on_input_fn = function(input) {\n        this.current = 1;\n        this.results = _drop_duplicates(this.search_index.find(input.value));\n        this.update();\n    }.bind(this, this.input.node());\n    this.input.on('input', utils.debounce(on_input_fn, 200));\n}\n\nvar comp_keys = {\n    metabolite: ['m', 'node_id'],\n    reaction: ['r', 'reaction_id'],\n    text_label: ['t', 'text_label_id']\n};\nfunction _drop_duplicates(results) {\n    return _.uniq(results, function(item) {\n        // make a string for fast comparison\n        var t = comp_keys[item.type];\n        return t[0] + item[t[1]];\n    });\n}\n\nfunction is_visible() {\n    return this.selection.style('display') !== 'none';\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n\n    if (this.is_active) {\n        this.selection.style('display', null);\n        this.counter.text('');\n        this.input.node().value = '';\n        this.input.node().focus();\n        // escape key\n        this.clear_escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.toggle(false);\n            }.bind(this), true);\n        // next keys\n        this.clear_next = this.map.key_manager\n            .add_key_listener(['enter', 'ctrl+g'], function() {\n                this.next();\n            }.bind(this), false);\n        // previous keys\n        this.clear_previous = this.map.key_manager\n            .add_key_listener(['shift+enter', 'shift+ctrl+g'], function() {\n                this.previous();\n            }.bind(this), false);\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        this.map.highlight(null);\n        this.selection.style('display', 'none');\n        this.results = null;\n        if (this.clear_escape) this.clear_escape();\n        this.clear_escape = null;\n        if (this.clear_next) this.clear_next();\n        this.clear_next = null;\n        if (this.clear_previous) this.clear_previous();\n        this.clear_previous = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\n\nfunction update() {\n    if (this.results === null) {\n        this.counter.text('');\n        this.map.highlight(null);\n    } else if (this.results.length === 0) {\n        this.counter.text('0 / 0');\n        this.map.highlight(null);\n    } else {\n        this.counter.text(this.current + ' / ' + this.results.length);\n        var r = this.results[this.current - 1];\n        if (r.type=='reaction') {\n            this.map.zoom_to_reaction(r.reaction_id);\n            this.map.highlight_reaction(r.reaction_id);\n        } else if (r.type=='metabolite') {\n            this.map.zoom_to_node(r.node_id);\n            this.map.highlight_node(r.node_id);\n        } else if (r.type=='text_label') {\n            this.map.zoom_to_text_label(r.text_label_id);\n            this.map.highlight_text_label(r.text_label_id);\n        } else {\n            throw new Error('Bad search index data type: ' + r.type);\n        }\n    }\n}\n\nfunction next() {\n    if (this.results === null) return;\n    if (this.current === this.results.length)\n        this.current = 1;\n    else\n        this.current += 1;\n    this.update();\n}\n\nfunction previous() {\n    if (this.results === null) return;\n    if (this.current === 1)\n        this.current = this.results.length;\n    else\n        this.current -= 1;\n    this.update();\n}\n","/** SearchIndex. Define an index for searching for reaction and metabolites in\n the map.\n\n The index is stored in SearchIndex.index, an object of id/record pairs.\n\n */\n\nvar utils = require('./utils');\n\nvar SearchIndex = utils.make_class();\nSearchIndex.prototype = {\n    init: init,\n    insert: insert,\n    remove: remove,\n    find: find\n};\nmodule.exports = SearchIndex;\n\n\nfunction init() {\n    this.index = {};\n}\n\nfunction insert(id, record, overwrite, check_record) {\n    /** Insert a record into the index.\n\n     id: A unique string id.\n\n     record: Records have the form:\n\n     { 'name': '',\n     'data': {} }\n\n     Search is performed on substrings of the name.\n\n     overwrite: (Default false) For faster performance, make overwrite true,\n     and records will be inserted without checking for an existing record.\n\n     check_record: (Default false) For faster performance, make check_record\n     false. If true, records will be checked to make sure they have name and\n     data attributes.\n\n     Returns undefined.\n\n     */\n    if (!overwrite && (id in this.index))\n        throw new Error(\"id is already in the index\");\n    if (check_record && !(('name' in record) && ('data' in record)))\n        throw new Error(\"malformed record\");\n    this.index[id] = record;\n}\n\nfunction remove(record_id) {\n    /** Remove the matching record.\n\n     Returns true is a record is found, or false if no match is found.\n\n     */\n    if (record_id in this.index) {\n        delete this.index[record_id];\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction find(substring) {\n    /** Find a record that matches the substring.\n\n     Returns an array of data from matching records.\n\n     */\n\n    var re = RegExp(substring, \"i\"), // ignore case\n        matches = [];\n    for (var id in this.index) {\n        var record = this.index[id];\n        if (re.exec(record.name))\n            matches.push(record.data);\n    }\n    return matches;\n}\n","/** Settings. A class to manage settings for a Map.\n\n Arguments\n ---------\n\n set_option: A function, fn(key), that returns the option value for the\n key.\n\n get_option: A function, fn(key, value), that sets the option for the key\n and value.\n\n conditional_options: The options to that are conditionally accepted when\n changed. Changes can be abandoned by calling abandon_changes(), or accepted\n by calling accept_changes().\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\nvar bacon = require('baconjs');\n\n\nvar Settings = utils.make_class();\n// instance methods\nSettings.prototype = {\n    init: init,\n    set_conditional: set_conditional,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes\n};\nmodule.exports = Settings;\n\n\n// instance methods\nfunction init (set_option, get_option, conditional_options) {\n  this.set_option = set_option\n  this.get_option = get_option\n\n  // manage accepting/abandoning changes\n  this.status_bus = new bacon.Bus()\n\n  // force an update of ui components\n  this.force_update_bus = new bacon.Bus()\n\n  // modify bacon.observable\n  bacon.Observable.prototype.convert_to_conditional_stream = _convert_to_conditional_stream\n  bacon.Observable.prototype.force_update_with_bus = _force_update_with_bus\n\n  // create the options\n  this.busses = {}\n  this.streams = {}\n  for (var i = 0, l = conditional_options.length; i < l; i++) {\n    var name = conditional_options[i]\n    var out = _create_conditional_setting(name, get_option(name), set_option,\n                                          this.status_bus,\n                                          this.force_update_bus)\n    this.busses[name] = out.bus\n    this.streams[name] = out.stream\n  }\n}\n\n/**\n * Hold on to event when hold_property is true, and only keep them if\n * accept_property is true (when hold_property becomes false).\n */\nfunction _convert_to_conditional_stream (status_stream) {\n\n    // true if hold is pressed\n    var is_not_hold_event = status_stream\n            .map(function(x) { return x=='hold'; })\n            .not()\n            .toProperty(true),\n        is_not_first_clear = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && (x=='accepted' || x=='rejected'));\n            }).not(),\n        is_not_first_hold = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && x=='hold');\n            }).not(),\n        combined = bacon.combineAsArray(this, status_stream),\n        held = combined\n            .scan([], function(c, x) {\n                if (x[1]=='hold') {\n                    c.push(x[0]);\n                    return c;\n                } else if (x[1]=='accept') {\n                    return c;\n                } else if (x[1]=='reject') {\n                    return [];\n                } else if (x[1]=='rejected' || x[1]=='accepted') {\n                    return [x[0]];\n                } else {\n                    throw Error('bad status ' + x[1]);\n                }\n            })\n    // don't pass in events until the end of a hold\n            .filter(is_not_hold_event)\n    // ignore the event when clear is passed\n            .filter(is_not_first_clear)\n    // ignore the event when hold is passed\n            .filter(is_not_first_hold)\n            .flatMap(function(ar) {\n                return bacon.fromArray(ar);\n            }),\n        unheld = this.filter(is_not_hold_event);\n    return unheld.merge(held);\n}\n\nfunction _force_update_with_bus(bus) {\n    return bacon\n        .combineAsArray(this, bus.toProperty(false))\n        .map(function(t) {\n            return t[0];\n        });\n}\n\nfunction _create_conditional_setting(name, initial_value, set_option,\n                                     status_bus, force_update_bus) {\n    // set up the bus\n    var bus = new bacon.Bus();\n    // make the event stream\n    var stream = bus\n    // conditionally accept changes\n            .convert_to_conditional_stream(status_bus)\n    // force updates\n            .force_update_with_bus(force_update_bus);\n\n    // get the latest\n    stream.onValue(function(v) {\n        set_option(name, v);\n    });\n\n    // push the initial value\n    bus.push(initial_value);\n\n    return { bus: bus, stream: stream };\n}\n\nfunction set_conditional(name, value) {\n    /** Set the value of a conditional setting, one that will only be\n     accepted if this.accept_changes() is called.\n\n     Arguments\n     ---------\n\n     name: The option name\n\n     value: The new value\n\n     */\n\n    if (!(name in this.busses))\n        throw new Error('Invalid setting name');\n    this.busses[name].push(value);\n}\n\nfunction hold_changes() {\n    this.status_bus.push('hold');\n}\n\nfunction abandon_changes() {\n    this.status_bus.push('reject');\n    this.status_bus.push('rejected');\n    this.force_update_bus.push(true);\n}\n\nfunction accept_changes() {\n    this.status_bus.push('accept');\n    this.status_bus.push('accepted');\n}\n","/**\n * SettingsMenu\n */\n\nvar utils = require('./utils')\nvar CallbackManager = require('./CallbackManager')\nvar ScaleEditor = require('./ScaleEditor')\n\nvar SettingsMenu = utils.make_class()\nSettingsMenu.prototype = {\n  init: init,\n  is_visible: is_visible,\n  toggle: toggle,\n  hold_changes: hold_changes,\n  abandon_changes: abandon_changes,\n  accept_changes: accept_changes,\n  style_gui: style_gui,\n  view_gui: view_gui,\n}\nmodule.exports = SettingsMenu\n\nfunction init (sel, settings, map, toggle_abs_and_apply_data) {\n  this.sel = sel\n  this.settings = settings\n  this.draw = false\n\n  var unique_map_id = this.settings.get_option('unique_map_id')\n  this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id)\n\n  var background = sel.append('div')\n    .attr('class', 'settings-box-background')\n    .style('display', 'none')\n  var container = background.append('div')\n    .attr('class', 'settings-box-container')\n    .style('display', 'none')\n\n  // done button\n  container.append('button')\n    .attr(\"class\", \"btn btn-sm btn-default settings-button\")\n    .on('click', function () {\n      this.accept_changes()\n    }.bind(this))\n    .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-ok\")\n  // quit button\n  container.append('button')\n    .attr(\"class\", \"btn btn-sm btn-default settings-button settings-button-close\")\n    .on('click', function () {\n      this.abandon_changes()\n    }.bind(this))\n    .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\")\n\n  var box = container.append('div')\n    .attr('class', 'settings-box')\n\n  // Tip\n  box.append('div')\n    .text('Tip: Hover over an option to see more details about it.')\n    .classed('settings-tip', true)\n  box.append('hr')\n\n  // view and build\n  box.append('div').text('View and build options')\n    .attr('class', 'settings-section-heading-large')\n  this.view_gui(box.append('div'))\n\n  // reactions\n  box.append('hr')\n  box.append('div')\n    .text('Reactions').attr('class', 'settings-section-heading-large')\n  var rse = new ScaleEditor(box.append('div'), 'reaction', this.settings,\n                            map.get_data_statistics.bind(map))\n  map.callback_manager.set('calc_data_stats__reaction', function (changed) {\n    if (changed) {\n      rse.update()\n      rse.update_no_data()\n    }\n  })\n  box.append('div')\n    .text('Reaction or Gene data').attr('class', 'settings-section-heading')\n  this.style_gui(box.append('div'), 'reaction', function (on_off) {\n    if (toggle_abs_and_apply_data) {\n      toggle_abs_and_apply_data('reaction', on_off)\n      rse.update()\n      rse.update_no_data()\n    }\n  })\n\n  // metabolite data\n  box.append('hr')\n  box.append('div').text('Metabolites')\n    .attr('class', 'settings-section-heading-large')\n  var mse = new ScaleEditor(box.append('div'), 'metabolite', this.settings,\n                            map.get_data_statistics.bind(map))\n  map.callback_manager.set('calc_data_stats__metabolite', function (changed) {\n    if (changed) {\n      mse.update()\n      mse.update_no_data()\n    }\n  })\n  box.append('div').text('Metabolite data')\n    .attr('class', 'settings-section-heading')\n  this.style_gui(box.append('div'), 'metabolite', function (on_off) {\n    if (toggle_abs_and_apply_data) {\n      toggle_abs_and_apply_data('metabolite', on_off)\n      mse.update()\n      mse.update_no_data()\n    }\n  })\n\n  this.callback_manager = new CallbackManager()\n\n  this.map = map\n  this.selection = container\n  this.background = background\n}\nfunction is_visible() {\n  return this.selection.style('display') != 'none'\n}\nfunction toggle(on_off) {\n  if (on_off===undefined) on_off = !this.is_visible()\n\n  if (on_off) {\n    // hold changes until accepting/abandoning\n    this.hold_changes()\n    // show the menu\n    this.selection.style(\"display\", \"inline-block\")\n    this.background.style(\"display\", \"block\")\n    this.selection.select('input').node().focus()\n    // escape key\n    this.clear_escape = this.map.key_manager\n      .add_escape_listener(function () {\n        this.abandon_changes()\n      }.bind(this), true)\n    // enter key\n    this.clear_enter = this.map.key_manager\n      .add_enter_listener(function () {\n        this.accept_changes()\n      }.bind(this), true)\n    // run the show callback\n    this.callback_manager.run('show')\n  } else {\n    // draw on finish\n    if (this.draw) this.map.draw_everything()\n    // hide the menu\n    this.selection.style(\"display\", \"none\")\n    this.background.style(\"display\", \"none\")\n    if (this.clear_escape) this.clear_escape()\n    this.clear_escape = null\n    if (this.clear_enter) this.clear_enter()\n    this.clear_enter = null\n    // run the hide callback\n    this.callback_manager.run('hide')\n  }\n}\nfunction hold_changes() {\n  this.settings.hold_changes()\n}\nfunction abandon_changes() {\n  this.draw = false\n  this.settings.abandon_changes()\n  this.toggle(false)\n}\nfunction accept_changes() {\n  this.sel.selectAll('input').each(function (s) {\n    this.blur()\n  })\n  this.draw = true\n  this.settings.accept_changes()\n  this.toggle(false)\n}\n\nfunction style_gui(sel, type, abs_callback) {\n  /** A UI to edit style.\n\n   */\n\n  var t = sel.append('table').attr('class', 'settings-table'),\n  settings = this.settings\n\n  // styles\n  t.append('tr').call(function (r) {\n    r.append('td').text('Options:')\n      .attr('class', 'options-label')\n      .attr('title', ('Options for ' + type + ' data.'))\n    var cell = r.append('td')\n\n    var styles = [['Absolute value', 'abs',\n                   ('If checked, use the absolute value when ' +\n                    'calculating colors and sizes of ' + type + 's on the map')],\n                  ['Size', 'size',\n                   ('If checked, then size the ' +\n                    (type == 'metabolite' ? 'radius of metabolite circles ' : 'thickness of reaction lines ') +\n                    'according to the value of the ' + type + ' data')],\n                  ['Color', 'color',\n                   ('If checked, then color the ' +\n                    (type == 'metabolite' ? 'metabolite circles ' : 'reaction lines ') +\n                    'according to the value of the ' + type + ' data')],\n                  ['Text (Show data in label)', 'text',\n                   ('If checked, then show data values in the ' + type + ' ' +\n                    'labels')]],\n    style_cells = cell.selectAll('.option-group')\n      .data(styles),\n    s = style_cells.enter()\n      .append('label')\n      .attr('class', 'option-group')\n\n    // make the checkbox\n    var streams = [],\n    get_styles = function () {\n      var styles = []\n      cell.selectAll('input')\n        .each(function (d) { if (this.checked) styles.push(d[1]); })\n      return styles\n    }\n    s.append('input').attr('type', 'checkbox')\n      .on('change', function (d) {\n        settings.set_conditional(type + '_styles', get_styles())\n        if (d[1] == 'abs')\n          abs_callback(this.checked)\n      }).each(function (d) {\n        // subscribe to changes in the model\n        settings.streams[type + '_styles'].onValue(function (ar) {\n          // check the box if the style is present\n          this.checked = (ar.indexOf(d[1]) != -1)\n        }.bind(this))\n      })\n    s.append('span')\n      .text(function (d) { return d[0]; })\n      .attr('title', function (d) { return d[2]; })\n  })\n\n  // compare_style\n  t.append('tr').call(function (r) {\n    r.append('td')\n      .text('Comparison:')\n      .attr('class', 'options-label')\n      .attr('title', ('The function that will be used to compare ' +\n                      'datasets, when paired data is loaded'))\n    var cell = r.append('td')\n      .attr('title', ('The function that will be used to compare ' +\n                      'datasets, when paired data is loaded'));\n\n    var styles = [['Fold Change', 'fold'],\n                  ['Log2(Fold Change)', 'log2_fold'],\n                  ['Difference', 'diff']],\n    style_cells = cell.selectAll('.option-group')\n      .data(styles),\n    s = style_cells.enter()\n      .append('label')\n      .attr('class', 'option-group')\n\n    // make the radio\n    s.append('input').attr('type', 'radio')\n      .attr('name', type + '_compare_style' + this.unique_string)\n      .attr('value', function (d) { return d[1]; })\n      .on('change', function () {\n        if (this.checked)\n          settings.set_conditional(type + '_compare_style', this.value)\n      })\n      .each(function () {\n        // subscribe to changes in the model\n        settings.streams[type + '_compare_style'].onValue(function (value) {\n          // check the box for the new value\n          this.checked = (this.value == value)\n        }.bind(this))\n      })\n    s.append('span')\n      .text(function (d) { return d[0]; })\n\n  }.bind(this))\n\n  // gene-specific settings\n  if (type=='reaction') {\n    var t = sel.append('table').attr('class', 'settings-table')\n      .attr('title', ('The function that will be used to evaluate ' +\n                      'AND connections in gene reaction rules (AND ' +\n                      'connections generally connect components of ' +\n                      'an enzyme complex)'))\n\n    // and_method_in_gene_reaction_rule\n    t.append('tr').call(function (r) {\n      r.append('td')\n        .text('Method for evaluating AND:')\n        .attr('class', 'options-label-wide')\n      var cell = r.append('td')\n\n      var styles = [['Mean', 'mean'], ['Min', 'min']],\n      style_cells = cell.selectAll('.option-group')\n        .data(styles),\n      s = style_cells.enter()\n        .append('label')\n        .attr('class', 'option-group')\n\n      // make the radio\n      var name = 'and_method_in_gene_reaction_rule'\n      s.append('input').attr('type', 'radio')\n        .attr('name', name + this.unique_string)\n        .attr('value', function (d) { return d[1]; })\n        .on('change', function () {\n          if (this.checked)\n            settings.set_conditional(name, this.value)\n        })\n        .each(function () {\n          // subscribe to changes in the model\n          settings.streams[name].onValue(function (value) {\n            // check the box for the new value\n            this.checked = (this.value == value)\n          }.bind(this))\n        })\n      s.append('span')\n        .text(function (d) { return d[0]; })\n    }.bind(this))\n\n  }\n}\n\nfunction view_gui(s, option_name, string, options) {\n\n  // columns\n  var settings = this.settings\n\n  var t = s.append('table').attr('class', 'settings-table')\n  t.append('tr').call(function (r) {\n    // identifiers\n    r.attr('title', ('The identifiers that are show in the reaction, ' +\n                     'gene, and metabolite labels on the map.'))\n    r.append('td').text('Identifiers:')\n      .attr('class', 'options-label')\n    var cell = r.append('td')\n\n    var options = [['ID\\'s', 'bigg_id'], ['Descriptive names', 'name']],\n    style_cells = cell.selectAll('.option-group')\n      .data(options),\n    s = style_cells.enter()\n      .append('label')\n      .attr('class', 'option-group')\n\n    // make the checkbox\n    var name = 'identifiers_on_map'\n    s.append('input').attr('type', 'radio')\n      .attr('name', name + this.unique_string)\n      .attr('value', function (d) { return d[1]; })\n      .on('change', function () {\n        if (this.checked)\n          settings.set_conditional(name, this.value)\n      })\n      .each(function () {\n        // subscribe to changes in the model\n        settings.streams[name].onValue(function (value) {\n          // check the box for the new value\n          this.checked = (this.value == value)\n        }.bind(this))\n      })\n    s.append('span').text(function (d) { return d[0]; })\n\n  }.bind(this))\n\n  var boolean_options = [\n    ['scroll_behavior', 'Scroll to zoom (instead of scroll to pan)',\n     ('If checked, then the scroll wheel and trackpad will control zoom ' +\n      'rather than pan.'), {'zoom': true, 'pan': false}],\n    ['hide_secondary_metabolites', 'Hide secondary metabolites',\n     ('If checked, then only the primary metabolites ' +\n      'will be displayed.')],\n    ['show_gene_reaction_rules', 'Show gene reaction rules',\n     ('If checked, then gene reaction rules will be displayed ' +\n      'below each reaction label. (Gene reaction rules are always ' +\n      'shown when gene data is loaded.)')],\n    ['hide_all_labels', 'Hide reaction, gene, and metabolite labels',\n     ('If checked, hide all reaction, gene, and metabolite labels')],\n    ['allow_building_duplicate_reactions', 'Allow duplicate reactions',\n     ('If checked, then allow duplicate reactions during model building.')],\n    ['highlight_missing', 'Highlight reactions not in model',\n     ('If checked, then highlight in red all the ' +\n      'reactions on the map that are not present in ' +\n      'the loaded model.')],\n    ['enable_tooltips', 'Show tooltips',\n     ('Show tooltips when hovering over reactions, metabolites, and genes')],\n  ]\n\n  var opts = s.append('div').attr('class', 'settings-container')\n    .selectAll('.option-group')\n    .data(boolean_options)\n  // enter\n  var e = opts.enter()\n      .append('label')\n      .attr('class', 'option-group full-line')\n  e.append('input').attr('type', 'checkbox')\n  e.append('span')\n  // update\n  opts.attr('title', function (d) { return d[2]; })\n  opts.select('input')\n    .on('change', function (d) {\n      if (d.length >= 4) { // not a boolean setting\n        for (var key in d[3]) {\n          if (d[3][key] == this.checked) {\n            settings.set_conditional(d[0], key)\n            break\n          }\n        }\n      } else { // boolean setting\n        settings.set_conditional(d[0], this.checked)\n      }\n    })\n    .each(function (d) {\n      settings.streams[d[0]].onValue(function (value) {\n        if (d.length >= 4) { // not a boolean setting\n          this.checked = d[3][value]\n        } else { // boolean setting\n          this.checked = value\n        }\n      }.bind(this))\n    })\n  opts.select('span').text(function (d) { return d[1] })\n  // exit\n  opts.exit().remove()\n\n  // message about text performance\n  s.append('div')\n    .style('margin-top', '16px')\n    .classed('settings-tip', true)\n    .text('Tip: To increase map performance, turn off text boxes (i.e. labels and gene reaction rules).')\n}\n","/** TextEditInput */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar build = require('./build');\n\n\nvar TextEditInput = utils.make_class();\n// instance methods\nTextEditInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    show: show,\n    hide: hide,\n    _accept_changes: _accept_changes,\n    _add_and_edit: _add_and_edit\n};\nmodule.exports = TextEditInput;\n\n\n// definitions\nfunction init(selection, map, zoom_container) {\n    var div = selection.append('div')\n            .attr('id', 'text-edit-input');\n    this.placed_div = PlacedDiv(div, map);\n    this.placed_div.hide();\n    this.input = div.append('input');\n\n    this.map = map;\n    this.setup_map_callbacks(map);\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('edit_text_label.text_edit_input', function(target, coords) {\n        this.show(target, coords);\n    }.bind(this));\n\n    // new text_label\n    map.callback_manager.set('new_text_label.text_edit_input', function(coords) {\n        if (this.active_target !== null)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n        this._add_and_edit(coords);\n    }.bind(this));\n\n    map.callback_manager.set('hide_text_label_editor.text_edit_input', function() {\n        this.hide();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n    zoom_container.callback_manager.set('go_to.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction show(target, coords) {\n    // save any existing edit\n    if (this.active_target) {\n        this._accept_changes(this.active_target.target);\n    }\n\n    // set the current target\n    this.active_target = { target: target,\n                           coords: coords };\n\n    // set the new value\n    target.each(function(d) {\n        this.input.node().value = d.text;\n    }.bind(this));\n\n    // place the input\n    this.placed_div.place(coords);\n    this.input.node().focus();\n\n    // escape key\n    this.clear_escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this), true);\n    // enter key\n    this.clear_enter = this.map.key_manager\n        .add_enter_listener(function(target) {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this, target), true);\n}\n\nfunction hide() {\n    // hide the input\n    this.placed_div.hide();\n\n    // clear the value\n    this.input.attr('value', '');\n    this.active_target = null;\n\n    // clear escape\n    if (this.clear_escape) this.clear_escape();\n    this.clear_escape = null;\n    // clear enter\n    if (this.clear_enter) this.clear_enter();\n    this.clear_enter = null;\n    // turn off click listener\n    // this.map.sel.on('click.', null);\n}\n\nfunction _accept_changes(target) {\n    if (this.input.node().value == '') {\n        // delete the label\n        target.each(function(d) {\n            var selected = {};\n            selected[d.text_label_id] = this.map.text_labels[d.text_label_id];\n            this.map.delete_selectable({}, selected, true);\n        }.bind(this));\n    } else {\n        // set the text\n        var text_label_ids = [];\n        target.each(function(d) {\n            this.map.edit_text_label(d.text_label_id, this.input.node().value, true);\n            text_label_ids.push(d.text_label_id);\n        }.bind(this));\n    }\n}\n\nfunction _add_and_edit(coords) {\n    // make an empty label\n    var text_label_id = this.map.new_text_label(coords, '');\n    // apply the cursor to the new label\n    var sel = this.map.sel.select('#text-labels').selectAll('.text-label')\n            .filter(function(d) { return d.text_label_id == text_label_id; });\n    sel.select('text').classed('edit-text-cursor', true);\n    this.show(sel, coords);\n}\n","/* global d3, window, XMLHttpRequest */\n\n/**\n * Define a Tooltip component and interface with Tinier.\n */\n\nvar utils = require('./utils')\nvar tinier = require('tinier')\nvar createComponent = tinier.createComponent\nvar createInterface = tinier.createInterface\nvar typ = tinier.interfaceTypes\nvar h = tinier.createElement\nvar render = tinier.render\nvar _ = require('underscore')\n\n// Define styles\nvar containerStyle = {\n  'min-width': '270px',\n  'min-height': '100px',\n  'border-radius': '2px',\n  'border': '1px solid #b58787',\n  'padding': '7px',\n  'background-color': '#fff',\n  'text-align': 'left',\n  'font-size': '16px',\n  'font-family': 'sans-serif',\n  'color': '#111',\n  'box-shadow': '4px 6px 20px 0px rgba(0, 0, 0, 0.4)',\n}\n\nvar idStyle = {\n  'font-size': '18px',\n  'font-weight': 'bold',\n}\n\nvar buttonStyle = {\n  'border-radius': '3px',\n  'background-color': '#eee',\n  'border': '1px solid #ddd',\n  'margin-top': '4px',\n}\n\nvar typeLabelStyle = {\n  'position': 'absolute',\n  'top': '4px',\n  'right': '4px',\n  'color': '#d27066',\n  'background-color': '#ffeded',\n  'border-radius': '2px',\n  'font-size': '14px',\n  'text-align': 'right',\n  'padding': '0px 5px',\n}\n\nfunction decompartmentalizeCheck (id, type) {\n  // ID without compartment, if metabolite.\n  return type === 'metabolite' ? utils.decompartmentalize(id)[0] : id\n\n}\n\nfunction capitalizeFirstLetter (s) {\n  return s === null ? s : s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n// Create the component\nvar DefaultTooltip = createComponent({\n  displayName: 'DefaultTooltip',\n\n  init: function () {\n    return {\n      biggId: '',\n      name: '',\n      loc: { x: 0, y: 0 },\n      data: null,\n      type: null,\n    }\n  },\n\n  reducers: {\n    setContainerData: function (args) {\n      return Object.assign({}, args.state, {\n        biggId: args.biggId,\n        name: args.name,\n        loc: args.loc,\n        data: args.data,\n        type: args.type,\n      })\n    },\n  },\n\n  methods: {\n    openBigg: function (args) {\n      var type = args.state.type\n      var biggId = args.state.biggId\n      var pref = 'http://bigg.ucsd.edu/'\n      var url = (type === 'gene' ?\n                 pref + 'search?query=' + biggId :\n                 pref + 'universal/' + type + 's/' + decompartmentalizeCheck(biggId, type))\n      window.open(url)\n    },\n  },\n\n  render: function (args) {\n    var decomp = decompartmentalizeCheck(args.state.biggId, args.state.type)\n    var biggButtonText = 'Open ' + decomp + ' in BiGG Models.'\n\n    return render(\n      // parent node\n      args.el,\n      // the new tooltip element\n      h('div',\n        // tooltip style\n        { style: containerStyle },\n        // id\n        h('span', { style: idStyle }, args.state.biggId),\n        h('br'),\n        // descriptive name\n        'name: ' + args.state.name,\n        h('br'),\n        // data\n        'data: ' + (args.state.data && args.state.data !== '(nd)' ?\n                    args.state.data : 'no data'),\n        h('br'),\n        // BiGG Models button\n        h('button',\n          { style: buttonStyle, onClick: args.methods.openBigg, },\n          biggButtonText),\n        // type label\n        h('div',\n          { style: typeLabelStyle },\n          capitalizeFirstLetter(args.state.type)))\n    )\n  },\n})\n\nmodule.exports = {\n  DefaultTooltip: DefaultTooltip,\n}\n","var utils = require('./utils')\nvar PlacedDiv = require('./PlacedDiv')\nvar tinier = require('tinier')\nvar _ = require('underscore')\n\n/**\n * Manage the tooltip that lives in a PlacedDiv.\n * @param selection\n * @param map\n * @param tooltip_component\n * @param zoom_container\n */\nvar TooltipContainer = utils.make_class()\n// instance methods\nTooltipContainer.prototype = {\n  init: init,\n  setup_map_callbacks: setup_map_callbacks,\n  setup_zoom_callbacks: setup_zoom_callbacks,\n  is_visible: is_visible,\n  show: show,\n  hide: hide,\n  delay_hide: delay_hide,\n  cancel_hide_tooltip: cancel_hide_tooltip,\n}\nmodule.exports = TooltipContainer\n\n// definitions\nfunction init (selection, map, tooltip_component, zoom_container) {\n  var div = selection.append('div').attr('id', 'tooltip-container')\n  this.placed_div = PlacedDiv(div, map)\n  this.placed_div.hide()\n\n  div.on('mouseover', this.cancel_hide_tooltip.bind(this))\n  div.on('mouseleave', this.hide.bind(this))\n\n  this.map = map\n  this.setup_map_callbacks(map)\n  this.zoom_container = zoom_container\n  this.setup_zoom_callbacks(zoom_container)\n\n  // keep a reference to tinier tooltip\n  this.tooltip_component = tooltip_component\n  // if they pass in a function, then use that\n  this.tooltip_function = (_.isFunction(tooltip_component) ?\n                           function (state) { tooltip_component({ state: state, el: div.node() })} :\n                           null)\n  // if they pass in a tinier component, use that\n  this.tinier_tooltip = (tinier.checkType(tinier.COMPONENT, tooltip_component) ?\n                         tinier.run(tooltip_component, div.node()) :\n                         null)\n\n  this.delay_hide_timeout = null\n}\n\nfunction setup_map_callbacks (map) {\n  map.callback_manager.set('show_tooltip.tooltip_container', function (type, d) {\n    if (map.settings.get_option('enable_tooltips')) {\n      this.show(type, d)\n    }\n  }.bind(this))\n  map.callback_manager.set('hide_tooltip.tooltip_container',\n                           this.hide.bind(this))\n  map.callback_manager.set('delay_hide_tooltip.tooltip_container',\n                           this.delay_hide.bind(this))\n}\n\nfunction setup_zoom_callbacks (zoom_container) {\n  zoom_container.callback_manager.set('zoom.tooltip_container', function () {\n    if (this.is_visible()) {\n      this.hide()\n    }\n  }.bind(this))\n  zoom_container.callback_manager.set('go_to.tooltip_container', function () {\n    if (this.is_visible()) {\n      this.hide()\n    }\n  }.bind(this))\n}\n\n/**\n * Return visibility of tooltip container.\n * @return {Boolean} Whether tooltip is visible.\n */\nfunction is_visible () {\n  return this.placed_div.is_visible()\n}\n\n/**\n * Show and place the input.\n * @param {String} type - 'reaction_label', 'node_label', or 'gene_label'\n * @param {Object} d - D3 data for DOM element\n * @param {Object} coords - Object with x and y coords. Cannot use coords from\n *                          'd' because gene labels do not have them.\n */\nfunction show (type, d) {\n  // get rid of a lingering delayed hide\n  this.cancel_hide_tooltip()\n\n  if (_.contains([ 'reaction_label', 'node_label', 'gene_label' ], type)) {\n    var coords = { x: d.label_x, y: d.label_y + 10 }\n    this.placed_div.place(coords)\n    const data = {\n      biggId: d.bigg_id,\n      name: d.name,\n      loc: coords,\n      data: d.data_string,\n      type: type.replace('_label', '').replace('node', 'metabolite'),\n    }\n    if (this.tooltip_function !== null) {\n      this.tooltip_function(data)\n    } else if (this.tinier_tooltip) {\n      this.tinier_tooltip.reducers.setContainerData(data)\n    }\n  } else {\n    throw new Error('Tooltip not supported for object type ' + type)\n  }\n}\n\n/**\n * Hide the input.\n */\nfunction hide () {\n  this.placed_div.hide()\n}\n\n/**\n * Hide the input after a short delay, so that mousing onto the tooltip does not\n * cause it to hide.\n */\nfunction delay_hide () {\n  this.delay_hide_timeout = setTimeout(function () {\n    this.hide()\n  }.bind(this), 100)\n}\n\nfunction cancel_hide_tooltip () {\n  if (this.delay_hide_timeout !== null) {\n    clearTimeout(this.delay_hide_timeout)\n  }\n}\n","/** UndoStack. A constructor that can be used to store undo info. */\n\nvar utils = require('./utils');\n\n\nvar UndoStack = utils.make_class();\nUndoStack.prototype = {\n    init: init,\n    push: push,\n    undo: undo,\n    redo: redo\n};\nmodule.exports = UndoStack;\n\n\n// definitions\nfunction init() {\n    var stack_size = 40;\n    this.stack = Array(stack_size);\n    this.current = -1;\n    this.oldest = -1;\n    this.newest = -1;\n    this.end_of_stack = true;\n    this.top_of_stack = true;\n}\n\n\nfunction _incr(a, l) {\n    return a + 1 > l - 1 ? 0 : a + 1;\n}\n\n\nfunction _decr(a, l) {\n    return a - 1 < 0 ? l - 1 : a -  1;\n}\n\n\nfunction push(undo_fn, redo_fn) {\n    this.current = _incr(this.current, this.stack.length);\n    // change the oldest\n    if (this.end_of_stack)\n        this.oldest = this.current;\n    else if (this.oldest == this.current)\n        this.oldest = _incr(this.oldest, this.stack.length);\n    this.stack[this.current] = { undo: undo_fn, redo: redo_fn };\n    this.newest = this.current;\n\n    // top of the stack\n    this.top_of_stack = true;\n    this.end_of_stack = false;\n}\n\n\nfunction undo() {\n    // check that we haven't reached the end\n    if (this.end_of_stack) return console.warn('End of stack.');\n    // run the lastest stack function\n    this.stack[this.current].undo();\n    if (this.current == this.oldest) {\n        // if the next index is less than the oldest, then the stack is dead\n        this.end_of_stack = true;\n    } else {\n        // reference the next fn\n        this.current = _decr(this.current, this.stack.length);\n    }\n\n    // not at the top of the stack\n    this.top_of_stack = false;\n}\n\n\nfunction redo() {\n    // check that we haven't reached the end\n    if (this.top_of_stack) return console.warn('Top of stack.');\n\n    if (!this.end_of_stack)\n        this.current = _incr(this.current, this.stack.length);\n    this.stack[this.current].redo();\n\n    // if at top of stack\n    if (this.current == this.newest)\n        this.top_of_stack = true;\n\n    // not at the end of the stack\n    this.end_of_stack = false;\n}\n","/**\n * ZoomContainer\n */\n\n/* global d3 */\n\nvar utils = require('./utils')\nvar CallbackManager = require('./CallbackManager')\n\nvar _ = require('underscore')\n\nvar ZoomContainer = utils.make_class()\nZoomContainer.prototype = {\n  init: init,\n  set_scroll_behavior: set_scroll_behavior,\n  set_use_3d_transform: set_use_3d_transform,\n  _update_scroll: _update_scroll,\n  toggle_pan_drag: toggle_pan_drag,\n  go_to: go_to,\n  _go_to_3d: _go_to_3d,\n  _clear_3d: _clear_3d,\n  _go_to_svg: _go_to_svg,\n  zoom_by: zoom_by,\n  zoom_in: zoom_in,\n  zoom_out: zoom_out,\n  get_size: get_size,\n  translate_off_screen: translate_off_screen,\n}\nmodule.exports = ZoomContainer\n\n/**\n * Make a container that will manage panning and zooming. Creates a new SVG\n * element, with a parent div for CSS3 3D transforms.\n *\n * @param {D3 Selection} selection - A d3 selection of a HTML node to put the\n * zoom container in. Should have a defined width and height.\n *\n * @param {String} scroll_behavior - Either 'zoom' or 'pan'.\n *\n * @param {Boolean} use_3d_transform - If true, then use CSS3 3D transform to\n * speed up pan and zoom.\n *\n * @param {Boolean} fill_screen - If true, then apply styles to body and\n * selection that fill the screen. The styled classes are 'fill-screen-body' and\n * 'fill-screen-div'.\n */\nfunction init (selection, scroll_behavior, use_3d_transform, fill_screen) {\n  // set the selection class\n  selection.classed('escher-container', true)\n\n  // fill screen classes\n  if (fill_screen) {\n    d3.select('html').classed('fill-screen', true)\n    d3.select('body').classed('fill-screen', true)\n    selection.classed('fill-screen-div', true)\n  }\n\n  // make the svg\n  var zoom_container = selection.append('div')\n        .attr('class', 'escher-zoom-container')\n\n  var css3_transform_container = zoom_container.append('div')\n        .attr('class', 'escher-3d-transform-container')\n\n  var svg = css3_transform_container.append('svg')\n        .attr('class', 'escher-svg')\n        .attr('xmlns', 'http://www.w3.org/2000/svg')\n\n  // set up the zoom container\n  svg.select('.zoom-g').remove()\n  var zoomed_sel = svg.append('g').attr('class', 'zoom-g')\n\n  // attributes\n  this.selection = selection\n  this.zoom_container = zoom_container\n  this.css3_transform_container = css3_transform_container\n  this.svg = svg\n  this.zoomed_sel = zoomed_sel\n  this.window_translate = { x: 0, y: 0 }\n  this.window_scale = 1.0\n\n  this._scroll_behavior = scroll_behavior\n  this._use_3d_transform = use_3d_transform\n  this._pan_drag_on = true\n  this._zoom_behavior = null\n  this._zoom_timeout = null\n  this._svg_scale = this.window_scale\n  this._svg_translate = this.window_translate\n  // this._last_svg_ms = null\n\n  // set up the callbacks\n  this.callback_manager = new CallbackManager()\n\n  // update the scroll behavior\n  this._update_scroll()\n}\n\n/**\n * Set up pan or zoom on scroll.\n * @param {String} scroll_behavior - 'none', 'pan' or 'zoom'.\n */\nfunction set_scroll_behavior (scroll_behavior) {\n  this._scroll_behavior = scroll_behavior\n  this._update_scroll()\n}\n\n/**\n * Set the option use_3d_transform\n */\nfunction set_use_3d_transform (use_3d_transform) {\n  this._use_3d_transform = use_3d_transform\n}\n\n/**\n * Toggle the zoom drag and the cursor UI for it.\n */\nfunction toggle_pan_drag (on_off) {\n  if (_.isUndefined(on_off)) {\n    this._pan_drag_on = !this._pan_drag_on\n  } else {\n    this._pan_drag_on = on_off\n  }\n\n  if (this._pan_drag_on) {\n    // turn on the hand\n    this.zoomed_sel\n      .classed('cursor-grab', true).classed('cursor-grabbing', false)\n    this.zoomed_sel\n      .on('mousedown.cursor', function (sel) {\n        sel.classed('cursor-grab', false).classed('cursor-grabbing', true)\n      }.bind(null, this.zoomed_sel))\n      .on('mouseup.cursor', function (sel) {\n        sel.classed('cursor-grab', true).classed('cursor-grabbing', false)\n      }.bind(null, this.zoomed_sel))\n  } else {\n    // turn off the hand\n    this.zoomed_sel.style('cursor', null)\n      .classed('cursor-grab', false)\n      .classed('cursor-grabbing', false)\n    this.zoomed_sel.on('mousedown.cursor', null)\n    this.zoomed_sel.on('mouseup.cursor', null)\n  }\n\n  // update the behaviors\n  this._update_scroll()\n}\n\n/**\n * Update the pan and zoom behaviors. The behaviors are applied to the\n * css3_transform_container node.\n */\nfunction _update_scroll () {\n  if (!_.contains(['zoom', 'pan', 'none'], this._scroll_behavior)) {\n    throw Error('Bad value for scroll_behavior: ' + this._scroll_behavior)\n  }\n\n  // clear all behaviors\n  this.zoom_container.on('mousewheel.zoom', null) // zoom scroll behaviors\n    .on('DOMMouseScroll.zoom', null) // disables older versions of Firefox\n    .on('wheel.zoom', null) // disables newer versions of Firefox\n    .on('dblclick.zoom', null)\n    .on('mousewheel.escher', null) // pan scroll behaviors\n    .on('DOMMouseScroll.escher', null)\n    .on('wheel.escher', null)\n    .on('mousedown.zoom', null) // drag behaviors\n    .on('touchstart.zoom', null)\n    .on('touchmove.zoom', null)\n    .on('touchend.zoom', null)\n\n  // This handles dragging to pan, and touch events (in any scroll mode). It\n  // also handles scrolling to zoom (only 'zoom' mode). It also raises an\n  // exception in node, so catch that during testing. This may be a bug with\n  // d3 related to d3 using the global this.document. TODO look into this.\n  try {\n    this._zoom_behavior = d3.behavior.zoom()\n      .on('zoomstart', function () {\n        // prevent default zoom behavior, specifically for mobile pinch\n        // zoom\n        d3.event.sourceEvent.stopPropagation()\n        d3.event.sourceEvent.preventDefault()\n      }.bind(this))\n      .on('zoom', function () {\n        this.go_to(d3.event.scale, {x: d3.event.translate[0], y: d3.event.translate[1]})\n      }.bind(this))\n  } catch (err) {\n    console.log('Not in a browser, so d3.behavior.zoom does not work.')\n    this._zoom_behavior = null\n    return\n  }\n\n  // set current location\n  this._zoom_behavior.scale(this.window_scale)\n  this._zoom_behavior.translate([ this.window_translate.x,\n                                  this.window_translate.y ])\n\n  // set it up\n  this.zoom_container.call(this._zoom_behavior)\n\n  // always turn off double-clicking to zoom\n  this.zoom_container.on('dblclick.zoom', null)\n\n  // if panning is off, then turn off these listeners\n  if (!this._pan_drag_on) {\n    this.zoom_container.on('mousedown.zoom', null)\n      .on('touchstart.zoom', null)\n      .on('touchmove.zoom', null)\n      .on('touchend.zoom', null)\n  }\n\n  // if scroll to zoom is off, then turn off these listeners\n  if (this._scroll_behavior !== 'zoom') {\n    this.zoom_container\n      .on('mousewheel.zoom', null) // zoom scroll behaviors\n      .on('DOMMouseScroll.zoom', null) // disables older versions of Firefox\n      .on('wheel.zoom', null); // disables newer versions of Firefox\n  }\n\n  // add listeners for scrolling to pan\n  if (this._scroll_behavior === 'pan') {\n    // Add the wheel listener\n    var wheel_fn = function () {\n      var ev = d3.event\n      var sensitivity = 0.5\n      // stop scroll in parent elements\n      ev.stopPropagation()\n      ev.preventDefault()\n      ev.returnValue = false\n      // change the location\n      var get_directional_disp = function (wheel_delta, delta) {\n        var the_delt = _.isUndefined(wheel_delta) ? delta : -wheel_delta / 1.5\n        return the_delt * sensitivity\n      }\n      var new_translate = {\n        x: this.window_translate.x - get_directional_disp(ev.wheelDeltaX, ev.deltaX),\n        y: this.window_translate.y - get_directional_disp(ev.wheelDeltaY, ev.deltaY),\n      }\n      this.go_to(this.window_scale, new_translate)\n    }.bind(this)\n\n    // apply it\n    this.zoom_container.on('mousewheel.escher', wheel_fn)\n    this.zoom_container.on('DOMMouseScroll.escher', wheel_fn)\n    this.zoom_container.on('wheel.escher', wheel_fn)\n  }\n}\n\n// functions to scale and translate\n\n/**\n * Zoom the container to a specified location.\n *\n * @param {Number} scale - The scale, between 0 and 1.\n *\n * @param {Object} translate - The location, of the form {x: 2.0, y: 3.0}.\n */\nfunction go_to (scale, translate) {\n  utils.check_undefined(arguments, ['scale', 'translate'])\n\n  var use_3d_transform = this._use_3d_transform\n\n  // check inputs\n  if (!scale) throw new Error('Bad scale value')\n  if (!translate || !('x' in translate) || !('y' in translate) ||\n      isNaN(translate.x) || isNaN(translate.y))\n    return console.error('Bad translate value')\n\n  // save inputs\n  this.window_scale = scale\n  this.window_translate = translate\n\n  // save to zoom behavior\n  if (!_.isNull(this._zoom_behavior)) {\n    this._zoom_behavior.scale(scale)\n    var translate_array = [translate.x, translate.y]\n    this._zoom_behavior.translate(translate_array)\n  }\n\n  if (use_3d_transform) { // 3d tranform\n    // cancel all timeouts\n    if (!_.isNull(this._zoom_timeout))\n      clearTimeout(this._zoom_timeout)\n\n    // set the 3d transform\n    this._go_to_3d(scale, translate, this._svg_scale, this._svg_translate)\n\n    // if another go_to does not happen within the delay time, then\n    // redraw the svg\n    this._zoom_timeout = _.delay(function () {\n      // redraw the svg\n      this._go_to_svg(scale, translate)\n    }.bind(this), 100); // between 100 and 600 seems to be usable\n\n  } else { // no 3d transform\n    this._go_to_svg(scale, translate)\n  }\n\n  this.callback_manager.run('go_to')\n}\n\n/** Zoom & pan the CSS 3D transform container */\nfunction _go_to_3d (scale, translate, svg_scale, svg_translate) {\n  var n_scale = scale / svg_scale\n  var n_translate = utils.c_minus_c(translate,\n                                    utils.c_times_scalar(svg_translate, n_scale))\n  var tranform = ('translate(' + n_translate.x + 'px,' + n_translate.y + 'px) ' +\n                  'scale(' + n_scale + ')')\n  this.css3_transform_container.style('transform', tranform)\n  this.css3_transform_container.style('-webkit-transform', tranform)\n  this.css3_transform_container.style('transform-origin', '0 0')\n  this.css3_transform_container.style('-webkit-transform-origin', '0 0')\n}\n\nfunction _clear_3d () {\n  this.css3_transform_container.style('transform', null)\n  this.css3_transform_container.style('-webkit-transform', null)\n  this.css3_transform_container.style('transform-origin', null)\n  this.css3_transform_container.style('-webkit-transform-origin', null)\n}\n\n/**\n * Zoom & pan the svg element. Also runs the svg_start and svg_finish callbacks.\n * @param {Number} scale - The scale, between 0 and 1.\n * @param {Object} translate - The location, of the form {x: 2.0, y: 3.0}.\n * @param {Function} callback - (optional) A callback to run after scaling.\n */\nfunction _go_to_svg (scale, translate, callback) {\n  this.callback_manager.run('svg_start')\n\n  // defer to update callbacks\n  _.defer(function () {\n\n    // start time\n    // var start = new Date().getTime()\n\n    // reset the 3d transform\n    this._clear_3d()\n\n    // redraw the svg\n    this.zoomed_sel\n      .attr('transform',\n            'translate(' + translate.x + ',' + translate.y + ') ' +\n            'scale(' + scale + ')')\n    // save svg location\n    this._svg_scale = this.window_scale\n    this._svg_translate = this.window_translate\n\n    _.defer(function () {\n      // defer for callback after draw\n      this.callback_manager.run('svg_finish')\n\n      if (!_.isUndefined(callback)) callback()\n\n      // wait a few ms to get a reliable end time\n      // _.delay(function () {\n      //     // end time\n      //     var t = new Date().getTime() - start\n      //     this._last_svg_ms = t\n      // }.bind(this), 20)\n    }.bind(this))\n  }.bind(this))\n}\n\n/**\n * Zoom by a specified multiplier.\n *\n * @param {Number} amount - A multiplier for the zoom. Greater than 1 zooms in\n * and less than 1 zooms out.\n */\nfunction zoom_by (amount) {\n  var size = this.get_size()\n  var shift = {\n    x: size.width/2 - ((size.width/2 - this.window_translate.x) * amount +\n                       this.window_translate.x),\n    y: size.height/2 - ((size.height/2 - this.window_translate.y) * amount +\n                        this.window_translate.y),\n  }\n  this.go_to(this.window_scale * amount,\n             utils.c_plus_c(this.window_translate, shift))\n}\n\n/** Zoom in by the default amount with the default options. */\nfunction zoom_in () {\n  this.zoom_by(1.5)\n}\n\n/** Zoom out by the default amount with the default options. */\nfunction zoom_out () {\n  this.zoom_by(0.667)\n}\n\n/**\n * Return the size of the zoom container as coordinates, e.g. {x: 2, y: 3}\n */\nfunction get_size () {\n  return {\n    width: parseInt(this.selection.style('width'), 10),\n    height: parseInt(this.selection.style('height'), 10),\n  }\n}\n\n/**\n * Shift window if new reacion will draw off the screen\n */\nfunction translate_off_screen (coords) {\n  // TODO BUG not accounting for scale correctly\n\n  var margin = 120 // pixels\n  var size = this.get_size()\n  var current = {\n    x: {\n      min: - this.window_translate.x / this.window_scale +\n        margin / this.window_scale,\n      max: - this.window_translate.x / this.window_scale +\n        (size.width-margin) / this.window_scale,\n    },\n    y: {\n      min: - this.window_translate.y / this.window_scale +\n        margin / this.window_scale,\n      max: - this.window_translate.y / this.window_scale +\n        (size.height-margin) / this.window_scale,\n    },\n  }\n\n  if (coords.x < current.x.min) {\n    this.window_translate.x = this.window_translate.x -\n      (coords.x - current.x.min) * this.window_scale\n    this.go_to(this.window_scale, this.window_translate)\n  } else if (coords.x > current.x.max) {\n    this.window_translate.x = this.window_translate.x -\n      (coords.x - current.x.max) * this.window_scale\n    this.go_to(this.window_scale, this.window_translate)\n  }\n  if (coords.y < current.y.min) {\n    this.window_translate.y = this.window_translate.y -\n      (coords.y - current.y.min) * this.window_scale\n    this.go_to(this.window_scale, this.window_translate)\n  } else if (coords.y > current.y.max) {\n    this.window_translate.y = this.window_translate.y -\n      (coords.y - current.y.max) * this.window_scale\n    this.go_to(this.window_scale, this.window_translate)\n  }\n}\n","/** build */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    new_reaction: new_reaction,\n    rotate_nodes: rotate_nodes,\n    move_node_and_dependents: move_node_and_dependents,\n    new_text_label: new_text_label,\n    bezier_id_for_segment_id: bezier_id_for_segment_id,\n    bezier_ids_for_reaction_ids: bezier_ids_for_reaction_ids,\n    new_beziers_for_segments: new_beziers_for_segments,\n    new_beziers_for_reactions: new_beziers_for_reactions\n};\n\n\n// definitions\nfunction new_reaction(bigg_id, cobra_reaction, cobra_metabolites,\n                      selected_node_id, selected_node,\n                      largest_ids, cofactors, angle) {\n    /** New reaction.\n\n     angle: clockwise from 'right', in degrees\n\n     */\n\n    // rotate the new reaction around the selected metabolite\n    // convert to radians\n    angle = Math.PI / 180 * angle;\n\n    // generate a new integer id\n    var new_reaction_id = String(++largest_ids.reactions);\n\n    // calculate coordinates of reaction\n    var selected_node_coords = { x: selected_node.x,\n                                 y: selected_node.y };\n\n    // rotate main axis around angle with distance\n    var reaction_length = 300,\n        main_axis = [ selected_node_coords,\n                      utils.c_plus_c(selected_node_coords,\n                                     {'x': reaction_length, 'y': 0}) ],\n        center = { 'x': (main_axis[0].x + main_axis[1].x)/2,\n                   'y': (main_axis[0].y + main_axis[1].y)/2 };\n\n    // relative label location\n    var label_d;\n    if (Math.abs(angle) < Math.PI/4 ||\n        Math.abs(angle - Math.PI) < Math.PI/4 ) {\n            label_d = { x: -50, y: -40 };\n        } else {\n            label_d = { x: 30, y: 10 };\n        }\n\n    // relative anchor node distance\n    var anchor_distance = 20;\n\n    // new reaction structure\n    var new_reaction = utils.clone(cobra_reaction);\n    utils.extend(new_reaction,\n                 { label_x: center.x + label_d.x,\n                   label_y: center.y + label_d.y,\n                   segments: {} });\n\n    // set primary metabolites and count reactants/products\n\n    // look for the selected metabolite, and record the indices\n    var reactant_ranks = [], product_ranks = [],\n        reactant_count = 0, product_count = 0,\n        reaction_is_reversed = false;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        // make the metabolites into objects\n        var metabolite = cobra_metabolites[met_bigg_id],\n            coefficient = new_reaction.metabolites[met_bigg_id],\n            formula = metabolite.formula,\n            new_metabolite = { coefficient: coefficient,\n                               bigg_id: met_bigg_id,\n                               name: metabolite.name };\n        if (coefficient < 0) {\n            new_metabolite.index = reactant_count;\n            // score the metabolites. Infinity == selected, >= 1 == carbon containing\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                reactant_ranks.push([new_metabolite.index, Infinity]);\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                reactant_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            reactant_count++;\n        } else {\n            new_metabolite.index = product_count;\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                product_ranks.push([new_metabolite.index, Infinity]);\n                reaction_is_reversed = true;\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                product_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            product_count++;\n        }\n        new_reaction.metabolites[met_bigg_id] = new_metabolite;\n    }\n\n    // get the rank with the highest score\n    var max_rank = function(old, current) { return current[1] > old[1] ? current : old; },\n        primary_reactant_index = reactant_ranks.reduce(max_rank, [0,0])[0],\n        primary_product_index = product_ranks.reduce(max_rank, [0,0])[0];\n\n    // set primary metabolites, and keep track of the total counts\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id];\n        if (metabolite.coefficient < 0) {\n            if (metabolite.index==primary_reactant_index) metabolite.is_primary = true;\n            metabolite.count = reactant_count + 1;\n        } else {\n            if (metabolite.index==primary_product_index) metabolite.is_primary = true;\n            metabolite.count = product_count + 1;\n        }\n    }\n\n    // generate anchor nodes\n    var new_anchors = {},\n        anchors = [ { node_type: 'anchor_reactants',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? 1 : -1), y: 0 } },\n                    { node_type: 'center',\n                      dis: { x: 0, y: 0 } },\n                    { node_type: 'anchor_products',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? -1 : 1), y: 0 } } ],\n        anchor_ids = {};\n    anchors.map(function(n) {\n        var new_id = String(++largest_ids.nodes),\n            general_node_type = (n.node_type=='center' ? 'midmarker' : 'multimarker');\n        new_anchors[new_id] = { node_type: general_node_type,\n                                x: center.x + n.dis.x,\n                                y: center.y + n.dis.y,\n                                connected_segments: [],\n                                name: null,\n                                bigg_id: null,\n                                label_x: null,\n                                label_y: null,\n                                node_is_primary: null };\n        anchor_ids[n.node_type] = new_id;\n    });\n\n    // add the segments, outside to inside\n    var new_anchor_groups = [ [ anchor_ids['anchor_reactants'], anchor_ids['center'] ],\n                              [ anchor_ids['anchor_products'],  anchor_ids['center'] ] ];\n    new_anchor_groups.map(function(l) {\n        var from_id = l[0], to_id = l[1],\n            new_segment_id = String(++largest_ids.segments);\n        new_reaction.segments[new_segment_id] =  { b1: null,\n                                                   b2: null,\n                                                   from_node_id: from_id,\n                                                   to_node_id: to_id,\n                                                   from_node_coefficient: null,\n                                                   to_node_coefficient: null,\n                                                   reversibility: new_reaction.reversibility,\n                                                   data: new_reaction.data,\n                                                   reverse_flux: new_reaction.reverse_flux };\n        new_anchors[from_id].connected_segments.push({ segment_id: new_segment_id,\n                                                       reaction_id: new_reaction_id });\n        new_anchors[to_id].connected_segments.push({ segment_id: new_segment_id,\n                                                     reaction_id: new_reaction_id });\n    });\n\n    // Add the metabolites, keeping track of total reactants and products.\n    var new_nodes = new_anchors;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id],\n            primary_index, from_node_id;\n        if (metabolite.coefficient < 0) {\n            // metabolite.count = reactant_count + 1;\n            primary_index = primary_reactant_index;\n            from_node_id = anchor_ids['anchor_reactants'];\n        } else {\n            // metabolite.count = product_count + 1;\n            primary_index = primary_product_index;\n            from_node_id = anchor_ids['anchor_products'];\n        }\n\n        // calculate coordinates of metabolite components\n        var met_loc = calculate_new_metabolite_coordinates(metabolite,\n                                                           primary_index,\n                                                           main_axis,\n                                                           center,\n                                                           reaction_length,\n                                                           reaction_is_reversed);\n\n        // if this is the existing metabolite\n        if (selected_node.bigg_id==metabolite.bigg_id) {\n            var new_segment_id = String(++largest_ids.segments);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: selected_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // update the existing node\n            selected_node.connected_segments.push({ segment_id: new_segment_id,\n                                                    reaction_id: new_reaction_id });\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        } else {\n            // save new metabolite\n            var new_segment_id = String(++largest_ids.segments),\n                new_node_id = String(++largest_ids.nodes);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: new_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // save new node\n            new_nodes[new_node_id] = { connected_segments: [{ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id }],\n                                       x: met_loc.circle.x,\n                                       y: met_loc.circle.y,\n                                       node_is_primary: Boolean(metabolite.is_primary),\n                                       label_x: met_loc.circle.x + label_d.x,\n                                       label_y: met_loc.circle.y + label_d.y,\n                                       name: metabolite.name,\n                                       bigg_id: metabolite.bigg_id,\n                                       node_type: 'metabolite' };\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        }\n    }\n\n    // now take out the extra reaction details\n    var metabolites_array = []\n    for (var bigg_id in new_reaction.metabolites) {\n        metabolites_array.push({'bigg_id': bigg_id,\n                                'coefficient': new_reaction.metabolites[bigg_id].coefficient});\n    }\n    new_reaction.metabolites = metabolites_array;\n\n    // new_reactions object\n    var new_reactions = {};\n    new_reactions[new_reaction_id] = new_reaction;\n\n    // new_beziers object\n    var new_beziers = new_beziers_for_reactions(new_reactions);\n\n    // add the selected node for rotation, and return it as a new (updated) node\n    new_nodes[selected_node_id] = selected_node;\n    rotate_nodes(new_nodes, new_reactions, new_beziers,\n                 angle, selected_node_coords);\n\n    return { new_reactions: new_reactions,\n             new_beziers: new_beziers,\n             new_nodes: new_nodes };\n}\n\nfunction rotate_nodes(selected_nodes, reactions, beziers, angle, center) {\n    /** Rotate the nodes around center.\n\n     selected_nodes: Nodes to rotate.\n     reactions: Only updates beziers for these reactions.\n     beziers: Also update the bezier points.\n     angle: Angle to rotate in radians.\n     center: Point to rotate around.\n\n     */\n\n    // functions\n    var rotate_around = function(coord) {\n        if (coord === null)\n            return null;\n        return utils.rotate_coords(coord, angle, center);\n    };\n\n    // recalculate: node\n    var updated_node_ids = [], updated_reaction_ids = [];\n    for (var node_id in selected_nodes) {\n        var node = selected_nodes[node_id],\n            // rotation distance\n            displacement = rotate_around({ x: node.x, y: node.y }),\n            // move the node\n            updated = move_node_and_labels(node, reactions,\n                                           displacement);\n        // move the bezier points\n        node.connected_segments.map(function(segment_obj) {\n            var reaction = reactions[segment_obj.reaction_id];\n            // If the reaction was not passed in the reactions argument, then ignore\n            if (reaction === undefined) return;\n\n            // rotate the beziers\n            var segment_id = segment_obj.segment_id,\n                segment = reaction.segments[segment_id];\n            if (segment.to_node_id==node_id && segment.b2) {\n                var displacement = rotate_around(segment.b2),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b2');\n                segment.b2 = utils.c_plus_c(segment.b2, displacement);\n                beziers[bez_id].x = segment.b2.x;\n                beziers[bez_id].y = segment.b2.y;\n            } else if (segment.from_node_id==node_id && segment.b1) {\n                var displacement = rotate_around(segment.b1),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b1');\n                segment.b1 = utils.c_plus_c(segment.b1, displacement);\n                beziers[bez_id].x = segment.b1.x;\n                beziers[bez_id].y = segment.b1.y;\n            }\n        });\n\n        updated_reaction_ids = utils.unique_concat([updated_reaction_ids,\n                                                    updated.reaction_ids]);\n        updated_node_ids.push(node_id);\n    }\n\n    return { node_ids: updated_node_ids,\n             reaction_ids: updated_reaction_ids };\n}\n\nfunction move_node_and_dependents(node, node_id, reactions, beziers, displacement) {\n    /** Move the node and its labels and beziers.\n\n     */\n    var updated = move_node_and_labels(node, reactions, displacement);\n\n    // move beziers\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // If the reaction was not passed in the reactions argument, then ignore\n        if (reaction === undefined) return;\n\n        // update beziers\n        var segment_id = segment_obj.segment_id,\n            segment = reaction.segments[segment_id];\n        [['b1', 'from_node_id'], ['b2', 'to_node_id']].forEach(function(c) {\n            var bez = c[0],\n                node = c[1];\n            if (segment[node]==node_id && segment[bez]) {\n                segment[bez] = utils.c_plus_c(segment[bez], displacement);\n                var tbez = beziers[bezier_id_for_segment_id(segment_id, bez)];\n                tbez.x = segment[bez].x;\n                tbez.y = segment[bez].y;\n            }\n        });\n\n        // add to list of updated reaction ids if it isn't already there\n        if (updated.reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated.reaction_ids.push(segment_obj.reaction_id);\n        }\n    });\n    return updated;\n}\n\nfunction move_node_and_labels(node, reactions, displacement) {\n    node.x = node.x + displacement.x;\n    node.y = node.y + displacement.y;\n\n    // recalculate: node label\n    node.label_x = node.label_x + displacement.x;\n    node.label_y = node.label_y + displacement.y;\n\n    // recalculate: reaction label\n    var updated_reaction_ids = [];\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // add to list of updated reaction ids if it isn't already there\n        if (updated_reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated_reaction_ids.push(segment_obj.reaction_id);\n\n            // update reaction label (but only once per reaction\n            if (node.node_type == 'midmarker') {\n                reaction.label_x = reaction.label_x + displacement.x;\n                reaction.label_y = reaction.label_y + displacement.y;\n            }\n        }\n    });\n    return { reaction_ids: updated_reaction_ids };\n}\n\nfunction calculate_new_metabolite_coordinates(met, primary_index, main_axis, center, dis, is_reversed) {\n    /** Calculate metabolite coordinates for a new reaction metabolite.\n\n     */\n    // new local coordinate system\n    var displacement = main_axis[0],\n        main_axis = [utils.c_minus_c(main_axis[0], displacement),\n                     utils.c_minus_c(main_axis[1], displacement)],\n        center = utils.c_minus_c(center, displacement);\n\n    // Curve parameters\n    var w = 80,  // distance between reactants and between products\n        b1_strength = 0.4,\n        b2_strength = 0.25,\n        w2 = w*0.7,\n        secondary_dis = 40,\n        num_slots = Math.min(2, met.count - 1);\n\n    // size and spacing for primary and secondary metabolites\n    var ds, draw_at_index, r;\n    if (met.is_primary) { // primary\n        ds = 20;\n    } else { // secondary\n        ds = 10;\n        // don't use center slot\n        if (met.index > primary_index) draw_at_index = met.index - 1;\n        else draw_at_index = met.index;\n    }\n\n    var de = dis - ds, // distance between ends of line axis\n        reaction_axis = [{'x': ds, 'y': 0},\n                         {'x': de, 'y': 0}];\n\n    // Define line parameters and axis.\n    // Begin with unrotated coordinate system. +y = Down, +x = Right.\n    var end, circle, b1, b2;\n    // reactants\n    if (((met.coefficient < 0) != is_reversed) && met.is_primary) { // Ali == BADASS\n        end = {'x': reaction_axis[0].x,\n               'y': reaction_axis[0].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + (end.x)*(1-b2_strength),\n              'y': center.y*b2_strength + (end.y)*(1-b2_strength)},\n        circle = {'x': main_axis[0].x,\n                  'y': main_axis[0].y};\n    } else if ((met.coefficient < 0) != is_reversed) {\n        end = {'x': reaction_axis[0].x + secondary_dis,\n               'y': reaction_axis[0].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength},\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[0].x + secondary_dis,\n                  'y': main_axis[0].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    } else if (((met.coefficient > 0) != is_reversed) && met.is_primary) {        // products\n        end = {'x': reaction_axis[1].x,\n               'y': reaction_axis[1].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x,\n                  'y': main_axis[1].y};\n    } else if ((met.coefficient > 0) != is_reversed) {\n        end = {'x': reaction_axis[1].x - secondary_dis,\n               'y': reaction_axis[1].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x - secondary_dis,\n                  'y': main_axis[1].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    }\n    var loc = {};\n    loc.b1 = utils.c_plus_c(displacement, b1);\n    loc.b2 = utils.c_plus_c(displacement, b2);\n    loc.circle = utils.c_plus_c(displacement, circle);\n    return loc;\n}\n\nfunction new_text_label(largest_ids, text, coords) {\n    var new_id = String(++largest_ids.text_labels),\n        new_label = { text: text,\n                      x: coords.x,\n                      y: coords.y };\n    return {id: new_id, label: new_label};\n}\n\nfunction bezier_id_for_segment_id(segment_id, bez) {\n    return segment_id+'_'+bez;\n}\n\nfunction bezier_ids_for_reaction_ids(reactions) {\n    /** Return an array of beziers ids for the array of reaction ids.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. a subset of *escher.Map.reactions*.\n\n     */\n    var bezier_ids = [];\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n\n            ['b1', 'b2'].forEach(function(bez) {\n                var seg_bez = segment[bez];\n                if (seg_bez !== null) {\n                    bezier_ids.push(bezier_id_for_segment_id(segment_id, bez));\n                }\n            });\n        }\n    }\n    return bezier_ids;\n}\n\nfunction new_beziers_for_segments(segments, reaction_id) {\n    /** Return an object containing beziers for the segments object.\n\n     Arguments\n     ---------\n\n     segments: A segments object, e.g. *escher.Map.segments*.\n\n     reaction_id: The reaction id for the segments.\n\n     */\n    var beziers = {};\n    for (var segment_id in segments) {\n        var segment = segments[segment_id];\n\n        ['b1', 'b2'].forEach(function(bez) {\n            var seg_bez = segment[bez];\n            if (seg_bez !== null) {\n                var bezier_id = bezier_id_for_segment_id(segment_id, bez);\n                beziers[bezier_id] = {\n                    bezier: bez,\n                    x: seg_bez.x,\n                    y: seg_bez.y,\n                    reaction_id: reaction_id,\n                    segment_id: segment_id\n                };\n            }\n        });\n    }\n    return beziers;\n}\n\nfunction new_beziers_for_reactions(reactions) {\n    /** Return an object containing beziers for the reactions object.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. *escher.Map.reactions*.\n\n     */\n    var beziers = {};\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        var these = new_beziers_for_segments(reaction.segments, reaction_id);\n        utils.extend(beziers, these);\n    }\n    return beziers;\n}\n","/**\n * @license\n *\n * complete.ly 1.0.0\n * MIT Licensing\n * Copyright (c) 2013 Lorenzo Puccetti\n *\n * This Software shall be used for doing good things, not bad things.\n *\n *\n * Modified by Zachary King (c) 2014.\n *\n **/\n\nvar utils = require('./utils');\n\nmodule.exports = function(container, config) {\n    document = utils.get_document(container);\n    window = utils.get_window(container);\n\n    config = config || {};\n    config.fontSize =                       config.fontSize   || '13px';\n    config.fontFamily =                     config.fontFamily || 'sans-serif';\n    config.promptInnerHTML =                config.promptInnerHTML || '';\n    config.color =                          config.color || '#333';\n    config.hintColor =                      config.hintColor || '#aaa';\n    config.backgroundColor =                config.backgroundColor || '#fff';\n    config.dropDownBorderColor =            config.dropDownBorderColor || '#aaa';\n    config.dropDownZIndex =                 config.dropDownZIndex || '100'; // to ensure we are in front of everybody\n    config.dropDownOnHoverBackgroundColor = config.dropDownOnHoverBackgroundColor || '#ddd';\n\n    var txtInput = document.createElement('input');\n    txtInput.type ='text';\n    txtInput.spellcheck = false;\n    txtInput.style.fontSize =        config.fontSize;\n    txtInput.style.fontFamily =      config.fontFamily;\n    txtInput.style.color =           config.color;\n    txtInput.style.backgroundColor = config.backgroundColor;\n    txtInput.style.width = '100%';\n    txtInput.style.outline = '0';\n    txtInput.style.border =  '0';\n    txtInput.style.margin =  '0';\n    txtInput.style.padding = '0';\n\n    var txtHint = txtInput.cloneNode();\n    txtHint.disabled='';\n    txtHint.style.position = 'absolute';\n    txtHint.style.top =  '0';\n    txtHint.style.left = '0';\n    txtHint.style.borderColor = 'transparent';\n    txtHint.style.boxShadow =   'none';\n    txtHint.style.color = config.hintColor;\n\n    txtInput.style.backgroundColor ='transparent';\n    txtInput.style.verticalAlign = 'top';\n    txtInput.style.position = 'relative';\n\n    var wrapper = document.createElement('div');\n    wrapper.style.position = 'relative';\n    wrapper.style.outline = '0';\n    wrapper.style.border =  '0';\n    wrapper.style.margin =  '0';\n    wrapper.style.padding = '0';\n\n    var prompt = document.createElement('div');\n    prompt.style.position = 'absolute';\n    prompt.style.outline = '0';\n    prompt.style.margin =  '0';\n    prompt.style.padding = '0';\n    prompt.style.border =  '0';\n    prompt.style.fontSize =   config.fontSize;\n    prompt.style.fontFamily = config.fontFamily;\n    prompt.style.color =           config.color;\n    prompt.style.backgroundColor = config.backgroundColor;\n    prompt.style.top = '0';\n    prompt.style.left = '0';\n    prompt.style.overflow = 'hidden';\n    prompt.innerHTML = config.promptInnerHTML;\n    prompt.style.background = 'transparent';\n    if (document.body === undefined) {\n        throw 'document.body is undefined. The library was wired up incorrectly.';\n    }\n    document.body.appendChild(prompt);\n    var w = prompt.getBoundingClientRect().right; // works out the width of the prompt.\n    wrapper.appendChild(prompt);\n    prompt.style.visibility = 'visible';\n    prompt.style.left = '-'+w+'px';\n    wrapper.style.marginLeft= w+'px';\n\n    wrapper.appendChild(txtHint);\n    wrapper.appendChild(txtInput);\n\n    var dropDown = document.createElement('div');\n    dropDown.style.position = 'absolute';\n    dropDown.style.visibility = 'hidden';\n    dropDown.style.outline = '0';\n    dropDown.style.margin =  '0';\n    dropDown.style.padding = '0';\n    dropDown.style.textAlign = 'left';\n    dropDown.style.fontSize =   config.fontSize;\n    dropDown.style.fontFamily = config.fontFamily;\n    dropDown.style.backgroundColor = config.backgroundColor;\n    dropDown.style.zIndex = config.dropDownZIndex;\n    dropDown.style.cursor = 'default';\n    dropDown.style.borderStyle = 'solid';\n    dropDown.style.borderWidth = '1px';\n    dropDown.style.borderColor = config.dropDownBorderColor;\n    dropDown.style.overflowX= 'hidden';\n    dropDown.style.whiteSpace = 'pre';\n    dropDown.style.overflowY = 'scroll';\n\n    var createDropDownController = function(elem) {\n        var rows = [];\n        var ix = 0;\n        var oldIndex = -1;\n        var current_row = null;\n\n        var onMouseOver =  function() { this.style.outline = '1px solid #ddd'; }\n        var onMouseOut =   function() { this.style.outline = '0'; }\n        var onDblClick =  function(e) {\n            e.preventDefault();\n            p.onmouseselection(this.id);\n        }\n\n        var p = {\n            hide :  function() { elem.style.visibility = 'hidden'; },\n            refresh : function(token, options) {\n                elem.style.visibility = 'hidden';\n                ix = 0;\n                elem.innerHTML ='';\n                var vph = (window.innerHeight || document.documentElement.clientHeight);\n                var rect = elem.parentNode.getBoundingClientRect();\n                var distanceToTop = rect.top - 6;                        // heuristic give 6px\n                var distanceToBottom = vph - rect.bottom -6;  // distance from the browser border.\n\n                rows = [];\n                for (var i = 0; i < options.length; i++) {\n                    // ignore case\n                    var found = options[i].matches.filter(function(match) {\n                        return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                    });\n                    if (found.length == 0)\n                        continue;\n                    var divRow = document.createElement('div');\n                    divRow.style.color = config.color;\n                    divRow.onmouseover = onMouseOver;\n                    divRow.onmouseout =  onMouseOut;\n                    // prevent selection for double click\n                    divRow.onmousedown = function(e) { e.preventDefault(); };\n                    divRow.ondblclick = onDblClick;\n                    divRow.__hint = found[0];\n                    divRow.id = options[i].id;\n                    divRow.innerHTML = options[i].html;\n                    rows.push(divRow);\n                    elem.appendChild(divRow);\n                    // limit results and add a note at the buttom\n                    if (rows.length >= rs.display_limit) {\n                        var divRow2 = document.createElement('div');\n                        divRow2.innerHTML = ' ' + (options.length - rows.length) + ' more';\n                        rows.push(divRow2);\n                        elem.appendChild(divRow2);\n                        break;\n                    }\n                }\n                if (rows.length===0) {\n                    return; // nothing to show.\n                }\n                p.highlight(0);\n\n                // Heuristic (only when the distance to the to top is 4\n                // times more than distance to the bottom\n                if (distanceToTop > distanceToBottom*3) {\n                    // we display the dropDown on the top of the input text\n                    elem.style.maxHeight =  distanceToTop+'px';\n                    elem.style.top ='';\n                    elem.style.bottom ='100%';\n                } else {\n                    elem.style.top = '100%';\n                    elem.style.bottom = '';\n                    elem.style.maxHeight =  distanceToBottom+'px';\n                }\n                elem.style.visibility = 'visible';\n            },\n            highlight : function(index) {\n                if (oldIndex !=-1 && rows[oldIndex]) {\n                    rows[oldIndex].style.backgroundColor = config.backgroundColor;\n                }\n                rows[index].style.backgroundColor = config.dropDownOnHoverBackgroundColor; // <-- should be config\n                oldIndex = index;\n                current_row = rows[index];\n            },\n            // moves the selection either up or down (unless it's not\n            // possible) step is either +1 or -1.\n            move : function(step) {\n                // nothing to move if there is no dropDown. (this happens if\n                // the user hits escape and then down or up)\n                if (elem.style.visibility === 'hidden')\n                    return '';\n                // No circular scrolling\n                if (ix+step === -1 || ix+step === rows.length)\n                    return rows[ix].__hint;\n                ix+=step;\n                p.highlight(ix);\n                return rows[ix].__hint;\n            },\n            onmouseselection : function() {},\n            get_current_row: function () {\n                return current_row;\n            }\n        };\n        return p;\n    }\n\n    var dropDownController = createDropDownController(dropDown);\n\n    dropDownController.onmouseselection = function(id) {\n        rs.onEnter(id)\n        rs.input.focus();\n    }\n\n    wrapper.appendChild(dropDown);\n    container.appendChild(wrapper);\n\n    var spacer,\n        // This will contain the leftSide part of the textfield (the bit that\n        // was already autocompleted)\n        leftSide;\n\n    function calculateWidthForText(text) {\n        if (spacer === undefined) { // on first call only.\n            spacer = document.createElement('span');\n            spacer.style.visibility = 'hidden';\n            spacer.style.position = 'fixed';\n            spacer.style.outline = '0';\n            spacer.style.margin =  '0';\n            spacer.style.padding = '0';\n            spacer.style.border =  '0';\n            spacer.style.left = '0';\n            spacer.style.whiteSpace = 'pre';\n            spacer.style.fontSize =   config.fontSize;\n            spacer.style.fontFamily = config.fontFamily;\n            spacer.style.fontWeight = 'normal';\n            document.body.appendChild(spacer);\n        }\n\n        // Used to encode an HTML string into a plain text.\n        // taken from http://stackoverflow.com/questions/1219860/javascript-jquery-html-encoding\n        spacer.innerHTML = String(text).replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        return spacer.getBoundingClientRect().right;\n    }\n\n\n    var rs = {\n        get_hint :    function(x) { return x; },\n        display_limit: 1000,\n        onArrowDown : function() {},               // defaults to no action.\n        onArrowUp :   function() {},               // defaults to no action.\n        onEnter :     function() {},               // defaults to no action.\n        onTab :       function() {},               // defaults to no action.\n        onChange:     function() { rs.repaint() }, // defaults to repainting.\n        startFrom:    0,\n        options:      [],\n\n        // Only to allow easy access to the HTML elements to the final user\n        // (possibly for minor customizations)\n        wrapper : wrapper,\n        input :  txtInput,\n        hint  :  txtHint,\n        dropDown :  dropDown,\n\n        prompt : prompt,\n        setText : function(text) {\n            txtHint.value = text;\n            txtInput.value = text;\n        },\n        getText : function() {\n            return txtInput.value;\n        },\n        hideDropDown : function() {\n            dropDownController.hide();\n        },\n        repaint : function() {\n            var text = txtInput.value;\n            var startFrom =  rs.startFrom;\n            var options =    rs.options;\n            var optionsLength = options.length;\n\n            // breaking text in leftSide and token.\n            var token = text.substring(startFrom);\n            leftSide =  text.substring(0,startFrom);\n\n            // updating the hint.\n            txtHint.value ='';\n            for (var i = 0; i < optionsLength; i++) {\n                var found = options[i].matches.filter(function(match) {\n                    return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                });\n                if (found.length == 0)\n                    continue;\n                txtHint.value = rs.get_hint(found[0]);\n                break;\n            }\n\n            // moving the dropDown and refreshing it.\n            dropDown.style.left = calculateWidthForText(leftSide)+'px';\n            dropDownController.refresh(token, rs.options);\n        }\n    };\n\n    var registerOnTextChangeOldValue;\n\n    // Register a callback function to detect changes to the content of the\n    // input-type-text.  Those changes are typically followed by user's\n    // action: a key-stroke event but sometimes it might be a mouse click.\n    var registerOnTextChange = function(txt, callback) {\n        registerOnTextChangeOldValue = txt.value;\n        var handler = function() {\n            var value = txt.value;\n            if (registerOnTextChangeOldValue !== value) {\n                registerOnTextChangeOldValue = value;\n                callback(value);\n            }\n        };\n\n        // For user's actions, we listen to both input events and key up events\n        // It appears that input events are not enough so we defensively listen to key up events too.\n        // source: http://help.dottoro.com/ljhxklln.php\n        //\n        // The cost of listening to three sources should be negligible as the handler will invoke callback function\n        // only if the text.value was effectively changed.\n        txt.addEventListener(\"input\",  handler, false);\n        txt.addEventListener('keyup',  handler, false);\n        txt.addEventListener('change', handler, false);\n    };\n\n\n    registerOnTextChange(txtInput,function(text) { // note the function needs to be wrapped as API-users will define their onChange\n        rs.onChange(text);\n        rs.repaint();\n    });\n\n\n    var keyDownHandler = function(e) {\n        e = e || window.event;\n        var keyCode = e.keyCode;\n\n        if (keyCode == 33) { return; } // page up (do nothing)\n        if (keyCode == 34) { return; } // page down (do nothing);\n\n        // right,  end, tab  (autocomplete triggered)\n        if (keyCode == 39 || keyCode == 35 || keyCode == 9) {\n            // for tabs we need to ensure that we override the default\n            // behaviour: move to the next focusable HTML-element\n            if (keyCode == 9) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (txtHint.value.length == 0) {\n                    // tab was called with no action.\n                    rs.onTab();\n                }\n            }\n            // if there is a hint\n            if (txtHint.value.length > 0) {\n                txtInput.value = txtHint.value;\n                var hasTextChanged = registerOnTextChangeOldValue != txtInput.value\n                // avoid dropDown to appear again\n                registerOnTextChangeOldValue = txtInput.value;\n                // for example imagine the array contains the following\n                // words: bee, beef, beetroot. User has hit enter to get\n                // 'bee' it would be prompted with the dropDown again (as\n                // beef and beetroot also match)\n                if (hasTextChanged) {\n                    // force it.\n                    rs.onChange(txtInput.value);\n                }\n            }\n            return;\n        }\n\n        if (keyCode == 13) { // enter\n            // get current\n            var id = dropDownController.get_current_row().id;\n            rs.onEnter(id);\n            return;\n        }\n\n        if (keyCode == 40) { // down\n            var m = dropDownController.move(+1);\n            if (m == '') { rs.onArrowDown(); }\n            txtHint.value = rs.get_hint(m);\n            return;\n        }\n\n        if (keyCode == 38 ) { // up\n            var m = dropDownController.move(-1);\n            if (m == '') { rs.onArrowUp(); }\n            txtHint.value = rs.get_hint(m);\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        // it's important to reset the txtHint on key down. Think: user\n        // presses a letter (e.g. 'x') and never releases. You get\n        // (xxxxxxxxxxxxxxxxx) and you would see still the hint. Reset the\n        // txtHint. (it might be updated onKeyUp).\n        txtHint.value ='';\n    };\n\n    txtInput.addEventListener(\"keydown\",  keyDownHandler, false);\n    return rs;\n};\n","/** data_styles */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar _ = require('underscore');\n\nmodule.exports = {\n    import_and_check: import_and_check,\n    text_for_data: text_for_data,\n    float_for_data: float_for_data,\n    reverse_flux_for_data: reverse_flux_for_data,\n    gene_string_for_data: gene_string_for_data,\n    csv_converter: csv_converter,\n    genes_for_gene_reaction_rule: genes_for_gene_reaction_rule,\n    evaluate_gene_reaction_rule: evaluate_gene_reaction_rule,\n    replace_gene_in_rule: replace_gene_in_rule,\n    apply_reaction_data_to_reactions: apply_reaction_data_to_reactions,\n    apply_metabolite_data_to_nodes: apply_metabolite_data_to_nodes,\n    apply_gene_data_to_reactions: apply_gene_data_to_reactions\n};\n\n\n// globals\nvar RETURN_ARG = function(x) { return x; },\n    ESCAPE_REG = /([.*+?^=!:${}()|\\[\\]\\/\\\\])/g,\n    EMPTY_LINES = /\\n\\s*\\n/g,\n    TRAILING_NEWLINE = /\\n\\s*(\\)*)\\s*$/,\n    AND_OR = /([\\(\\) ])(?:and|or)([\\)\\( ])/ig,\n    ALL_PARENS = /[\\(\\)]/g,\n    // capture an expression surrounded by whitespace and a set of parentheses\n    EXCESS_PARENS = /\\(\\s*(\\S+)\\s*\\)/g,\n    OR = /\\s+or\\s+/i,\n    AND = /\\s+and\\s+/i,\n    // find ORs\n    OR_EXPRESSION = /(^|\\()(\\s*-?[0-9.]+\\s+(?:or\\s+-?[0-9.]+\\s*)+)(\\)|$)/ig,\n    // find ANDS, respecting order of operations (and before or)\n    AND_EXPRESSION = /(^|\\(|or\\s)(\\s*-?[0-9.]+\\s+(?:and\\s+-?[0-9.]+\\s*)+)(\\sor|\\)|$)/ig;\n\n\nfunction import_and_check(data, name, all_reactions) {\n    /** Convert imported data to a style that can be applied to reactions\n     and nodes.\n\n     Arguments\n     ---------\n\n     data: The data object.\n\n     name: Either 'reaction_data', 'metabolite_data', or 'gene_data'\n\n     all_reactions: Required for name == 'gene_data'. Must include all\n     GPRs for the map and model.\n\n     */\n\n    // check arguments\n    if (data===null)\n        return null;\n    if (['reaction_data', 'metabolite_data', 'gene_data'].indexOf(name) == -1)\n        throw new Error('Invalid name argument: ' + name);\n\n    // make array\n    if (!(data instanceof Array)) {\n        data = [data];\n    }\n    // check data\n    var check = function() {\n        if (data===null)\n            return null;\n        if (data.length==1)\n            return null;\n        if (data.length==2)\n            return null;\n        return console.warn('Bad data style: ' + name);\n    };\n    check();\n    data = utils.array_to_object(data);\n\n    if (name == 'gene_data') {\n        if (all_reactions === undefined)\n            throw new Error('Must pass all_reactions argument for gene_data');\n        data = align_gene_data_to_reactions(data, all_reactions);\n    }\n\n    return data;\n\n    // definitions\n    function align_gene_data_to_reactions(data, reactions) {\n        var aligned = {},\n            null_val = [null];\n        // make an array of nulls as the default\n        for (var first_gene_id in data) {\n            null_val = data[first_gene_id].map(function() { return null; });\n            break;\n        }\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id],\n                bigg_id = reaction.bigg_id,\n                this_gene_data = {};\n\n            reaction.genes.forEach(function(gene) {\n                // check both gene id and gene name\n                ['bigg_id', 'name'].forEach(function(kind) {\n                    var d = data[gene[kind]] || utils.clone(null_val);\n                    // merger with existing data if present\n                    var existing_d = this_gene_data[gene.bigg_id];\n                    if (typeof existing_d === 'undefined') {\n                        this_gene_data[gene.bigg_id] = d;\n                    } else {\n                        for (var i = 0; i < d.length; i++) {\n                            var pnt = d[i];\n                            if (pnt !== null)\n                                existing_d[i] = pnt;\n                        }\n                    }\n                });\n            });\n            aligned[bigg_id] = this_gene_data;\n        }\n        return aligned;\n    }\n}\n\nfunction float_for_data(d, styles, compare_style) {\n    // all null\n    if (d === null)\n        return null;\n\n    // absolute value\n    var take_abs = (styles.indexOf('abs') != -1);\n\n    if (d.length==1) { // 1 set\n        // 1 null\n        var f = _parse_float_or_null(d[0]);\n        if (f === null)\n            return null;\n        return abs(f, take_abs);\n    } else if (d.length==2) { // 2 sets\n        // 2 null\n        var fs = d.map(_parse_float_or_null);\n        if (fs[0] === null || fs[1] === null)\n            return null;\n\n        if (compare_style == 'diff') {\n            return diff(fs[0], fs[1], take_abs);\n        } else if (compare_style == 'fold') {\n            return check_finite(fold(fs[0], fs[1], take_abs));\n        }\n        else if (compare_style == 'log2_fold') {\n            return check_finite(log2_fold(fs[0], fs[1], take_abs));\n        }\n    } else {\n        throw new Error('Data array must be of length 1 or 2');\n    }\n    throw new Error('Bad data compare_style: ' + compare_style);\n\n    // definitions\n    function check_finite(x) {\n        return isFinite(x) ? x : null;\n    }\n    function abs(x, take_abs) {\n        return take_abs ? Math.abs(x) : x;\n    }\n    function diff(x, y, take_abs) {\n        if (take_abs) return Math.abs(y - x);\n        else return y - x;\n    }\n    function fold(x, y, take_abs) {\n        if (x == 0 || y == 0) return null;\n        var fold = (y >= x ? y / x : - x / y);\n        return take_abs ? Math.abs(fold) : fold;\n    }\n    function log2_fold(x, y, take_abs) {\n        if (x == 0) return null;\n        if (y / x < 0) return null;\n        var log = Math.log(y / x) / Math.log(2);\n        return take_abs ? Math.abs(log) : log;\n    }\n}\n\nfunction reverse_flux_for_data(d) {\n    if (d === null || d[0] === null)\n        return false;\n    return (d[0] < 0);\n}\n\n/**\n * Add gene values to the gene_reaction_rule string.\n * @param {String} rule - The gene reaction rule.\n * @param {} gene_values - The values.\n * @param {} genes - An array of objects specifying the gene bigg_id and name.\n * @param {} styles - The reaction styles.\n * @param {String} identifiers_on_map - The type of identifiers ('bigg_id' or 'name').\n * @param {} compare_style - The comparison style.\n *\n * @return {Array} A list of objects with:\n *\n * {\n *    bigg_id: The bigg ID.\n *    name: The name.\n *    text: The new string with formatted data values.\n * }\n *\n * The text elements should each appear on a new line.\n */\nfunction gene_string_for_data (rule, gene_values, genes, styles,\n                               identifiers_on_map, compare_style) {\n    var out_text = rule\n    var no_data = (gene_values === null)\n    // keep track of bigg_ids to remove repeats\n    var genes_found = {}\n\n    genes.forEach(function(g_obj) {\n        var bigg_id = g_obj.bigg_id\n\n        // ignore repeats that may have found their way into the genes object\n        if (bigg_id in genes_found) return\n        genes_found[bigg_id] = true\n\n        // generate the string\n        if (no_data) {\n            out_text = replace_gene_in_rule(out_text, bigg_id, bigg_id + '\\n')\n        } else {\n            if (!(bigg_id in gene_values))\n                return\n            var d = gene_values[bigg_id]\n            var f = float_for_data(d, styles, compare_style)\n            var format = (f === null ? RETURN_ARG : d3.format('.3g'))\n            if (d.length === 1) {\n                out_text = replace_gene_in_rule(out_text, bigg_id,\n                                                bigg_id + ' (' + null_or_d(d[0], format) + ')\\n')\n            } else if (d.length === 2) {\n                var new_str\n                // check if they are all text\n                var any_num = _.any(d, function (x) {\n                    return _parse_float_or_null(x) !== null\n                })\n                if (any_num) {\n                    new_str = (bigg_id + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ': ' +\n                               null_or_d(f, format) +\n                               ')\\n');\n                } else {\n                    new_str = (bigg_id + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ')\\n')\n                }\n                out_text = replace_gene_in_rule(out_text, bigg_id, new_str)\n            }\n        }\n    })\n    out_text = (out_text\n                // remove empty lines\n                .replace(EMPTY_LINES, '\\n')\n                // remove trailing newline (with or without parens)\n                .replace(TRAILING_NEWLINE, '$1'))\n\n    // split by newlines, and switch to names if necessary\n    var result = out_text.split('\\n').map(function (text) {\n        for (var i = 0, l = genes.length; i < l; i++) {\n            var gene = genes[i]\n            if (text.indexOf(gene.bigg_id) !== -1) {\n                // replace with names\n                if (identifiers_on_map === 'name')\n                    text = replace_gene_in_rule(text, gene.bigg_id, gene.name)\n                return { bigg_id: gene.bigg_id, name: gene.name, text: text }\n            }\n        }\n        // not found, then none\n        return { bigg_id: null, name: null, text: text }\n    })\n    return result\n\n    // definitions\n    function null_or_d (d, format) {\n        return d === null ? 'nd' : format(d)\n    }\n}\n\nfunction text_for_data(d, f) {\n    if (d === null)\n        return null_or_d(null);\n    if (d.length == 1) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g'));\n        return null_or_d(d[0], format);\n    }\n    if (d.length == 2) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g')),\n            t = null_or_d(d[0], format);\n        t += ', ' + null_or_d(d[1], format);\n        t += ': ' + null_or_d(f, format);\n        return t;\n    }\n    return '';\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? '(nd)' : format(d);\n    }\n}\n\nfunction csv_converter(csv_rows) {\n    /** Convert data from a csv file to json-style data.\n\n     File must include a header row.\n\n     */\n    // count rows\n    var c = csv_rows[0].length,\n        converted = [];\n    if (c < 2 || c > 3)\n        throw new Error('CSV file must have 2 or 3 columns');\n    // set up rows\n    for (var i = 1; i < c; i++) {\n        converted[i - 1] = {};\n    }\n    // fill\n    csv_rows.slice(1).forEach(function(row) {\n        for (var i = 1, l = row.length; i < l; i++) {\n            converted[i - 1][row[0]] = row[i];\n        }\n    });\n    return converted;\n}\n\nfunction genes_for_gene_reaction_rule(rule) {\n    /** Find unique genes in gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     Returns\n     -------\n\n     An array of gene strings.\n\n     */\n    var genes = rule\n    // remove ANDs and ORs, surrounded by space or parentheses\n            .replace(AND_OR, '$1$2')\n    // remove parentheses\n            .replace(ALL_PARENS, '')\n    // split on whitespace\n            .split(' ')\n            .filter(function(x) { return x != ''; });\n    // unique strings\n    return utils.unique_strings_array(genes);\n}\n\nfunction evaluate_gene_reaction_rule(rule, gene_values, and_method_in_gene_reaction_rule) {\n    /** Return a value given the rule and gene_values object.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     gene_values: Object with gene_ids for keys and numbers for values.\n\n     and_method_in_gene_reaction_rule: Either 'mean' or 'min'.\n\n     */\n\n    var null_val = [null],\n        l = 1;\n    // make an array of nulls as the default\n    for (var gene_id in gene_values) {\n        null_val = gene_values[gene_id].map(function() { return null; });\n        l = null_val.length;\n        break;\n    }\n\n    if (rule == '') return utils.clone(null_val);\n\n    // for each element in the arrays\n    var out = [];\n    for (var i = 0; i < l; i++) {\n        // get the rule\n        var curr_val = rule;\n\n        // put all the numbers into the expression\n        var all_null = true;\n        for (var gene_id in gene_values) {\n            var f = _parse_float_or_null(gene_values[gene_id][i]);\n            if (f === null) {\n                f = 0;\n            } else {\n                all_null = false;\n            }\n            curr_val = replace_gene_in_rule(curr_val, gene_id, f);\n        }\n        if (all_null) {\n            out.push(null);\n            continue;\n        }\n\n        // recursively evaluate\n        while (true) {\n            // arithemtic expressions\n            var new_curr_val = curr_val;\n\n            // take out excessive parentheses\n            new_curr_val = new_curr_val.replace(EXCESS_PARENS, ' $1 ');\n\n            // or's\n            new_curr_val = new_curr_val.replace(OR_EXPRESSION, function(match, p1, p2, p3) {\n                // sum\n                var nums = p2.split(OR).map(parseFloat),\n                    sum = nums.reduce(function(a, b) { return a + b;});\n                return p1 + sum + p3;\n            });\n            // and's\n            new_curr_val = new_curr_val.replace(AND_EXPRESSION, function(match, p1, p2, p3) {\n                // find min\n                var nums = p2.split(AND).map(parseFloat),\n                    val = (and_method_in_gene_reaction_rule == 'min' ?\n                           Math.min.apply(null, nums) :\n                           nums.reduce(function(a, b) { return a + b; }) / nums.length);\n                return p1 + val + p3;\n            });\n            // break if there is no change\n            if (new_curr_val == curr_val)\n                break;\n            curr_val = new_curr_val;\n        }\n        // strict test for number\n        var num = Number(curr_val);\n        if (isNaN(num)) {\n            console.warn('Could not evaluate ' + rule);\n            out.push(null);\n        } else {\n            out.push(num);\n        }\n    }\n    return out;\n}\n\nfunction replace_gene_in_rule (rule, gene_id, val) {\n    // get the escaped string, with surrounding space or parentheses\n    var space_or_par_start = '(^|[\\\\\\s\\\\\\(\\\\\\)])'\n    var space_or_par_finish = '([\\\\\\s\\\\\\(\\\\\\)]|$)'\n    var escaped = space_or_par_start + escape_reg_exp(gene_id) + space_or_par_finish\n    return rule.replace(new RegExp(escaped, 'g'),  '$1' + val + '$2')\n\n    // definitions\n    function escape_reg_exp(string) {\n        return string.replace(ESCAPE_REG, \"\\\\$1\")\n    }\n}\n\nfunction apply_reaction_data_to_reactions(reactions, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var reaction_id, reaction, segment_id, segment;\n\n    if (data === null) {\n        for (reaction_id in reactions) {\n            reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            for (segment_id in reaction.segments) {\n                segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // apply the datasets to the reactions\n    for (reaction_id in reactions) {\n        reaction = reactions[reaction_id];\n        // check bigg_id and name\n        var d = data[reaction.bigg_id] || data[reaction.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        reaction.gene_string = null;\n        // apply to the segments\n        for (segment_id in reaction.segments) {\n            segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n    }\n    return true;\n}\n\nfunction apply_metabolite_data_to_nodes(nodes, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var node_id;\n\n    if (data === null) {\n        for (node_id in nodes) {\n            nodes[node_id].data = null;\n            nodes[node_id].data_string = '';\n        }\n        return false;\n    }\n\n    // grab the data\n    for (node_id in nodes) {\n        var node = nodes[node_id];\n            // check bigg_id and name\n        var d = data[node.bigg_id] || data[node.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            s = text_for_data(d, f);\n        node.data = f;\n        node.data_string = s;\n    }\n    return true;\n}\n\nfunction apply_gene_data_to_reactions(reactions, gene_data_obj, styles, identifiers_on_map,\n                                      compare_style, and_method_in_gene_reaction_rule) {\n    /** Returns true if data is present\n\n     Arguments\n     ---------\n\n     reactions: The reactions to update.\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { gene_id: value } }\n\n     styles:  Gene styles array.\n\n     identifiers_on_map:\n\n     compare_style:\n\n     and_method_in_gene_reaction_rule:\n\n     */\n\n    if (gene_data_obj === null) {\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            reaction.reverse_flux = false;\n            for (var segment_id in reaction.segments) {\n                var segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // get the null val\n    var null_val = [null];\n    // make an array of nulls as the default\n    for (var reaction_id in gene_data_obj) {\n        for (var gene_id in gene_data_obj[reaction_id]) {\n            null_val = gene_data_obj[reaction_id][gene_id]\n                .map(function() { return null; });\n            break;\n        }\n        break;\n    }\n\n    // apply the datasets to the reactions\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id],\n            rule = reaction.gene_reaction_rule;\n        // find the data\n        var d, gene_values,\n            r_data = gene_data_obj[reaction.bigg_id];\n        if (typeof r_data !== 'undefined') {\n            gene_values = r_data;\n            d = evaluate_gene_reaction_rule(rule, gene_values,\n                                            and_method_in_gene_reaction_rule);\n        } else {\n            gene_values = {};\n            d = utils.clone(null_val);\n        }\n        var f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        // apply to the segments\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n        // always update the gene string\n        reaction.gene_string = gene_string_for_data(rule,\n                                                    gene_values,\n                                                    reaction.genes,\n                                                    styles,\n                                                    identifiers_on_map,\n                                                    compare_style);\n    }\n    return true;\n}\n\nfunction _parse_float_or_null(x) {\n    // strict number casting\n    var f = Number(x);\n    // check for null and '', which haven't been caught yet\n    return (isNaN(f) || parseFloat(x) != f) ? null : f;\n}\n","module.exports = {'version': '1.6.0-beta.3', builder_embed: 'svg.escher-svg .gene-label,svg.escher-svg .label{text-rendering:optimizelegibility;cursor:default}svg.escher-svg #mouse-node{fill:none}svg.escher-svg #canvas{stroke:#ccc;stroke-width:7px;fill:#fff}svg.escher-svg .resize-rect{fill:#000;opacity:0;stroke:none}svg.escher-svg .label{font-family:sans-serif;font-style:italic;font-weight:700;font-size:8px;fill:#000;stroke:none}svg.escher-svg .reaction-label{font-size:30px;fill:#202078;text-rendering:optimizelegibility}svg.escher-svg .node-label{font-size:20px}svg.escher-svg .gene-label{font-size:18px;fill:#202078}svg.escher-svg .text-label .label,svg.escher-svg .text-label-input{font-size:50px}svg.escher-svg .node-circle{stroke-width:2px}svg.escher-svg .midmarker-circle,svg.escher-svg .multimarker-circle{fill:#fff;fill-opacity:.2;stroke:#323232}svg.escher-svg g.selected .node-circle{stroke-width:6px;stroke:#1471c7}svg.escher-svg g.selected .label{fill:#1471c7}svg.escher-svg .metabolite-circle{stroke:#a24510;fill:#e0865b}svg.escher-svg g.selected .metabolite-circle{stroke:#050200}svg.escher-svg .segment{stroke:#334E75;stroke-width:10px;fill:none}svg.escher-svg .arrowhead{fill:#334E75}svg.escher-svg .stoichiometry-label-rect{fill:#fff;opacity:.5}svg.escher-svg .stoichiometry-label{fill:#334E75;font-size:17px}svg.escher-svg .membrane{fill:none;stroke:#fb0}svg.escher-svg .brush .extent{fill-opacity:.1;fill:#000;stroke:#fff;shape-rendering:crispEdges}svg.escher-svg #brush-container .background{fill:none}svg.escher-svg .bezier-circle{fill:#fff}svg.escher-svg .bezier-circle.b1{stroke:red}svg.escher-svg .bezier-circle.b2{stroke:#00f}svg.escher-svg .connect-line{stroke:#c8c8c8}svg.escher-svg .direction-arrow{stroke:#000;stroke-width:1px;fill:#fff;opacity:.3}svg.escher-svg .start-reaction-cursor{cursor:pointer}svg.escher-svg .start-reaction-target{stroke:#646464;fill:none;opacity:.5}svg.escher-svg .rotation-center-line{stroke:red;stroke-width:5px}svg.escher-svg .highlight{fill:#D97000;text-decoration:underline}svg.escher-svg .cursor-grab{cursor:grab;cursor:-webkit-grab}svg.escher-svg .cursor-grabbing{cursor:grabbing;cursor:-webkit-grabbing}svg.escher-svg .edit-text-cursor{cursor:text}'};","/**\n* @license\n*\n* Escher\n* Author: Zachary King\n*\n* The MIT License (MIT)\n*\n* This software is Copyright © 2015 The Regents of the University of\n* California. All Rights Reserved.\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in\n* all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n* THE SOFTWARE.\n*/\n\nmodule.exports = {\n  version: require('./inline').version,\n  Builder: require('./Builder'),\n  Map: require('./Map'),\n  Behavior: require('./Behavior'),\n  KeyManager: require('./KeyManager'),\n  DataMenu: require('./DataMenu'),\n  UndoStack: require('./UndoStack'),\n  CobraModel: require('./CobraModel'),\n  utils: require('./utils'),\n  SearchIndex: require('./SearchIndex'),\n  Settings: require('./Settings'),\n  data_styles: require('./data_styles'),\n  ui: require('./ui'),\n  static: require('./static'),\n  ZoomContainer: require('./ZoomContainer'),\n  libs: {\n    '_': require('underscore'),\n    'underscore': require('underscore'),\n    'tinier': require('tinier'),\n    'baconjs': require('baconjs'),\n    'mousetrap': require('mousetrap'),\n    'vkbeautify': require('vkbeautify'),\n  },\n}\n","/** static */\n\n/* global d3 */\n\nvar utils = require('./utils')\n\nmodule.exports = {\n    load_map_model_from_url: load_map_model_from_url\n}\n\nfunction load_map_model_from_url(map_download_url, model_download_url,\n                                 local_index, options, callback) {\n    var opt = utils.parse_url_components(window, options),\n        to_load = [],\n        load_map = function (fn) { fn(null); },\n        load_model = function (fn) { fn(null); }\n    if (opt.map_name) {\n        var map_path = _get_path('map', opt.map_name,\n                                 local_index, map_download_url)\n        if (map_path) {\n            load_map = function (fn) {\n                d3.json(map_path, function(error, data) {\n                    if (error) console.warn(error)\n                    fn(data)\n                })\n            }\n        }\n    }\n    if (opt.model_name) {\n        var model_path = _get_path('model', opt.model_name,\n                                   local_index, model_download_url)\n        if (model_path) {\n            load_model = function (fn) {\n                d3.json(model_path, function(error, data) {\n                    if (error) console.warn(error)\n                    fn(data)\n                })\n            }\n        }\n    }\n    if (opt.hasOwnProperty('enable_editing')) {\n        options.enable_editing = opt.enable_editing.toLowerCase() === 'true'\n    }\n    load_map(function(map_data) {\n        load_model(function(model_data) {\n            callback(map_data, model_data, options)\n        })\n    })\n}\n\nfunction _get_path(kind, name, index, url) {\n    var match = index[kind+'s'].filter(function(x) {\n        return x[kind+'_name'] == name\n    })\n    if (match.length == 0)\n        throw new Error('Bad ' + kind + ' ' + name)\n    return (url + encodeURIComponent(match[0].organism) +\n            '/' + encodeURIComponent(match[0][kind+'_name'])) + '.json'\n}\n","/** ui */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nmodule.exports = {\n    individual_button: individual_button,\n    radio_button_group: radio_button_group,\n    button_group: button_group,\n    dropdown_menu: dropdown_menu,\n    set_json_input_button: set_json_input_button,\n    set_json_or_csv_input_button: set_json_or_csv_input_button\n};\n\nfunction _button_with_sel(b, button) {\n    var ignore_bootstrap = button.ignore_bootstrap || false\n    b.attr('class', 'btn btn-default simple-button')\n    // icon\n    var c = b.append('span')\n    // text / bootstrap fallback\n    var t = c.append('span')\n    if ('id' in button) b.attr('id', button.id)\n    if ('text' in button) t.text(button.text)\n    if ('icon' in button && !ignore_bootstrap) c.classed(button.icon, true)\n    if (!ignore_bootstrap) t.attr('class', 'hidden')\n    if ('key' in button) set_button(b, button.key)\n\n    // tooltip\n    if ('key_text' in button && 'tooltip' in button && button.key_text !== null)\n        b.attr('title', button.tooltip + button.key_text)\n    else if ('tooltip' in button)\n        b.attr('title', button.tooltip)\n}\n\nfunction individual_button(s, button) {\n    var b = s.append('button')\n    _button_with_sel(b, button)\n}\n\nfunction radio_button_group(s) {\n    var s2 = s.append('li')\n            .attr('class', 'btn-group-vertical')\n            .attr('data-toggle', 'buttons')\n    return { button: function(button) {\n        var ignore_bootstrap = button.ignore_bootstrap || false\n        var b = s2.append('label')\n        b.append('input').attr('type', 'radio')\n        _button_with_sel(b, button)\n        return this\n    }}\n}\n\nfunction button_group(s) {\n    var s2 = s.attr('class', 'btn-group-vertical');\n    return { button: function(button) {\n        var b = s2.append(\"button\")\n        _button_with_sel(b, button)\n        return this;\n    }};\n}\n\nfunction dropdown_menu(s, name, pull_right) {\n    if (pull_right === undefined) pull_right = false;\n    var s2 = s.append('li')\n            .attr('class', 'dropdown');\n    s2.append('button').text(name+\" \")\n        .attr('class', 'btn btn-link btn-sm dropdown-button')\n        .attr('data-toggle', 'dropdown')\n        .append('b').attr('class', 'caret');\n    var ul = s2.append('ul')\n            .attr('class', 'dropdown-menu')\n            .classed('pull-right', pull_right)\n            .attr('role', 'menu')\n            .attr('aria-labelledby', 'dLabel');\n    return {\n        dropdown: s2,\n        button: function(button) {\n            var li = ul.append(\"li\")\n                    .attr('role', 'presentation')\n                    .datum(button),\n                link = li.append(\"a\")\n                    .attr('href', '#'),\n                icon = link.append('span')\n                    .attr('class', 'dropdown-button-icon'),\n                text = link.append('span')\n                    .attr('class', 'dropdown-button-text');\n            if ('id' in button) li.attr('id', button.id);\n\n            // text\n            if ('key_text' in button && 'text' in button && button.key_text !== null)\n                text.text(\" \"+button.text + button.key_text);\n            else if ('text' in button)\n                text.text(\" \"+button.text);\n\n            if ('icon' in button) icon.classed(button.icon, true);\n\n            if ('key' in button) {\n                set_button(link, button.key);\n            } else if ('input' in button) {\n                var input = button.input,\n                    out = (input.accept_csv ?\n                           set_json_or_csv_input_button(link, li, input.pre_fn,\n                                                        input.fn, input.failure_fn) :\n                           set_json_input_button(link, li, input.pre_fn,\n                                                 input.fn, input.failure_fn));\n                // assign a function to the key\n                if ('assign' in input && 'key' in input)\n                    input.assign[input.key] = out;\n            }\n            return this;\n        },\n        divider: function() {\n            ul.append(\"li\")\n                .attr('role', 'presentation')\n                .attr('class', 'divider');\n            return this;\n        }\n    };\n}\n\nfunction set_button(b, key) {\n    b.on(\"click\", function() {\n        key.fn.call(key.target);\n    });\n}\n\nfunction set_json_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json(this.files[0],\n                                function(e, d) {\n                                    post_fn(e, d);\n                                    this.value = \"\";\n                                }.bind(this),\n                                pre_fn,\n                                failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n\nfunction set_json_or_csv_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json_or_csv(this.files[0],\n                                       data_styles.csv_converter,\n                                       function(e, d) {\n                                           post_fn(e, d);\n                                           this.value = \"\";\n                                       }.bind(this),\n                                       pre_fn,\n                                       failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n","/* global d3, Blob, XMLSerializer */\n\nvar vkbeautify = require('vkbeautify');\nvar _ = require('underscore');\ntry {\n    var saveAs = require('filesaverjs').saveAs;\n} catch (e) {\n    console.warn('filesaverjs not available');\n}\n\n\nmodule.exports = {\n    set_options: set_options,\n    remove_child_nodes: remove_child_nodes,\n    load_css: load_css,\n    load_files: load_files,\n    load_the_file: load_the_file,\n    make_class: make_class,\n    setup_defs: setup_defs,\n    draw_an_object: draw_an_object,\n    draw_a_nested_object: draw_a_nested_object,\n    make_array: make_array,\n    make_array_ref: make_array_ref,\n    compare_arrays: compare_arrays,\n    array_to_object: array_to_object,\n    clone: clone,\n    extend: extend,\n    unique_concat: unique_concat,\n    unique_strings_array: unique_strings_array,\n    debounce: debounce,\n    object_slice_for_ids: object_slice_for_ids,\n    object_slice_for_ids_ref: object_slice_for_ids_ref,\n    c_plus_c: c_plus_c,\n    c_minus_c: c_minus_c,\n    c_times_scalar: c_times_scalar,\n    download_json: download_json,\n    load_json: load_json,\n    load_json_or_csv: load_json_or_csv,\n    download_svg: download_svg,\n    download_png: download_png,\n    rotate_coords_recursive: rotate_coords_recursive,\n    rotate_coords: rotate_coords,\n    get_angle: get_angle,\n    to_degrees: to_degrees,\n    angle_for_event: angle_for_event,\n    distance: distance,\n    check_undefined: check_undefined,\n    compartmentalize: compartmentalize,\n    decompartmentalize: decompartmentalize,\n    mean: mean,\n    median: median,\n    quartiles: quartiles,\n    random_characters: random_characters,\n    generate_map_id: generate_map_id,\n    check_for_parent_tag: check_for_parent_tag,\n    name_to_url: name_to_url,\n    parse_url_components: parse_url_components,\n    get_document: get_document,\n    get_window: get_window,\n    d3_transform_catch: d3_transform_catch,\n    check_browser: check_browser\n};\n\n\n// definitions\nfunction _check_filesaver() {\n    /** Check if Blob is available, and alert if it is not. */\n    try {\n        var isFileSaverSupported = !!new Blob();\n    } catch (e) {\n        alert(\"Blob not supported\");\n    }\n}\n\nfunction set_options(options, defaults, must_be_float) {\n    if (options === undefined || options === null)\n        return defaults;\n    var i = -1,\n        out = {};\n    for (var key in defaults) {\n        var has_key = ((key in options) &&\n                       (options[key] !== null) &&\n                       (options[key] !== undefined));\n        var val = (has_key ? options[key] : defaults[key]);\n        if (must_be_float && key in must_be_float) {\n            val = parseFloat(val);\n            if (isNaN(val)) {\n                if (has_key) {\n                    console.warn('Bad float for option ' + key);\n                    val = parseFloat(defaults[key]);\n                    if (isNaN(val)) {\n                        console.warn('Bad float for default ' + key);\n                        val = null;\n                    }\n                } else {\n                    console.warn('Bad float for default ' + key);\n                    val = null;\n                }\n            }\n        }\n        out[key] = val;\n    }\n    return out;\n}\n\n\nfunction remove_child_nodes(selection) {\n    /** Removes all child nodes from a d3 selection\n\n     */\n    var node = selection.node();\n    while (node.hasChildNodes()) {\n        node.removeChild(node.lastChild);\n    }\n}\n\n\nfunction load_css(css_path, callback) {\n    var css = \"\";\n    if (css_path) {\n        d3.text(css_path, function(error, text) {\n            if (error) {\n                console.warn(error);\n            }\n            css = text;\n            callback(css);\n        });\n    }\n    return false;\n};\n\n\nfunction load_the_file(t, file, callback, value) {\n    /** Load a file.\n\n     t: this context for callback. Should be an object.\n\n     files_to_load: A filename to load. Must be JSON or CSS.\n\n     callback: Function to run after the file is loaded. Takes the arguments\n     error and data.\n\n     value: If the value is specified, just assign it and do not execute the\n     ajax query.\n\n     */\n    if (value) {\n        if (file) console.warn('File ' + file + ' overridden by value.');\n        callback.call(t, null, value);\n        return;\n    }\n    if (!file) {\n        callback.call(t, 'No filename', null);\n        return;\n    }\n    if (ends_with(file, 'json'))\n        d3.json(file, function(e, d) { callback.call(t, e, d); });\n    else if (ends_with(file, 'css'))\n        d3.text(file, function(e, d) { callback.call(t, e, d); });\n    else\n        callback.call(t, 'Unrecognized file type', null);\n    return;\n\n    // definitions\n    function ends_with(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n}\n\n\nfunction load_files(t, files_to_load, final_callback) {\n    /** Load multiple files asynchronously by calling utils.load_the_file.\n\n     t: this context for callback. Should be an object.\n\n     files_to_load: A list of objects with the attributes:\n\n        { file: a_filename.json, callback: a_callback_fn }\n\n        File must be JSON or CSS.\n\n     final_callback: Function that runs after all files have loaded.\n\n     */\n    if (files_to_load.length === 0) final_callback.call(t);\n    var i = -1,\n        remaining = files_to_load.length;\n    while (++i < files_to_load.length) {\n        load_the_file(\n            t,\n            files_to_load[i].file,\n            function(e, d) {\n                this.call(t, e, d);\n                if (!--remaining) final_callback.call(t);\n            }.bind(files_to_load[i].callback),\n            files_to_load[i].value\n        );\n    }\n}\n\n\nfunction make_class(){\n    /** Create a constructor that returns a new object with our without the\n     'new' keyword.\n\n     Adapted from Hubert Kauker (MIT Licensed), John Resig (MIT Licensed).\n     http://stackoverflow.com/questions/7892884/simple-class-instantiation\n\n     */\n    var is_internal,\n        constructor = function(args) {\n            if (this instanceof constructor) {\n                if (typeof this.init === 'function') {\n                    this.init.apply(this, is_internal ? args : arguments);\n                }\n            } else {\n                is_internal = true;\n                var instance = new constructor(arguments);\n                is_internal = false;\n                return instance;\n            }\n        };\n    return constructor;\n}\n\n\nfunction setup_defs(svg, style) {\n    // add stylesheet\n    svg.select(\"defs\").remove();\n    var defs = svg.append(\"defs\");\n    // make sure the defs is the first node\n    var node = defs.node();\n    node.parentNode.insertBefore(node, node.parentNode.firstChild);\n    defs.append(\"style\")\n        .attr(\"type\", \"text/css\")\n        .text(style);\n    return defs;\n}\n\nfunction draw_an_object(container_sel, parent_node_selector, children_selector,\n                        object, id_key, create_function, update_function,\n                        exit_function) {\n    /** Run through the d3 data binding steps for an object. Also checks to\n     make sure none of the values in the *object* are undefined, and\n     ignores those.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     parent_node_selector: A selector string for a subselection of\n     container_sel.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object: An object to bind to the selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var draw_object = {};\n    for (var id in object) {\n        if (object[id] === undefined) {\n            console.warn('Undefined value for id ' + id + ' in object. Ignoring.');\n        } else {\n            draw_object[id] = object[id];\n        }\n    }\n\n    var sel = container_sel.select(parent_node_selector)\n            .selectAll(children_selector)\n            .data(make_array_ref(draw_object, id_key),\n                  function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction draw_a_nested_object(container_sel, children_selector, object_data_key,\n                              id_key, create_function, update_function,\n                              exit_function) {\n    /** Run through the d3 data binding steps for an object that is nested\n     within another element with d3 data.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object_data_key: A key for the parent object containing data for the\n     new selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var sel = container_sel.selectAll(children_selector)\n            .data(function(d) {\n                return make_array_ref(d[object_data_key], id_key);\n            }, function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction make_array(obj, id_key) { // is this super slow?\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = clone(obj[key]);\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction make_array_ref(obj, id_key) {\n    /** Turn the object into an array, but only by reference. Faster than\n     make_array.\n\n     */\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = obj[key];\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction compare_arrays(a1, a2) {\n    /** Compares two simple (not-nested) arrays.\n\n     */\n    if (!a1 || !a2) return false;\n    if (a1.length != a2.length) return false;\n    for (var i = 0, l=a1.length; i < l; i++) {\n        if (a1[i] != a2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction array_to_object(arr) {\n    /** Convert an array of objects to an object with all keys and values\n     that are arrays of the same length as arr. Fills in spaces with null.\n\n     For example, [ { a: 1 }, { b: 2 }] becomes { a: [1, null], b: [null, 2] }.\n\n     */\n    // new object\n    var obj = {};\n    // for each element of the array\n    for (var i = 0, l = arr.length; i < l; i++) {\n        var column = arr[i],\n            keys = Object.keys(column);\n        for (var k = 0, nk = keys.length; k < nk; k++) {\n            var id = keys[k];\n            if (!(id in obj)) {\n                var n = [];\n                // fill spaces with null\n                for (var j = 0; j < l; j++) {\n                    n[j] = null;\n                }\n                n[i] = column[id];\n                obj[id] = n;\n            } else {\n                obj[id][i] = column[id];\n            }\n        }\n    }\n    return obj;\n}\n\n/**\n * Deep copy for array and object types. All other types are returned by\n * reference.\n * @param {T<Object|Array|*>} obj - The object to copy.\n * @return {T} The copied object.\n */\nfunction clone (obj) {\n    if (_.isArray(obj))\n        return _.map(obj, function(t) { return clone(t) })\n    else if (_.isObject(obj))\n        return _.mapObject(obj, function (t, k) { return clone(t) })\n    else\n        return obj\n}\n\nfunction extend(obj1, obj2, overwrite) {\n    /** Extends obj1 with keys/values from obj2. Performs the extension\n     cautiously, and does not override attributes, unless the overwrite\n     argument is true.\n\n     Arguments\n     ---------\n\n     obj1: Object to extend\n\n     obj2: Object with which to extend.\n\n     overwrite: (Optional, Default false) Overwrite attributes in obj1.\n\n     */\n\n    if (overwrite === undefined)\n        overwrite = false;\n\n    for (var attrname in obj2) {\n        if (!(attrname in obj1) || overwrite) // UNIT TEST This\n            obj1[attrname] = obj2[attrname];\n        else\n            throw new Error('Attribute ' + attrname + ' already in object.');\n    }\n}\n\nfunction unique_concat(arrays) {\n    var new_array = [];\n    arrays.forEach(function (a) {\n        a.forEach(function(x) {\n            if (new_array.indexOf(x) < 0)\n                new_array.push(x);\n        });\n    });\n    return new_array;\n}\n\nfunction unique_strings_array(arr) {\n    /** Return unique values in array of strings.\n\n     http://stackoverflow.com/questions/1960473/unique-values-in-an-array\n\n     */\n    var a = [];\n    for (var i = 0, l = arr.length; i < l; i++)\n        if (a.indexOf(arr[i]) === -1)\n            a.push(arr[i]);\n    return a;\n}\n\nfunction debounce(func, wait, immediate) {\n    /** Returns a function, that, as long as it continues to be invoked, will\n     not be triggered.\n\n     The function will be called after it stops being called for N\n     milliseconds. If `immediate` is passed, trigger the function on the leading\n     edge, instead of the trailing.\n\n     */\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\nfunction object_slice_for_ids(obj, ids) {\n    /** Return a copy of the object with just the given ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = clone(obj[ids[i]]);\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction object_slice_for_ids_ref(obj, ids) {\n    /** Return a reference of the object with just the given ids. Faster\n     than object_slice_for_ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = obj[ids[i]];\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction c_plus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x + coords2.x,\n             \"y\": coords1.y + coords2.y };\n}\nfunction c_minus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x - coords2.x,\n             \"y\": coords1.y - coords2.y };\n}\n\nfunction c_times_scalar(coords, scalar) {\n    return { \"x\": coords.x * scalar,\n             \"y\": coords.y * scalar };\n}\n\nfunction download_json(json, name) {\n    /** Download json file in a blob.\n\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    var j = JSON.stringify(json),\n        blob = new Blob([j], {type: \"application/json\"});\n    saveAs(blob, name + '.json');\n}\n\nfunction load_json(f, callback, pre_fn, failure_fn) {\n    /** Try to load the file as JSON.\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     */\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n\n    var reader = new window.FileReader();\n    // Closure to capture the file information.\n    reader.onload = function(event) {\n        var result = event.target.result,\n            data;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            // if it failed, return the error\n            callback(e, null);\n            return;\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n}\n\nfunction load_json_or_csv(f, csv_converter, callback, pre_fn, failure_fn,\n                          debug_event) {\n    /** Try to load the file as JSON or CSV (JSON first).\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     csv_converter: A function to convert the CSV output to equivalent JSON.\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     debug_event: (optional) An event, with a string at event.target.result, to\n     load as though it was the contents of a loaded file.\n\n     */\n\n    // Capture the file information.\n    var onload_function = function(event) {\n        var result = event.target.result,\n            data, errors;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            errors = 'JSON error: ' + e;\n\n            // try csv\n            try {\n                data = csv_converter(d3.csv.parseRows(result));\n            } catch (e) {\n                // if both failed, return the errors\n                callback(errors + '\\nCSV error: ' + e, null);\n                return;\n            }\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (debug_event !== undefined && debug_event !== null) {\n        console.warn('Debugging load_json_or_csv');\n        return onload_function(debug_event);\n    }\n\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n    var reader = new window.FileReader();\n\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.onload = onload_function;\n    reader.readAsText(f);\n}\n\nfunction download_svg(name, svg_sel, do_beautify) {\n    /** Download an svg file using FileSaver.js.\n     *\n     * Arguments\n     * ---------\n     *\n     * name: The filename (without extension).\n     *\n     * svg_sel: The d3 selection for the SVG element.\n     *\n     * do_beautify: (Boolean) If true, then beautify the SVG output.\n     *\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    // make the xml string\n    var xml = (new XMLSerializer()).serializeToString(svg_sel.node());\n    if (do_beautify) xml = vkbeautify.xml(xml);\n    xml = ('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n           '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n' +\n           ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n           xml);\n\n    // save\n    var blob = new Blob([xml], { type: 'image/svg+xml' });\n    saveAs(blob, name + '.svg');\n};\n\nfunction download_png(name, svg_sel, do_beautify) {\n    /** Download a png file using FileSaver.js.\n     *\n     * Arguments\n     * ---------\n     *\n     * name: The filename (without extension).\n     *\n     * svg_sel: The d3 selection for the SVG element.\n     *\n     * do_beautify: (Boolean) If true, then beautify the SVG output.\n     *\n     */\n\n    // Alert if blob isn't going to work\n    _check_filesaver();\n\n    // Make the xml string\n    var xml = (new XMLSerializer()).serializeToString(svg_sel.node());\n    if (do_beautify) xml = vkbeautify.xml(xml);\n    xml = ('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n           '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n' +\n           ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n           xml);\n\n    // Canvas to hold the image\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    // Get SVG size\n    var svg_size = svg_sel.node().getBBox();\n    var svg_width = svg_size.width + svg_size.x;\n    var svg_height = svg_size.height + svg_size.y;\n\n    // Canvas size = SVG size. Constrained to 10000px for very large SVGs\n    if (svg_width < 10000 && svg_height < 10000) {\n        canvas.width = svg_width;\n        canvas.height = svg_height;\n    } else {\n        if (canvas.width > canvas.height) {\n            canvas.width = 10000;\n            canvas.height = 10000*(svg_height/svg_width);\n        } else {\n            canvas.width = 10000*(svg_width/svg_height);\n            canvas.height = 10000;\n        }\n    }\n\n    // Image element appended with data\n    var base_image = new Image();\n    base_image.src = 'data:image/svg+xml;base64,' + btoa(xml);\n\n    base_image.onload = function() {\n        // Draw image to canvas with white background\n        context.fillStyle=\"#FFF\";\n        context.fillRect( 0, 0, canvas.width, canvas.height);\n        context.drawImage(base_image, 0, 0, canvas.width, canvas.height);\n\n        // Save image\n        canvas.toBlob(function(blob) {\n            saveAs(blob, name + \".png\");\n        });\n    };\n};\n\nfunction rotate_coords_recursive(coords_array, angle, center) {\n    var rot = function(c) { return rotate_coords(c, angle, center); };\n    return coords_array.map(rot);\n}\n\nfunction rotate_coords(c, angle, center) {\n    /** Calculates displacement { x: dx, y: dy } based on rotating point c around\n     center with angle.\n\n     */\n    var dx = Math.cos(-angle) * (c.x - center.x) +\n            Math.sin(-angle) * (c.y - center.y)\n            + center.x - c.x,\n        dy = - Math.sin(-angle) * (c.x - center.x) +\n            Math.cos(-angle) * (c.y - center.y)\n            + center.y - c.y;\n    return { x: dx, y: dy };\n}\n\nfunction get_angle(coords) {\n    /* Takes an array of 2 coordinate objects {\"x\": 1, \"y\": 1}\n     *\n     * Returns angle between 0 and 2PI.\n     */\n    var denominator = coords[1].x - coords[0].x,\n        numerator = coords[1].y - coords[0].y;\n    if (denominator==0 && numerator >= 0) return Math.PI/2;\n    else if (denominator==0 && numerator < 0) return 3*Math.PI/2;\n    else if (denominator >= 0 && numerator >= 0) return Math.atan(numerator/denominator);\n    else if (denominator >= 0) return (Math.atan(numerator/denominator) + 2*Math.PI);\n    else return (Math.atan(numerator/denominator) + Math.PI);\n}\n\nfunction to_degrees(radians) { return radians*180/Math.PI; }\n\nfunction angle_for_event(displacement, point, center) {\n    var gamma =  Math.atan2((point.x - center.x), (center.y - point.y)),\n        beta = Math.atan2((point.x - center.x + displacement.x),\n                          (center.y - point.y - displacement.y)),\n        angle = beta - gamma;\n    return angle;\n}\n\nfunction distance(start, end) { return Math.sqrt(Math.pow(end.y-start.y, 2) + Math.pow(end.x-start.x, 2)); }\n\nfunction check_undefined(args, names) {\n    /** Report an error if any of the arguments are undefined.\n\n     Call by passing in *arguments* from any function and an array of\n     argument names.\n\n     */\n    names.map(function(name, i) {\n        if (args[i]===undefined) {\n            console.error('Argument is undefined: '+String(names[i]));\n        }\n    });\n}\n\nfunction compartmentalize(bigg_id, compartment_id) {\n    return bigg_id + '_' + compartment_id;\n}\n\n\n// definitions\nfunction decompartmentalize(id) {\n    /** Convert ids to bigg_id and compartment_id.\n\n     */\n    var out = no_compartment(id);\n    if (out===null) out = [id, null];\n    return out;\n\n    // definitions\n    function no_compartment(id) {\n        /** Returns an array of [bigg_id, compartment id].\n\n         Matches compartment ids with length 1 or 2.\n\n         Return null if no match is found.\n\n         */\n        var reg = /(.*)_([a-z0-9]{1,2})$/,\n            result = reg.exec(id);\n        if (result===null) return null;\n        return result.slice(1,3);\n    }\n}\n\nfunction mean(array) {\n    var sum = array.reduce(function(a, b) { return a + b; });\n    var avg = sum / array.length;\n    return avg;\n}\n\nfunction median(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if(array.length % 2 == 1)\n        return array[half];\n    else\n        return (array[half-1] + array[half]) / 2.0;\n}\n\nfunction quartiles(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if (array.length == 1)\n        return [ array[0], array[0], array[0] ];\n    else if (array.length % 2 == 1)\n        return [ median(array.slice(0, half)),\n                 array[half],\n                 median(array.slice(half + 1)) ];\n    else\n        return [ median(array.slice(0, half)),\n                 (array[half-1] + array[half]) / 2.0,\n                 median(array.slice(half)) ];\n}\n\nfunction random_characters(num) {\n    // Thanks to @csharptest.net\n    // http://stackoverflow.com/questions/1349404/generate-a-string-of-5-random-characters-in-javascript\n    var text = '',\n        possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < num; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    return text;\n}\n\nfunction generate_map_id() {\n    return random_characters(12);\n}\n\nfunction check_for_parent_tag(el, tag) {\n    /** Check that the selection has the given parent tag.\n\n     el: A d3 selection or node.\n\n     tag: A tag name (case insensitive)\n\n     */\n    // make sure it is a node\n    if (el instanceof Array)\n        el = el.node();\n    while (el.parentNode !== null) {\n        el = el.parentNode;\n        if (el.tagName === undefined) continue;\n        if (el.tagName.toLowerCase() === tag.toLowerCase())\n            return true;\n    }\n    return false;\n}\n\nfunction name_to_url(name, download_url) {\n    /** Convert model or map name to url.\n\n     Arguments\n     ---------\n\n     name: The short name, e.g. e_coli.iJO1366.central_metabolism.\n\n     download_url: The url to prepend (optional).\n\n     */\n\n    if (download_url !== undefined && download_url !== null) {\n        // strip download_url\n        download_url = download_url.replace(/^\\/|\\/$/g, '');\n        name = [download_url, name].join('/');\n    }\n    // strip final path\n    return name.replace(/^\\/|\\/$/g, '') + '.json';\n}\n\nfunction parse_url_components(the_window, options) {\n    /** Parse the URL and return options based on the URL arguments.\n\n     Arguments\n     ---------\n\n     the_window: A reference to the global window.\n\n     options: (optional) an existing options object to which new options\n     will be added. Overwrites existing arguments in options.\n\n     Adapted from http://stackoverflow.com/questions/979975/how-to-get-the-value-from-url-parameter\n\n     */\n    if (_.isUndefined(options)) options = {}\n\n    var query = the_window.location.search.substring(1),\n        vars = query.split('&')\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split('='),\n            val = decodeURIComponent(pair[1])\n        // deal with array options\n        if (pair[0].indexOf('[]') == pair[0].length - 2) {\n            var o = pair[0].replace('[]', '')\n            if (!(o in options))\n                options[o] = []\n            options[o].push(val)\n        } else {\n            options[pair[0]] = val\n        }\n    }\n    return options\n}\n\n\nfunction get_document(node) {\n    /** Get the document for the node */\n    return node.ownerDocument;\n}\n\nfunction get_window(node) {\n    /** Get the window for the node */\n    return get_document(node).defaultView;\n}\n\nfunction d3_transform_catch(transform_attr) {\n    /** Return the result of d3.transform, but catch errors if we are in\n     node/jsdom. See also https://github.com/mbostock/d3/issues/1545\n\n     */\n    try {\n        return d3.transform(transform_attr);\n    } catch (err) {\n        console.error('Cannot run d3.transform, probably becuase this is a node/jsdom test. ' +\n                      'Returning a tranform object for testing.');\n        return { translate: [0, 0], rotate: 0 };\n    }\n}\n\nfunction check_browser(name) {\n    /** Look for name in the user agent string */\n    var browser = function() {\n        /** Thanks to http://stackoverflow.com/questions/2400935/browser-detection-in-javascript */\n        var ua = navigator.userAgent,\n            M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [],\n            tem;\n        if (/trident/i.test(M[1])) {\n            tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n            return 'IE '+ (tem[1] || '');\n        }\n        if (M[1] === 'Chrome') {\n            tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n            if (tem != null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\n        }\n        M = M[2] ? [ M[1], M[2] ]: [ navigator.appName, navigator.appVersion, '-?' ];\n        if((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\n        return M.join(' ');\n    };\n\n    try {\n        // navigator.userAgent is deprecated, so don't count on it\n        return browser().toLowerCase().indexOf(name) > -1;\n    } catch (e) {\n        return false;\n    }\n}\n","(function() {\nvar _slice = Array.prototype.slice;\nvar Bacon = {\n  toString: function () {\n    return \"Bacon\";\n  }\n};\n\nBacon.version = '0.7.89';\n\nvar Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\nvar nop = function () {};\nvar latter = function (_, x) {\n  return x;\n};\nvar former = function (x, _) {\n  return x;\n};\nvar cloneArray = function (xs) {\n  return xs.slice(0);\n};\nvar assert = function (message, condition) {\n  if (!condition) {\n    throw new Exception(message);\n  }\n};\nvar assertObservableIsProperty = function (x) {\n  if ((x != null ? x._isObservable : void 0) && !(x != null ? x._isProperty : void 0)) {\n    throw new Exception(\"Observable is not a Property : \" + x);\n  }\n};\nvar assertEventStream = function (event) {\n  if (!(event != null ? event._isEventStream : void 0)) {\n    throw new Exception(\"not an EventStream : \" + event);\n  }\n};\n\nvar assertObservable = function (event) {\n  if (!(event != null ? event._isObservable : void 0)) {\n    throw new Exception(\"not an Observable : \" + event);\n  }\n};\nvar assertFunction = function (f) {\n  return assert(\"not a function : \" + f, _.isFunction(f));\n};\nvar isArray = Array.isArray || function (xs) {\n  return xs instanceof Array;\n};\nvar isObservable = function (x) {\n  return x && x._isObservable;\n};\nvar assertArray = function (xs) {\n  if (!isArray(xs)) {\n    throw new Exception(\"not an array : \" + xs);\n  }\n};\nvar assertNoArguments = function (args) {\n  return assert(\"no arguments supported\", args.length === 0);\n};\nvar assertString = function (x) {\n  if (typeof x === \"string\") {\n    throw new Exception(\"not a string : \" + x);\n  }\n};\n\nvar extend = function (target) {\n  var length = arguments.length;\n  for (var i = 1; 1 < length ? i < length : i > length; 1 < length ? i++ : i--) {\n    for (var prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n};\n\nvar inherit = function (child, parent) {\n  var hasProp = ({}).hasOwnProperty;\n  var ctor = function () {};\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) {\n      child[key] = parent[key];\n    }\n  }\n  return child;\n};\n\nvar _ = {\n  indexOf: (function () {\n    if (Array.prototype.indexOf) {\n      return function (xs, x) {\n        return xs.indexOf(x);\n      };\n    } else {\n      return function (xs, x) {\n        for (var i = 0, y; i < xs.length; i++) {\n          y = xs[i];\n          if (x === y) {\n            return i;\n          }\n        }\n        return -1;\n      };\n    }\n  })(),\n  indexWhere: function (xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n      y = xs[i];\n      if (f(y)) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  head: function (xs) {\n    return xs[0];\n  },\n  always: function (x) {\n    return function () {\n      return x;\n    };\n  },\n  negate: function (f) {\n    return function (x) {\n      return !f(x);\n    };\n  },\n  empty: function (xs) {\n    return xs.length === 0;\n  },\n  tail: function (xs) {\n    return xs.slice(1, xs.length);\n  },\n  filter: function (f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        filtered.push(x);\n      }\n    }\n    return filtered;\n  },\n  map: function (f, xs) {\n    return (function () {\n      var result = [];\n      for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n      }\n      return result;\n    })();\n  },\n  each: function (xs, f) {\n    for (var key in xs) {\n      if (Object.prototype.hasOwnProperty.call(xs, key)) {\n        var value = xs[key];\n        f(key, value);\n      }\n    }\n  },\n  toArray: function (xs) {\n    return isArray(xs) ? xs : [xs];\n  },\n  contains: function (xs, x) {\n    return _.indexOf(xs, x) !== -1;\n  },\n  id: function (x) {\n    return x;\n  },\n  last: function (xs) {\n    return xs[xs.length - 1];\n  },\n  all: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (!f(x)) {\n        return false;\n      }\n    }\n    return true;\n  },\n  any: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  without: function (x, xs) {\n    return _.filter(function (y) {\n      return y !== x;\n    }, xs);\n  },\n  remove: function (x, xs) {\n    var i = _.indexOf(xs, x);\n    if (i >= 0) {\n      return xs.splice(i, 1);\n    }\n  },\n  fold: function (xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      seed = f(seed, x);\n    }\n    return seed;\n  },\n  flatMap: function (f, xs) {\n    return _.fold(xs, [], function (ys, x) {\n      return ys.concat(f(x));\n    });\n  },\n  cached: function (f) {\n    var value = None;\n    return function () {\n      if (typeof value !== \"undefined\" && value !== null ? value._isNone : undefined) {\n        value = f();\n        f = undefined;\n      }\n      return value;\n    };\n  },\n  bind: function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n  isFunction: function (f) {\n    return typeof f === \"function\";\n  },\n  toString: function (obj) {\n    var internals, key, value;\n    var hasProp = ({}).hasOwnProperty;\n    try {\n      recursionDepth++;\n      if (obj == null) {\n        return \"undefined\";\n      } else if (_.isFunction(obj)) {\n        return \"function\";\n      } else if (isArray(obj)) {\n        if (recursionDepth > 5) {\n          return \"[..]\";\n        }\n        return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n      } else if ((obj != null ? obj.toString : void 0) != null && obj.toString !== Object.prototype.toString) {\n        return obj.toString();\n      } else if (typeof obj === \"object\") {\n        if (recursionDepth > 5) {\n          return \"{..}\";\n        }\n        internals = (function () {\n          var results = [];\n          for (key in obj) {\n            if (!hasProp.call(obj, key)) continue;\n            value = (function () {\n              var error;\n              try {\n                return obj[key];\n              } catch (error) {\n                return error;\n              }\n            })();\n            results.push(_.toString(key) + \":\" + _.toString(value));\n          }\n          return results;\n        })();\n        return \"{\" + internals + \"}\";\n      } else {\n        return obj;\n      }\n    } finally {\n      recursionDepth--;\n    }\n  }\n};\n\nvar recursionDepth = 0;\n\nBacon._ = _;\n\nvar UpdateBarrier = Bacon.UpdateBarrier = (function () {\n  var rootEvent;\n  var waiterObs = [];\n  var waiters = {};\n  var afters = [];\n  var aftersIndex = 0;\n  var flushed = {};\n\n  var afterTransaction = function (f) {\n    if (rootEvent) {\n      return afters.push(f);\n    } else {\n      return f();\n    }\n  };\n\n  var whenDoneWith = function (obs, f) {\n    if (rootEvent) {\n      var obsWaiters = waiters[obs.id];\n      if (!(typeof obsWaiters !== \"undefined\" && obsWaiters !== null)) {\n        obsWaiters = waiters[obs.id] = [f];\n        return waiterObs.push(obs);\n      } else {\n        return obsWaiters.push(f);\n      }\n    } else {\n      return f();\n    }\n  };\n\n  var flush = function () {\n    while (waiterObs.length > 0) {\n      flushWaiters(0, true);\n    }\n    flushed = {};\n  };\n\n  var flushWaiters = function (index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n      flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n      f = obsWaiters[i];\n      f();\n    }\n  };\n\n  var flushDepsOf = function (obs) {\n    if (flushed[obs.id]) return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n      dep = deps[i];\n      flushDepsOf(dep);\n      if (waiters[dep.id]) {\n        var index = _.indexOf(waiterObs, dep);\n        flushWaiters(index, false);\n      }\n    }\n    flushed[obs.id] = true;\n  };\n\n  var inTransaction = function (event, context, f, args) {\n    if (rootEvent) {\n      return f.apply(context, args);\n    } else {\n      rootEvent = event;\n      try {\n        var result = f.apply(context, args);\n\n        flush();\n      } finally {\n        rootEvent = undefined;\n        while (aftersIndex < afters.length) {\n          var after = afters[aftersIndex];\n          aftersIndex++;\n          after();\n        }\n        aftersIndex = 0;\n        afters = [];\n      }\n      return result;\n    }\n  };\n\n  var currentEventId = function () {\n    return rootEvent ? rootEvent.id : undefined;\n  };\n\n  var wrappedSubscribe = function (obs, sink) {\n    var unsubd = false;\n    var shouldUnsub = false;\n    var doUnsub = function () {\n      shouldUnsub = true;\n      return shouldUnsub;\n    };\n    var unsub = function () {\n      unsubd = true;\n      return doUnsub();\n    };\n    doUnsub = obs.dispatcher.subscribe(function (event) {\n      return afterTransaction(function () {\n        if (!unsubd) {\n          var reply = sink(event);\n          if (reply === Bacon.noMore) {\n            return unsub();\n          }\n        }\n      });\n    });\n    if (shouldUnsub) {\n      doUnsub();\n    }\n    return unsub;\n  };\n\n  var hasWaiters = function () {\n    return waiterObs.length > 0;\n  };\n\n  return { whenDoneWith: whenDoneWith, hasWaiters: hasWaiters, inTransaction: inTransaction, currentEventId: currentEventId, wrappedSubscribe: wrappedSubscribe, afterTransaction: afterTransaction };\n})();\n\nfunction Source(obs, sync) {\n  var lazy = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n  this.obs = obs;\n  this.sync = sync;\n  this.lazy = lazy;\n  this.queue = [];\n}\n\nextend(Source.prototype, {\n  _isSource: true,\n\n  subscribe: function (sink) {\n    return this.obs.dispatcher.subscribe(sink);\n  },\n  toString: function () {\n    return this.obs.toString();\n  },\n  markEnded: function () {\n    this.ended = true;\n    return true;\n  },\n  consume: function () {\n    if (this.lazy) {\n      return { value: _.always(this.queue[0]) };\n    } else {\n      return this.queue[0];\n    }\n  },\n  push: function (x) {\n    this.queue = [x];\n    return [x];\n  },\n  mayHave: function () {\n    return true;\n  },\n  hasAtLeast: function () {\n    return this.queue.length;\n  },\n  flatten: true\n});\n\nfunction ConsumingSource() {\n  Source.apply(this, arguments);\n}\n\ninherit(ConsumingSource, Source);\nextend(ConsumingSource.prototype, {\n  consume: function () {\n    return this.queue.shift();\n  },\n  push: function (x) {\n    return this.queue.push(x);\n  },\n  mayHave: function (c) {\n    return !this.ended || this.queue.length >= c;\n  },\n  hasAtLeast: function (c) {\n    return this.queue.length >= c;\n  },\n  flatten: false\n});\n\nfunction BufferingSource(obs) {\n  Source.call(this, obs, true);\n}\n\ninherit(BufferingSource, Source);\nextend(BufferingSource.prototype, {\n  consume: function () {\n    var values = this.queue;\n    this.queue = [];\n    return {\n      value: function () {\n        return values;\n      }\n    };\n  },\n  push: function (x) {\n    return this.queue.push(x.value());\n  },\n  hasAtLeast: function () {\n    return true;\n  }\n});\n\nSource.isTrigger = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s.sync;\n  } else {\n    return s != null ? s._isEventStream : void 0;\n  }\n};\n\nSource.fromObservable = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s;\n  } else if (s != null ? s._isProperty : void 0) {\n    return new Source(s, false);\n  } else {\n    return new ConsumingSource(s, true);\n  }\n};\n\nfunction Desc(context, method, args) {\n  this.context = context;\n  this.method = method;\n  this.args = args;\n}\n\nextend(Desc.prototype, {\n  _isDesc: true,\n  deps: function () {\n    if (!this.cached) {\n      this.cached = findDeps([this.context].concat(this.args));\n    }\n    return this.cached;\n  },\n  toString: function () {\n    return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n  }\n});\n\nvar describe = function (context, method) {\n  var ref = context || method;\n  if (ref && ref._isDesc) {\n    return context || method;\n  } else {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return new Desc(context, method, args);\n  }\n};\n\nvar withDesc = function (desc, obs) {\n  obs.desc = desc;\n  return obs;\n};\n\nvar findDeps = function (x) {\n  if (isArray(x)) {\n    return _.flatMap(findDeps, x);\n  } else if (isObservable(x)) {\n    return [x];\n  } else if (typeof x !== \"undefined\" && x !== null ? x._isSource : undefined) {\n    return [x.obs];\n  } else {\n    return [];\n  }\n};\n\nBacon.Desc = Desc;\nBacon.Desc.empty = new Bacon.Desc(\"\", \"\", []);\n\nvar withMethodCallSupport = function (wrapped) {\n  return function (f) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof f === \"object\" && args.length) {\n      var context = f;\n      var methodName = args[0];\n      f = function () {\n        return context[methodName].apply(context, arguments);\n      };\n      args = args.slice(1);\n    }\n    return wrapped.apply(undefined, [f].concat(args));\n  };\n};\n\nvar makeFunctionArgs = function (args) {\n  args = Array.prototype.slice.call(args);\n  return makeFunction_.apply(undefined, args);\n};\n\nvar partiallyApplied = function (f, applied) {\n  return function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return f.apply(undefined, applied.concat(args));\n  };\n};\n\nvar toSimpleExtractor = function (args) {\n  return function (key) {\n    return function (value) {\n      if (!(typeof value !== \"undefined\" && value !== null)) {\n        return;\n      } else {\n        var fieldValue = value[key];\n        if (_.isFunction(fieldValue)) {\n          return fieldValue.apply(value, args);\n        } else {\n          return fieldValue;\n        }\n      }\n    };\n  };\n};\n\nvar toFieldExtractor = function (f, args) {\n  var parts = f.slice(1).split(\".\");\n  var partFuncs = _.map(toSimpleExtractor(args), parts);\n  return function (value) {\n    for (var i = 0, f; i < partFuncs.length; i++) {\n      f = partFuncs[i];\n      value = f(value);\n    }\n    return value;\n  };\n};\n\nvar isFieldKey = function (f) {\n  return typeof f === \"string\" && f.length > 1 && f.charAt(0) === \".\";\n};\n\nvar makeFunction_ = withMethodCallSupport(function (f) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  if (_.isFunction(f)) {\n    if (args.length) {\n      return partiallyApplied(f, args);\n    } else {\n      return f;\n    }\n  } else if (isFieldKey(f)) {\n    return toFieldExtractor(f, args);\n  } else {\n    return _.always(f);\n  }\n});\n\nvar makeFunction = function (f, args) {\n  return makeFunction_.apply(undefined, [f].concat(args));\n};\n\nvar convertArgsToFunction = function (obs, f, args, method) {\n  if (typeof f !== \"undefined\" && f !== null ? f._isProperty : undefined) {\n    var sampled = f.sampledBy(obs, function (p, s) {\n      return [p, s];\n    });\n    return method.call(sampled, function (_ref) {\n      var p = _ref[0];\n      var s = _ref[1];\n      return p;\n    }).map(function (_ref2) {\n      var p = _ref2[0];\n      var s = _ref2[1];\n      return s;\n    });\n  } else {\n    f = makeFunction(f, args);\n    return method.call(obs, f);\n  }\n};\n\nvar toCombinator = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else if (isFieldKey(f)) {\n    var key = toFieldKey(f);\n    return function (left, right) {\n      return left[key](right);\n    };\n  } else {\n    throw new Exception(\"not a function or a field key: \" + f);\n  }\n};\n\nvar toFieldKey = function (f) {\n  return f.slice(1);\n};\n\nfunction Some(value) {\n  this.value = value;\n}\n\nextend(Some.prototype, {\n  _isSome: true,\n  getOrElse: function () {\n    return this.value;\n  },\n  get: function () {\n    return this.value;\n  },\n  filter: function (f) {\n    if (f(this.value)) {\n      return new Some(this.value);\n    } else {\n      return None;\n    }\n  },\n  map: function (f) {\n    return new Some(f(this.value));\n  },\n  forEach: function (f) {\n    return f(this.value);\n  },\n  isDefined: true,\n  toArray: function () {\n    return [this.value];\n  },\n  inspect: function () {\n    return \"Some(\" + this.value + \")\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n});\n\nvar None = {\n  _isNone: true,\n  getOrElse: function (value) {\n    return value;\n  },\n  filter: function () {\n    return None;\n  },\n  map: function () {\n    return None;\n  },\n  forEach: function () {},\n  isDefined: false,\n  toArray: function () {\n    return [];\n  },\n  inspect: function () {\n    return \"None\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n};\n\nvar toOption = function (v) {\n  if ((typeof v !== \"undefined\" && v !== null ? v._isSome : undefined) || (typeof v !== \"undefined\" && v !== null ? v._isNone : undefined)) {\n    return v;\n  } else {\n    return new Some(v);\n  }\n};\n\nBacon.noMore = \"<no-more>\";\nBacon.more = \"<more>\";\n\nvar eventIdCounter = 0;\n\nfunction Event() {\n  this.id = ++eventIdCounter;\n}\n\nEvent.prototype._isEvent = true;\nEvent.prototype.isEvent = function () {\n  return true;\n};\nEvent.prototype.isEnd = function () {\n  return false;\n};\nEvent.prototype.isInitial = function () {\n  return false;\n};\nEvent.prototype.isNext = function () {\n  return false;\n};\nEvent.prototype.isError = function () {\n  return false;\n};\nEvent.prototype.hasValue = function () {\n  return false;\n};\nEvent.prototype.filter = function () {\n  return true;\n};\nEvent.prototype.inspect = function () {\n  return this.toString();\n};\nEvent.prototype.log = function () {\n  return this.toString();\n};\n\nfunction Next(valueF, eager) {\n  if (!(this instanceof Next)) {\n    return new Next(valueF, eager);\n  }\n\n  Event.call(this);\n\n  if (!eager && _.isFunction(valueF) || (valueF != null ? valueF._isNext : void 0)) {\n    this.valueF = valueF;\n    this.valueInternal = void 0;\n  } else {\n    this.valueF = void 0;\n    this.valueInternal = valueF;\n  }\n}\n\ninherit(Next, Event);\n\nNext.prototype.isNext = function () {\n  return true;\n};\nNext.prototype.hasValue = function () {\n  return true;\n};\nNext.prototype.value = function () {\n  var ref;\n  if ((ref = this.valueF) != null ? ref._isNext : void 0) {\n    this.valueInternal = this.valueF.value();\n    this.valueF = void 0;\n  } else if (this.valueF) {\n    this.valueInternal = this.valueF();\n    this.valueF = void 0;\n  }\n  return this.valueInternal;\n};\n\nNext.prototype.fmap = function (f) {\n  var event, value;\n  if (this.valueInternal) {\n    value = this.valueInternal;\n    return this.apply(function () {\n      return f(value);\n    });\n  } else {\n    event = this;\n    return this.apply(function () {\n      return f(event.value());\n    });\n  }\n};\n\nNext.prototype.apply = function (value) {\n  return new Next(value);\n};\nNext.prototype.filter = function (f) {\n  return f(this.value());\n};\nNext.prototype.toString = function () {\n  return _.toString(this.value());\n};\nNext.prototype.log = function () {\n  return this.value();\n};\nNext.prototype._isNext = true;\n\nfunction Initial(valueF, eager) {\n  if (!(this instanceof Initial)) {\n    return new Initial(valueF, eager);\n  }\n  Next.call(this, valueF, eager);\n}\n\ninherit(Initial, Next);\nInitial.prototype._isInitial = true;\nInitial.prototype.isInitial = function () {\n  return true;\n};\nInitial.prototype.isNext = function () {\n  return false;\n};\nInitial.prototype.apply = function (value) {\n  return new Initial(value);\n};\nInitial.prototype.toNext = function () {\n  return new Next(this);\n};\n\nfunction End() {\n  if (!(this instanceof End)) {\n    return new End();\n  }\n  Event.call(this);\n}\n\ninherit(End, Event);\nEnd.prototype.isEnd = function () {\n  return true;\n};\nEnd.prototype.fmap = function () {\n  return this;\n};\nEnd.prototype.apply = function () {\n  return this;\n};\nEnd.prototype.toString = function () {\n  return \"<end>\";\n};\n\nfunction Error(error) {\n  if (!(this instanceof Error)) {\n    return new Error(error);\n  }\n  this.error = error;\n  Event.call(this);\n}\n\ninherit(Error, Event);\nError.prototype.isError = function () {\n  return true;\n};\nError.prototype.fmap = function () {\n  return this;\n};\nError.prototype.apply = function () {\n  return this;\n};\nError.prototype.toString = function () {\n  return \"<error> \" + _.toString(this.error);\n};\n\nBacon.Event = Event;\nBacon.Initial = Initial;\nBacon.Next = Next;\nBacon.End = End;\nBacon.Error = Error;\n\nvar initialEvent = function (value) {\n  return new Initial(value, true);\n};\nvar nextEvent = function (value) {\n  return new Next(value, true);\n};\nvar endEvent = function () {\n  return new End();\n};\nvar toEvent = function (x) {\n  if (x && x._isEvent) {\n    return x;\n  } else {\n    return nextEvent(x);\n  }\n};\n\nvar idCounter = 0;\nvar registerObs = function () {};\n\nfunction Observable(desc) {\n  this.desc = desc;\n  this.id = ++idCounter;\n  this.initialDesc = this.desc;\n}\n\nextend(Observable.prototype, {\n  _isObservable: true,\n\n  subscribe: function (sink) {\n    return UpdateBarrier.wrappedSubscribe(this, sink);\n  },\n\n  subscribeInternal: function (sink) {\n    return this.dispatcher.subscribe(sink);\n  },\n\n  onValue: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.hasValue()) {\n        return f(event.value());\n      }\n    });\n  },\n\n  onValues: function (f) {\n    return this.onValue(function (args) {\n      return f.apply(undefined, args);\n    });\n  },\n\n  onError: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isError()) {\n        return f(event.error);\n      }\n    });\n  },\n\n  onEnd: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isEnd()) {\n        return f();\n      }\n    });\n  },\n\n  name: function (name) {\n    this._name = name;\n    return this;\n  },\n\n  withDescription: function () {\n    this.desc = describe.apply(undefined, arguments);\n    return this;\n  },\n\n  toString: function () {\n    if (this._name) {\n      return this._name;\n    } else {\n      return this.desc.toString();\n    }\n  },\n\n  deps: function () {\n    return this.desc.deps();\n  },\n\n  internalDeps: function () {\n    return this.initialDesc.deps();\n  }\n});\n\nObservable.prototype.assign = Observable.prototype.onValue;\nObservable.prototype.forEach = Observable.prototype.onValue;\nObservable.prototype.inspect = Observable.prototype.toString;\n\nBacon.Observable = Observable;\n\nfunction CompositeUnsubscribe() {\n  var ss = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n  this.unsubscribe = _.bind(this.unsubscribe, this);\n  this.unsubscribed = false;\n  this.subscriptions = [];\n  this.starting = [];\n  for (var i = 0, s; i < ss.length; i++) {\n    s = ss[i];\n    this.add(s);\n  }\n}\n\nextend(CompositeUnsubscribe.prototype, {\n  add: function (subscription) {\n    var _this2 = this;\n\n    if (this.unsubscribed) {\n      return;\n    }\n    var ended = false;\n    var unsub = nop;\n    this.starting.push(subscription);\n    var unsubMe = function () {\n      if (_this2.unsubscribed) {\n        return;\n      }\n      ended = true;\n      _this2.remove(unsub);\n      return _.remove(subscription, _this2.starting);\n    };\n    unsub = subscription(this.unsubscribe, unsubMe);\n    if (!(this.unsubscribed || ended)) {\n      this.subscriptions.push(unsub);\n    } else {\n      unsub();\n    }\n    _.remove(subscription, this.starting);\n    return unsub;\n  },\n\n  remove: function (unsub) {\n    if (this.unsubscribed) {\n      return;\n    }\n    if (_.remove(unsub, this.subscriptions) !== undefined) {\n      return unsub();\n    }\n  },\n\n  unsubscribe: function () {\n    if (this.unsubscribed) {\n      return;\n    }\n    this.unsubscribed = true;\n    var iterable = this.subscriptions;\n    for (var i = 0; i < iterable.length; i++) {\n      iterable[i]();\n    }\n    this.subscriptions = [];\n    this.starting = [];\n    return [];\n  },\n\n  count: function () {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.subscriptions.length + this.starting.length;\n  },\n\n  empty: function () {\n    return this.count() === 0;\n  }\n});\n\nBacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\nfunction Dispatcher(_subscribe, _handleEvent) {\n  this._subscribe = _subscribe;\n  this._handleEvent = _handleEvent;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.handleEvent = _.bind(this.handleEvent, this);\n  this.pushing = false;\n  this.ended = false;\n  this.prevError = undefined;\n  this.unsubSrc = undefined;\n  this.subscriptions = [];\n  this.queue = [];\n}\n\nDispatcher.prototype.hasSubscribers = function () {\n  return this.subscriptions.length > 0;\n};\n\nDispatcher.prototype.removeSub = function (subscription) {\n  this.subscriptions = _.without(subscription, this.subscriptions);\n  return this.subscriptions;\n};\n\nDispatcher.prototype.push = function (event) {\n  if (event.isEnd()) {\n    this.ended = true;\n  }\n  return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n};\n\nDispatcher.prototype.pushToSubscriptions = function (event) {\n  try {\n    var tmp = this.subscriptions;\n    var len = tmp.length;\n    for (var i = 0; i < len; i++) {\n      var sub = tmp[i];\n      var reply = sub.sink(event);\n      if (reply === Bacon.noMore || event.isEnd()) {\n        this.removeSub(sub);\n      }\n    }\n    return true;\n  } catch (error) {\n    this.pushing = false;\n    this.queue = [];\n    throw error;\n  }\n};\n\nDispatcher.prototype.pushIt = function (event) {\n  if (!this.pushing) {\n    if (event === this.prevError) {\n      return;\n    }\n    if (event.isError()) {\n      this.prevError = event;\n    }\n    this.pushing = true;\n    this.pushToSubscriptions(event);\n    this.pushing = false;\n    while (this.queue.length) {\n      event = this.queue.shift();\n      this.push(event);\n    }\n    if (this.hasSubscribers()) {\n      return Bacon.more;\n    } else {\n      this.unsubscribeFromSource();\n      return Bacon.noMore;\n    }\n  } else {\n    this.queue.push(event);\n    return Bacon.more;\n  }\n};\n\nDispatcher.prototype.handleEvent = function (event) {\n  if (this._handleEvent) {\n    return this._handleEvent(event);\n  } else {\n    return this.push(event);\n  }\n};\n\nDispatcher.prototype.unsubscribeFromSource = function () {\n  if (this.unsubSrc) {\n    this.unsubSrc();\n  }\n  this.unsubSrc = undefined;\n};\n\nDispatcher.prototype.subscribe = function (sink) {\n  var subscription;\n  if (this.ended) {\n    sink(endEvent());\n    return nop;\n  } else {\n    assertFunction(sink);\n    subscription = {\n      sink: sink\n    };\n    this.subscriptions.push(subscription);\n    if (this.subscriptions.length === 1) {\n      this.unsubSrc = this._subscribe(this.handleEvent);\n      assertFunction(this.unsubSrc);\n    }\n    return (function (_this) {\n      return function () {\n        _this.removeSub(subscription);\n        if (!_this.hasSubscribers()) {\n          return _this.unsubscribeFromSource();\n        }\n      };\n    })(this);\n  }\n};\n\nBacon.Dispatcher = Dispatcher;\n\nfunction EventStream(desc, subscribe, handler) {\n  if (!(this instanceof EventStream)) {\n    return new EventStream(desc, subscribe, handler);\n  }\n  if (_.isFunction(desc)) {\n    handler = subscribe;\n    subscribe = desc;\n    desc = Desc.empty;\n  }\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new Dispatcher(subscribe, handler);\n  registerObs(this);\n}\n\ninherit(EventStream, Observable);\nextend(EventStream.prototype, {\n  _isEventStream: true,\n\n  toProperty: function (initValue_) {\n    var initValue = arguments.length === 0 ? None : toOption(function () {\n      return initValue_;\n    });\n    var disp = this.dispatcher;\n    var desc = new Bacon.Desc(this, \"toProperty\", [initValue_]);\n    return new Property(desc, function (sink) {\n      var initSent = false;\n      var subbed = false;\n      var unsub = nop;\n      var reply = Bacon.more;\n      var sendInit = function () {\n        if (!initSent) {\n          return initValue.forEach(function (value) {\n            initSent = true;\n            reply = sink(new Initial(value));\n            if (reply === Bacon.noMore) {\n              unsub();\n              unsub = nop;\n              return nop;\n            }\n          });\n        }\n      };\n\n      unsub = disp.subscribe(function (event) {\n        if (event.hasValue()) {\n          if (event.isInitial() && !subbed) {\n            initValue = new Some(function () {\n              return event.value();\n            });\n            return Bacon.more;\n          } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = true;\n            initValue = new Some(event);\n            return sink(event);\n          }\n        } else {\n          if (event.isEnd()) {\n            reply = sendInit();\n          }\n          if (reply !== Bacon.noMore) {\n            return sink(event);\n          }\n        }\n      });\n      subbed = true;\n      sendInit();\n      return unsub;\n    });\n  },\n\n  toEventStream: function () {\n    return this;\n  },\n\n  withHandler: function (handler) {\n    return new EventStream(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  }\n});\n\nBacon.EventStream = EventStream;\n\nBacon.never = function () {\n  return new EventStream(describe(Bacon, \"never\"), function (sink) {\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.when = function () {\n  if (arguments.length === 0) {\n    return Bacon.never();\n  }\n  var len = arguments.length;\n  var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n\n  assert(usage, len % 2 === 0);\n  var sources = [];\n  var pats = [];\n  var i = 0;\n  var patterns = [];\n  while (i < len) {\n    patterns[i] = arguments[i];\n    patterns[i + 1] = arguments[i + 1];\n    var patSources = _.toArray(arguments[i]);\n    var f = constantToFunction(arguments[i + 1]);\n    var pat = { f: f, ixs: [] };\n    var triggerFound = false;\n    for (var j = 0, s; j < patSources.length; j++) {\n      s = patSources[j];\n      var index = _.indexOf(sources, s);\n      if (!triggerFound) {\n        triggerFound = Source.isTrigger(s);\n      }\n      if (index < 0) {\n        sources.push(s);\n        index = sources.length - 1;\n      }\n      for (var k = 0, ix; k < pat.ixs.length; k++) {\n        ix = pat.ixs[k];\n        if (ix.index === index) {\n          ix.count++;\n        }\n      }\n      pat.ixs.push({ index: index, count: 1 });\n    }\n\n    assert(\"At least one EventStream required\", triggerFound || !patSources.length);\n\n    if (patSources.length > 0) {\n      pats.push(pat);\n    }\n    i = i + 2;\n  }\n\n  if (!sources.length) {\n    return Bacon.never();\n  }\n\n  sources = _.map(Source.fromObservable, sources);\n  var needsBarrier = _.any(sources, function (s) {\n    return s.flatten;\n  }) && containsDuplicateDeps(_.map(function (s) {\n    return s.obs;\n  }, sources));\n\n  var desc = new Bacon.Desc(Bacon, \"when\", patterns);\n  var resultStream = new EventStream(desc, function (sink) {\n    var triggers = [];\n    var ends = false;\n    var match = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].hasAtLeast(i.count)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var cannotSync = function (source) {\n      return !source.sync || source.ended;\n    };\n    var cannotMatch = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].mayHave(i.count)) {\n          return true;\n        }\n      }\n    };\n    var nonFlattened = function (trigger) {\n      return !trigger.source.flatten;\n    };\n    var part = function (source) {\n      return function (unsubAll) {\n        var flushLater = function () {\n          return UpdateBarrier.whenDoneWith(resultStream, flush);\n        };\n        var flushWhileTriggers = function () {\n          if (triggers.length > 0) {\n            var reply = Bacon.more;\n            var trigger = triggers.pop();\n            for (var i1 = 0, p; i1 < pats.length; i1++) {\n              p = pats[i1];\n              if (match(p)) {\n                var events = (function () {\n                  var result = [];\n                  for (var i2 = 0, i; i2 < p.ixs.length; i2++) {\n                    i = p.ixs[i2];\n                    result.push(sources[i.index].consume());\n                  }\n                  return result;\n                })();\n                reply = sink(trigger.e.apply(function () {\n                  var _p;\n\n                  var values = (function () {\n                    var result = [];\n                    for (var i2 = 0, event; i2 < events.length; i2++) {\n                      event = events[i2];\n                      result.push(event.value());\n                    }\n                    return result;\n                  })();\n\n                  return (_p = p).f.apply(_p, values);\n                }));\n                if (triggers.length) {\n                  triggers = _.filter(nonFlattened, triggers);\n                }\n                if (reply === Bacon.noMore) {\n                  return reply;\n                } else {\n                  return flushWhileTriggers();\n                }\n              }\n            }\n          } else {\n            return Bacon.more;\n          }\n        };\n        var flush = function () {\n          var reply = flushWhileTriggers();\n          if (ends) {\n            if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n              reply = Bacon.noMore;\n              sink(endEvent());\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n\n          return reply;\n        };\n        return source.subscribe(function (e) {\n          if (e.isEnd()) {\n            ends = true;\n            source.markEnded();\n            flushLater();\n          } else if (e.isError()) {\n            var reply = sink(e);\n          } else {\n            source.push(e);\n            if (source.sync) {\n              triggers.push({ source: source, e: e });\n              if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                flushLater();\n              } else {\n                flush();\n              }\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n          return reply || Bacon.more;\n        });\n      };\n    };\n\n    return new Bacon.CompositeUnsubscribe((function () {\n      var result = [];\n      for (var i1 = 0, s; i1 < sources.length; i1++) {\n        s = sources[i1];\n        result.push(part(s));\n      }\n      return result;\n    })()).unsubscribe;\n  });\n  return resultStream;\n};\n\nvar containsDuplicateDeps = function (observables) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n  var checkObservable = function (obs) {\n    if (_.contains(state, obs)) {\n      return true;\n    } else {\n      var deps = obs.internalDeps();\n      if (deps.length) {\n        state.push(obs);\n        return _.any(deps, checkObservable);\n      } else {\n        state.push(obs);\n        return false;\n      }\n    }\n  };\n\n  return _.any(observables, checkObservable);\n};\n\nvar constantToFunction = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else {\n    return _.always(f);\n  }\n};\n\nBacon.groupSimultaneous = function () {\n  for (var _len5 = arguments.length, streams = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    streams[_key5] = arguments[_key5];\n  }\n\n  if (streams.length === 1 && isArray(streams[0])) {\n    streams = streams[0];\n  }\n  var sources = (function () {\n    var result = [];\n    for (var i = 0, s; i < streams.length; i++) {\n      s = streams[i];\n      result.push(new BufferingSource(s));\n    }\n    return result;\n  })();\n  return withDesc(new Bacon.Desc(Bacon, \"groupSimultaneous\", streams), Bacon.when(sources, function () {\n    for (var _len6 = arguments.length, xs = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      xs[_key6] = arguments[_key6];\n    }\n\n    return xs;\n  }));\n};\n\nfunction PropertyDispatcher(property, subscribe, handleEvent) {\n  Dispatcher.call(this, subscribe, handleEvent);\n  this.property = property;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.current = None;\n  this.currentValueRootId = undefined;\n  this.propertyEnded = false;\n}\n\ninherit(PropertyDispatcher, Dispatcher);\nextend(PropertyDispatcher.prototype, {\n  push: function (event) {\n    if (event.isEnd()) {\n      this.propertyEnded = true;\n    }\n    if (event.hasValue()) {\n      this.current = new Some(event);\n      this.currentValueRootId = UpdateBarrier.currentEventId();\n    }\n    return Dispatcher.prototype.push.call(this, event);\n  },\n\n  maybeSubSource: function (sink, reply) {\n    if (reply === Bacon.noMore) {\n      return nop;\n    } else if (this.propertyEnded) {\n      sink(endEvent());\n      return nop;\n    } else {\n      return Dispatcher.prototype.subscribe.call(this, sink);\n    }\n  },\n\n  subscribe: function (sink) {\n    var _this3 = this;\n\n    var initSent = false;\n\n    var reply = Bacon.more;\n\n    if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n      var dispatchingId = UpdateBarrier.currentEventId();\n      var valId = this.currentValueRootId;\n      if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n        UpdateBarrier.whenDoneWith(this.property, function () {\n          if (_this3.currentValueRootId === valId) {\n            return sink(initialEvent(_this3.current.get().value()));\n          }\n        });\n\n        return this.maybeSubSource(sink, reply);\n      } else {\n        UpdateBarrier.inTransaction(undefined, this, function () {\n          reply = sink(initialEvent(this.current.get().value()));\n          return reply;\n        }, []);\n        return this.maybeSubSource(sink, reply);\n      }\n    } else {\n      return this.maybeSubSource(sink, reply);\n    }\n  }\n});\n\nfunction Property(desc, subscribe, handler) {\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n  registerObs(this);\n}\n\ninherit(Property, Observable);\nextend(Property.prototype, {\n  _isProperty: true,\n\n  changes: function () {\n    var _this4 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"changes\", []), function (sink) {\n      return _this4.dispatcher.subscribe(function (event) {\n        if (!event.isInitial()) {\n          return sink(event);\n        }\n      });\n    });\n  },\n\n  withHandler: function (handler) {\n    return new Property(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  },\n\n  toProperty: function () {\n    assertNoArguments(arguments);\n    return this;\n  },\n\n  toEventStream: function () {\n    var _this5 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"toEventStream\", []), function (sink) {\n      return _this5.dispatcher.subscribe(function (event) {\n        if (event.isInitial()) {\n          event = event.toNext();\n        }\n        return sink(event);\n      });\n    });\n  }\n});\n\nBacon.Property = Property;\n\nBacon.constant = function (value) {\n  return new Property(new Bacon.Desc(Bacon, \"constant\", [value]), function (sink) {\n    sink(initialEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.fromBinder = function (binder) {\n  var eventTransformer = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromBinder\", [binder, eventTransformer]);\n  return new EventStream(desc, function (sink) {\n    var unbound = false;\n    var shouldUnbind = false;\n    var unbind = function () {\n      if (!unbound) {\n        if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n          unbinder();\n          return unbound = true;\n        } else {\n          return shouldUnbind = true;\n        }\n      }\n    };\n    var unbinder = binder(function () {\n      var ref;\n\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var value = eventTransformer.apply(this, args);\n      if (!(isArray(value) && ((ref = _.last(value)) != null ? ref._isEvent : undefined))) {\n        value = [value];\n      }\n      var reply = Bacon.more;\n      for (var i = 0, event; i < value.length; i++) {\n        event = value[i];\n        reply = sink(event = toEvent(event));\n        if (reply === Bacon.noMore || event.isEnd()) {\n          unbind();\n          return reply;\n        }\n      }\n      return reply;\n    });\n    if (shouldUnbind) {\n      unbind();\n    }\n    return unbind;\n  });\n};\n\nBacon.Observable.prototype.map = function (p) {\n  for (var _len8 = arguments.length, args = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n\n  return convertArgsToFunction(this, p, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n      return this.push(event.fmap(f));\n    }));\n  });\n};\n\nvar argumentsToObservables = function (args) {\n  if (isArray(args[0])) {\n    return args[0];\n  } else {\n    return Array.prototype.slice.call(args);\n  }\n};\n\nvar argumentsToObservablesAndFunction = function (args) {\n  if (_.isFunction(args[0])) {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n  } else {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n  }\n};\n\nBacon.combineAsArray = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    var sources = [];\n    for (var i = 0; i < streams.length; i++) {\n      var stream = isObservable(streams[i]) ? streams[i] : Bacon.constant(streams[i]);\n      sources.push(new Source(stream, true));\n    }\n    return withDesc(new Bacon.Desc(Bacon, \"combineAsArray\", streams), Bacon.when(sources, function () {\n      for (var _len9 = arguments.length, xs = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        xs[_key9] = arguments[_key9];\n      }\n\n      return xs;\n    }).toProperty());\n  } else {\n    return Bacon.constant([]);\n  }\n};\n\nBacon.onValues = function () {\n  return Bacon.combineAsArray(Array.prototype.slice.call(arguments, 0, arguments.length - 1)).onValues(arguments[arguments.length - 1]);\n};\n\nBacon.combineWith = function () {\n  var _argumentsToObservablesAndFunction = argumentsToObservablesAndFunction(arguments);\n\n  var streams = _argumentsToObservablesAndFunction[0];\n  var f = _argumentsToObservablesAndFunction[1];\n\n  var desc = new Bacon.Desc(Bacon, \"combineWith\", [f].concat(streams));\n  return withDesc(desc, Bacon.combineAsArray(streams).map(function (values) {\n    return f.apply(undefined, values);\n  }));\n};\n\nBacon.Observable.prototype.combine = function (other, f) {\n  var combinator = toCombinator(f);\n  var desc = new Bacon.Desc(this, \"combine\", [other, f]);\n  return withDesc(desc, Bacon.combineAsArray(this, other).map(function (values) {\n    return combinator(values[0], values[1]);\n  }));\n};\n\nBacon.Observable.prototype.withStateMachine = function (initState, f) {\n  var state = initState;\n  var desc = new Bacon.Desc(this, \"withStateMachine\", [initState, f]);\n  return withDesc(desc, this.withHandler(function (event) {\n    var fromF = f(state, event);\n    var newState = fromF[0];\n    var outputs = fromF[1];\n\n    state = newState;\n    var reply = Bacon.more;\n    for (var i = 0, output; i < outputs.length; i++) {\n      output = outputs[i];\n      reply = this.push(output);\n      if (reply === Bacon.noMore) {\n        return reply;\n      }\n    }\n    return reply;\n  }));\n};\n\nvar equals = function (a, b) {\n  return a === b;\n};\n\nvar isNone = function (object) {\n  return typeof object !== \"undefined\" && object !== null ? object._isNone : false;\n};\n\nBacon.Observable.prototype.skipDuplicates = function () {\n  var isEqual = arguments.length <= 0 || arguments[0] === undefined ? equals : arguments[0];\n\n  var desc = new Bacon.Desc(this, \"skipDuplicates\", []);\n  return withDesc(desc, this.withStateMachine(None, function (prev, event) {\n    if (!event.hasValue()) {\n      return [prev, [event]];\n    } else if (event.isInitial() || isNone(prev) || !isEqual(prev.get(), event.value())) {\n      return [new Some(event.value()), [event]];\n    } else {\n      return [prev, []];\n    }\n  }));\n};\n\nBacon.Observable.prototype.awaiting = function (other) {\n  var desc = new Bacon.Desc(this, \"awaiting\", [other]);\n  return withDesc(desc, Bacon.groupSimultaneous(this, other).map(function (values) {\n    return values[1].length === 0;\n  }).toProperty(false).skipDuplicates());\n};\n\nBacon.Observable.prototype.not = function () {\n  return withDesc(new Bacon.Desc(this, \"not\", []), this.map(function (x) {\n    return !x;\n  }));\n};\n\nBacon.Property.prototype.and = function (other) {\n  return withDesc(new Bacon.Desc(this, \"and\", [other]), this.combine(other, function (x, y) {\n    return x && y;\n  }));\n};\n\nBacon.Property.prototype.or = function (other) {\n  return withDesc(new Bacon.Desc(this, \"or\", [other]), this.combine(other, function (x, y) {\n    return x || y;\n  }));\n};\n\nBacon.scheduler = {\n  setTimeout: function (f, d) {\n    return setTimeout(f, d);\n  },\n  setInterval: function (f, i) {\n    return setInterval(f, i);\n  },\n  clearInterval: function (id) {\n    return clearInterval(id);\n  },\n  clearTimeout: function (id) {\n    return clearTimeout(id);\n  },\n  now: function () {\n    return new Date().getTime();\n  }\n};\n\nBacon.EventStream.prototype.bufferWithTime = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithTime\", [delay]), this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n};\n\nBacon.EventStream.prototype.bufferWithCount = function (count) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithCount\", [count]), this.bufferWithTimeOrCount(undefined, count));\n};\n\nBacon.EventStream.prototype.bufferWithTimeOrCount = function (delay, count) {\n  var flushOrSchedule = function (buffer) {\n    if (buffer.values.length === count) {\n      return buffer.flush();\n    } else if (delay !== undefined) {\n      return buffer.schedule();\n    }\n  };\n  var desc = new Bacon.Desc(this, \"bufferWithTimeOrCount\", [delay, count]);\n  return withDesc(desc, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n};\n\nBacon.EventStream.prototype.buffer = function (delay) {\n  var onInput = arguments.length <= 1 || arguments[1] === undefined ? nop : arguments[1];\n  var onFlush = arguments.length <= 2 || arguments[2] === undefined ? nop : arguments[2];\n\n  var buffer = {\n    scheduled: null,\n    end: undefined,\n    values: [],\n    flush: function () {\n      if (this.scheduled) {\n        Bacon.scheduler.clearTimeout(this.scheduled);\n        this.scheduled = null;\n      }\n      if (this.values.length > 0) {\n        var valuesToPush = this.values;\n        this.values = [];\n        var reply = this.push(nextEvent(valuesToPush));\n        if (this.end != null) {\n          return this.push(this.end);\n        } else if (reply !== Bacon.noMore) {\n          return onFlush(this);\n        }\n      } else {\n        if (this.end != null) {\n          return this.push(this.end);\n        }\n      }\n    },\n    schedule: function () {\n      var _this6 = this;\n\n      if (!this.scheduled) {\n        return this.scheduled = delay(function () {\n          return _this6.flush();\n        });\n      }\n    }\n  };\n  var reply = Bacon.more;\n  if (!_.isFunction(delay)) {\n    var delayMs = delay;\n    delay = function (f) {\n      return Bacon.scheduler.setTimeout(f, delayMs);\n    };\n  }\n  return withDesc(new Bacon.Desc(this, \"buffer\", []), this.withHandler(function (event) {\n    var _this7 = this;\n\n    buffer.push = function (event) {\n      return _this7.push(event);\n    };\n    if (event.isError()) {\n      reply = this.push(event);\n    } else if (event.isEnd()) {\n      buffer.end = event;\n      if (!buffer.scheduled) {\n        buffer.flush();\n      }\n    } else {\n      buffer.values.push(event.value());\n\n      onInput(buffer);\n    }\n    return reply;\n  }));\n};\n\nBacon.Observable.prototype.filter = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len10 = arguments.length, args = Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n    args[_key10 - 1] = arguments[_key10];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"filter\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.once = function (value) {\n  return new EventStream(new Desc(Bacon, \"once\", [value]), function (sink) {\n    sink(toEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.EventStream.prototype.concat = function (right) {\n  var left = this;\n  return new EventStream(new Bacon.Desc(left, \"concat\", [right]), function (sink) {\n    var unsubRight = nop;\n    var unsubLeft = left.dispatcher.subscribe(function (e) {\n      if (e.isEnd()) {\n        unsubRight = right.dispatcher.subscribe(sink);\n        return unsubRight;\n      } else {\n        return sink(e);\n      }\n    });\n    return function () {\n      return unsubLeft(), unsubRight();\n    };\n  });\n};\n\nBacon.Observable.prototype.flatMap = function () {\n  return flatMap_(this, makeSpawner(arguments));\n};\n\nBacon.Observable.prototype.flatMapFirst = function () {\n  return flatMap_(this, makeSpawner(arguments), true);\n};\n\nvar makeSpawner = function (args) {\n  if (args.length === 1 && isObservable(args[0])) {\n    return _.always(args[0]);\n  } else {\n    return makeFunctionArgs(args);\n  }\n};\n\nvar makeObservable = function (x) {\n  if (isObservable(x)) {\n    return x;\n  } else {\n    return Bacon.once(x);\n  }\n};\n\nvar flatMap_ = function (root, f, firstOnly, limit) {\n  var rootDep = [root];\n  var childDeps = [];\n  var desc = new Bacon.Desc(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), [f]);\n  var result = new EventStream(desc, function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var queue = [];\n    var spawn = function (event) {\n      var child = makeObservable(f(event.value()));\n      childDeps.push(child);\n      return composite.add(function (unsubAll, unsubMe) {\n        return child.dispatcher.subscribe(function (event) {\n          if (event.isEnd()) {\n            _.remove(child, childDeps);\n            checkQueue();\n            checkEnd(unsubMe);\n            return Bacon.noMore;\n          } else {\n            if (typeof event !== \"undefined\" && event !== null ? event._isInitial : undefined) {\n              event = event.toNext();\n            }\n            var reply = sink(event);\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          }\n        });\n      });\n    };\n    var checkQueue = function () {\n      var event = queue.shift();\n      if (event) {\n        return spawn(event);\n      }\n    };\n    var checkEnd = function (unsub) {\n      unsub();\n      if (composite.empty()) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (__, unsubRoot) {\n      return root.dispatcher.subscribe(function (event) {\n        if (event.isEnd()) {\n          return checkEnd(unsubRoot);\n        } else if (event.isError()) {\n          return sink(event);\n        } else if (firstOnly && composite.count() > 1) {\n          return Bacon.more;\n        } else {\n          if (composite.unsubscribed) {\n            return Bacon.noMore;\n          }\n          if (limit && composite.count() > limit) {\n            return queue.push(event);\n          } else {\n            return spawn(event);\n          }\n        }\n      });\n    });\n    return composite.unsubscribe;\n  });\n  result.internalDeps = function () {\n    if (childDeps.length) {\n      return rootDep.concat(childDeps);\n    } else {\n      return rootDep;\n    }\n  };\n  return result;\n};\n\nBacon.Observable.prototype.flatMapWithConcurrencyLimit = function (limit) {\n  for (var _len11 = arguments.length, args = Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    args[_key11 - 1] = arguments[_key11];\n  }\n\n  var desc = new Bacon.Desc(this, \"flatMapWithConcurrencyLimit\", [limit].concat(args));\n  return withDesc(desc, flatMap_(this, makeSpawner(args), false, limit));\n};\n\nBacon.Observable.prototype.flatMapConcat = function () {\n  var desc = new Bacon.Desc(this, \"flatMapConcat\", Array.prototype.slice.call(arguments, 0));\n  return withDesc(desc, this.flatMapWithConcurrencyLimit.apply(this, [1].concat(_slice.call(arguments))));\n};\n\nBacon.later = function (delay, value) {\n  return withDesc(new Bacon.Desc(Bacon, \"later\", [delay, value]), Bacon.fromBinder(function (sink) {\n    var sender = function () {\n      return sink([value, endEvent()]);\n    };\n    var id = Bacon.scheduler.setTimeout(sender, delay);\n    return function () {\n      return Bacon.scheduler.clearTimeout(id);\n    };\n  }));\n};\n\nBacon.Observable.prototype.bufferingThrottle = function (minimumInterval) {\n  var desc = new Bacon.Desc(this, \"bufferingThrottle\", [minimumInterval]);\n  return withDesc(desc, this.flatMapConcat(function (x) {\n    return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n  }));\n};\n\nBacon.Property.prototype.bufferingThrottle = function () {\n  return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n};\n\nfunction Bus() {\n  if (!(this instanceof Bus)) {\n    return new Bus();\n  }\n\n  this.unsubAll = _.bind(this.unsubAll, this);\n  this.subscribeAll = _.bind(this.subscribeAll, this);\n  this.guardedSink = _.bind(this.guardedSink, this);\n\n  this.sink = undefined;\n  this.subscriptions = [];\n  this.ended = false;\n  EventStream.call(this, new Bacon.Desc(Bacon, \"Bus\", []), this.subscribeAll);\n}\n\ninherit(Bus, EventStream);\nextend(Bus.prototype, {\n  unsubAll: function () {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (typeof sub.unsub === \"function\") {\n        sub.unsub();\n      }\n    }\n  },\n\n  subscribeAll: function (newSink) {\n    if (this.ended) {\n      newSink(endEvent());\n    } else {\n      this.sink = newSink;\n      var iterable = cloneArray(this.subscriptions);\n      for (var i = 0, subscription; i < iterable.length; i++) {\n        subscription = iterable[i];\n        this.subscribeInput(subscription);\n      }\n    }\n    return this.unsubAll;\n  },\n\n  guardedSink: function (input) {\n    var _this8 = this;\n\n    return function (event) {\n      if (event.isEnd()) {\n        _this8.unsubscribeInput(input);\n        return Bacon.noMore;\n      } else {\n        return _this8.sink(event);\n      }\n    };\n  },\n\n  subscribeInput: function (subscription) {\n    subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    return subscription.unsub;\n  },\n\n  unsubscribeInput: function (input) {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (sub.input === input) {\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n        this.subscriptions.splice(i, 1);\n        return;\n      }\n    }\n  },\n\n  plug: function (input) {\n    var _this9 = this;\n\n    assertObservable(input);\n    if (this.ended) {\n      return;\n    }\n    var sub = { input: input };\n    this.subscriptions.push(sub);\n    if (typeof this.sink !== \"undefined\") {\n      this.subscribeInput(sub);\n    }\n    return function () {\n      return _this9.unsubscribeInput(input);\n    };\n  },\n\n  end: function () {\n    this.ended = true;\n    this.unsubAll();\n    if (typeof this.sink === \"function\") {\n      return this.sink(endEvent());\n    }\n  },\n\n  push: function (value) {\n    if (!this.ended && typeof this.sink === \"function\") {\n      return this.sink(nextEvent(value));\n    }\n  },\n\n  error: function (error) {\n    if (typeof this.sink === \"function\") {\n      return this.sink(new Error(error));\n    }\n  }\n});\n\nBacon.Bus = Bus;\n\nvar liftCallback = function (desc, wrapped) {\n  return withMethodCallSupport(function (f) {\n    var stream = partiallyApplied(wrapped, [function (values, callback) {\n      return f.apply(undefined, values.concat([callback]));\n    }]);\n\n    for (var _len12 = arguments.length, args = Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n      args[_key12 - 1] = arguments[_key12];\n    }\n\n    return withDesc(new Bacon.Desc(Bacon, desc, [f].concat(args)), Bacon.combineAsArray(args).flatMap(stream));\n  });\n};\n\nBacon.fromCallback = liftCallback(\"fromCallback\", function (f) {\n  for (var _len13 = arguments.length, args = Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n    args[_key13 - 1] = arguments[_key13];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (value) {\n    return [value, endEvent()];\n  });\n});\n\nBacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function (f) {\n  for (var _len14 = arguments.length, args = Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n    args[_key14 - 1] = arguments[_key14];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (error, value) {\n    if (error) {\n      return [new Error(error), endEvent()];\n    }\n    return [value, endEvent()];\n  });\n});\n\nBacon.combineTemplate = function (template) {\n  function current(ctxStack) {\n    return ctxStack[ctxStack.length - 1];\n  }\n  function setValue(ctxStack, key, value) {\n    current(ctxStack)[key] = value;\n    return value;\n  }\n  function applyStreamValue(key, index) {\n    return function (ctxStack, values) {\n      return setValue(ctxStack, key, values[index]);\n    };\n  }\n  function constantValue(key, value) {\n    return function (ctxStack) {\n      return setValue(ctxStack, key, value);\n    };\n  }\n\n  function mkContext(template) {\n    return isArray(template) ? [] : {};\n  }\n\n  function pushContext(key, value) {\n    return function (ctxStack) {\n      var newContext = mkContext(value);\n      setValue(ctxStack, key, newContext);\n      return ctxStack.push(newContext);\n    };\n  }\n\n  function compile(key, value) {\n    if (isObservable(value)) {\n      streams.push(value);\n      return funcs.push(applyStreamValue(key, streams.length - 1));\n    } else if (value && (value.constructor == Object || value.constructor == Array)) {\n      var popContext = function (ctxStack) {\n        return ctxStack.pop();\n      };\n      funcs.push(pushContext(key, value));\n      compileTemplate(value);\n      return funcs.push(popContext);\n    } else {\n      return funcs.push(constantValue(key, value));\n    }\n  }\n\n  function combinator(values) {\n    var rootContext = mkContext(template);\n    var ctxStack = [rootContext];\n    for (var i = 0, f; i < funcs.length; i++) {\n      f = funcs[i];\n      f(ctxStack, values);\n    }\n    return rootContext;\n  }\n\n  function compileTemplate(template) {\n    return _.each(template, compile);\n  }\n\n  var funcs = [];\n  var streams = [];\n\n  compileTemplate(template);\n\n  return withDesc(new Bacon.Desc(Bacon, \"combineTemplate\", [template]), Bacon.combineAsArray(streams).map(combinator));\n};\n\nvar addPropertyInitValueToStream = function (property, stream) {\n  var justInitValue = new EventStream(describe(property, \"justInitValue\"), function (sink) {\n    var value = undefined;\n    var unsub = property.dispatcher.subscribe(function (event) {\n      if (!event.isEnd()) {\n        value = event;\n      }\n      return Bacon.noMore;\n    });\n    UpdateBarrier.whenDoneWith(justInitValue, function () {\n      if (typeof value !== \"undefined\" && value !== null) {\n        sink(value);\n      }\n      return sink(endEvent());\n    });\n    return unsub;\n  });\n  return justInitValue.concat(stream).toProperty();\n};\n\nBacon.Observable.prototype.mapEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      this.push(nextEvent(f(event)));\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.skipErrors = function () {\n  return withDesc(new Bacon.Desc(this, \"skipErrors\", []), this.withHandler(function (event) {\n    if (event.isError()) {\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.takeUntil = function (stopper) {\n  var endMarker = {};\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      var _event$value = event.value();\n\n      var data = _event$value[0];\n      var stopper = _event$value[1];\n\n      if (stopper.length) {\n        return this.push(endEvent());\n      } else {\n        var reply = Bacon.more;\n        for (var i = 0, value; i < data.length; i++) {\n          value = data[i];\n          if (value === endMarker) {\n            reply = this.push(endEvent());\n          } else {\n            reply = this.push(nextEvent(value));\n          }\n        }\n        return reply;\n      }\n    }\n  }));\n};\n\nBacon.Property.prototype.takeUntil = function (stopper) {\n  var changes = this.changes().takeUntil(stopper);\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), addPropertyInitValueToStream(this, changes));\n};\n\nBacon.Observable.prototype.flatMapLatest = function () {\n  var f = makeSpawner(arguments);\n  var stream = this.toEventStream();\n  return withDesc(new Bacon.Desc(this, \"flatMapLatest\", [f]), stream.flatMap(function (value) {\n    return makeObservable(f(value)).takeUntil(stream);\n  }));\n};\n\nBacon.Property.prototype.delayChanges = function (desc, f) {\n  return withDesc(desc, addPropertyInitValueToStream(this, f(this.changes())));\n};\n\nBacon.EventStream.prototype.delay = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"delay\", [delay]), this.flatMap(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.delay = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"delay\", [delay]), function (changes) {\n    return changes.delay(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounce = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounce\", [delay]), this.flatMapLatest(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.debounce = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounce\", [delay]), function (changes) {\n    return changes.debounce(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounceImmediate = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounceImmediate\", [delay]), this.flatMapFirst(function (value) {\n    return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n  }));\n};\n\nBacon.Property.prototype.debounceImmediate = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounceImmediate\", [delay]), function (changes) {\n    return changes.debounceImmediate(delay);\n  });\n};\n\nBacon.Observable.prototype.decode = function (cases) {\n  return withDesc(new Bacon.Desc(this, \"decode\", [cases]), this.combine(Bacon.combineTemplate(cases), function (key, values) {\n    return values[key];\n  }));\n};\n\nBacon.Observable.prototype.scan = function (seed, f) {\n  var _this10 = this;\n\n  var resultProperty;\n  f = toCombinator(f);\n  var acc = toOption(seed);\n  var initHandled = false;\n  var subscribe = function (sink) {\n    var initSent = false;\n    var unsub = nop;\n    var reply = Bacon.more;\n    var sendInit = function () {\n      if (!initSent) {\n        return acc.forEach(function (value) {\n          initSent = initHandled = true;\n          reply = sink(new Initial(function () {\n            return value;\n          }));\n          if (reply === Bacon.noMore) {\n            unsub();\n            unsub = nop;\n            return unsub;\n          }\n        });\n      }\n    };\n    unsub = _this10.dispatcher.subscribe(function (event) {\n      if (event.hasValue()) {\n        if (initHandled && event.isInitial()) {\n          return Bacon.more;\n        } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = initHandled = true;\n            var prev = acc.getOrElse(undefined);\n            var next = f(prev, event.value());\n\n            acc = new Some(next);\n            return sink(event.apply(function () {\n              return next;\n            }));\n          }\n      } else {\n        if (event.isEnd()) {\n          reply = sendInit();\n        }\n        if (reply !== Bacon.noMore) {\n          return sink(event);\n        }\n      }\n    });\n    UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n    return unsub;\n  };\n  resultProperty = new Property(new Bacon.Desc(this, \"scan\", [seed, f]), subscribe);\n  return resultProperty;\n};\n\nBacon.Observable.prototype.diff = function (start, f) {\n  f = toCombinator(f);\n  return withDesc(new Bacon.Desc(this, \"diff\", [start, f]), this.scan([start], function (prevTuple, next) {\n    return [next, f(prevTuple[0], next)];\n  }).filter(function (tuple) {\n    return tuple.length === 2;\n  }).map(function (tuple) {\n    return tuple[1];\n  }));\n};\n\nBacon.Observable.prototype.doAction = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doAction\", [f]), this.withHandler(function (event) {\n    if (event.hasValue()) {\n      f(event.value());\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      f();\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      f(event.error);\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doLog = function () {\n  for (var _len15 = arguments.length, args = Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    args[_key15] = arguments[_key15];\n  }\n\n  return withDesc(new Bacon.Desc(this, \"doLog\", args), this.withHandler(function (event) {\n    if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.endOnError = function (f) {\n  if (!(typeof f !== \"undefined\" && f !== null)) {\n    f = true;\n  }\n\n  for (var _len16 = arguments.length, args = Array(_len16 > 1 ? _len16 - 1 : 0), _key16 = 1; _key16 < _len16; _key16++) {\n    args[_key16 - 1] = arguments[_key16];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"endOnError\", []), this.withHandler(function (event) {\n      if (event.isError() && f(event.error)) {\n        this.push(event);\n        return this.push(endEvent());\n      } else {\n        return this.push(event);\n      }\n    }));\n  });\n};\n\nObservable.prototype.errors = function () {\n  return withDesc(new Bacon.Desc(this, \"errors\", []), this.filter(function () {\n    return false;\n  }));\n};\n\nBacon.Observable.prototype.take = function (count) {\n  if (count <= 0) {\n    return Bacon.never();\n  }\n  return withDesc(new Bacon.Desc(this, \"take\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      count--;\n      if (count > 0) {\n        return this.push(event);\n      } else {\n        if (count === 0) {\n          this.push(event);\n        }\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }\n  }));\n};\n\nBacon.Observable.prototype.first = function () {\n  return withDesc(new Bacon.Desc(this, \"first\", []), this.take(1));\n};\n\nBacon.Observable.prototype.mapError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      return this.push(nextEvent(f(event.error)));\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.flatMapError = function (fn) {\n  var desc = new Bacon.Desc(this, \"flatMapError\", [fn]);\n  return withDesc(desc, this.mapError(function (err) {\n    return new Error(err);\n  }).flatMap(function (x) {\n    if (x instanceof Error) {\n      return fn(x.error);\n    } else {\n      return Bacon.once(x);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.sampledBy = function (sampler, combinator) {\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), this.toProperty().sampledBy(sampler, combinator));\n};\n\nBacon.Property.prototype.sampledBy = function (sampler, combinator) {\n  var lazy = false;\n  if (typeof combinator !== \"undefined\" && combinator !== null) {\n    combinator = toCombinator(combinator);\n  } else {\n    lazy = true;\n    combinator = function (f) {\n      return f.value();\n    };\n  }\n  var thisSource = new Source(this, false, lazy);\n  var samplerSource = new Source(sampler, true, lazy);\n  var stream = Bacon.when([thisSource, samplerSource], combinator);\n  var result = sampler._isProperty ? stream.toProperty() : stream;\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), result);\n};\n\nBacon.Property.prototype.sample = function (interval) {\n  return withDesc(new Bacon.Desc(this, \"sample\", [interval]), this.sampledBy(Bacon.interval(interval, {})));\n};\n\nBacon.Observable.prototype.map = function (p) {\n  if (p && p._isProperty) {\n    return p.sampledBy(this, former);\n  } else {\n    for (var _len17 = arguments.length, args = Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n      args[_key17 - 1] = arguments[_key17];\n    }\n\n    return convertArgsToFunction(this, p, args, function (f) {\n      return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  }\n};\n\nBacon.Observable.prototype.fold = function (seed, f) {\n  return withDesc(new Bacon.Desc(this, \"fold\", [seed, f]), this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n};\n\nObservable.prototype.reduce = Observable.prototype.fold;\n\nvar eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\nvar findHandlerMethods = function (target) {\n  var pair;\n  for (var i = 0; i < eventMethods.length; i++) {\n    pair = eventMethods[i];\n    var methodPair = [target[pair[0]], target[pair[1]]];\n    if (methodPair[0] && methodPair[1]) {\n      return methodPair;\n    }\n  }\n  for (var j = 0; j < eventMethods.length; j++) {\n    pair = eventMethods[j];\n    var addListener = target[pair[0]];\n    if (addListener) {\n      return [addListener, function () {}];\n    }\n  }\n  throw new Error(\"No suitable event methods in \" + target);\n};\n\nBacon.fromEventTarget = function (target, eventName, eventTransformer) {\n  var _findHandlerMethods = findHandlerMethods(target);\n\n  var sub = _findHandlerMethods[0];\n  var unsub = _findHandlerMethods[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromEvent\", [target, eventName]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    sub.call(target, eventName, handler);\n    return function () {\n      return unsub.call(target, eventName, handler);\n    };\n  }, eventTransformer));\n};\n\nBacon.fromEvent = Bacon.fromEventTarget;\n\nBacon.fromPoll = function (delay, poll) {\n  var desc = new Bacon.Desc(Bacon, \"fromPoll\", [delay, poll]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    var id = Bacon.scheduler.setInterval(handler, delay);\n    return function () {\n      return Bacon.scheduler.clearInterval(id);\n    };\n  }, poll));\n};\n\nfunction valueAndEnd(value) {\n  return [value, endEvent()];\n}\n\nBacon.fromPromise = function (promise, abort) {\n  var eventTransformer = arguments.length <= 2 || arguments[2] === undefined ? valueAndEnd : arguments[2];\n\n  return withDesc(new Bacon.Desc(Bacon, \"fromPromise\", [promise]), Bacon.fromBinder(function (handler) {\n    var bound = promise.then(handler, function (e) {\n      return handler(new Error(e));\n    });\n    if (bound && typeof bound.done === \"function\") {\n      bound.done();\n    }\n\n    if (abort) {\n      return function () {\n        if (typeof promise.abort === \"function\") {\n          return promise.abort();\n        }\n      };\n    } else {\n      return function () {};\n    }\n  }, eventTransformer));\n};\n\nBacon.Observable.prototype.groupBy = function (keyF) {\n  var limitF = arguments.length <= 1 || arguments[1] === undefined ? Bacon._.id : arguments[1];\n\n  var streams = {};\n  var src = this;\n  return src.filter(function (x) {\n    return !streams[keyF(x)];\n  }).map(function (x) {\n    var key = keyF(x);\n    var similar = src.filter(function (x) {\n      return keyF(x) === key;\n    });\n    var data = Bacon.once(x).concat(similar);\n    var limited = limitF(data, x).withHandler(function (event) {\n      this.push(event);\n      if (event.isEnd()) {\n        return delete streams[key];\n      }\n    });\n    streams[key] = limited;\n    return limited;\n  });\n};\n\nBacon.fromArray = function (values) {\n  assertArray(values);\n  if (!values.length) {\n    return withDesc(new Bacon.Desc(Bacon, \"fromArray\", values), Bacon.never());\n  } else {\n    var i = 0;\n    return new EventStream(new Bacon.Desc(Bacon, \"fromArray\", [values]), function (sink) {\n      var unsubd = false;\n      var reply = Bacon.more;\n      var pushing = false;\n      var pushNeeded = false;\n      var push = function () {\n        pushNeeded = true;\n        if (pushing) {\n          return;\n        }\n        pushing = true;\n        while (pushNeeded) {\n          pushNeeded = false;\n          if (reply !== Bacon.noMore && !unsubd) {\n            var value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                sink(endEvent());\n              } else {\n                UpdateBarrier.afterTransaction(push);\n              }\n            }\n          }\n        }\n        pushing = false;\n        return pushing;\n      };\n\n      push();\n      return function () {\n        unsubd = true;\n        return unsubd;\n      };\n    });\n  }\n};\n\nBacon.EventStream.prototype.holdWhen = function (valve) {\n  var onHold = false;\n  var bufferedValues = [];\n  var src = this;\n  var srcIsEnded = false;\n  return new EventStream(new Bacon.Desc(this, \"holdWhen\", [valve]), function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var subscribed = false;\n    var endIfBothEnded = function (unsub) {\n      if (typeof unsub === \"function\") {\n        unsub();\n      }\n      if (composite.empty() && subscribed) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (unsubAll, unsubMe) {\n      return valve.subscribeInternal(function (event) {\n        if (event.hasValue()) {\n          onHold = event.value();\n          if (!onHold) {\n            var toSend = bufferedValues;\n            bufferedValues = [];\n            return (function () {\n              var result = [];\n              for (var i = 0, value; i < toSend.length; i++) {\n                value = toSend[i];\n                result.push(sink(nextEvent(value)));\n              }\n              if (srcIsEnded) {\n                result.push(sink(endEvent()));\n                unsubMe();\n              }\n              return result;\n            })();\n          }\n        } else if (event.isEnd()) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    composite.add(function (unsubAll, unsubMe) {\n      return src.subscribeInternal(function (event) {\n        if (onHold && event.hasValue()) {\n          return bufferedValues.push(event.value());\n        } else if (event.isEnd() && bufferedValues.length) {\n          srcIsEnded = true;\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    subscribed = true;\n    endIfBothEnded();\n    return composite.unsubscribe;\n  });\n};\n\nBacon.interval = function (delay) {\n  var value = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  return withDesc(new Bacon.Desc(Bacon, \"interval\", [delay, value]), Bacon.fromPoll(delay, function () {\n    return nextEvent(value);\n  }));\n};\n\nBacon.$ = {};\nBacon.$.asEventStream = function (eventName, selector, eventTransformer) {\n  var _this11 = this;\n\n  if (_.isFunction(selector)) {\n    eventTransformer = selector;\n    selector = undefined;\n  }\n\n  return withDesc(new Bacon.Desc(this.selector || this, \"asEventStream\", [eventName]), Bacon.fromBinder(function (handler) {\n    _this11.on(eventName, selector, handler);\n    return function () {\n      return _this11.off(eventName, selector, handler);\n    };\n  }, eventTransformer));\n};\n\nif (typeof jQuery !== \"undefined\" && jQuery) {\n  jQuery.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nif (typeof Zepto !== \"undefined\" && Zepto) {\n  Zepto.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDesc(new Bacon.Desc(this, \"last\", []), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.Observable.prototype.log = function () {\n  for (var _len18 = arguments.length, args = Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n    args[_key18] = arguments[_key18];\n  }\n\n  this.subscribe(function (event) {\n    if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n  });\n  return this;\n};\n\nBacon.EventStream.prototype.merge = function (right) {\n  assertEventStream(right);\n  var left = this;\n  return withDesc(new Bacon.Desc(left, \"merge\", [right]), Bacon.mergeAll(this, right));\n};\n\nBacon.mergeAll = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    return new EventStream(new Bacon.Desc(Bacon, \"mergeAll\", streams), function (sink) {\n      var ends = 0;\n      var smartSink = function (obs) {\n        return function (unsubBoth) {\n          return obs.dispatcher.subscribe(function (event) {\n            if (event.isEnd()) {\n              ends++;\n              if (ends === streams.length) {\n                return sink(endEvent());\n              } else {\n                return Bacon.more;\n              }\n            } else {\n              var reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubBoth();\n              }\n              return reply;\n            }\n          });\n        };\n      };\n      var sinks = _.map(smartSink, streams);\n      return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n    });\n  } else {\n    return Bacon.never();\n  }\n};\n\nBacon.repeatedly = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"repeatedly\", [delay, values]), Bacon.fromPoll(delay, function () {\n    return values[index++ % values.length];\n  }));\n};\n\nBacon.repeat = function (generator) {\n  var index = 0;\n  return Bacon.fromBinder(function (sink) {\n    var flag = false;\n    var reply = Bacon.more;\n    var unsub = function () {};\n    function handleEvent(event) {\n      if (event.isEnd()) {\n        if (!flag) {\n          return flag = true;\n        } else {\n          return subscribeNext();\n        }\n      } else {\n        return reply = sink(event);\n      }\n    };\n    function subscribeNext() {\n      var next;\n      flag = true;\n      while (flag && reply !== Bacon.noMore) {\n        next = generator(index++);\n        flag = false;\n        if (next) {\n          unsub = next.subscribeInternal(handleEvent);\n        } else {\n          sink(endEvent());\n        }\n      }\n      return flag = true;\n    };\n    subscribeNext();\n    return function () {\n      return unsub();\n    };\n  });\n};\n\nBacon.retry = function (options) {\n  if (!_.isFunction(options.source)) {\n    throw new Exception(\"'source' option has to be a function\");\n  }\n  var source = options.source;\n  var retries = options.retries || 0;\n  var retriesDone = 0;\n  var delay = options.delay || function () {\n    return 0;\n  };\n  var isRetryable = options.isRetryable || function () {\n    return true;\n  };\n  var finished = false;\n  var error = null;\n\n  return withDesc(new Bacon.Desc(Bacon, \"retry\", [options]), Bacon.repeat(function () {\n    function valueStream() {\n      return source().endOnError().withHandler(function (event) {\n        if (event.isError()) {\n          error = event;\n          if (!(isRetryable(error.error) && (retries === 0 || retriesDone < retries))) {\n            finished = true;\n            return this.push(event);\n          }\n        } else {\n          if (event.hasValue()) {\n            error = null;\n            finished = true;\n          }\n          return this.push(event);\n        }\n      });\n    }\n\n    if (finished) {\n      return null;\n    } else if (error) {\n      var context = {\n        error: error.error,\n        retriesDone: retriesDone\n      };\n      var pause = Bacon.later(delay(context)).filter(false);\n      retriesDone++;\n      return pause.concat(Bacon.once().flatMap(valueStream));\n    } else {\n      return valueStream();\n    }\n  }));\n};\n\nBacon.sequentially = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"sequentially\", [delay, values]), Bacon.fromPoll(delay, function () {\n    var value = values[index++];\n    if (index < values.length) {\n      return value;\n    } else if (index === values.length) {\n      return [value, endEvent()];\n    } else {\n      return endEvent();\n    }\n  }));\n};\n\nBacon.Observable.prototype.skip = function (count) {\n  return withDesc(new Bacon.Desc(this, \"skip\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else if (count > 0) {\n      count--;\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.skipUntil = function (starter) {\n  var started = starter.take(1).map(true).toProperty(false);\n  return withDesc(new Bacon.Desc(this, \"skipUntil\", [starter]), this.filter(started));\n};\n\nBacon.EventStream.prototype.skipWhile = function (f) {\n  assertObservableIsProperty(f);\n  var ok = false;\n\n  for (var _len19 = arguments.length, args = Array(_len19 > 1 ? _len19 - 1 : 0), _key19 = 1; _key19 < _len19; _key19++) {\n    args[_key19 - 1] = arguments[_key19];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"skipWhile\", [f]), this.withHandler(function (event) {\n      if (ok || !event.hasValue() || !f(event.value())) {\n        if (event.hasValue()) {\n          ok = true;\n        }\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.Observable.prototype.slidingWindow = function (n) {\n  var minValues = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n  return withDesc(new Bacon.Desc(this, \"slidingWindow\", [n, minValues]), this.scan([], function (window, value) {\n    return window.concat([value]).slice(-n);\n  }).filter(function (values) {\n    return values.length >= minValues;\n  }));\n};\n\nvar spies = [];\nvar registerObs = function (obs) {\n  if (spies.length) {\n    if (!registerObs.running) {\n      try {\n        registerObs.running = true;\n        spies.forEach(function (spy) {\n          spy(obs);\n        });\n      } finally {\n        delete registerObs.running;\n      }\n    }\n  }\n};\n\nBacon.spy = function (spy) {\n  return spies.push(spy);\n};\n\nBacon.Property.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), this.scan(seed, function (prev, next) {\n    return next;\n  }));\n};\n\nBacon.EventStream.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), Bacon.once(seed).concat(this));\n};\n\nBacon.Observable.prototype.takeWhile = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len20 = arguments.length, args = Array(_len20 > 1 ? _len20 - 1 : 0), _key20 = 1; _key20 < _len20; _key20++) {\n    args[_key20 - 1] = arguments[_key20];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"takeWhile\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }));\n  });\n};\n\nBacon.EventStream.prototype.throttle = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"throttle\", [delay]), this.bufferWithTime(delay).map(function (values) {\n    return values[values.length - 1];\n  }));\n};\n\nBacon.Property.prototype.throttle = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"throttle\", [delay]), function (changes) {\n    return changes.throttle(delay);\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this12 = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this12.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nBacon[\"try\"] = function (f) {\n  return function (value) {\n    try {\n      return Bacon.once(f(value));\n    } catch (e) {\n      return new Bacon.Error(e);\n    }\n  };\n};\n\nBacon.update = function (initial) {\n  function lateBindFirst(f) {\n    return function () {\n      for (var _len22 = arguments.length, args = Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n        args[_key22] = arguments[_key22];\n      }\n\n      return function (i) {\n        return f.apply(undefined, [i].concat(args));\n      };\n    };\n  }\n\n  for (var _len21 = arguments.length, patterns = Array(_len21 > 1 ? _len21 - 1 : 0), _key21 = 1; _key21 < _len21; _key21++) {\n    patterns[_key21 - 1] = arguments[_key21];\n  }\n\n  var i = patterns.length - 1;\n  while (i > 0) {\n    if (!(patterns[i] instanceof Function)) {\n      patterns[i] = _.always(patterns[i]);\n    }\n    patterns[i] = lateBindFirst(patterns[i]);\n    i = i - 2;\n  }\n  return withDesc(new Bacon.Desc(Bacon, \"update\", [initial].concat(patterns)), Bacon.when.apply(Bacon, patterns).scan(initial, function (x, f) {\n    return f(x);\n  }));\n};\n\nBacon.zipAsArray = function () {\n  for (var _len23 = arguments.length, args = Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n    args[_key23] = arguments[_key23];\n  }\n\n  var streams = argumentsToObservables(args);\n  return withDesc(new Bacon.Desc(Bacon, \"zipAsArray\", streams), Bacon.zipWith(streams, function () {\n    for (var _len24 = arguments.length, xs = Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n      xs[_key24] = arguments[_key24];\n    }\n\n    return xs;\n  }));\n};\n\nBacon.zipWith = function () {\n  for (var _len25 = arguments.length, args = Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n    args[_key25] = arguments[_key25];\n  }\n\n  var observablesAndFunction = argumentsToObservablesAndFunction(args);\n  var streams = observablesAndFunction[0];\n  var f = observablesAndFunction[1];\n\n  streams = _.map(function (s) {\n    return s.toEventStream();\n  }, streams);\n  return withDesc(new Bacon.Desc(Bacon, \"zipWith\", [f].concat(streams)), Bacon.when(streams, f));\n};\n\nBacon.Observable.prototype.zip = function (other, f) {\n  return withDesc(new Bacon.Desc(this, \"zip\", [other]), Bacon.zipWith([this, other], f || Array));\n};\n\nif (typeof define !== \"undefined\" && define !== null && define.amd != null) {\n  define([], function () {\n    return Bacon;\n  });\n  if (typeof this !== \"undefined\" && this !== null) {\n    this.Bacon = Bacon;\n  }\n} else if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n  module.exports = Bacon;\n  Bacon.Bacon = Bacon;\n} else {\n    this.Bacon = Bacon;\n  }\n}).call(this);\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.1.20160328\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\t/* // Take note W3C:\n\t\t\tvar\n\t\t\t  uri = typeof file === \"string\" ? file : file.toURL()\n\t\t\t, revoker = function(evt) {\n\t\t\t\t// idealy DownloadFinishedEvent.data would be the URL requested\n\t\t\t\tif (evt.data === uri) {\n\t\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t\t} else { // file is a File\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t;\n\t\t\tview.addEventListener(\"downloadfinished\", revoker);\n\t\t\t*/\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([\"\\ufeff\", blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar base64Data = reader.result;\n\t\t\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (new_tab === undefined && is_safari) {\n\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name, no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\n\t\t};\n\t}\n\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n","/*global define:false */\n/**\n * Copyright 2016 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.0\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n        _MAP[i + 96] = i;\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.tail = tail;\nexports.head = head;\nexports.fromPairs = fromPairs;\nexports.get = get;\nexports.isUndefined = isUndefined;\nexports.isObject = isObject;\nexports.isArray = isArray;\nexports.isString = isString;\nexports.isNumber = isNumber;\nexports.isBoolean = isBoolean;\nexports.isFunction = isFunction;\nexports.notNull = notNull;\nexports.mapValues = mapValues;\nexports.reduceValues = reduceValues;\nexports.zipArrays = zipArrays;\nexports.zipObjects = zipObjects;\nexports.filterValues = filterValues;\nexports.any = any;\nexports.tagType = tagType;\nexports.checkType = checkType;\nexports.match = match;\nexports.hasChildren = hasChildren;\nexports.checkRenderResult = checkRenderResult;\nexports.updateEl = updateEl;\nexports.addressWith = addressWith;\nexports.addressEqual = addressEqual;\nexports.makeTree = makeTree;\nexports.checkState = checkState;\nexports.diffWithModelMin = diffWithModelMin;\nexports.makeSignal = makeSignal;\nexports.makeOneSignalAPI = makeOneSignalAPI;\nexports.makeChildSignalsAPI = makeChildSignalsAPI;\nexports.reduceChildren = reduceChildren;\nexports.mergeSignals = mergeSignals;\nexports.objectOf = objectOf;\nexports.arrayOf = arrayOf;\nexports.createComponent = createComponent;\nexports.patchMethods = patchMethods;\nexports.makeCallMethod = makeCallMethod;\nexports.makeCallReducer = makeCallReducer;\nexports.makeStateCallers = makeStateCallers;\nexports.run = run;\nexports.addressToObj = addressToObj;\nexports.objectForBindings = objectForBindings;\nexports.createElement = createElement;\nexports.bind = bind;\nexports.createDOMElement = createDOMElement;\nexports.getStyles = getStyles;\nexports.updateDOMElement = updateDOMElement;\nexports.render = render;\n/** @module tinier */\n\n// constants\nvar ARRAY_OF = exports.ARRAY_OF = '@TINIER_ARRAY_OF';\nvar OBJECT_OF = exports.OBJECT_OF = '@TINIER_OBJECT_OF';\nvar COMPONENT = exports.COMPONENT = '@TINIER_COMPONENT';\nvar ARRAY = exports.ARRAY = '@TINIER_ARRAY';\nvar OBJECT = exports.OBJECT = '@TINIER_OBJECT';\nvar NODE = exports.NODE = '@TINIER_NODE';\nvar NULL = exports.NULL = '@TINIER_NULL';\nvar STRING = exports.STRING = '@TINIER_STRING';\nvar NUMBER = exports.NUMBER = '@TINIER_NUMBER';\nvar BOOLEAN = exports.BOOLEAN = '@TINIER_BOOLEAN';\nvar ANY = exports.ANY = '@TINIER_ANY';\nvar NO_ARGUMENT = exports.NO_ARGUMENT = '@TINIER_NO_ARGUMENT';\nvar TOP = exports.TOP = '@TINIER_TOP';\nvar CREATE = exports.CREATE = '@TINIER_CREATE';\nvar UPDATE = exports.UPDATE = '@TINIER_UPDATE';\nvar DESTROY = exports.DESTROY = '@TINIER_DESTROY';\n\n// basic functions\nfunction noop() {}\n\nfunction constant(val) {\n  return function () {\n    return val;\n  };\n}\n\nfunction identity(val) {\n  return val;\n}\n\nfunction last(array) {\n  return array[array.length - 1];\n}\n\nfunction tail(array) {\n  return [array.slice(0, -1), last(array)];\n}\n\nfunction head(array) {\n  return [array[0], array.slice(1)];\n}\n\nfunction fromPairs(pairs) {\n  return pairs.reduce(function (accum, _ref) {\n    var _extends2;\n\n    var key = _ref[0],\n        val = _ref[1];\n\n    return _extends({}, accum, (_extends2 = {}, _extends2[key] = val, _extends2));\n  }, {});\n}\n\n/**\n * Get the property of the object or index of the array, or return the default\n * value.\n * @param {Object|Array} object - An object or array.\n * @param {String} property - An property of the object.\n * @return {*} The value of the property or, if not present, the default value.\n */\nfunction get(object, property) {\n  return object && typeof object !== 'string' && object.hasOwnProperty(property) ? object[property] : null;\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\n/**\n * Check if the value is an object with enumerable properties. Also returns true\n * for arrays.\n * @param {*} value - The value to test.\n * @return {Boolean}\n */\nfunction isObject(object) {\n  return object != null && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';\n}\n\n/**\n * Check if the object is an array\n * @param {*} object - The object to test.\n * @return {Boolean}\n */\nfunction isArray(object) {\n  return Array.isArray(object);\n}\n\nfunction isString(v) {\n  return typeof v === 'string';\n}\n\nfunction isNumber(v) {\n  return typeof v === 'number';\n}\n\nfunction isBoolean(v) {\n  return typeof v === 'boolean';\n}\n\n/**\n * Check if the object is a function.\n * @param {*} object - The object to test.\n * @return {Boolean}\n */\nfunction isFunction(object) {\n  return typeof object === 'function';\n}\n\nfunction notNull(val) {\n  return val !== null;\n}\n\n/**\n * Iterate over the keys and values of an object. Uses Object.keys to find\n * iterable keys.\n * @param {Object} obj - The input object.\n * @param {Function} fn - A function that takes the arguments (value, key).\n * @return {Object} A transformed object with values returned by the function.\n */\nfunction mapValues(obj, fn) {\n  var newObj = {};\n  for (var key in obj) {\n    newObj[key] = fn(obj[key], key);\n  }\n  return newObj;\n}\n\nfunction reduceValues(obj, fn, init) {\n  var accum = init;\n  for (var key in obj) {\n    accum = fn(accum, obj[key], key);\n  }\n  return accum;\n}\n\nfunction zipArrays(arrays) {\n  var lenLongest = Math.max.apply(null, arrays.filter(function (x) {\n    return x !== null;\n  }).map(function (a) {\n    return a.length;\n  }));\n  var res = [];\n\n  var _loop = function _loop(i) {\n    res.push(arrays.map(function (a) {\n      return a !== null && i < a.length ? a[i] : null;\n    }));\n  };\n\n  for (var i = 0; i < lenLongest; i++) {\n    _loop(i);\n  }\n  return res;\n}\n\nfunction zipObjects(objects) {\n  var len = objects.length;\n  // find all the keys\n  var allKeys = {};\n  for (var i = 0; i < len; i++) {\n    var object = objects[i];\n    if (object === null) {\n      continue;\n    }\n    for (var k in object) {\n      allKeys[k] = true;\n    }\n  }\n  // make new object\n  var res = {};\n  for (var key in allKeys) {\n    res[key] = Array(len);\n    for (var _i = 0; _i < len; _i++) {\n      var _object = objects[_i];\n      res[key][_i] = get(_object, key);\n    }\n  }\n  return res;\n}\n\nfunction filterValues(object, fn) {\n  var out = {};\n  for (var key in object) {\n    var value = object[key];\n    if (fn(value, key)) out[key] = value;\n  }\n  return out;\n}\n\n/**\n * Lazy any function.\n * @param {[Boolean]}\n * @return {Boolean}\n */\nfunction any(ar) {\n  for (var i = 0, l = ar.length; i < l; i++) {\n    var val = ar[i];\n    if (!isBoolean(val)) {\n      throw new Error('Not a boolean: ' + val);\n    }\n    if (val) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Defers calling fn until the current process finishes.\n */\nfunction defer(fn) {\n  setTimeout(fn, 1);\n}\n\n/**\n * Adds a tag to the object.\n */\nfunction tagType(type, obj) {\n  if (!isString(type)) {\n    throw new Error('First argument must be a string');\n  }\n  if (!isObject(obj)) {\n    throw new Error('Second argument must be an object');\n  }\n  obj.type = type;\n  return obj;\n}\n\nfunction checkType(type, obj) {\n  if (obj === null) {\n    return type === NULL;\n  }\n  if (typeof type !== 'string') {\n    throw new Error('First argument must be a string');\n  }\n  if (isUndefined(obj)) {\n    throw new Error('Bad second argument');\n  }\n  return get(obj, 'type') === type;\n}\n\n/**\n * Basic pattern matching.\n * @param {Object|null} object - An object generated with tagType, an object, an\n *                               array, or null.\n * @param {Object} fns - An object with types for keys and functions for values.\n *                       Also accepts keys tinier.OBJECT, tinier.ARRAY, and\n *                       tinier.NULL. To avoid conflict, tinier.OBJECT has the\n *                       lowest priority.\n * @param {Function} defaultFn - A function to run if the object type is not\n *                               found. Takes `object` as a single argument.\n * @return {*} Return value from the called function.\n */\nfunction match(object, fns) {\n  var defaultFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : throwUnrecognizedType;\n\n  for (var key in fns) {\n    if (key === NULL && object === null || key === ARRAY && isArray(object) || isObject(object) && checkType(key, object)) {\n      return fns[key](object);\n    }\n  }\n  if (OBJECT in fns && isObject(object)) {\n    return fns[OBJECT](object);\n  }\n  return defaultFn(object);\n}\n\nfunction throwUnrecognizedType(node) {\n  throw new Error('Unrecognized type in pattern matching: ' + node);\n}\n\n// -------------------------------------------------------------------\n// Update components\n// -------------------------------------------------------------------\n\n/**\n * Determine whether the model has any child components.\n */\nfunction hasChildren(node) {\n  var _match;\n\n  return match(node, (_match = {}, _match[ARRAY_OF] = function () {\n    return true;\n  }, _match[OBJECT_OF] = function () {\n    return true;\n  }, _match[COMPONENT] = function () {\n    return true;\n  }, _match[ARRAY] = function (node) {\n    return any(node.map(hasChildren));\n  }, _match[OBJECT] = function (node) {\n    return any(Object.keys(node).map(function (k) {\n      return hasChildren(node[k]);\n    }));\n  }, _match));\n}\n\nfunction checkRenderResultRecurse(userBindings, node, state) {\n  var _match2;\n\n  var updateRecurse = function updateRecurse(s, k) {\n    var u = k === null ? userBindings : get(userBindings, k);\n    if (userBindings !== null && u === null) {\n      throw new Error('Shape of the bindings object does not match the model.' + 'Model: ' + node + '  Bindings object: ' + userBindings);\n    }\n  };\n  var recurse = function recurse(n, k) {\n    checkRenderResultRecurse(get(userBindings, k), n, get(state, k));\n  };\n  match(node, (_match2 = {}, _match2[OBJECT_OF] = function (objOf) {\n    // check for extra attributes\n    if (userBindings !== null && any(Object.keys(userBindings).map(function (k) {\n      return !(k in state);\n    }))) {\n      throw new Error('Shape of the bindings object does not match the ' + 'model. Model: ' + node + ' Bindings object: ' + userBindings);\n    } else {\n      mapValues(state, updateRecurse);\n    }\n  }, _match2[ARRAY_OF] = function (arOf) {\n    // check array lengths\n    if (userBindings !== null && state.length !== userBindings.length) {\n      throw new Error('Shape of the bindings object does not match the ' + 'model. Model: ' + node + ' Bindings object: ' + userBindings);\n    } else {\n      state.map(updateRecurse);\n    }\n  }, _match2[COMPONENT] = function (component) {\n    return updateRecurse(state, null);\n  }, _match2[ARRAY] = function (ar) {\n    if (userBindings !== null && !isArray(userBindings)) {\n      throw new Error('Shape of the bindings object does not match the ' + 'model. Model: ' + node + ' Bindings object: ' + userBindings);\n    } else {\n      ar.map(recurse);\n    }\n  }, _match2[OBJECT] = function (obj) {\n    if (userBindings !== null && isArray(userBindings)) {\n      throw new Error('Shape of the bindings object does not match the ' + 'model. Model: ' + node + ' Bindings object: ' + userBindings);\n    } else {\n      mapValues(obj, recurse);\n    }\n  }, _match2));\n}\n\n/**\n * Check the result of render against the model and state.\n * @param {Object} node - A model node.\n * @param {*} state - A state node.\n * @param {Object} userBindings - The new bindings returned by render.\n * @return {Object} The userBindings object.\n */\nfunction checkRenderResult(userBindings, node, state) {\n  checkRenderResultRecurse(userBindings, node, state);\n  return userBindings;\n}\n\n/**\n * Run lifecycle functions for the component.\n * @param {Object} address -\n * @param {Object} component -\n * @param {Object} state -\n * @param {Object} diffVal -\n * @param {Object|null} lastRenderedEl - The element rendered in previously, if\n *                                       there was one.\n * @param {Object|null} el - The element to render in provided by\n *                           component.render.\n * @param {Object} stateCallers -\n * @return {Object}\n */\nfunction updateEl(address, component, state, diffVal, lastRenderedEl, el, stateCallers, opts) {\n  // the object passed to lifecycle functions\n  var reducers = patchReducersWithState(address, component, stateCallers.callReducer);\n  var signals = patchSignals(address, component, stateCallers.callSignal);\n  var methods = patchMethods(address, component, stateCallers.callMethod, reducers, signals);\n  var arg = { state: state, methods: methods, reducers: reducers, signals: signals, el: el, lastRenderedEl: lastRenderedEl };\n\n  // warn if the el is null\n  if (el === null && !(diffVal === DESTROY) && component.render !== noop) {\n    throw new Error('No binding provided for component ' + component.displayName + ' at [' + address.join(', ') + '].');\n  }\n\n  if (diffVal === DESTROY) {\n    // destroy\n    component.willUnmount(arg);\n    return { bindings: null, lastRenderedEl: lastRenderedEl };\n  } else {\n    // create or update\n    var shouldUpdate = diffVal === CREATE || diffVal === UPDATE || el !== lastRenderedEl;\n\n    if (diffVal === CREATE) component.willMount(arg);else if (shouldUpdate) component.willUpdate(arg);\n\n    if (opts.verbose && shouldUpdate) {\n      console.log('Rendering ' + component.displayName + ' at [' + address.join(', ') + '].');\n    }\n\n    // render\n    var bindings = shouldUpdate ? checkRenderResult(component.render(arg), component.model, state) : null;\n    // check result\n    if (shouldUpdate && bindings === null && hasChildren(component.model)) {\n      throw new Error('The render function of component ' + component.displayName + ' did not return new bindings');\n    }\n\n    // These need to be asynchronous.\n    if (diffVal === CREATE) defer(function () {\n      return component.didMount(arg);\n    });else if (shouldUpdate) defer(function () {\n      return component.didUpdate(arg);\n    });\n\n    // If the component rendered, then change lastEl.\n    return { bindings: bindings, lastRenderedEl: shouldUpdate ? el : lastRenderedEl };\n  }\n}\n\n/**\n * For a tree, return everything down to the first set of NODES with data for\n * leaves.\n */\nfunction dropNodes(tree) {\n  var _match3;\n\n  return match(tree, (_match3 = {}, _match3[NODE] = function (node) {\n    return node.data;\n  }, _match3[OBJECT] = function (obj) {\n    return mapValues(obj, dropNodes);\n  }, _match3[ARRAY] = function (ar) {\n    return ar.map(dropNodes);\n  }, _match3[NULL] = function () {\n    return null;\n  }, _match3));\n}\n\n/**\n * Run create, update, and destroy for component.\n * @param {Array} address - The location of the component in the state.\n * @param {Object} node - A model or a node within a model.\n * @param {Object} diff - The diff object for this component.\n * @param {Object|null} bindings -\n * @param {Object|null} renderResult -\n * @param {Object} stateCallers -\n * @return {Object}\n */\nfunction updateComponents(address, node, state, diff, bindings, renderResult, stateCallers, opts) {\n  var _match4;\n\n  var updateRecurse = function updateRecurse(_ref2, k) {\n    var d = _ref2[0],\n        s = _ref2[1];\n\n    // TODO in updateRecurse functions where k can be null, there must be a\n    // nicer way to organize things with fewer null checks\n    var component = k !== null ? node.component : node;\n    var newAddress = k !== null ? addressWith(address, k) : address;\n    var b = k !== null ? get(bindings, k) : bindings;\n    var r = k !== null ? get(renderResult, k) : renderResult;\n    // Update the component. If DESTROY, then there will not be a binding.\n    var res = updateEl(newAddress, component, s, d.data, get(b, 'data'), r, stateCallers, opts);\n    // Fall back on old bindings.\n    var nextRenderResult = res.bindings !== null ? res.bindings : dropNodes(b.children);\n    var data = res.lastRenderedEl;\n    // update children\n    var children = updateComponents(newAddress, component.model, s, d.children, get(b, 'children'), nextRenderResult, stateCallers, opts);\n    return tagType(NODE, { data: data, children: children });\n  };\n  var recurse = function recurse(n, k) {\n    return updateComponents(addressWith(address, k), n, get(state, k), diff[k], get(bindings, k), get(renderResult, k), stateCallers, opts);\n  };\n  return match(node, (_match4 = {}, _match4[OBJECT_OF] = function (objOf) {\n    return mapValues(zipObjects([diff, state]), updateRecurse);\n  }, _match4[ARRAY_OF] = function (arOf) {\n    return zipArrays([diff, state]).map(updateRecurse);\n  }, _match4[COMPONENT] = function (component) {\n    return updateRecurse([diff, state], null);\n  }, _match4[ARRAY] = function (ar) {\n    return ar.map(recurse);\n  }, _match4[OBJECT] = function (obj) {\n    return mapValues(obj, recurse);\n  }, _match4));\n}\n\n// -------------------------------------------------------------------\n// State\n// -------------------------------------------------------------------\n\nfunction addressWith(address, key) {\n  if (key === null) {\n    return address;\n  } else {\n    var newAddress = address.slice(0);\n    newAddress.push(key);\n    return newAddress;\n  }\n}\n\nfunction addressEqual(a1, a2) {\n  if (a1 === null || a2 === null || a1.length !== a2.length) return false;\n  return a1.reduce(function (accum, v, i) {\n    return accum && v === a2[i];\n  }, true);\n}\n\n/**\n * Get the value in a tree.\n * @param {Array} address -\n * @param {Object} tree -\n * @return {*} - The value at the given address.\n */\nfunction treeGet(address, tree) {\n  return address.reduce(function (accum, val) {\n    return checkType(NODE, accum) ? accum.children[val] : accum[val];\n  }, tree);\n}\n\n/**\n * Set the value in a tree; immutable.\n * @param {Array} address -\n * @param {Object} tree -\n * @param {*} value - The new value to set at address.\n * @return (*) The new tree.\n */\nfunction treeSet(address, tree, value) {\n  if (address.length === 0) {\n    return value;\n  } else {\n    var _extends3;\n\n    var _head = head(address),\n        k = _head[0],\n        rest = _head[1];\n\n    return typeof k === 'string' ? _extends({}, tree, (_extends3 = {}, _extends3[k] = treeSet(rest, treeGet([k], tree), value), _extends3)) : [].concat(tree.slice(0, k), [treeSet(rest, treeGet([k], tree), value)], tree.slice(k + 1));\n  }\n}\n\n/**\n * Set the value in a tree; mutable.\n * @param {Array} address -\n * @param {Object} tree -\n * @param {*} value - The new value to set at address.\n * @return (*) The tree.\n */\nfunction treeSetMutable(address, tree, value) {\n  if (address.length === 0) {\n    return value;\n  } else {\n    var _tail = tail(address),\n        rest = _tail[0],\n        _last = _tail[1];\n\n    var parent = treeGet(rest, tree);\n    if (checkType(NODE, parent)) {\n      parent.children[_last] = value;\n    } else {\n      parent[_last] = value;\n    }\n    return tree;\n  }\n}\n\nfunction makeTree(init, mutable) {\n  var state = init;\n  return {\n    get: function get(address) {\n      return treeGet(address, state);\n    },\n    set: function set(address, value) {\n      state = mutable ? treeSetMutable(address, state, value) : treeSet(address, state, value);\n    }\n  };\n}\n\n/**\n * Check that the new state is valid. If not, then throw an Error.\n * @param {Object} modelNode - A model or a node of a model.\n * @param {Object} newState - The new state corresponding to modelNode.\n */\nfunction checkState(modelNode, newState) {\n  var _match5;\n\n  if (newState === null) {\n    return;\n  }\n  match(modelNode, (_match5 = {}, _match5[OBJECT_OF] = function (objOf) {\n    if (!isObject(newState) || isArray(newState)) {\n      throw new Error('Shape of the new state does not match the model. ' + 'Model: ' + objOf + '  State: ' + newState);\n    } else {\n      mapValues(newState, function (s) {\n        return checkState(modelNode.component.model, s);\n      });\n    }\n  }, _match5[ARRAY_OF] = function (arOf) {\n    if (!isArray(newState)) {\n      throw new Error('Shape of the new state does not match the model.' + 'Model: ' + arOf + '  State: ' + newState);\n    } else {\n      newState.map(function (s) {\n        return checkState(modelNode.component.model, s);\n      });\n    }\n  }, _match5[COMPONENT] = function (component) {\n    checkState(modelNode.model, newState);\n  }, _match5[ARRAY] = function (ar) {\n    if (!isArray(newState)) {\n      throw new Error('Shape of the new state does not match the model.' + 'Model: ' + ar + '  State: ' + newState);\n    } else {\n      ar.map(function (a, i) {\n        return checkState(a, get(newState, i));\n      });\n    }\n  }, _match5[OBJECT] = function (obj) {\n    if (!isObject(newState) || isArray(newState)) {\n      throw new Error('Shape of the new state does not match the model. ' + 'Model: ' + obj + '  State: ' + newState);\n    } else {\n      mapValues(obj, function (o, k) {\n        return checkState(o, get(newState, k));\n      });\n    }\n  }, _match5));\n}\n\nfunction computeDiffValue(state, lastState, key, isValidFn, shouldUpdate, address, triggeringAddress) {\n  var stateValid = isValidFn(state, key);\n  var lastStateValid = isValidFn(lastState, key);\n  if (stateValid && !lastStateValid) {\n    return CREATE;\n  } else if (stateValid && lastStateValid) {\n    var same = key === null ? state !== lastState : state[key] !== lastState[key];\n    var componentTriggeredUpdate = addressEqual(address, triggeringAddress);\n    if (same && shouldUpdate({ state: state, lastState: lastState, componentTriggeredUpdate: componentTriggeredUpdate })) {\n      return UPDATE;\n    } else {\n      return null;\n    }\n  } else if (!stateValid && lastStateValid) {\n    return DESTROY;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compute the full diff tree for the model node. Calls shouldUpdate.\n */\nfunction diffWithModel(modelNode, state, lastState, address, triggeringAddress) {\n  var _match6;\n\n  return match(modelNode, (_match6 = {}, _match6[OBJECT_OF] = function (objOf) {\n    var isValidFn = function isValidFn(obj, k) {\n      return isObject(obj) && k in obj && obj[k] !== null;\n    };\n    var l = Object.assign({}, state || {}, lastState || {});\n    return mapValues(l, function (_, k) {\n      var data = computeDiffValue(state, lastState, k, isValidFn, objOf.component.shouldUpdate, addressWith(address, k), triggeringAddress);\n      var children = diffWithModel(objOf.component.model, get(state, k), get(lastState, k), addressWith(address, k), triggeringAddress);\n      return tagType(NODE, { data: data, children: children });\n    });\n  }, _match6[ARRAY_OF] = function (arOf) {\n    var isValidFn = function isValidFn(obj, i) {\n      return isArray(obj) && i < obj.length && obj[i] !== null;\n    };\n    var longest = Math.max(isArray(state) ? state.length : 0, isArray(lastState) ? lastState.length : 0);\n    var l = Array.apply(null, { length: longest });\n    return l.map(function (_, i) {\n      var data = computeDiffValue(state, lastState, i, isValidFn, arOf.component.shouldUpdate, addressWith(address, i), triggeringAddress);\n      var children = diffWithModel(arOf.component.model, get(state, i), get(lastState, i), addressWith(address, i), triggeringAddress);\n      return tagType(NODE, { data: data, children: children });\n    });\n  }, _match6[COMPONENT] = function (component) {\n    var isValidFn = function isValidFn(obj, _) {\n      return obj !== null;\n    };\n    var data = computeDiffValue(state, lastState, null, isValidFn, component.shouldUpdate, address, triggeringAddress);\n    var children = diffWithModel(component.model, state || null, lastState || null, address, triggeringAddress);\n    return tagType(NODE, { data: data, children: children });\n  }, _match6[ARRAY] = function (ar) {\n    return ar.map(function (n, i) {\n      return diffWithModel(n, get(state, i), get(lastState, i), addressWith(address, i), triggeringAddress);\n    });\n  }, _match6[OBJECT] = function (obj) {\n    return mapValues(obj, function (n, k) {\n      return diffWithModel(n, get(state, k), get(lastState, k), addressWith(address, k), triggeringAddress);\n    });\n  }, _match6));\n}\n\n/**\n * For an array of minSignals and minUpdate trees, return the minimal trees that\n * represent the whole array.\n */\nfunction singleOrAll(modelNode, address, minTreeAr) {\n  var getMin = function getMin(indices) {\n    if (indices.length === 0) {\n      // If all elements in the array are null, return null.\n      return null;\n    } else if (nonNullIndices.signals.length === 1) {\n      // If there is a single value, return that tree, with an updated address.\n      return {\n        minSignals: {\n          diff: minTreeAr.map(function (a) {\n            return a.minSignals.diff;\n          }),\n          address: address,\n          modelNode: modelNode\n        },\n        minUpdate: {\n          diff: minTreeAr.map(function (a) {\n            return a.minUpdate.diff;\n          }),\n          address: address,\n          modelNode: modelNode\n        }\n      };\n    } else {\n      // Otherwise, return full trees from this level.\n      return {\n        minSignals: {\n          diff: minTreeAr.map(function (a) {\n            return a.minSignals.diff;\n          }),\n          address: address,\n          modelNode: modelNode\n        },\n        minUpdate: {\n          diff: minTreeAr.map(function (a) {\n            return a.minUpdate.diff;\n          }),\n          address: address,\n          modelNode: modelNode\n        }\n      };\n    }\n  };\n  // Get the indices where the signal and update trees are not null.\n  var nonNullIndices = minTreeAr.reduce(function (accum, val, i) {\n    return {\n      signals: val.minSignals !== null ? [].concat(accum.signals, [i]) : accum.signals,\n      update: val.minUpdate !== null ? [].concat(accum.update, [i]) : accum.update\n    };\n  }, { signals: [], update: [] });\n  // For each set of indices, test the diffs with these tests to get a minimum\n  // tree.\n  var minSignals = getMin(nonNullIndices.signals);\n  var minUpdate = getMin(nonNullIndices.update);\n  return { minSignals: minSignals, minUpdate: minUpdate };\n}\n\n/**\n * 1. Run shouldUpdate for every component in the tree.\n * 2. Return the information about the minimal tree to update with\n *    updateComponents (whenever shouldUpdate is true) as minUpdate.\n * 3. Return the information about the minimal tree to update with\n *    mergeSignals (whenever nodes are added or deleted) as minSignals.\n *\n * @param {Object} modelNode - A model or a node of a model.\n * @param {Object} state - The new state corresponding to modelNode.\n * @param {Object|null} lastState - The old state corresponding to modelNode.\n * @param {Array} address -\n * @param {Array} triggeringAddress -\n * @returns {Object} An object with the attributes minSignals and\n *                   minUpdate. Each represents a minimal tree necessary for the\n *                   appropriate update function and has the attributes diff,\n *                   modelNode, and address.\n */\nfunction diffWithModelMin(modelNode, state, lastState, address, triggeringAddress) {\n  // 1. calculate whole diff tree\n  var diff = diffWithModel(modelNode, state, lastState, address, triggeringAddress);\n  // 2. trim the tree for the two needs\n  return {\n    minSignals: {\n      diff: diff,\n      address: address,\n      modelNode: modelNode\n    },\n    minUpdate: {\n      diff: diff,\n      address: address,\n      modelNode: modelNode\n    }\n  };\n}\n\n// -------------------------------------------------------------------\n// Signals\n// -------------------------------------------------------------------\n\n/**\n * Make a signal.\n * @return {Object} A signal with attributes `on` and `call`.\n */\nfunction makeSignal() {\n  var res = { _onFns: [] };\n  res.on = function (fn) {\n    if (!isFunction(fn)) {\n      throw new Error('First argument to \"on\" must be a function');\n    }\n    res._onFns = [].concat(res._onFns, [fn]);\n  };\n  res.call = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return res._onFns.map(function (fn) {\n      return fn.apply(undefined, args);\n    });\n  };\n  return res;\n}\n\n/**\n * Create an object that with `on/onEach` and `call` attributes.\n * @param {Boolean} isCollection -\n * @return {Object}\n */\nfunction makeOneSignalAPI(isCollection) {\n  // make a `_callFn` function that will be replaced later and is the target of\n  // `call`\n  var res = { _callFns: [] };\n  // call will run all functions in `_callFns`\n  res.call = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (args.length > 1 || !isObject(args[0])) {\n      throw new Error('Call only accepts a single object as argument.');\n    }\n    res._callFns.map(function (_ref3) {\n      var fn = _ref3.fn;\n      return fn(args[0]);\n    });\n  };\n  // store callbacks passed with `on` or `onEach`\n  res._onFns = [];\n  var onName = isCollection ? 'onEach' : 'on';\n  res[onName] = function (fn) {\n    if (!isFunction(fn)) {\n      throw new Error('Argument to \"' + onName + '\" must be a function');\n    }\n    res._onFns.push(function (index) {\n      return function () {\n        if (arguments.length > 1 || !isObject(arguments.length <= 0 ? undefined : arguments[0])) {\n          throw new Error('On function only accepts a single object as argument.');\n        }\n        var argObject = typeof index === 'string' ? _extends({ k: index }, arguments.length <= 0 ? undefined : arguments[0]) : typeof index === 'number' ? _extends({ i: index }, arguments.length <= 0 ? undefined : arguments[0]) : arguments.length <= 0 ? undefined : arguments[0];\n        fn(argObject);\n      };\n    });\n  };\n  return res;\n}\n\n/**\n * Implement the signals API.\n */\nfunction makeSignalsAPI(signalNames, isCollection) {\n  return fromPairs(signalNames.map(function (name) {\n    return [name, makeOneSignalAPI(isCollection)];\n  }));\n}\n\n/**\n * Implement the childSignals API.\n */\nfunction makeChildSignalsAPI(model) {\n  var _match7;\n\n  return match(model, (_match7 = {}, _match7[OBJECT_OF] = function (node) {\n    return makeSignalsAPI(node.component.signalNames, true);\n  }, _match7[ARRAY_OF] = function (node) {\n    return makeSignalsAPI(node.component.signalNames, true);\n  }, _match7[COMPONENT] = function (node) {\n    return makeSignalsAPI(node.signalNames, false);\n  }, _match7[ARRAY] = function (ar) {\n    return ar.map(makeChildSignalsAPI).filter(notNull);\n  }, _match7[OBJECT] = function (obj) {\n    return filterValues(mapValues(obj, makeChildSignalsAPI), notNull);\n  }, _match7), constant(null));\n}\n\n/**\n * Reduce the direct children of the tree.\n * @param {Object} node - A node in a tree.\n * @param {Function} fn - Function with arguments (accum, object).\n * @param {*} init - An initial value.\n * @param {Array} address - The local address.\n * @return {*}\n */\nfunction reduceChildren(node, fn, init) {\n  var _match8;\n\n  var address = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n  return match(node, (_match8 = {}, _match8[NODE] = function (node) {\n    return fn(init, node.data, address);\n  }, _match8[ARRAY] = function (ar) {\n    return ar.reduce(function (accum, n, k) {\n      return reduceChildren(n, fn, accum, addressWith(address, k));\n    }, init);\n  }, _match8[OBJECT] = function (obj) {\n    return reduceValues(obj, function (accum, n, k) {\n      return reduceChildren(n, fn, accum, addressWith(address, k));\n    }, init);\n  }, _match8), constant(init));\n}\n\n/**\n * Run signalSetup with the component.\n * @param {Object} component -\n * @param {Array} address -\n * @param {Object} stateCallers -\n * @return {Object} Object with keys signalsAPI and childSignalsAPI.\n */\nfunction runSignalSetup(component, address, stateCallers) {\n  var signalsAPI = makeSignalsAPI(component.signalNames, false);\n  var childSignalsAPI = makeChildSignalsAPI(component.model);\n  var reducers = patchReducersWithState(address, component, stateCallers.callReducer);\n  var signals = patchSignals(address, component, stateCallers.callSignal);\n  var methods = patchMethods(address, component, stateCallers.callMethod, reducers, signals);\n  // cannot call signalSetup any earlier because it needs a reference to\n  // `methods`, which must know the address\n  component.signalSetup({\n    methods: methods,\n    reducers: reducers,\n    signals: signalsAPI,\n    childSignals: childSignalsAPI\n  });\n  return { signalsAPI: signalsAPI, childSignalsAPI: childSignalsAPI };\n}\n\n/**\n * Merge a signals object with signal callbacks from signalSetup.\n * @param {Object} node - A model node.\n * @param {Array} address - The address.\n * @param {Object} diffNode - A node in the diff tree.\n * @param {Object|null} signalNode - A node in the existing signals tree.\n * @param {Object} stateCallers - The object with 3 functions to modify global\n *                                state.\n * @param {Object|null} upChild - The childSignalsAPI object for the parent\n *                                Component.\n * @param {Array|null} upAddress - A local address specifying the location\n *                                 relative to the parent Component.\n * @return {Object} The new signals tree.\n */\nfunction mergeSignals(node, address, diffNode, signalNode, stateCallers) {\n  var _match9;\n\n  var upChild = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var upAddress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n  var updateRecurse = function updateRecurse(_ref4, k) {\n    var d = _ref4[0],\n        s = _ref4[1];\n\n    var component = k !== null ? node.component : node;\n    var newAddress = k !== null ? addressWith(address, k) : address;\n    var diffVal = d.data;\n    if (diffVal === CREATE) {\n      var _ret2 = function () {\n        // For create, apply the callbacks\n        var _runSignalSetup = runSignalSetup(component, newAddress, stateCallers),\n            signalsAPI = _runSignalSetup.signalsAPI,\n            childSignalsAPI = _runSignalSetup.childSignalsAPI;\n\n        var newUpAddress = upAddress === null ? null : addressWith(upAddress, k);\n        var signals = mapValues(zipObjects([signalsAPI, upChild]), function (_ref5, key) {\n          var callbackObj = _ref5[0],\n              upCallbackObj = _ref5[1];\n\n          var signal = makeSignal();\n\n          // For each callback, add each onFn to the signal,\n          // and set the callFn to the signal dispatch. Only\n          // on, not onEach, so execute the fn with no\n          // argument.\n          callbackObj._onFns.map(function (fn) {\n            return signal.on(fn());\n          });\n          callbackObj._callFns = [{ fn: signal.call, address: null }];\n\n          // For the childSignalCallbacks from the parent\n          if (upCallbackObj !== null) {\n            upCallbackObj._onFns.map(function (fn) {\n              return signal.on(fn(k));\n            });\n            upCallbackObj._callFns = [].concat(upCallbackObj._callFns, [{ fn: signal.call, address: newUpAddress }]);\n          }\n\n          return signal;\n        });\n        var data = { signals: signals, signalsAPI: signalsAPI, childSignalsAPI: childSignalsAPI };\n\n        // loop through the children of signals and node\n        var children = mergeSignals(component.model, newAddress, d.children, get(s, 'children'), stateCallers, childSignalsAPI, []);\n\n        return {\n          v: tagType(NODE, { data: data, children: children })\n        };\n      }();\n\n      if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n    } else if (diffVal === DESTROY) {\n      // In the case of destroy, this leaf in the signals object will be null.\n      return null;\n    } else {\n      // update\n      var _reduceChildren = reduceChildren(d.children, function (accum, diffVal, address) {\n        var hasCreated = accum.hasCreated || diffVal === CREATE;\n        var destroyed = diffVal === DESTROY ? [].concat(accum.destroyed, [address]) : accum.destroyed;\n        return { hasCreated: hasCreated, destroyed: destroyed };\n      }, { hasCreated: false, destroyed: [] }),\n          hasCreated = _reduceChildren.hasCreated,\n          destroyed = _reduceChildren.destroyed;\n\n      // if there are deleted children, delete references to them\n\n\n      destroyed.map(function (childAddress) {\n        // get the right child within childSignalsAPI\n        var childSignalsAPINode = childAddress.reduce(function (accum, k, i) {\n          if (k in accum) {\n            return accum[k];\n          } else if (i === childAddress.length - 1) {\n            return accum;\n          } else {\n            throw new Error('Bad address ' + childAddress + ' for object ' + s.data.childSignalsAPI);\n          }\n        }, s.data.childSignalsAPI);\n        mapValues(childSignalsAPINode, function (obj) {\n          // remove the matching callFns\n          obj._callFns = obj._callFns.filter(function (_ref6) {\n            var address = _ref6.address;\n\n            return !addressEqual(address, childAddress);\n          });\n        });\n      });\n\n      var newUpChild = hasCreated ? s.data.childSignalsAPI : null;\n      var _newUpAddress = hasCreated ? [] : null;\n      var _children = mergeSignals(component.model, newAddress, d.children, get(s, 'children'), stateCallers, newUpChild, _newUpAddress);\n      return tagType(NODE, { data: get(s, 'data'), children: _children });\n    }\n  };\n\n  var recurse = function recurse(_ref7, k) {\n    var n = _ref7[0],\n        d = _ref7[1],\n        s = _ref7[2],\n        u = _ref7[3];\n\n    var newAddress = addressWith(address, k);\n    var newUpAddress = upAddress === null ? null : addressWith(upAddress, k);\n    return mergeSignals(n, newAddress, d, s, stateCallers, u, newUpAddress);\n  };\n\n  return match(node, (_match9 = {}, _match9[OBJECT_OF] = function (objOf) {\n    return filterValues(mapValues(zipObjects([diffNode, signalNode]), updateRecurse), notNull);\n  }, _match9[ARRAY_OF] = function (arOf) {\n    return zipArrays([diffNode, signalNode]).map(updateRecurse).filter(notNull);\n  }, _match9[COMPONENT] = function (component) {\n    return updateRecurse([diffNode, signalNode], null);\n  }, _match9[ARRAY] = function (ar) {\n    return zipArrays([ar, diffNode, signalNode, upChild]).map(recurse);\n  }, _match9[OBJECT] = function (obj) {\n    return mapValues(zipObjects([obj, diffNode, signalNode, upChild]), recurse);\n  }, _match9), constant(null));\n}\n\n// -------------------------------------------------------------------\n// Component & run functions\n// -------------------------------------------------------------------\n\n/**\n * Create an object representing many instances of this component, for use in a\n * tinier model.\n * @param {Object} component - Tinier component.\n * @return {Object}\n */\nfunction objectOf(component) {\n  return tagType(OBJECT_OF, { component: component });\n}\n\n/**\n * Create an array representing many instances of this component, for use in a\n * tinier model.\n * @param {Object} component - Tinier component.\n * @return {Object}\n */\nfunction arrayOf(component) {\n  return tagType(ARRAY_OF, { component: component });\n}\n\nfunction defaultShouldUpdate(_ref8) {\n  var state = _ref8.state,\n      lastState = _ref8.lastState;\n\n  return state !== lastState;\n}\n\nfunction checkInputs(options, defaults) {\n  mapValues(options, function (_, k) {\n    if (!(k in defaults)) {\n      console.error('Unexpected argument ' + k);\n    }\n  });\n}\n\nfunction patchInitNoArg(init) {\n  return function () {\n    if (arguments.length === 0) {\n      return init({});\n    } else if (arguments.length > 1 || !isObject(arguments.length <= 0 ? undefined : arguments[0])) {\n      throw new Error('Reducers can only take 1 or 0 arguments, and the ' + 'argument should be an object.');\n    } else {\n      return init(arguments.length <= 0 ? undefined : arguments[0]);\n    }\n  };\n}\n\nfunction patchReducersOneArg(reducers) {\n  return mapValues(reducers, function (reducer, name) {\n    return function () {\n      if (arguments.length !== 1 || !isObject(arguments.length <= 0 ? undefined : arguments[0])) {\n        throw new Error('Reducers can only take 1 arguments, and the ' + 'argument should be an object.');\n      } else if (!('state' in (arguments.length <= 0 ? undefined : arguments[0]))) {\n        throw new Error('The argument to the reducer must have a \"state\" ' + 'attribute.');\n      } else {\n        return reducer(arguments.length <= 0 ? undefined : arguments[0]);\n      }\n    };\n  });\n}\n\n/**\n * Create a tinier component.\n * @param {Object} componentArgs - Functions defining the Tinier component.\n * @param {str} componentArgs.displayName - A name for the component.\n * @param {[str]} componentArgs.signals - An array of signal names.\n * @param {Object} componentArgs.model - The model object.\n * @param {Function} componentArgs.init - A function to initialize the state.\n * @param {Object} componentArgs.reducers -\n * @param {Object} componentArgs.methods -\n * @param {Function} componentArgs.willMount -\n * @param {Function} componentArgs.didMount -\n * @param {Function} componentArgs.shouldUpdate - Return true if the component\n *                                                should update, false if it\n *                                                should not, or null to use to\n *                                                default behavior (update when\n *                                                state changes).\n * @param {Function} componentArgs.willUpdate -\n * @param {Function} componentArgs.didUpdate -\n * @param {Function} componentArgs.willUnmount -\n * @param {Function} componentArgs.render -\n * @returns {Object} A tinier component.\n */\nfunction createComponent() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // default attributes\n  var defaults = {\n    displayName: '',\n    signalNames: [],\n    signalSetup: noop,\n    model: {},\n    init: constant({}),\n    reducers: {},\n    methods: {},\n    willMount: noop,\n    didMount: noop,\n    shouldUpdate: defaultShouldUpdate,\n    willUpdate: noop,\n    didUpdate: noop,\n    willUnmount: noop,\n    render: noop\n  };\n  // check inputs\n  checkInputs(options, defaults);\n\n  if ('init' in options) {\n    options.init = patchInitNoArg(options.init);\n  }\n\n  if ('reducers' in options) {\n    options.reducersRaw = options.reducers;\n    options.reducers = patchReducersOneArg(options.reducers);\n  }\n\n  // check model\n  if (options.model && checkType(COMPONENT, options.model)) {\n    throw new Error('The model cannot be another Component. The top level of ' + 'the model should be an array or an object literal');\n  }\n  // set defaults & tag\n  return tagType(COMPONENT, _extends({}, defaults, options));\n}\n\nfunction patchReducersWithState(address, component, callReducer) {\n  return mapValues(component.reducersRaw, function (reducer, name) {\n    return function () {\n      if (arguments.length === 0) {\n        callReducer(address, component, reducer, {}, name);\n      } else if (arguments.length > 1 || !isObject(arguments.length <= 0 ? undefined : arguments[0])) {\n        throw new Error('Reducers can only take 1 or 0 arguments, and the ' + 'argument should be an object.');\n      } else {\n        callReducer(address, component, reducer, arguments.length <= 0 ? undefined : arguments[0], name);\n      }\n    };\n  });\n}\n\nfunction patchSignals(address, component, callSignal) {\n  return fromPairs(component.signalNames.map(function (signalName) {\n    return [signalName, { call: function call(arg) {\n        return callSignal(address, signalName, arg);\n      } }];\n  }));\n}\n\n/**\n * Return an object of functions that call the methods with component-specific\n * arguments.\n */\nfunction patchMethods(address, component, callMethod, reducers, signals) {\n  var methods = mapValues(component.methods, function (method) {\n    return function (arg) {\n      if (typeof Event !== 'undefined' && arg instanceof Event) {\n        callMethod(address, method, signals, methods, reducers, this, arg, {});\n      } else {\n        callMethod(address, method, signals, methods, reducers, null, null, arg);\n      }\n    };\n  });\n  return methods;\n}\n\nfunction makeCallMethod(stateTree, opts) {\n  /**\n   * Call a method on the local stateTree\n   * @param address\n   * @param method\n   * @param signals\n   * @param methods - Patched method functions.\n   * @param reducers - Patched reducer functions.\n   * @param target - The value of this in the called function.\n   * @param event - The event at the time of the function call.\n   * @param arg - An argument object.\n   */\n  return function (address, method, signals, methods, reducers, target, event, arg) {\n    // check for uninitialized stateTree\n    if (stateTree.get([]) === null) {\n      throw new Error('Cannot call method before the app is initialized (e.g. ' + 'in signalSetup).');\n    }\n    // get the local state\n    var localState = stateTree.get(address);\n    // run the method\n    method(_extends({ state: localState, signals: signals, methods: methods, reducers: reducers, target: target, event: event\n    }, arg));\n  };\n}\n\n/**\n * Return a callSignal function.\n */\nfunction makeCallSignal(signals, opts) {\n  return function (address, signalName, arg) {\n    if (opts.verbose) {\n      console.log('Called signal ' + signalName + ' at [' + address.join(', ') + '].');\n    }\n    signals.get(address).data.signals[signalName].call(arg);\n  };\n}\n\n/**\n * Return a new callReducer function.\n * @param {Object} topComponent - The top-level component.\n * @param {Object} stateTree - The global stateTree.\n * @param {Object} bindingTree - The global bindingTree.\n * @param {Object} signalTree - The global signalTree.\n * @param {Object} stateCallers - An object with functions callMethod,\n *                                callSignal, and callReducer.\n * @param {Object} opts - Options from `run`.\n * @returns {Function} - Call a reducer on the local state\n *   @param {Array} address - A location, as an array of keys (strings and\n *                            integers).\n *   @param {Object} triggeringComponent -\n *   @param {Function} reducer - A reducer.\n *   @param {Object} arg - An argument object.\n *   @param {String} name - The name of the reducer (for logging).\n */\nfunction makeCallReducer(topComponent, stateTree, bindingTree, signalTree, stateCallers, opts) {\n  return function (address, triggeringComponent, reducer, arg, name) {\n    if (!isFunction(reducer)) {\n      throw new Error('Reducer ' + name + ' is not a function');\n    }\n    // Run the reducer, and optionally log the result.\n    var localState = stateTree.get(address);\n    var newLocalState = reducer(_extends({}, arg, { state: localState }));\n    if (opts.verbose) {\n      console.log('Called reducer ' + name + ' for ' + triggeringComponent.displayName + ' at [' + address.join(', ') + '].');\n      console.log(localState);\n      console.log(newLocalState);\n    }\n\n    // Check that the new state is valid. If not, throw an Error, and the new\n    // state will be thrown out.\n    checkState(triggeringComponent.model, newLocalState);\n\n    // Set the state with immutable objects and arrays. A reference to oldState\n    // will used for diffing.\n    var lastState = stateTree.get([]);\n    stateTree.set(address, newLocalState);\n\n    // Run diffWithModelMin, which will do a few things:\n    // 1. Run shouldUpdate for every component in the tree.\n    // 2. Return the information about the minimal tree to update with\n    //    updateComponents (whenever shouldUpdate is true) as minUpdate.\n    // 3. Return the information about the minimal tree to update with\n    //    mergeSignals (whenever nodes are added or deleted) as minSignals.\n    // The output objects have the attributes diff, modelNode, and address.\n    // TODO might be best to go back to returning just one full diff here\n\n    var _diffWithModelMin = diffWithModelMin(topComponent, stateTree.get([]), lastState, [], address),\n        minSignals = _diffWithModelMin.minSignals,\n        minUpdate = _diffWithModelMin.minUpdate;\n\n    // Update the signals.\n\n\n    var localSignals = signalTree.get(minSignals.address);\n    var newSignals = mergeSignals(minSignals.modelNode, minSignals.address, minSignals.diff, localSignals, stateCallers);\n    signalTree.set(minSignals.address, newSignals);\n\n    // Update the components.\n    var minUpdateBindings = bindingTree.get(minUpdate.address);\n    var minUpdateEl = minUpdateBindings.data;\n    var minUpdateState = stateTree.get(minUpdate.address);\n    var newBindings = updateComponents(minUpdate.address, minUpdate.modelNode, minUpdateState, minUpdate.diff, minUpdateBindings, minUpdateEl, stateCallers, opts);\n    bindingTree.set(minUpdate.address, newBindings);\n  };\n}\n\n/**\n * Return an object with functions callMethod, callSignal, and callReducer.\n * @param {Object} component - The top-level component.\n * @param {Object} stateTree - The global stateTree.\n * @param {Object} bindingTree - The global bindings.\n * @param {Object} signalTree - The global signalTree.\n * @return {Object} An object with functions callMethod, callSignal, and\n *                  callReducer.\n */\nfunction makeStateCallers(component, stateTree, bindingTree, signalTree, opts) {\n  var stateCallers = {};\n  stateCallers.callMethod = makeCallMethod(stateTree, opts);\n  stateCallers.callSignal = makeCallSignal(signalTree, opts);\n  stateCallers.callReducer = makeCallReducer(component, stateTree, bindingTree, signalTree, stateCallers, opts);\n  return stateCallers;\n}\n\n/**\n * Run a tinier component.\n * @param {Object} component - A tinier component.\n * @param {*} appEl - An element to pass to the component's create, update, and\n *                    destroy methods.\n * @param {Object|null} initialState - The initial state. If null, then init()\n *                                     will be called to initialize the state.\n * @return {Object} The API functions, incuding getState, signals, and methods.\n */\nfunction run(component, appEl) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // Create variables that will store the state for the whole lifetime of the\n  // application. Similar to the redux model.\n  var stateTree = makeTree(null, false);\n  var topBinding = tagType(NODE, { data: appEl, children: null });\n  var bindingTree = makeTree(topBinding, true);\n  var signalTree = makeTree(null, true);\n\n  // functions that access state, signals, and bindings\n  var stateCallers = makeStateCallers(component, stateTree, bindingTree, signalTree, opts);\n\n  // make sure initial state is valid\n  // TODO LEFT OFF ... does this work?\n  // Q: Does the state for a child component need to be defined? Are we checking\n  // all the way down the line?\n  var initialState = 'initialState' in opts ? opts.initialState : component.init();\n\n  // first draw\n  var setStateReducer = function setStateReducer(_ref9) {\n    var newState = _ref9.newState;\n    return newState;\n  };\n  var setState = function setState(newState) {\n    return stateCallers.callReducer([], component, setStateReducer, { newState: newState }, 'setState');\n  };\n  setState(initialState);\n\n  // return API\n  var getState = function getState() {\n    return stateTree.get([]);\n  };\n  // TODO check state\n  var setStateNoRender = function setStateNoRender(newState) {\n    return stateTree.set([], newState);\n  };\n  var reducers = patchReducersWithState([], component, stateCallers.callReducer);\n  var signalsCall = patchSignals([], component, stateCallers.callSignal);\n  var methods = patchMethods([], component, stateCallers.callMethod, reducers, signalsCall);\n  // if state is null, then data will be null\n  var signals = get(signalTree.get([]).data, 'signals');\n\n  return { setState: setState, setStateNoRender: setStateNoRender, getState: getState, reducers: reducers, methods: methods, signals: signals };\n}\n\n// -------------------------------------------------------------------\n// DOM\n// -------------------------------------------------------------------\n\n// constants\nvar BINDING = exports.BINDING = '@TINIER_BINDING';\nvar ELEMENT = exports.ELEMENT = '@TINIER_ELEMENT';\nvar LISTENER_OBJECT = '@TINIER_LISTENERS';\n\nfunction reverseObject(obj) {\n  var newObj = {};\n  for (var k in obj) {\n    newObj[obj[k]] = k;\n  }\n  return newObj;\n}\n\n// some attribute renaming as seen in React\nvar ATTRIBUTE_RENAME = {};\nvar ATTRIBUTE_RENAME_REV = reverseObject(ATTRIBUTE_RENAME);\nvar ATTRIBUTE_APPLY = {\n  checked: function checked(el, name) {\n    var val = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (name !== 'input') {\n      throw new Error('\"checked\" attribute is only supported on input elements.');\n    }\n    el.checked = val;\n  },\n  value: function value(el, name) {\n    var val = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (['input', 'textarea'].indexOf(name) === -1) {\n      throw new Error('\"value\" attribute is only supported on input and ' + 'textarea elements.');\n    }\n    el.value = val;\n  }\n};\n\n// namespace management inspired by of D3.js, Mike Bostock, BSD license\nvar NAMESPACES = {\n  svg: 'http://www.w3.org/2000/svg',\n  xhtml: 'http://www.w3.org/1999/xhtml',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n};\n\n/**\n * Turn an array of objects into a new object of objects where the keys are\n * given by the value of `key` in each child object.\n * @param {[Object]} arr - The array of objects.\n * @param {String} key - The key to look for.\n */\nfunction keyBy(arr, key) {\n  var obj = {};\n  arr.map(function (x) {\n    return obj[x[key]] = x;\n  });\n  return obj;\n}\n\n/**\n *\n */\nfunction addressToObj(address, val) {\n  // If address is []\n  if (isUndefined(address[0])) {\n    return val;\n  }\n  var f = address[0];\n  if (isString(f)) {\n    var _ref10;\n\n    return _ref10 = {}, _ref10[f] = addressToObj(address.slice(1), val), _ref10;\n  } else {\n    var ar = Array(f + 1);\n    ar[f] = addressToObj(address.slice(1), val);\n    return ar;\n  }\n}\n\nfunction objectForBindingsArray(bindings) {\n  // Check arrays and find longest internal array.\n  var longest = 0;\n  for (var j = 0, l = bindings.length; j < l; j++) {\n    var binding = bindings[j];\n    if (!isArray(binding)) {\n      throw Error('Incompatible bindings: mix of types');\n    }\n    var len = binding.length;\n    if (len > longest) {\n      longest = len;\n    }\n  }\n  var acc = [];\n  for (var i = 0; i < longest; i++) {\n    for (var _j = 0, _l = bindings.length; _j < _l; _j++) {\n      var _binding = bindings[_j];\n      if (_binding[i] != null) {\n        // not null or undefined\n        if (acc[i] != null) {\n          // not null or undefined\n          acc[i] = objectForBindings([_binding[i], acc[i]]);\n        } else {\n          acc[i] = _binding[i];\n        }\n      }\n    }\n  }\n  return acc;\n}\n\nfunction objectForBindingsObject(bindings) {\n  return bindings.reduce(function (acc, binding) {\n    if (isArray(binding)) throw Error('Incompatible bindings: mix of types');\n    for (var k in binding) {\n      if (binding[k]) {\n        if (acc[k]) {\n          acc[k] = objectForBindings([binding[k], acc[k]]);\n        } else {\n          acc[k] = binding[k];\n        }\n      }\n    }\n    return acc;\n  }, {});\n}\n\nfunction objectForBindings(bindings) {\n  return isArray(bindings[0]) ? objectForBindingsArray(bindings) : objectForBindingsObject(bindings);\n}\n\n// Make sure default is null so undefined type constant do not match\nvar isTinierBinding = function isTinierBinding(obj) {\n  return checkType(BINDING, obj);\n};\nvar isTinierElement = function isTinierElement(obj) {\n  return checkType(ELEMENT, obj);\n};\nvar isElement = function isElement(v) {\n  return v instanceof Element;\n};\n\n/**\n * Create a new TinierDOM element.\n * @param {String} tagName - The name for the element.\n * @param {Object|null} attributesIn - The attributes. Note that JSX will pass\n *                                     null in when there are no attributes. In\n *                                     the resulting object, this will be an\n *                                     empty object {}.\n * @param {Object[]|Object|String} ...children - A single binding or a mix of\n *                                               elements and strings.\n * @return {Object} A TinierDOM element.\n */\nfunction createElement(tagName, attributesIn) {\n  for (var _len3 = arguments.length, children = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    children[_key3 - 2] = arguments[_key3];\n  }\n\n  var attributes = attributesIn == null ? {} : attributesIn;\n  return tagType(ELEMENT, { tagName: tagName, attributes: attributes, children: children });\n}\n\n/**\n * Create a new TinierDOM binding.\n * @param {Array|String|Number} addressIn - An address array, or single key or\n *                                          index.\n * @return {Object} A TinierDOM binding.\n */\nfunction bind(addressIn) {\n  var address = isArray(addressIn) ? addressIn : [addressIn];\n  return tagType(BINDING, { address: address });\n}\n\nfunction explicitNamespace(name) {\n  var i = name.indexOf(':');\n  if (i !== -1) {\n    var prefix = name.slice(0, i);\n    if (prefix in NAMESPACES) {\n      // for xmlns, treat the whole name (e.g. xmlns:xlink) as the name\n      var newName = prefix === 'xmlns' ? name : name.slice(i + 1);\n      return { name: newName, explicit: NAMESPACES[prefix] };\n    } else {\n      return { name: name, explicit: null };\n    }\n  } else {\n    return { name: name, explicit: null };\n  }\n}\n\n/**\n * Create a DOM element, inheriting namespace or choosing one based on tag.\n * @param {Object} tinierEl - A TinierDOM element.\n * @param {Object} parent - The parent el.\n * @return {Object} The DOM element.\n */\nfunction createDOMElement(tinierEl, parent) {\n  var tag = tinierEl.tagName;\n\n  var _explicitNamespace = explicitNamespace(tag),\n      name = _explicitNamespace.name,\n      explicit = _explicitNamespace.explicit;\n\n  var ns = explicit !== null ? explicit : tag in NAMESPACES ? NAMESPACES[tag] : parent.namespaceURI;\n  var el = ns === NAMESPACES.xhtml ? document.createElement(name) : document.createElementNS(ns, name);\n  return updateDOMElement(el, tinierEl);\n}\n\nfunction getStyles(cssText) {\n  var reg = /([^:; ]+):/g;\n  var res = [];\n  var ar = void 0;\n  while ((ar = reg.exec(cssText)) !== null) {\n    res.push(ar[1]);\n  }\n  return res;\n}\n\nfunction toCamelCase(name) {\n  return name\n  // Uppercase the first character in each group immediately following a dash\n  .replace(/-(.)/g, function (m) {\n    return m.toUpperCase();\n  })\n  // Remove dashes\n  .replace(/-/g, '');\n}\n\nfunction stripOn(name) {\n  return name.slice(2).toLowerCase();\n}\n\nfunction setAttributeCheckBool(namespace, el, name, val) {\n  // set boolean appropriately\n  var valToSet = val === true ? name : val;\n  if (namespace === NAMESPACES.xhtml) {\n    el.setAttribute(name, valToSet);\n  } else {\n    el.setAttributeNS(namespace, name, valToSet);\n  }\n}\n\n/**\n * Update the DOM element to match a TinierDOM element.\n * @param {Element} el - An existing DOM element.\n * @param {Object} tinierEl - A TinierDOM element.\n */\nfunction updateDOMElement(el, tinierEl) {\n  var thenFn = null;\n  var parentNamespace = el.namespaceURI;\n\n  // remove event listeners first, because they cannot simply be replaced\n  if (el.hasOwnProperty(LISTENER_OBJECT)) {\n    mapValues(el[LISTENER_OBJECT], function (onFn, name) {\n      el.removeEventListener(name, onFn);\n    });\n    delete el[LISTENER_OBJECT];\n  }\n\n  // Update the attributes.\n  // TODO is it faster to check first, or set first?\n  mapValues(tinierEl.attributes, function (v, k) {\n    if (k === 'id') {\n      // ID is set directly\n      el.id = v;\n    } else if (k === 'style' && !isString(v)) {\n      // For a style object. For a style string, use setAttribute below.\n      mapValues(v, function (sv, sk) {\n        el.style.setProperty(sk, sv);\n      });\n    } else if (k.indexOf('on') === 0) {\n      // Special handling for listeners\n      if (!el.hasOwnProperty(LISTENER_OBJECT)) {\n        el[LISTENER_OBJECT] = {};\n      }\n      // allow null\n      if (v !== null) {\n        var name = stripOn(k);\n        if (!isFunction(v) && v !== null) {\n          throw new Error(v + ' is not a function.');\n        }\n        el[LISTENER_OBJECT][name] = v;\n        el.addEventListener(name, v);\n      }\n    } else if (k in ATTRIBUTE_RENAME) {\n      // By default, set the attribute.\n      var _explicitNamespace2 = explicitNamespace(k),\n          _name = _explicitNamespace2.name,\n          explicit = _explicitNamespace2.explicit;\n\n      setAttributeCheckBool(explicit !== null ? explicit : parentNamespace, el, ATTRIBUTE_RENAME[explicit], v);\n    } else if (k in ATTRIBUTE_APPLY) {\n      ATTRIBUTE_APPLY[k](el, tinierEl.tagName, v);\n    } else if (k === 'then') {\n      if (v !== null) {\n        if (!isFunction(v)) {\n          throw new Error(v + ' is not a function or null.');\n        }\n        thenFn = v;\n      }\n    } else {\n      // By default, set the attribute.\n      var _explicitNamespace3 = explicitNamespace(k),\n          _name2 = _explicitNamespace3.name,\n          _explicit = _explicitNamespace3.explicit;\n\n      setAttributeCheckBool(_explicit !== null ? _explicit : parentNamespace, el, _name2, v);\n    }\n  });\n  // Delete attributes if not provided. First, loop through this attributes\n  // object to get a nice array.\n  var attributeNames = [];\n  for (var i = 0, l = el.attributes.length; i < l; i++) {\n    attributeNames.push(el.attributes[i].name);\n  }\n  attributeNames.filter(function (k) {\n    return !(k in tinierEl.attributes) || tinierEl.attributes[k] === false;\n  }).map(function (k) {\n    if (k in ATTRIBUTE_RENAME_REV) {\n      el.removeAttribute(ATTRIBUTE_RENAME_REV[k]);\n    } else if (k in ATTRIBUTE_APPLY) {\n      ATTRIBUTE_APPLY[k](el, tinierEl.tagName);\n    } else {\n      el.removeAttribute(k);\n    }\n  });\n  // Delete styles if not provided.\n  var tStyle = tinierEl.attributes.style;\n  if (tStyle && !isString(tStyle)) {\n    getStyles(el.style.cssText).filter(function (a) {\n      return !(a in tStyle || toCamelCase(a) in tStyle);\n    }).map(function (a) {\n      return el.style.removeProperty(a);\n    });\n  }\n\n  // call the callback\n  if (thenFn) {\n    thenFn(el);\n  }\n\n  return el;\n}\n\n/**\n* flatten the elements array\n*/\nfunction flattenElementsAr(ar) {\n  return ar.reduce(function (acc, el) {\n    return isArray(el) ? [].concat(acc, el) : [].concat(acc, [el]);\n  }, []).filter(notNull); // null means ignore\n}\n\nfunction removeExtraNodes(container, length) {\n  for (var i = container.childNodes.length - 1; i >= length; i--) {\n    container.removeChild(container.childNodes[i]);\n  }\n}\n\n/**\n * Render the given element tree into the container.\n * @param {Element} container - A DOM element that will be the container for\n *                              the renedered element tree.\n * @param {...[Object|String]|Object|String} tinierElementsAr -\n *   Any number of TinierDOM elements or strings that will be rendered.\n * @return {Object} A nested data structure of bindings for use in Tinier.\n */\nfunction render(container) {\n  // check arguments\n  if (!isElement(container)) {\n    throw new Error('First argument must be a DOM Element.');\n  }\n\n  for (var _len4 = arguments.length, tinierElementsAr = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    tinierElementsAr[_key4 - 1] = arguments[_key4];\n  }\n\n  var tinierElements = flattenElementsAr(tinierElementsAr);\n\n  var first = get(tinierElements, 0);\n  if (isTinierBinding(first)) {\n    if (tinierElements.length !== 1) {\n      throw new Error('A binding cannot have siblings in TinierDOM. ' + 'At binding: [ ' + first.address.join(', ') + ' ].');\n    }\n    return objectForBindings([addressToObj(first.address, container)]);\n  }\n\n  // get the children with IDs\n  var childrenWithKeys = Array.from(container.children).filter(function (c) {\n    return c.id;\n  });\n  var elementsByID = keyBy(childrenWithKeys, 'id');\n\n  // render each element\n  var bindingsAr = tinierElements.map(function (tinierEl, i) {\n    // If an element if a binding, then there can only be one child.\n    if (isUndefined(tinierEl)) {\n      // cannot be undefined\n      throw new Error('Children in Tinier Elements cannot be undefined.');\n    } else if (isTinierElement(tinierEl)) {\n      // container.childNodes is a live collection, so get the current node at\n      // this index.\n      var el = container.childNodes[i];\n      // tinierEl is a TinierDOM element.\n      if (tinierEl.attributes.id in elementsByID) {\n        // el exist, then check for a matching node by ID\n        var movedEl = elementsByID[tinierEl.attributes.id];\n        if (el) {\n          // if match and existing el, then replace the element\n          container.replaceChild(movedEl, el);\n        } else {\n          // if match and el is undefined, then append the element\n          container.appendChild(movedEl);\n        }\n        // then render children\n        return render.apply(undefined, [movedEl].concat(tinierEl.children));\n      } else if (el) {\n        // both defined, check type and id\n        if (el.tagName && el.tagName.toLowerCase() === tinierEl.tagName.toLowerCase()) {\n          // matching tag, then update the node to match. Be aware that existing\n          // nodes with IDs might get moved, so we should clone them?\n          var elToUpdate = el.id ? el.cloneNode(true) : el;\n          updateDOMElement(elToUpdate, tinierEl);\n          if (el.id) container.replaceChild(elToUpdate, el);\n          return render.apply(undefined, [elToUpdate].concat(tinierEl.children));\n        } else {\n          // not a matching tag, then replace the element with a new one\n          var newEl = createDOMElement(tinierEl, container);\n          container.replaceChild(newEl, el);\n          return render.apply(undefined, [newEl].concat(tinierEl.children));\n        }\n      } else {\n        // no el and no ID match, then add a new Element or string node\n        var newEl2 = createDOMElement(tinierEl, container);\n        container.appendChild(newEl2);\n        return render.apply(undefined, [newEl2].concat(tinierEl.children));\n      }\n      // There should not be any bindings here\n    } else if (isTinierBinding(tinierEl)) {\n      throw new Error('A binding cannot have siblings in TinierDOM. ' + 'At binding: [ ' + tinierEl.address.join(', ') + ' ].');\n    } else {\n      var _el = container.childNodes[i];\n      var s = String(tinierEl);\n      // This should be a text node.\n      if (_el instanceof Text) {\n        // If already a text node, then set the text content.\n        _el.textContent = s;\n      } else if (_el) {\n        // If not a text node, then replace it.\n        container.replaceChild(document.createTextNode(s), _el);\n      } else {\n        // If no existing node, then add a new one.\n        container.appendChild(document.createTextNode(s));\n      }\n      // No binding here.\n      return null;\n    }\n  });\n\n  // remove extra nodes\n  // TODO This should not run if the child is a binding. Make a test for\n  // this. When else should it not run?\n  removeExtraNodes(container, tinierElements.length);\n\n  // bindings array to object\n  return objectForBindings(bindingsAr.filter(function (b) {\n    return b !== null;\n  }));\n}\n\n// export API\nexports.default = {\n  arrayOf: arrayOf, objectOf: objectOf, createComponent: createComponent, run: run, bind: bind, createElement: createElement, render: render\n};\n//# sourceMappingURL=tinier.js.map","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/**\r\n* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.\r\n*  \r\n* Version - 0.99.00.beta \r\n* Copyright (c) 2012 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/vkbeautify/\r\n* \r\n* Dual licensed under the MIT and GPL licenses:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*   http://www.gnu.org/licenses/gpl.html\r\n*\r\n*   Pretty print\r\n*\r\n*        vkbeautify.xml(text [,indent_pattern]);\r\n*        vkbeautify.json(text [,indent_pattern]);\r\n*        vkbeautify.css(text [,indent_pattern]);\r\n*        vkbeautify.sql(text [,indent_pattern]);\r\n*\r\n*        @text - String; text to beatufy;\r\n*        @indent_pattern - Integer | String;\r\n*                Integer:  number of white spaces;\r\n*                String:   character string to visualize indentation ( can also be a set of white spaces )\r\n*   Minify\r\n*\r\n*        vkbeautify.xmlmin(text [,preserve_comments]);\r\n*        vkbeautify.jsonmin(text);\r\n*        vkbeautify.cssmin(text [,preserve_comments]);\r\n*        vkbeautify.sqlmin(text);\r\n*\r\n*        @text - String; text to minify;\r\n*        @preserve_comments - Bool; [optional];\r\n*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )\r\n*\r\n*   Examples:\r\n*        vkbeautify.xml(text); // pretty print XML\r\n*        vkbeautify.json(text, 4 ); // pretty print JSON\r\n*        vkbeautify.css(text, '. . . .'); // pretty print CSS\r\n*        vkbeautify.sql(text, '----'); // pretty print SQL\r\n*\r\n*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments\r\n*        vkbeautify.jsonmin(text);// minify JSON\r\n*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )\r\n*        vkbeautify.sqlmin(text);// minify SQL\r\n*\r\n*/\r\nfunction createShiftArr(step) {\r\n\r\n\tvar space = '    ';\r\n\t\r\n\tif ( isNaN(parseInt(step)) ) {  // argument is string\r\n\t\tspace = step;\r\n\t} else { // argument is integer\r\n\t\tswitch(step) {\r\n\t\t\tcase 1: space = ' '; break;\r\n\t\t\tcase 2: space = '  '; break;\r\n\t\t\tcase 3: space = '   '; break;\r\n\t\t\tcase 4: space = '    '; break;\r\n\t\t\tcase 5: space = '     '; break;\r\n\t\t\tcase 6: space = '      '; break;\r\n\t\t\tcase 7: space = '       '; break;\r\n\t\t\tcase 8: space = '        '; break;\r\n\t\t\tcase 9: space = '         '; break;\r\n\t\t\tcase 10: space = '          '; break;\r\n\t\t\tcase 11: space = '           '; break;\r\n\t\t\tcase 12: space = '            '; break;\r\n\t\t}\r\n\t}\r\n\r\n\tvar shift = ['\\n']; // array of shifts\r\n\tfor(ix=0;ix<100;ix++){\r\n\t\tshift.push(shift[ix]+space); \r\n\t}\r\n\treturn shift;\r\n}\r\n\r\nfunction vkbeautify(){\r\n\tthis.step = '    '; // 4 spaces\r\n\tthis.shift = createShiftArr(this.step);\r\n};\r\n\r\nvkbeautify.prototype.xml = function(text,step) {\r\n\r\n\tvar ar = text.replace(/>\\s{0,}</g,\"><\")\r\n\t\t\t\t .replace(/</g,\"~::~<\")\r\n\t\t\t\t .replace(/\\s*xmlns\\:/g,\"~::~xmlns:\")\r\n\t\t\t\t .replace(/\\s*xmlns\\=/g,\"~::~xmlns=\")\r\n\t\t\t\t .split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tinComment = false,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t// start comment or <![CDATA[...]]> or <!DOCTYPE //\r\n\t\t\tif(ar[ix].search(/<!/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tinComment = true; \r\n\t\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) { \r\n\t\t\t\t\tinComment = false; \r\n\t\t\t\t}\r\n\t\t\t} else \r\n\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tinComment = false; \r\n\t\t\t} else \r\n\t\t\t// <elm></elm> //\r\n\t\t\tif( /^<\\w/.exec(ar[ix-1]) && /^<\\/\\w/.exec(ar[ix]) &&\r\n\t\t\t\t/^<[\\w:\\-\\.\\,]+/.exec(ar[ix-1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/','')) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tif(!inComment) deep--;\r\n\t\t\t} else\r\n\t\t\t // <elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1 ) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep++]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t // <elm>...</elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// </elm> //\r\n\t\t\tif(ar[ix].search(/<\\//) > -1) { \r\n\t\t\t\tstr = !inComment ? str += shift[--deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <elm/> //\r\n\t\t\tif(ar[ix].search(/\\/>/) > -1 ) { \r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <? xml ... ?> //\r\n\t\t\tif(ar[ix].search(/<\\?/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\t// xmlns //\r\n\t\t\tif( ar[ix].search(/xmlns\\:/) > -1  || ar[ix].search(/xmlns\\=/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\treturn  (str[0] == '\\n') ? str.slice(1) : str;\r\n}\r\n\r\nvkbeautify.prototype.json = function(text,step) {\r\n\r\n\tvar step = step ? step : this.step;\r\n\t\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\tif ( typeof text === \"string\" ) return JSON.stringify(JSON.parse(text), null, step);\r\n\tif ( typeof text === \"object\" ) return JSON.stringify(text, null, step);\r\n\t\t\r\n\treturn text; // text is not string nor object\r\n}\r\n\r\nvkbeautify.prototype.css = function(text, step) {\r\n\r\n\tvar ar = text.replace(/\\s{1,}/g,' ')\r\n\t\t\t\t.replace(/\\{/g,\"{~::~\")\r\n\t\t\t\t.replace(/\\}/g,\"~::~}~::~\")\r\n\t\t\t\t.replace(/\\;/g,\";~::~\")\r\n\t\t\t\t.replace(/\\/\\*/g,\"~::~/*\")\r\n\t\t\t\t.replace(/\\*\\//g,\"*/~::~\")\r\n\t\t\t\t.replace(/~::~\\s{0,}~::~/g,\"~::~\")\r\n\t\t\t\t.split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\t\t\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\r\n\t\t\tif( /\\{/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep++]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\}/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[--deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\*\\\\/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.replace(/^\\n{1,}/,'');\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nfunction isSubquery(str, parenthesisLevel) {\r\n\treturn  parenthesisLevel - (str.replace(/\\(/g,'').length - str.replace(/\\)/g,'').length )\r\n}\r\n\r\nfunction split_sql(str, tab) {\r\n\r\n\treturn str.replace(/\\s{1,}/g,\" \")\r\n\r\n\t\t\t\t.replace(/ AND /ig,\"~::~\"+tab+tab+\"AND \")\r\n\t\t\t\t.replace(/ BETWEEN /ig,\"~::~\"+tab+\"BETWEEN \")\r\n\t\t\t\t.replace(/ CASE /ig,\"~::~\"+tab+\"CASE \")\r\n\t\t\t\t.replace(/ ELSE /ig,\"~::~\"+tab+\"ELSE \")\r\n\t\t\t\t.replace(/ END /ig,\"~::~\"+tab+\"END \")\r\n\t\t\t\t.replace(/ FROM /ig,\"~::~FROM \")\r\n\t\t\t\t.replace(/ GROUP\\s{1,}BY/ig,\"~::~GROUP BY \")\r\n\t\t\t\t.replace(/ HAVING /ig,\"~::~HAVING \")\r\n\t\t\t\t//.replace(/ SET /ig,\" SET~::~\")\r\n\t\t\t\t.replace(/ IN /ig,\" IN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ JOIN /ig,\"~::~JOIN \")\r\n\t\t\t\t.replace(/ CROSS~::~{1,}JOIN /ig,\"~::~CROSS JOIN \")\r\n\t\t\t\t.replace(/ INNER~::~{1,}JOIN /ig,\"~::~INNER JOIN \")\r\n\t\t\t\t.replace(/ LEFT~::~{1,}JOIN /ig,\"~::~LEFT JOIN \")\r\n\t\t\t\t.replace(/ RIGHT~::~{1,}JOIN /ig,\"~::~RIGHT JOIN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ ON /ig,\"~::~\"+tab+\"ON \")\r\n\t\t\t\t.replace(/ OR /ig,\"~::~\"+tab+tab+\"OR \")\r\n\t\t\t\t.replace(/ ORDER\\s{1,}BY/ig,\"~::~ORDER BY \")\r\n\t\t\t\t.replace(/ OVER /ig,\"~::~\"+tab+\"OVER \")\r\n\r\n\t\t\t\t.replace(/\\(\\s{0,}SELECT /ig,\"~::~(SELECT \")\r\n\t\t\t\t.replace(/\\)\\s{0,}SELECT /ig,\")~::~SELECT \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ THEN /ig,\" THEN~::~\"+tab+\"\")\r\n\t\t\t\t.replace(/ UNION /ig,\"~::~UNION~::~\")\r\n\t\t\t\t.replace(/ USING /ig,\"~::~USING \")\r\n\t\t\t\t.replace(/ WHEN /ig,\"~::~\"+tab+\"WHEN \")\r\n\t\t\t\t.replace(/ WHERE /ig,\"~::~WHERE \")\r\n\t\t\t\t.replace(/ WITH /ig,\"~::~WITH \")\r\n\t\t\t\t\r\n\t\t\t\t//.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\r\n\t\t\t\t//.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\r\n\r\n\t\t\t\t.replace(/ ALL /ig,\" ALL \")\r\n\t\t\t\t.replace(/ AS /ig,\" AS \")\r\n\t\t\t\t.replace(/ ASC /ig,\" ASC \")\t\r\n\t\t\t\t.replace(/ DESC /ig,\" DESC \")\t\r\n\t\t\t\t.replace(/ DISTINCT /ig,\" DISTINCT \")\r\n\t\t\t\t.replace(/ EXISTS /ig,\" EXISTS \")\r\n\t\t\t\t.replace(/ NOT /ig,\" NOT \")\r\n\t\t\t\t.replace(/ NULL /ig,\" NULL \")\r\n\t\t\t\t.replace(/ LIKE /ig,\" LIKE \")\r\n\t\t\t\t.replace(/\\s{0,}SELECT /ig,\"SELECT \")\r\n\t\t\t\t.replace(/\\s{0,}UPDATE /ig,\"UPDATE \")\r\n\t\t\t\t.replace(/ SET /ig,\" SET \")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t.replace(/~::~{1,}/g,\"~::~\")\r\n\t\t\t\t.split('~::~');\r\n}\r\n\r\nvkbeautify.prototype.sql = function(text,step) {\r\n\r\n\tvar ar_by_quote = text.replace(/\\s{1,}/g,\" \")\r\n\t\t\t\t\t\t\t.replace(/\\'/ig,\"~::~\\'\")\r\n\t\t\t\t\t\t\t.split('~::~'),\r\n\t\tlen = ar_by_quote.length,\r\n\t\tar = [],\r\n\t\tdeep = 0,\r\n\t\ttab = this.step,//+this.step,\r\n\t\tinComment = true,\r\n\t\tinQuote = false,\r\n\t\tparenthesisLevel = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\tif(ix%2) {\r\n\t\t\t\tar = ar.concat(ar_by_quote[ix]);\r\n\t\t\t} else {\r\n\t\t\t\tar = ar.concat(split_sql(ar_by_quote[ix], tab) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlen = ar.length;\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t\r\n\t\t\tparenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SET\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tdeep++;\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\'/.exec(ar[ix]) )  { \r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t\telse  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tvar junk = 0;\r\n\t\t}\r\n\r\n\t\tstr = str.replace(/^\\n{1,}/,'').replace(/\\n{1,}/g,\"\\n\");\r\n\t\treturn str;\r\n}\r\n\r\n\r\nvkbeautify.prototype.xmlmin = function(text, preserveComments) {\r\n\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g,\"\")\r\n\t\t\t\t\t\t\t\t\t .replace(/[ \\r\\n\\t]{1,}xmlns/g, ' xmlns');\r\n\treturn  str.replace(/>\\s{0,}</g,\"><\"); \r\n}\r\n\r\nvkbeautify.prototype.jsonmin = function(text) {\r\n\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\treturn JSON.stringify(JSON.parse(text), null, 0); \r\n\t\t\t\t\r\n}\r\n\r\nvkbeautify.prototype.cssmin = function(text, preserveComments) {\r\n\t\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g,\"\") ;\r\n\r\n\treturn str.replace(/\\s{1,}/g,' ')\r\n\t\t\t  .replace(/\\{\\s{1,}/g,\"{\")\r\n\t\t\t  .replace(/\\}\\s{1,}/g,\"}\")\r\n\t\t\t  .replace(/\\;\\s{1,}/g,\";\")\r\n\t\t\t  .replace(/\\/\\*\\s{1,}/g,\"/*\")\r\n\t\t\t  .replace(/\\*\\/\\s{1,}/g,\"*/\");\r\n}\r\n\r\nvkbeautify.prototype.sqlmin = function(text) {\r\n\treturn text.replace(/\\s{1,}/g,\" \").replace(/\\s{1,}\\(/,\"(\").replace(/\\s{1,}\\)/,\")\");\r\n}\r\n\r\nmodule.exports = new vkbeautify();\r\n\r\n"]}