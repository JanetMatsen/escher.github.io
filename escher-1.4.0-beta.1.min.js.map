{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","js/src/Behavior.js","js/src/Brush.js","js/src/BuildInput.js","js/src/Builder.js","js/src/CallbackManager.js","js/src/Canvas.js","js/src/CobraModel.js","js/src/DataMenu.js","js/src/DirectionArrow.js","js/src/Draw.js","js/src/KeyManager.js","js/src/Map.js","js/src/PlacedDiv.js","js/src/QuickJump.js","js/src/Scale.js","js/src/ScaleEditor.js","js/src/SearchBar.js","js/src/SearchIndex.js","js/src/Settings.js","js/src/SettingsMenu.js","js/src/TextEditInput.js","js/src/UndoStack.js","js/src/ZoomContainer.js","js/src/build.js","js/src/complete.ly.js","js/src/data_styles.js","js/src/inline.js","js/src/main.js","js/src/static.js","js/src/ui.js","js/src/utils.js","node_modules/baconjs/dist/Bacon.js","node_modules/filesaverjs/FileSaver.js","node_modules/mousetrap/mousetrap.js","node_modules/underscore/underscore.js","node_modules/vkbeautify/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","escher","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","map","undo_stack","empty_behavior","rotation_mode_enabled","rotation_drag","d3","behavior","drag","selectable_mousedown","text_label_mousedown","text_label_click","selectable_drag","node_mouseover","node_mouseout","label_mousedown","label_mouseover","label_mouseout","bezier_drag","bezier_mouseover","bezier_mouseout","reaction_label_drag","node_label_drag","turn_everything_on","toggle_selectable_click","toggle_selectable_drag","toggle_label_drag","toggle_label_mousedown","turn_everything_off","toggle_rotation_mode","on_off","show_center","sel","selectAll","data","enter","append","attr","center","x","y","on","cur","utils","d3_transform_catch","new_loc","event","dx","translate","dy","bind","current","parseFloat","style","hide_center","select","average_location","nodes","xs","ys","node_id","node","undefined","push","mean","selection_node","selection_background","callback_manager","run","selected_nodes","get_selected_nodes","Object","keys","console","warn","selected_node_ids","reactions","beziers","start_fn","d","sourceEvent","stopPropagation","drag_fn","angle","total_angle","updated","build","rotate_nodes","draw_these_nodes","node_ids","draw_these_reactions","reaction_ids","end_fn","undo_fn","these_nodes","forEach","id","redo_fn","center_fn","_get_generic_angular_drag","selectable_click","defaultPrevented","select_selectable","shiftKey","parentNode","classed","toggle_text_label_edit","text_edit_mousedown","selection","coords_a","coords","preventDefault","mouse","_get_selectable_drag","_get_bezier_drag","label_drag","_get_reaction_label_drag","_get_node_label_drag","toggle_bezier_drag","String","turn_off_drag","combine_nodes_and_draw","fixed_node_id","dragged_node_id","dragged_node","fixed_node","updated_segment_objs","connected_segments","segment_obj","segment","reaction_id","segments","segment_id","from_node_id","to_node_id","error","clone","delete_node_data","draw_everything","the_timeout","total_displacement","node_ids_to_drag","text_label_ids_to_drag","move_label","text_label_id","displacement","text_label","text_labels","indexOf","__data__","bigg_id","node_group","setTimeout","insertBefore","firstChild","grabbed","get_selected_node_ids","selected_text_label_ids","get_selected_text_label_ids","c_plus_c","move_node_and_dependents","unique_concat","draw_these_text_labels","node_to_combine_array","each","saved_dragged_node","segment_objs_moved_to_combine","updated_reactions","filter","saved_displacement","saved_node_ids","saved_text_label_ids","saved_reaction_ids","c_times_scalar","clearTimeout","move_bezier","bez","bezier_id","dragging","bezier","draw_these_beziers","_get_generic_drag","reaction","label_x","label_y","relative_to_selection","rel","location","saved_d","saved_location","get_center","angle_for_event","saved_angle","saved_center","Behavior","make_class","prototype","is_enabled","insert_after","brush_sel","insert_before_node","nextSibling","enabled","toggle","selection_brush","setup_selection_brush","remove","selectable_selection","size_and_location","canvas","width","height","brush_fn","svg","brush","scale","identity","domain","shift_key_on","extent","target","sx","sy","clear","Brush","zoom_container","settings","new_sel","placed_div","PlacedDiv","hide","c","completely","backgroundColor","input","text","hide_dropdown","default_angle","direction_arrow","DirectionArrow","set_rotation","setup_map_callbacks","setup_zoom_callbacks","target_coords","set","selected_node","is_active","reload","show_dropdown","hide_target","count","place_at_selected","is_visible","toggle_start_reaction_listener","_","isNull","reload_at_selected","place","set_status","show","clear_escape","key_manager","add_escape_listener","blur","repaint","setText","focus","hideDropDown","deselect_text_labels","select_single_node","set_location","starting_from_scratch","already_drawn","drawn_id","cobra_model","show_names","get_option","allow_duplicates","options","cobra_reactions","cobra_metabolites","metabolites","has_data_on_reactions","selected_m_name","reaction_data","reaction_data_styles","name","bold_mets_in_str","str","mets","replace","RegExp","join","reaction_suggestions","reaction_name","show_r_name","met_bigg_id","html","data_string","matches","met_id","show_met_names","show_gene_names","flatten","genes","g_obj","log","reaction_string","CobraModel","build_reaction_string","reversibility","lower_bound","upper_bound","concat","sort_fn","Math","abs","toLowerCase","sort","complete","check_and_build","new_reaction_from_scratch","get_rotation","new_reaction_for_metabolite","onEnter","onChange","start_reaction_listener","deselect_nodes","show_target","BuildInput","map_data","model_data","embedded_css","builder_embed","datum","set_options","menu","scroll_behavior","use_3d_transform","check_browser","enable_editing","enable_keys","enable_search","fill_screen","zoom_to_element","starting_reaction","never_ask_before_quit","unique_map_id","primary_metabolite_radius","secondary_metabolite_radius","marker_radius","gene_font_size","hide_secondary_metabolites","show_gene_reaction_rules","hide_all_labels","reaction_styles","reaction_compare_style","reaction_scale","type","color","size","reaction_no_data_color","reaction_no_data_size","gene_data","and_method_in_gene_reaction_rule","metabolite_data","metabolite_styles","metabolite_compare_style","metabolite_scale","metabolite_no_data_color","metabolite_no_data_size","identifiers_on_map","highlight_missing","allow_building_duplicate_reactions","first_load_callback","check_for_parent_tag","set_option","option","new_value","conditional_options","Settings","streams","onValue","val","has","reduce","has_found","scale_el","set_conditional","CallbackManager","load_model","load_map","_update_data","status_bus","new_behavior","set_scroll_behavior","draw_all_nodes","draw_all_reactions","should_update_data","from_cobra_json","remove_child_nodes","ZoomContainer","zoomed_sel","Map","from_data","build_input","text_edit_input","TextEditInput","_setup_modes","menu_div","search_bar_div","button_div","search_bar","SearchBar","search_index","settings_bar","settings_div","SettingsMenu","slice","_get_keys","assigned_keys","input_list","update","_setup_menu","_setup_simple_zoom_buttons","element_id","zoom_to_reaction","zoom_to_node","zoom_extent_canvas","get_size","start_coords","zoom_extent_nodes","_setup_status","_setup_quick_jump","zoom_mode","view_mode","_setup_confirm_before_exit","_set_mode","mode","_toggle_direction_buttons","toggle_pan_drag","toggle_resize","select_none","build_mode","brush_mode","rotate_mode","text_mode","set_reaction_data","set_gene_data","clear_gene_reaction_rules","set_metabolite_data","update_model","update_map","kind","should_draw","make_gene_data_object","all_reactions","extend","data_styles","import_and_check","met_data_object","reaction_data_object","gene_data_object","update_metabolite_data","update_reaction_data","apply_metabolite_data_to_map","apply_reaction_data_to_map","apply_gene_data_to_map","update_model_timer","delay","apply_metabolite_data","apply_reaction_data","apply_gene_data","menu_selection","button_selection","load_map_for_file","check_map","map_name","load_model_for_file","load_reaction_data_for_file","load_metabolite_data_for_file","load_gene_data_for_file","ui","dropdown_menu","button","key","save","key_text","assign","load","fn","pre_fn","failure_fn","save_svg","clear_map","model_menu","convert_map","clear_model","disable_model_clear_convert","dropdown","data_menu","load_reaction_data","accept_csv","clear_reaction_data","divider","clear_gene_data","clear_metabolite_data","disable_clears","edit_menu","undo","redo","toggle_primary","cycle_primary","select_all","invert_selection","view_menu","zoom_in","zoom_out","extent_nodes","extent_canvas","search","toggle_beziers","show_settings","button_panel","individual_button","icon","classes","tooltip","radio_button_group","direction_buttons","button_group","direction_arrow_left","direction_arrow_right","direction_arrow_up","direction_arrow_down","select_button","$","find","ids","this_id","b_id","status_bar","status","load_fn","new_map_name","quick_jump_path","callback","confirm","url","name_to_url","json","quick_jump","QuickJump","was_enabled","zoom","zoom_on","load_metabolite_data","load_gene_data","ignore_with_input","delete","delete_selected","delete_del","toggle_selected_node_primary","cycle_primary_node","right","down","left","up","onbeforeunload","Builder","callbacks","this_arg","isUndefined","pass_args","Array","arguments","a_name","split_name","split","apply","resize_enabled","setup","stop_propagation","transform_string","current_transform","tr","ldragresize","oldx","min","dragbar_width","mouse_node","mouse_node_mult","rect","top","bottom","rdragresize","dragx","max","tdragresize","oldy","bdragresize","dragy","drag_right","origin","drag_left","drag_top","drag_bottom","Canvas","stoichiometries","is_reversible","format","number","reactant_bits","product_bits","the_metabolite","coefficient","from_exported_data","model","the_id","gene_ids","genes_for_gene_reaction_rule","gene_reaction_rule","gene_id","gene","met","cofactors","styles","compare_style","apply_reaction_data_to_reactions","apply_metabolite_data_to_nodes","gene_data_obj","apply_gene_data_to_reactions","model_for_export","load_with_files","files","select_sel","update_callback","addEventListener","load_datafile","value","file","this_file","load_the_file","list","getdatafiles","datafiles","empty","path_for_arrow","arrow_container","arrow","_setup_drag","transform","rotate","rotation","displace_rotation","d_rotation","b","d_angle","to_degrees","create_membrane","enter_selection","update_membrane","update_selection","create_reaction","create_reaction_label","update_reaction","drawn_nodes","defs","update_reaction_label","draw_a_nested_object","create_segment","update_segment","group","identifiers_in_tooltip","label_mousedown_fn","label_mouseover_fn","label_mouseout_fn","label","all_genes_g","show_gene_string","gene_string","show_gene_reaction_rule","gene_string_for_data","gene_g","exit","should_size","should_color","no_data_size","no_data_color","primary_r","secondary_r","get_arrow_size","reaction_size","isNaN","get_disp","arrow_size","node_is_primary","arrow_height","start","end","b1","b2","disp","from_node_coefficient","direction","displaced_coords","to_node_coefficient","curve","show_missing","reaction_color","arrowheads","node_type","get_angle","loc","show_arrowhead_flux","stoichiometry_labels","labels","disp_factor","rotate_coords","create_bezier","update_bezier","show_beziers","drag_behavior","mouseover","mouseout","drawn_reactions","seg_data","segment_d","create_node","metabolite_groups","update_node","has_data_on_nodes","mousedown_fn","click_fn","mouseover_fn","mouseout_fn","label_drag_behavior","marker_r","metabolite_data_styles","no_data_style","node_label","should_scale","metabolite_size","should_color_data","metabolite_color","create_text_label","update_text_label","reaction_arrow_displacement","displace","check_undefined","new_x","new_y","hyp","distance","Draw","ctrl_equals_cmd","mousetrap","Mousetrap","isBoolean","stopCallback","_add_cmd","key_ar","isArray","new_ar","k","reset","key_id","assigned_key","key_to_bind","input_blocking","add_enter_listener","one_time","add_key_listener","key_name","unbind","KeyManager","css","canvas_size_and_loc","map_id","map_description","generate_map_id","setup_defs","setup_containers","largest_ids","Scale","calc_data_stats","connect_to_settings","get_data_statistics","UndoStack","draw","SearchIndex","beziers_enabled","rotation_on","get_largest_id","obj","current_largest","parseInt","Date","now","toString","n_id","insert","r_id","g_id","segments_to_delete","s_id","from_node","to_node","midpoint","c_minus_c","label_id","new_beziers_for_reactions","largest_segment_id","reset_containers","time","_status_timer","has_cobra_model","draw_all_text_labels","draw_beziers","clear_deleted","draw_all_beziers","clear_deleted_reactions","reaction_subset","object_slice_for_ids_ref","update_fn","draw_an_object","bezier_ids","bezier_ids_for_reaction_ids","clear_deleted_segments","clear_deleted_beziers","clear_deleted_nodes","node_subset","create_fn","text_label_ids","clear_deleted_text_labels","text_label_subset","bezier_subset","hide_beziers","has_data","data_statistics","on_array","array","same","vals","quartiles","funcs","ar","new_val","get_selected_text_labels","selected_text_labels","select_metabolite_with_id","node_selection","selected","classable_node","classable_selection","node_count","out","select_text_label","text_label_selection","p","delete_selectable","segments_and_reactions_for_nodes","segment_objs_w_segments","saved_nodes","saved_segment_objs_w_segments","saved_reactions","saved_text_labels","delete_and_draw","segment_objs","delete_segment_data","delete_reaction_data","delete_text_label_data","changed_r_scale","changed_m_scale","extend_nodes","extend_reactions","reaction_ids_to_draw","seg_id","seg_o","new_beziers_for_segments","scale_changed","found","so","bez_id","bezier_id_for_segment_id","extend_and_draw_metabolite","new_nodes","selected_node_id","cobra_reaction","metabolite_id","metabolite","label_d","reaction_redo","reaction_undo","new_reactions","reaction_bigg_id","apply_undo_redo","extend_and_draw_reaction","new_beziers","new_coords","translate_off_screen","new_reaction","saved_beziers","reactions_to_draw","connected_anchor_ids","segment_info","connected_anchor_id","related_node_ids","conn_met_id","conn_node","a_selected_node_id","nodes_to_draw","last_i","last_node","last_is_primary","last_coords","last_segment","last_segment_info","primary_node_id","last_bezier","related_node_id","this_is_primary","these_coords","this_segment_info","this_segment","this_bezier","old_connected_segments","new_connected_segments","go","reaction_ids_to_draw_o","these_reactions","segment_ids_for_reactions","segment_obj_w_segment","these_ids","new_text_label","edit_text_label","saved_value","edit_and_draw","record_id","margin","_zoom_extent","new_zoom","new_pos","go_to","zoom_to_text_label","highlight_reaction","highlight","highlight_node","highlight_text_label","download_json","map_for_export","homepage","schema","new_segment","attrs","new_node","t_id","canvas_el","new_canvas_el","window_scale","window_translate","mouse_node_size_and_trans","w","h","_go_to_svg","hidden_sel","download_svg","reactions_not_found","reaction_attrs","met_nodes_not_found","metabolite_attrs","model_reaction_id","model_reaction","model_metabolite_id","model_metabolite","n_reactions_not_found","n_met_nodes_not_found","status_delay","div","map_size","load_callback","selector","url_comp","parse_url_components","default_value","view_options","change_map","success","replace_state_for_map_name","reset_selection","selectedIndex","href","history","replaceState","linear","x_size","y_size","clamp","scale_path","path","x_fn","y_fn","match","p0","p1","p2","reg","p3","p4","p5","p6","scale_decimals","scale_fn","precision","sort_scale","stats","sorted","v","color_range","size_range","range","update_metabolite","changed","grad_id","unique_string","input_width","input_height","data_not_loaded","input_label_group","nd","no_data_container","add_group","trash_group","input_group","gradient","pickers_group","no_data","update_no_data","bar_w","bar_h","x_disp","_data_not_loaded","sc","sc_size","bring_to_front","d2","get_this_val","set_scale","sorted_domain","frac","stops","pickers","new_d","buf","floor","invert","trashes","add","last_ind","j","th","inputs","disabled","stat_types","opts","sind","label_w","ins","ScaleEditor","container","previous","next","counter","results","on_input_fn","_drop_duplicates","debounce","uniq","item","comp_keys","clear_next","clear_previous","index","record","overwrite","check_record","substring","re","exec","bacon","Bus","force_update_bus","Observable","convert_to_conditional_stream","_convert_to_conditional_stream","force_update_with_bus","_force_update_with_bus","busses","_create_conditional_setting","bus","stream","status_stream","is_not_hold_event","not","toProperty","is_not_first_clear","scan","is_not_first_hold","combined","combineAsArray","held","flatMap","fromArray","unheld","merge","initial_value","hold_changes","abandon_changes","accept_changes","toggle_abs_and_apply_data","background","box","view_gui","rse","style_gui","mse","clear_enter","abs_callback","cell","style_cells","get_styles","checked","option_name","string","boolean_options","pan","active_target","_accept_changes","_add_and_edit","stack_size","stack","oldest","newest","end_of_stack","top_of_stack","_incr","_decr","css3_transform_container","_scroll_behavior","_use_3d_transform","_pan_drag_on","_zoom_behavior","_zoom_timeout","_svg_scale","_svg_translate","_update_scroll","set_use_3d_transform","contains","err","wheel_fn","ev","sensitivity","returnValue","get_directional_disp","wheel_delta","delta","the_delt","new_translate","wheelDeltaX","deltaX","wheelDeltaY","deltaY","translate_array","_go_to_3d","svg_scale","svg_translate","n_scale","n_translate","tranform","_clear_3d","defer","zoom_by","amount","shift","PI","new_reaction_id","selected_node_coords","reaction_length","main_axis","anchor_distance","reactant_ranks","product_ranks","reactant_count","product_count","reaction_is_reversed","formula","new_metabolite","carbons","Infinity","decompartmentalize","max_rank","old","primary_reactant_index","primary_product_index","is_primary","new_anchors","anchors","dis","anchor_ids","new_id","general_node_type","new_anchor_groups","from_id","to_id","new_segment_id","reverse_flux","primary_index","met_loc","calculate_new_metabolite_coordinates","new_node_id","circle","Boolean","metabolites_array","rotate_around","coord","updated_node_ids","updated_reaction_ids","move_node_and_labels","tbez","is_reversed","ds","draw_at_index","b1_strength","b2_strength","w2","secondary_dis","num_slots","de","reaction_axis","new_label","seg_bez","these","config","calculateWidthForText","spacer","document","createElement","visibility","position","outline","padding","border","whiteSpace","fontSize","fontFamily","fontWeight","body","appendChild","innerHTML","getBoundingClientRect","get_document","get_window","promptInnerHTML","hintColor","dropDownBorderColor","dropDownZIndex","dropDownOnHoverBackgroundColor","txtInput","spellcheck","txtHint","cloneNode","borderColor","boxShadow","verticalAlign","wrapper","prompt","overflow","marginLeft","dropDown","textAlign","zIndex","cursor","borderStyle","borderWidth","overflowX","overflowY","createDropDownController","elem","rows","ix","oldIndex","current_row","onMouseOver","onMouseOut","onDblClick","onmouseselection","refresh","token","vph","innerHeight","documentElement","clientHeight","distanceToTop","distanceToBottom","divRow","onmouseover","onmouseout","onmousedown","ondblclick","__hint","rs","display_limit","divRow2","maxHeight","move","step","get_current_row","dropDownController","leftSide","registerOnTextChangeOldValue","get_hint","onArrowDown","onArrowUp","onTab","startFrom","hint","getText","optionsLength","registerOnTextChange","txt","handler","keyDownHandler","keyCode","m","hasTextChanged","align_gene_data_to_reactions","aligned","null_val","first_gene_id","this_gene_data","existing_d","pnt","check","array_to_object","float_for_data","check_finite","isFinite","take_abs","diff","fold","log2_fold","_parse_float_or_null","fs","reverse_flux_for_data","rule","gene_values","null_or_d","out_text","genes_found","replace_gene_in_rule","RETURN_ARG","new_str","any_num","EMPTY_LINES","TRAILING_NEWLINE","result","text_for_data","csv_converter","csv_rows","converted","row","AND_OR","ALL_PARENS","unique_strings_array","evaluate_gene_reaction_rule","curr_val","all_null","new_curr_val","EXCESS_PARENS","OR_EXPRESSION","nums","OR","sum","AND_EXPRESSION","AND","num","Number","escape_reg_exp","ESCAPE_REG","space_or_par_start","space_or_par_finish","escaped","r_data","version","DataMenu","static","load_map_model_from_url","map_download_url","model_download_url","local_index","opt","map_path","_get_path","model_name","model_path","hasOwnProperty","encodeURIComponent","organism","set_button","s2","pull_right","ul","li","link","set_json_or_csv_input_button","set_json_input_button","post_fn","load_json","click","load_json_or_csv","_check_filesaver","Blob","alert","defaults","must_be_float","has_key","hasChildNodes","removeChild","lastChild","load_css","css_path","ends_with","suffix","load_files","files_to_load","final_callback","remaining","is_internal","constructor","args","instance","container_sel","parent_node_selector","children_selector","object","id_key","create_function","update_function","exit_function","draw_object","make_array_ref","object_data_key","make_array","it","compare_arrays","a1","a2","arr","column","nk","copy","len","obj1","obj2","attrname","arrays","new_array","func","wait","immediate","timeout","context","later","callNow","object_slice_for_ids","subset","coords1","coords2","scalar","JSON","stringify","blob","saveAs","File","FileReader","FileList","reader","onload","parse","onabort","onerror","readAsText","debug_event","onload_function","errors","csv","parseRows","svg_sel","do_beautify","xml","XMLSerializer","serializeToString","vkbeautify","rotate_coords_recursive","coords_array","rot","cos","sin","denominator","numerator","atan","radians","point","gamma","atan2","beta","sqrt","pow","names","compartmentalize","compartment_id","no_compartment","avg","median","half","random_characters","possible","charAt","random","el","tag","tagName","download_url","the_window","query","vars","pair","decodeURIComponent","ownerDocument","defaultView","transform_attr","browser","tem","ua","navigator","userAgent","M","test","appName","appVersion","splice","_toConsumableArray","arr2","from","Source","obs","sync","lazy","queue","ConsumingSource","BufferingSource","Desc","method","Some","Event","eventIdCounter","Next","valueF","eager","isFunction","_isNext","valueInternal","Initial","End","desc","idCounter","initialDesc","CompositeUnsubscribe","ss","unsubscribe","unsubscribed","subscriptions","starting","Dispatcher","_subscribe","_handleEvent","subscribe","handleEvent","pushing","ended","prevError","unsubSrc","EventStream","assertFunction","dispatcher","registerObs","PropertyDispatcher","property","None","currentValueRootId","propertyEnded","Property","unsubAll","subscribeAll","guardedSink","sink","Bacon","valueAndEnd","endEvent","_slice","Exception","nop","former","cloneArray","assert","message","condition","assertObservableIsProperty","_isObservable","_isProperty","assertEventStream","_isEventStream","assertObservable","isObservable","assertArray","assertNoArguments","prop","inherit","child","parent","hasProp","ctor","indexWhere","head","always","negate","tail","filtered","toArray","last","all","any","without","seed","cached","_isNone","me","internals","recursionDepth","UpdateBarrier","rootEvent","waiterObs","waiters","afters","aftersIndex","flushed","afterTransaction","whenDoneWith","obsWaiters","flush","flushWaiters","deps","obsId","flushDepsOf","dep","internalDeps","inTransaction","after","currentEventId","wrappedSubscribe","unsubd","shouldUnsub","doUnsub","unsub","reply","noMore","hasWaiters","_isSource","markEnded","consume","mayHave","hasAtLeast","values","isTrigger","fromObservable","_isDesc","findDeps","describe","ref","_len","_key","withDesc","withMethodCallSupport","wrapped","_len2","_key2","methodName","makeFunctionArgs","makeFunction_","partiallyApplied","applied","_len3","_key3","toSimpleExtractor","fieldValue","toFieldExtractor","parts","partFuncs","isFieldKey","_len4","_key4","makeFunction","convertArgsToFunction","sampled","sampledBy","_ref","_ref2","toCombinator","toFieldKey","_isSome","getOrElse","get","isDefined","inspect","toOption","more","_isEvent","isEvent","isEnd","isInitial","isNext","isError","hasValue","fmap","_isInitial","toNext","initialEvent","nextEvent","toEvent","subscribeInternal","onValues","onError","onEnd","_name","withDescription","subscription","_this2","unsubMe","iterable","hasSubscribers","removeSub","pushIt","pushToSubscriptions","tmp","sub","unsubscribeFromSource","_this","initValue_","initValue","initSent","subbed","sendInit","toEventStream","withHandler","never","when","usage","sources","pats","patterns","patSources","constantToFunction","pat","ixs","triggerFound","needsBarrier","containsDuplicateDeps","resultStream","triggers","ends","i1","cannotSync","source","cannotMatch","nonFlattened","trigger","part","flushLater","flushWhileTriggers","pop","events","i2","_p","observables","state","checkObservable","groupSimultaneous","_len5","_key5","_len6","_key6","maybeSubSource","_this3","dispatchingId","valId","changes","_this4","_this5","constant","fromBinder","binder","eventTransformer","unbound","shouldUnbind","unbinder","_len7","_key7","_len8","_key8","argumentsToObservables","argumentsToObservablesAndFunction","_len9","_key9","_len10","_key10","combineWith","_argumentsToObservablesAndFunction","combine","other","combinator","withStateMachine","initState","fromF","newState","outputs","output","equals","isNone","skipDuplicates","isEqual","prev","awaiting","and","or","scheduler","setInterval","clearInterval","getTime","bufferWithTime","bufferWithTimeOrCount","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","schedule","onInput","onFlush","scheduled","valuesToPush","_this6","delayMs","_this7","_len11","_key11","once","unsubRight","unsubLeft","flatMap_","makeSpawner","flatMapFirst","makeObservable","root","firstOnly","limit","rootDep","childDeps","composite","spawn","checkQueue","checkEnd","__","unsubRoot","flatMapWithConcurrencyLimit","_len12","_key12","flatMapConcat","sender","bufferingThrottle","minimumInterval","newSink","subscribeInput","_this8","unsubscribeInput","plug","_this9","liftCallback","_len13","_key13","fromCallback","_len14","_key14","fromNodeCallback","_len15","_key15","combineTemplate","template","ctxStack","setValue","applyStreamValue","constantValue","mkContext","pushContext","newContext","compile","popContext","compileTemplate","rootContext","addPropertyInitValueToStream","justInitValue","mapEnd","skipErrors","takeUntil","stopper","endMarker","_event$value","flatMapLatest","delayChanges","debounceImmediate","decode","cases","resultProperty","_this10","acc","initHandled","prevTuple","tuple","doAction","doEnd","doError","doLog","_len16","_key16","endOnError","_len17","_key17","take","first","mapError","flatMapError","sampler","thisSource","samplerSource","sample","interval","_len18","_key18","eventMethods","findHandlerMethods","methodPair","addListener","fromEventTarget","eventName","_findHandlerMethods","fromEvent","fromPoll","poll","fromPromise","promise","abort","bound","then","done","groupBy","keyF","limitF","src","similar","limited","pushNeeded","holdWhen","valve","onHold","bufferedValues","subscribed","endIfBothEnded","toSend","asEventStream","_this11","off","jQuery","Zepto","lastEvent","_len19","_key19","mergeAll","smartSink","unsubBoth","sinks","repeatedly","repeat","generator","flag","subscribeNext","retry","retries","maxRetries","isRetryable","finished","valueStream","retriesDone","pause","sequentially","skip","skipUntil","starter","started","skipWhile","ok","_len20","_key20","slidingWindow","minValues","spies","running","spy","startWith","takeWhile","_len21","_key21","throttle","firstToPromise","PromiseCtr","_this12","Promise","resolve","reject","toPromise","initial","lateBindFirst","_len23","_key23","_len22","_key22","Function","zipAsArray","_len24","_key24","zipWith","_len25","_key25","_len26","_key26","observablesAndFunction","zip","view","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","revoker","revokeObjectURL","chrome","dispatch","filesaver","event_types","listener","auto_bom","FileSaver","no_auto_bom","object_url","target_view","blob_changed","dispatch_all","fs_error","onloadend","base64Data","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","open","abortable","create_if_not_found","create","exclusive","download","webkitSlice","TEMPORARY","getDirectory","dir","getFile","createWriter","writer","onwriteend","toURL","ABORT_ERR","write","WRITING","NOT_FOUND_ERR","FS_proto","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","content","_addEvent","attachEvent","_characterFromEvent","character","fromCharCode","which","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","_stopPropagation","cancelBubble","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","action","_keysFromString","combination","_getKeyInfo","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","element","ancestor","targetElement","_resetSequences","doNotReset","activeSequences","_sequenceLevels","_nextExpectedAction","_getMatches","sequenceName","level","_callbacks","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","srcElement","_handleKeyEvent","_ignoreNextKeyup","handleKey","_resetSequenceTimer","_resetTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","_directMap","info","_ignoreNextKeypress","_handleKey","maxLevel","processedSequenceCallback","ignoreThisKeypress","_bindMultiple","combinations",8,9,13,16,17,18,20,27,32,33,34,35,36,37,38,39,40,45,46,91,93,224,106,107,109,110,111,186,187,188,189,190,191,192,219,220,221,222,"~","!","@","#","%","^","&","*","(",")","+",":","\"","<",">","?","|","command","return","escape","plus","mod","platform","className","isContentEditable","documentMousetrap","createReduce","iterator","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","ObjProto","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","argCount","collection","accumulator","isObject","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","every","some","includes","include","fromIndex","guard","invoke","isFunc","pluck","where","findWhere","computed","lastComputed","shuffle","rand","shuffled","sortBy","criteria","indexBy","countBy","partition","pass","fail","rest","drop","compact","shallow","strict","startIndex","isArguments","difference","unique","isSorted","seen","union","intersection","argsLength","unzip","findLastIndex","low","high","mid","lastIndexOf","stop","ceil","executeBound","sourceFunc","boundFunc","callingContext","TypeError","partial","boundArgs","bindAll","memoize","hasher","cache","address","leading","trailing","timestamp","wrap","compose","times","before","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","functions","methods","extendOwn","pick","oiteratee","omit","props","tap","interceptor","isMatch","eq","aStack","bStack","areArrays","aCtor","bCtor","isEmpty","isString","isElement","nodeType","Int8Array","isNumber","noConflict","noop","propertyOf","accum","escapeMap","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","fallback","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","offset","variable","render","argument","chain","_chain","mixin","valueOf","toJSON","createShiftArr","space","isSubquery","parenthesisLevel","split_sql","tab","inComment","deep","sql","ar_by_quote","xmlmin","preserveComments","jsonmin","cssmin","sqlmin"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChxrppflatJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtvcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrihavnvtlgfile":"escher.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/** Behavior. Defines the set of click and drag behaviors for the map, and keeps track\n of which behaviors are activated.\n\n A Behavior instance has the following attributes:\n\n my_behavior.rotation_drag, my_behavior.text_label_mousedown,\n my_behavior.text_label_click, my_behavior.selectable_mousedown,\n my_behavior.selectable_click, my_behavior.selectable_drag,\n my_behavior.node_mouseover, my_behavior.node_mouseout,\n my_behavior.label_mousedown, my_behavior.label_mouseover,\n my_behavior.label_mouseout, my_behavior.bezier_drag,\n my_behavior.bezier_mouseover, my_behavior.bezier_mouseout,\n my_behavior.reaction_label_drag, my_behavior.node_label_drag,\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar build = require('./build');\n\n\nvar Behavior = utils.make_class();\n// methods\nBehavior.prototype = {\n    init: init,\n    toggle_rotation_mode: toggle_rotation_mode,\n    turn_everything_on: turn_everything_on,\n    turn_everything_off: turn_everything_off,\n    // toggle\n    toggle_selectable_click: toggle_selectable_click,\n    toggle_text_label_edit: toggle_text_label_edit,\n    toggle_selectable_drag: toggle_selectable_drag,\n    toggle_label_drag: toggle_label_drag,\n    toggle_label_mousedown: toggle_label_mousedown,\n    toggle_bezier_drag: toggle_bezier_drag,\n    // util\n    turn_off_drag: turn_off_drag,\n    // get drag behaviors\n    _get_selectable_drag: _get_selectable_drag,\n    _get_bezier_drag: _get_bezier_drag,\n    _get_reaction_label_drag: _get_reaction_label_drag,\n    _get_node_label_drag: _get_node_label_drag,\n    _get_generic_drag: _get_generic_drag,\n    _get_generic_angular_drag: _get_generic_angular_drag\n};\nmodule.exports = Behavior;\n\n\n// definitions\nfunction init(map, undo_stack) {\n    this.map = map;\n    this.undo_stack = undo_stack;\n\n    // make an empty function that can be called as a behavior and does nothing\n    this.empty_behavior = function() {};\n\n    // rotation mode operates separately from the rest\n    this.rotation_mode_enabled = false;\n    this.rotation_drag = d3.behavior.drag();\n\n    // behaviors to be applied\n    this.selectable_mousedown = null;\n    this.text_label_mousedown = null;\n    this.text_label_click = null;\n    this.selectable_drag = this.empty_behavior;\n    this.node_mouseover = null;\n    this.node_mouseout = null;\n    this.label_mousedown = null;\n    this.label_mouseover = null;\n    this.label_mouseout = null;\n    this.bezier_drag = this.empty_behavior;\n    this.bezier_mouseover = null;\n    this.bezier_mouseout = null;\n    this.reaction_label_drag = this.empty_behavior;\n    this.node_label_drag = this.empty_behavior;\n    this.turn_everything_on();\n}\nfunction turn_everything_on() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(true);\n    this.toggle_selectable_drag(true);\n    this.toggle_label_drag(true);\n    this.toggle_label_mousedown(true);\n}\nfunction turn_everything_off() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(false);\n    this.toggle_selectable_drag(false);\n    this.toggle_label_drag(false);\n    this.toggle_label_mousedown(false);\n}\n\nfunction toggle_rotation_mode(on_off) {\n    /** Listen for rotation, and rotate selected nodes.\n\n     */\n    if (on_off===undefined) {\n        this.rotation_mode_enabled = !this.rotation_mode_enabled;\n    } else {\n        this.rotation_mode_enabled = on_off;\n    }\n\n    var selection_node = this.map.sel.selectAll('.node-circle'),\n        selection_background = this.map.sel.selectAll('#canvas');\n\n    if (this.rotation_mode_enabled) {\n        this.map.callback_manager.run('start_rotation');\n\n        var selected_nodes = this.map.get_selected_nodes();\n        if (Object.keys(selected_nodes).length == 0) {\n            console.warn('No selected nodes');\n            return;\n        }\n\n        // show center\n        this.center = average_location(selected_nodes);\n        show_center.call(this);\n\n        // this.set_status('Drag to rotate.');\n        var map = this.map,\n            selected_node_ids = Object.keys(selected_nodes),\n            reactions = this.map.reactions,\n            nodes = this.map.nodes,\n            beziers = this.map.beziers;\n\n        var start_fn = function(d) {\n            // silence other listeners\n            d3.event.sourceEvent.stopPropagation();\n        },\n            drag_fn = function(d, angle, total_angle, center) {\n                var updated = build.rotate_nodes(selected_nodes, reactions,\n                                                 beziers, angle, center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            end_fn = function(d) {},\n            undo_fn = function(d, total_angle, center) {\n                // undo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, -total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            redo_fn = function(d, total_angle, center) {\n                // redo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            center_fn = function() {\n                return this.center;\n            }.bind(this);\n        this.rotation_drag = this._get_generic_angular_drag(start_fn, drag_fn, end_fn,\n                                                            undo_fn, redo_fn, center_fn,\n                                                            this.map.sel);\n        selection_background.call(this.rotation_drag);\n        this.selectable_drag = this.rotation_drag;\n    } else {\n        // turn off all listeners\n        hide_center.call(this);\n        selection_node.on('mousedown.center', null);\n        selection_background.on('mousedown.center', null);\n        selection_background.on('mousedown.drag', null);\n        selection_background.on('touchstart.drag', null);\n        this.rotation_drag = null;\n        this.selectable_drag = null;\n    }\n\n    // definitions\n    function show_center() {\n        var s = this.map.sel.selectAll('#rotation-center')\n                .data([0]),\n            enter = s.enter()\n                .append('g').attr('id', 'rotation-center');\n\n        enter.append('path').attr('d', 'M-32 0 L32 0')\n            .attr('class', 'rotation-center-line');\n        enter.append('path').attr('d', 'M0 -32 L0 32')\n            .attr('class', 'rotation-center-line');\n\n        s.attr('transform', 'translate('+this.center.x+','+this.center.y+')')\n            .attr('visibility', 'visible');\n\n        s.call(d3.behavior.drag()\n               .on('drag', function(sel) {\n                   var cur = utils.d3_transform_catch(sel.attr('transform')),\n                       new_loc = [d3.event.dx + cur.translate[0],\n                                  d3.event.dy + cur.translate[1]];\n                   sel.attr('transform', 'translate('+new_loc+')');\n                   this.center = { x: new_loc[0], y: new_loc[1] };\n               }.bind(this, s)));\n        s.on('mouseover', function() {\n            var current = parseFloat(this.selectAll('path').style('stroke-width'));\n            this.selectAll('path').style('stroke-width', current * 2 + 'px');\n        }.bind(s));\n        s.on('mouseout', function() {\n            this.selectAll('path').style('stroke-width', null);\n        }.bind(s));\n    }\n    function hide_center(sel) {\n        this.map.sel.select('#rotation-center')\n            .attr('visibility', 'hidden');\n    }\n    function average_location(nodes) {\n        var xs = [], ys = [];\n        for (var node_id in nodes) {\n            var node = nodes[node_id];\n            if (node.x !== undefined)\n                xs.push(node.x);\n            if (node.y !== undefined)\n                ys.push(node.y);\n        }\n        return { x: utils.mean(xs),\n                 y: utils.mean(ys) };\n    }\n}\n\nfunction toggle_selectable_click(on_off) {\n    /** With no argument, toggle the node click on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_mousedown === null;\n    if (on_off) {\n        var map = this.map;\n        this.selectable_mousedown = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // this.parentNode.__data__.was_selected = d3.select(this.parentNode).classed('selected');\n            // d3.select(this.parentNode).classed('selected', true);\n        };\n        this.selectable_click = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // click suppressed. This DOES have en effect.\n            if (d3.event.defaultPrevented) return;\n            // turn off the temporary selection so select_selectable\n            // works. This is a bit of a hack.\n            // if (!this.parentNode.__data__.was_selected)\n            //     d3.select(this.parentNode).classed('selected', false);\n            map.select_selectable(this, d, d3.event.shiftKey);\n            // this.parentNode.__data__.was_selected = false;\n        };\n        this.node_mouseover = function(d) {\n            d3.select(this).style('stroke-width', null);\n            var current = parseFloat(d3.select(this).style('stroke-width'));\n            if (!d3.select(this.parentNode).classed('selected'))\n                d3.select(this).style('stroke-width', current * 3 + 'px');\n        };\n        this.node_mouseout = function(d) {\n            d3.select(this).style('stroke-width', null);\n        };\n    } else {\n        this.selectable_mousedown = null;\n        this.selectable_click = null;\n        this.node_mouseover = null;\n        this.node_mouseout = null;\n        this.map.sel.select('#nodes')\n            .selectAll('.node-circle').style('stroke-width', null);\n    }\n}\n\nfunction toggle_text_label_edit(on_off) {\n    /** With no argument, toggle the text edit on mousedown on/off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     The backup state is equal to selectable_mousedown.\n\n     */\n    if (on_off===undefined) on_off = this.text_edit_mousedown == null;\n    if (on_off) {\n        var map = this.map,\n            selection = this.selection;\n        this.text_label_mousedown = function() {\n            if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // run the callback\n            var coords_a = utils.d3_transform_catch(d3.select(this).attr('transform')).translate,\n                coords = {x: coords_a[0], y: coords_a[1]};\n            map.callback_manager.run('edit_text_label', null, d3.select(this), coords);\n            d3.event.stopPropagation();\n        };\n        this.text_label_click = null;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', true);\n        // add the new-label listener\n        this.map.sel.on('mousedown.new_text_label', function(node) {\n            // silence other listeners\n            d3.event.preventDefault();\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            this.map.callback_manager.run('new_text_label', null, coords);\n        }.bind(this, this.map.sel.node()));\n    } else {\n        this.text_label_mousedown = this.selectable_mousedown;\n        this.text_label_click = this.selectable_click;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', false);\n        // remove the new-label listener\n        this.map.sel.on('mousedown.new_text_label', null);\n        this.map.callback_manager.run('hide_text_label_editor');\n    }\n}\n\nfunction toggle_selectable_drag(on_off) {\n    /** With no argument, toggle the node drag & bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_drag===this.empty_behavior;\n    if (on_off) {\n        this.selectable_drag = this._get_selectable_drag(this.map, this.undo_stack);\n        this.bezier_drag = this._get_bezier_drag(this.map, this.undo_stack);\n    } else {\n        this.selectable_drag = this.empty_behavior;\n        this.bezier_drag = this.empty_behavior;\n    }\n}\nfunction toggle_label_drag(on_off) {\n    /** With no argument, toggle the label drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_drag===this.empty_behavior;\n    if (on_off) {\n        this.reaction_label_drag = this._get_reaction_label_drag(this.map);\n        this.node_label_drag = this._get_node_label_drag(this.map);\n    } else {\n        this.reaction_label_drag = this.empty_behavior;\n        this.node_label_drag = this.empty_behavior;\n    }\n}\n\nfunction toggle_label_mousedown(on_off) {\n    /** With no argument, toggle the reaction label mousedown on or off.z\n\n     Arguments\n     ---------\n\n     on_off: A boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_mousedown==null;\n    if (on_off) {\n        var map = this.map;\n        // TODO turn this feature (reaction label selection) back on, but\n        // with correct shift key management\n        this.label_mousedown = function(d) {\n            // if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // // select reaction/node\n            // d3.select(this.parentNode.parentNode)\n            //     .each(function(d) {\n            //         var node_ids = {};\n            //         for (var seg_id in d.segments) {\n            //             ['to_node_id', 'from_node_id'].forEach(function(n) {\n            //                 node_ids[d.segments[seg_id][n]] = true;\n            //             });\n            //         }\n            //         map.sel.selectAll('.selected').classed('selected', false);\n            //         map.sel.selectAll('.node')\n            //             .classed('selected', function(d) {\n            //                 return (d.node_id in node_ids);\n            //             });\n            //     });\n            // d3.event.stopPropagation();\n        };\n        this.label_mouseover = function(d) {\n            // d3.select(this).style('fill', 'rgb(56, 56, 184)');\n        };\n        this.label_mouseout = function(d) {\n            // d3.select(this).style('fill', null);\n        };\n    } else {\n        this.label_mousedown = null;\n        this.label_mouseover = null;\n        this.label_mouseout = null;\n        this.map.sel.select('.node-label,.reaction-label')\n            .style('fill', null);\n    }\n}\n\nfunction toggle_bezier_drag(on_off) {\n    /** With no argument, toggle the bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.bezier_drag===this.empty_behavior;\n    if (on_off) {\n        this.bezier_drag = this._get_bezier_drag(this.map);\n        this.bezier_mouseover = function(d) {\n            d3.select(this).style('stroke-width', String(3)+'px');\n        };\n        this.bezier_mouseout = function(d) {\n            d3.select(this).style('stroke-width', String(1)+'px');\n        };\n    } else {\n        this.bezier_drag = this.empty_behavior;\n        this.bezier_mouseover = null;\n        this.bezier_mouseout = null;\n    }\n}\n\nfunction turn_off_drag(sel) {\n    sel.on('mousedown.drag', null);\n    sel.on('touchstart.drag', null);\n}\n\nfunction _get_selectable_drag(map, undo_stack) {\n    /** Drag the selected nodes and text labels.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        the_timeout = null,\n        total_displacement = null,\n        // for nodes\n        node_ids_to_drag = null,\n        reaction_ids = null,\n        // for text labels\n        text_label_ids_to_drag = null,\n        move_label = function(text_label_id, displacement) {\n            var text_label = map.text_labels[text_label_id];\n            text_label.x = text_label.x + displacement.x;\n            text_label.y = text_label.y + displacement.y;\n        };\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners (e.g. nodes BELOW this one)\n        d3.event.sourceEvent.stopPropagation();\n        // remember the total displacement for later\n        // total_displacement = {};\n        total_displacement = {x: 0, y: 0};\n\n        // If a text label is selected, the rest is not necessary\n        if (d3.select(this).attr('class').indexOf('label') == -1) {\n            // Note that dragstart is called even for a click event\n            var data = this.parentNode.__data__,\n                bigg_id = data.bigg_id,\n                node_group = this.parentNode;\n            // Move element to back (for the next step to work). Wait 200ms\n            // before making the move, becuase otherwise the element will be\n            // deleted before the click event gets called, and selection\n            // will stop working.\n            the_timeout = setTimeout(function() {\n                node_group.parentNode.insertBefore(node_group,node_group.parentNode.firstChild);\n            }, 200);\n            // prepare to combine metabolites\n            map.sel.selectAll('.metabolite-circle')\n                .on('mouseover.combine', function(d) {\n                    if (d.bigg_id==bigg_id && d.node_id!=data.node_id) {\n                        d3.select(this).style('stroke-width', String(12)+'px')\n                            .classed('node-to-combine', true);\n                    }\n                }).on('mouseout.combine', function(d) {\n                    if (d.bigg_id==bigg_id) {\n                        map.sel.selectAll('.node-to-combine').style('stroke-width', String(2)+'px')\n                            .classed('node-to-combine', false);\n                    }\n                });\n        }\n    });\n    behavior.on(\"drag\", function(d) {\n        // if this node is not already selected, then select this one and\n        // deselect all other nodes. Otherwise, leave the selection alone.\n        if (!d3.select(this.parentNode).classed('selected'))\n            map.select_selectable(this, d);\n\n        // get the grabbed id\n        var grabbed = {};\n        if (d3.select(this).attr('class').indexOf('label') === -1) {\n            // if it is a node\n            grabbed['type'] = 'node';\n            grabbed['id'] = this.parentNode.__data__.node_id;\n        } else {\n            // if it is a text label\n            grabbed['type'] = 'label';\n            grabbed['id'] = this.__data__.text_label_id;\n        }\n\n        var selected_node_ids = map.get_selected_node_ids(),\n            selected_text_label_ids = map.get_selected_text_label_ids();\n        node_ids_to_drag = []; text_label_ids_to_drag = [];\n        // choose the nodes and text labels to drag\n        if (grabbed['type']=='node' &&\n            selected_node_ids.indexOf(grabbed['id'])==-1) {\n            node_ids_to_drag.push(grabbed['id']);\n        } else if (grabbed['type']=='label' &&\n                   selected_text_label_ids.indexOf(grabbed['id'])==-1) {\n            text_label_ids_to_drag.push(grabbed['id']);\n        } else {\n            node_ids_to_drag = selected_node_ids;\n            text_label_ids_to_drag = selected_text_label_ids;\n        }\n        reaction_ids = [];\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy };\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        node_ids_to_drag.forEach(function(node_id) {\n            // update data\n            var node = map.nodes[node_id],\n                updated = build.move_node_and_dependents(node, node_id,\n                                                         map.reactions,\n                                                         map.beziers,\n                                                         displacement);\n            reaction_ids = utils.unique_concat([reaction_ids, updated.reaction_ids]);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        text_label_ids_to_drag.forEach(function(text_label_id) {\n            move_label(text_label_id, displacement);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        // draw\n        map.draw_these_nodes(node_ids_to_drag);\n        map.draw_these_reactions(reaction_ids);\n        map.draw_these_text_labels(text_label_ids_to_drag);\n    });\n    behavior.on(\"dragend\", function() {\n        if (node_ids_to_drag===null) {\n            // Dragend can be called when drag has not been called. In this,\n            // case, do nothing.\n            total_displacement = null;\n            node_ids_to_drag = null;\n            text_label_ids_to_drag = null;\n            reaction_ids = null;\n            the_timeout = null;\n            return;\n        }\n        // look for mets to combine\n        var node_to_combine_array = [];\n        map.sel.selectAll('.node-to-combine').each(function(d) {\n            node_to_combine_array.push(d.node_id);\n        });\n        if (node_to_combine_array.length==1) {\n            // If a node is ready for it, combine nodes\n            var fixed_node_id = node_to_combine_array[0],\n                dragged_node_id = this.parentNode.__data__.node_id,\n                saved_dragged_node = utils.clone(map.nodes[dragged_node_id]),\n                segment_objs_moved_to_combine = combine_nodes_and_draw(fixed_node_id,\n                                                                       dragged_node_id);\n            undo_stack.push(function() {\n                // undo\n                // put the old node back\n                map.nodes[dragged_node_id] = saved_dragged_node;\n                var fixed_node = map.nodes[fixed_node_id],\n                    updated_reactions = [];\n                segment_objs_moved_to_combine.forEach(function(segment_obj) {\n                    var segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                    if (segment.from_node_id==fixed_node_id) {\n                        segment.from_node_id = dragged_node_id;\n                    } else if (segment.to_node_id==fixed_node_id) {\n                        segment.to_node_id = dragged_node_id;\n                    } else {\n                        console.error('Segment does not connect to fixed node');\n                    }\n                    // removed this segment_obj from the fixed node\n                    fixed_node.connected_segments = fixed_node.connected_segments.filter(function(x) {\n                        return !(x.reaction_id==segment_obj.reaction_id && x.segment_id==segment_obj.segment_id);\n                    });\n                    if (updated_reactions.indexOf(segment_obj.reaction_id)==-1)\n                        updated_reactions.push(segment_obj.reaction_id);\n                });\n                map.draw_these_nodes([dragged_node_id]);\n                map.draw_these_reactions(updated_reactions);\n            }, function () {\n                // redo\n                combine_nodes_and_draw(fixed_node_id, dragged_node_id);\n            });\n\n        } else {\n            // otherwise, drag node\n\n            // add to undo/redo stack\n            // remember the displacement, dragged nodes, and reactions\n            var saved_displacement = utils.clone(total_displacement),\n                // BUG TODO this variable disappears!\n                // Happens sometimes when you drag a node, then delete it, then undo twice\n                saved_node_ids = utils.clone(node_ids_to_drag),\n                saved_text_label_ids = utils.clone(text_label_ids_to_drag),\n                saved_reaction_ids = utils.clone(reaction_ids);\n            undo_stack.push(function() {\n                // undo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   utils.c_times_scalar(saved_displacement, -1));\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id,\n                               utils.c_times_scalar(saved_displacement, -1));\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            }, function () {\n                // redo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   saved_displacement);\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id, saved_displacement);\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            });\n        }\n\n        // stop combining metabolites\n        map.sel.selectAll('.metabolite-circle')\n            .on('mouseover.combine', null)\n            .on('mouseout.combine', null);\n\n        // clear the timeout\n        clearTimeout(the_timeout);\n\n        // clear the shared variables\n        total_displacement = null;\n        node_ids_to_drag = null;\n        text_label_ids_to_drag = null;\n        reaction_ids = null;\n        the_timeout = null;\n    });\n    return behavior;\n\n    // definitions\n    function combine_nodes_and_draw(fixed_node_id, dragged_node_id) {\n        var dragged_node = map.nodes[dragged_node_id],\n            fixed_node = map.nodes[fixed_node_id],\n            updated_segment_objs = [];\n        dragged_node.connected_segments.forEach(function(segment_obj) {\n            // change the segments to reflect\n            var segment;\n            try {\n                segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segment ' + segment_obj.segment_id);\n                return;\n            }\n            if (segment.from_node_id==dragged_node_id) segment.from_node_id = fixed_node_id;\n            else if (segment.to_node_id==dragged_node_id) segment.to_node_id = fixed_node_id;\n            else {\n                console.error('Segment does not connect to dragged node');\n                return;\n            }\n            // moved segment_obj to fixed_node\n            fixed_node.connected_segments.push(segment_obj);\n            updated_segment_objs.push(utils.clone(segment_obj));\n            return;\n        });\n        // delete the old node\n        map.delete_node_data([dragged_node_id]);\n        // turn off the class\n        map.sel.selectAll('.node-to-combine').classed('node-to-combine', false);\n        // draw\n        map.draw_everything();\n        // return for undo\n        return updated_segment_objs;\n    }\n}\nfunction _get_bezier_drag(map) {\n    var move_bezier = function(reaction_id, segment_id, bez, bezier_id, displacement) {\n        var segment = map.reactions[reaction_id].segments[segment_id];\n        segment[bez] = utils.c_plus_c(segment[bez], displacement);\n        map.beziers[bezier_id].x = segment[bez].x;\n        map.beziers[bezier_id].y = segment[bez].y;\n    },\n        start_fn = function(d) {\n            d.dragging = true;\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        end_fn = function(d) {\n            d.dragging = false;\n        },\n        undo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_reaction_label_drag(map) {\n    var move_label = function(reaction_id, displacement) {\n        var reaction = map.reactions[reaction_id];\n        reaction.label_x = reaction.label_x + displacement.x;\n        reaction.label_y = reaction.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.reaction_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_node_label_drag(map) {\n    var move_label = function(node_id, displacement) {\n        var node = map.nodes[node_id];\n        node.label_x = node.label_x + displacement.x;\n        node.label_y = node.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.node_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_nodes([d.node_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\n\nfunction _get_generic_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn\n\n     undo_fn\n\n     redo_fn\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_displacement,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_displacement = { x: 0, y: 0 };\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] };\n\n        // remember the displacement\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        drag_fn(d, displacement, total_displacement, location);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_displacement = utils.clone(total_displacement), // BUG TODO this variable disappears!\n            saved_location = { x: d3.mouse(rel)[0],\n                               y: d3.mouse(rel)[1] };\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_displacement, saved_location);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_displacement, saved_location);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n\nfunction _get_generic_angular_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                   get_center, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo. Supplies angles in\n     place of displacements.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn:\n\n     undo_fn:\n\n     redo_fn:\n\n     get_center:\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_angle,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_angle = 0;\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] },\n            center = get_center(),\n            angle = utils.angle_for_event(displacement,\n                                          location,\n                                          center);\n        // remember the displacement\n        total_angle = total_angle + angle;\n        drag_fn(d, angle, total_angle, center);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_angle = total_angle,\n            saved_center = utils.clone(get_center());\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_angle, saved_center);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_angle, saved_center);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n","/** Brush. Define a brush to select elements in a map.\n\n Arguments\n ---------\n\n selection: A d3 selection to place the brush in.\n\n is_enabled: Whether to turn the brush on.\n\n map: An instance of escher.Map.\n\n insert_after: A d3 selector string to choose the svg element that the brush\n will be inserted after. Often a canvas element (e.g. '.canvas-group').\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Brush = utils.make_class();\nBrush.prototype = {\n    init: init,\n    toggle: toggle,\n    setup_selection_brush: setup_selection_brush\n};\nmodule.exports = Brush;\n\n\n// definitions\nfunction init(selection, is_enabled, map, insert_after) {\n    this.brush_sel = selection.append('g')\n        .attr('id', 'brush-container');\n    var node = this.brush_sel.node(),\n        insert_before_node = selection.select(insert_after).node().nextSibling;\n    if (!(node===insert_before_node))\n        node.parentNode.insertBefore(node, insert_before_node);\n    this.enabled = is_enabled;\n    this.map = map;\n};\n\nfunction brush_is_enabled() {\n    /** Returns a boolean for the on/off status of the brush\n\n     */\n    return this.map.sel.select('.brush').empty();\n}\nfunction toggle(on_off) {\n    /** Turn the brush on or off\n\n     */\n    if (on_off===undefined) on_off = !this.enabled;\n\n    if (on_off) {\n        this.selection_brush = this.setup_selection_brush();\n    } else {\n        this.brush_sel.selectAll('.brush').remove();\n    }\n}\nfunction setup_selection_brush() {\n    var selection = this.brush_sel,\n        selectable_selection = this.map.sel.selectAll('#nodes,#text-labels'),\n        size_and_location = this.map.canvas.size_and_location(),\n        width = size_and_location.width,\n        height = size_and_location.height,\n        x = size_and_location.x,\n        y = size_and_location.y;\n\n    // clear existing brush\n    selection.selectAll('g').remove();\n\n    var brush_fn = d3.svg.brush()\n            .x(d3.scale.identity().domain([x, x+width]))\n            .y(d3.scale.identity().domain([y, y+height]))\n            .on(\"brush\", function() {\n                var shift_key_on = d3.event.sourceEvent.shiftKey,\n                    extent = d3.event.target.extent(),\n                    selection;\n                if (shift_key_on) {\n                    // when shift is pressed, ignore the currently selected nodes\n                    selection = selectable_selection\n                        .selectAll('.node:not(.selected),.text-label:not(.selected)');\n                } else {\n                    // otherwise, brush all nodes\n                    selection = selectable_selection\n                        .selectAll('.node,.text-label');\n                }\n                selection.classed(\"selected\", function(d) {\n                    var sx = d.x, sy = d.y;\n                    return extent[0][0] <= sx && sx < extent[1][0]\n                        && extent[0][1] <= sy && sy < extent[1][1];\n                });\n            })\n            .on(\"brushend\", function() {\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);\n            }),\n        brush = selection.append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(brush_fn);\n\n    // turn off the mouse crosshair\n    selection.selectAll('.background')\n        .classed('cursor-grab', false)\n        .classed('cursor-grabbing', false)\n        .style('cursor', null);\n\n    return brush;\n}\n","/** BuildInput\n\n Arguments\n ---------\n\n selection: A d3 selection for the BuildInput.\n\n map: A Map instance.\n\n zoom_container: A ZoomContainer instance.\n\n settings: A Settings instance.\n\n  */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar completely = require('./complete.ly');\nvar DirectionArrow = require('./DirectionArrow');\nvar CobraModel = require('./CobraModel');\n\nvar _ = require('underscore');\n\n\nvar BuildInput = utils.make_class();\nBuildInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    toggle: toggle,\n    show_dropdown: show_dropdown,\n    hide_dropdown: hide_dropdown,\n    place_at_selected: place_at_selected,\n    place: place,\n    reload_at_selected: reload_at_selected,\n    reload: reload,\n    toggle_start_reaction_listener: toggle_start_reaction_listener,\n    hide_target: hide_target,\n    show_target: show_target\n};\nmodule.exports = BuildInput;\n\n\nfunction init(selection, map, zoom_container, settings) {\n    // set up container\n    var new_sel = selection.append('div').attr('id', 'rxn-input');\n    this.placed_div = PlacedDiv(new_sel, map, {x: 240, y: 0});\n    this.placed_div.hide();\n\n    // set up complete.ly\n    var c = completely(new_sel.node(), { backgroundColor: '#eee' });\n\n    d3.select(c.input);\n    this.completely = c;\n    // close button\n    new_sel.append('button').attr('class', \"button input-close-button\")\n        .text(\"×\")\n        .on('mousedown', function() { this.hide_dropdown(); }.bind(this));\n\n    // map\n    this.map = map;\n    // set up the reaction direction arrow\n    var default_angle = 90; // degrees\n    this.direction_arrow = new DirectionArrow(map.sel);\n    this.direction_arrow.set_rotation(default_angle);\n    this.setup_map_callbacks(map);\n\n    // zoom container\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n\n    // settings\n    this.settings = settings;\n\n    // toggle off\n    this.toggle(false);\n    this.target_coords = null;\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('select_metabolite_with_id.input', function(selected_node, coords) {\n        if (this.is_active) {\n            this.reload(selected_node, coords, false);\n            this.show_dropdown(coords);\n        }\n        this.hide_target();\n    }.bind(this));\n    map.callback_manager.set('select_selectable.input', function(count, selected_node, coords) {\n        this.hide_target();\n        if (count == 1 && this.is_active && coords) {\n            this.reload(selected_node, coords, false);\n            this.show_dropdown(coords);\n        } else {\n            this.toggle(false);\n        }\n    }.bind(this));\n    map.callback_manager.set('deselect_nodes', function() {\n        this.direction_arrow.hide();\n        this.hide_dropdown();\n    }.bind(this));\n\n    // svg export\n    map.callback_manager.set('before_svg_export', function() {\n        this.direction_arrow.hide();\n        this.hide_target();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.input', function() {\n        if (this.is_active) {\n            this.place_at_selected();\n        }\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n    if (this.is_active) {\n        this.toggle_start_reaction_listener(true);\n        if (_.isNull(this.target_coords))\n            this.reload_at_selected();\n        else\n            this.placed_div.place(this.target_coords);\n        this.show_dropdown();\n        this.map.set_status('Click on the canvas or an existing metabolite');\n        this.direction_arrow.show();\n    } else {\n        this.toggle_start_reaction_listener(false);\n        this.hide_dropdown();\n        this.map.set_status(null);\n        this.direction_arrow.hide();\n    }\n}\n\nfunction show_dropdown(coords) {\n    // escape key\n    this.clear_escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this.hide_dropdown();\n        }.bind(this), true);\n    // dropdown\n    this.completely.input.blur();\n    this.completely.repaint();\n    this.completely.setText('');\n    this.completely.input.focus();\n}\n\nfunction hide_dropdown() {\n    // escape key\n    if (this.clear_escape) this.clear_escape();\n    this.clear_escape = null;\n    // dropdown\n    this.placed_div.hide();\n    this.completely.input.blur();\n    this.completely.hideDropDown();\n}\n\nfunction place_at_selected() {\n    /** Place autocomplete box at the first selected node. */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    this.place(coords);\n}\n\nfunction place(coords) {\n    this.placed_div.place(coords);\n    this.direction_arrow.set_location(coords);\n    this.direction_arrow.show();\n}\n\nfunction reload_at_selected() {\n    /** Reload data for autocomplete box and redraw box at the first selected\n     node. */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return false;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    // reload the reaction input\n    this.reload(selected_node, coords, false);\n    return true;\n}\n\nfunction reload(selected_node, coords, starting_from_scratch) {\n    /** Reload data for autocomplete box and redraw box at the new\n     coordinates. */\n\n    // try finding the selected node\n    if (!starting_from_scratch && !selected_node) {\n        console.error('No selected node, and not starting from scratch');\n        return;\n    }\n\n    this.place(coords);\n\n    if (this.map.cobra_model===null) {\n        this.completely.setText('Cannot add: No model.');\n        return;\n    }\n\n    // settings\n    var show_names = this.settings.get_option('identifiers_on_map') == 'name',\n        allow_duplicates = this.settings.get_option('allow_building_duplicate_reactions');\n\n    // Find selected\n    var options = [],\n        cobra_reactions = this.map.cobra_model.reactions,\n        cobra_metabolites = this.map.cobra_model.metabolites,\n        reactions = this.map.reactions,\n        has_data_on_reactions = this.map.has_data_on_reactions,\n        reaction_data = this.map.reaction_data,\n        reaction_data_styles = this.map.reaction_data_styles,\n        selected_m_name = (selected_node ? (show_names ? selected_node.name : selected_node.bigg_id) : ''),\n        bold_mets_in_str = function(str, mets) {\n            return str.replace(new RegExp('(^| )(' + mets.join('|') + ')($| )', 'g'),\n                               '$1<b>$2</b>$3');\n        };\n\n    // for reactions\n    var reaction_suggestions = {};\n    for (var bigg_id in cobra_reactions) {\n        var reaction = cobra_reactions[bigg_id],\n            reaction_name = reaction.name,\n            show_r_name = (show_names ? reaction_name : bigg_id);\n\n        // ignore drawn reactions\n        if ((!allow_duplicates) && already_drawn(bigg_id, reactions))\n            continue;\n\n        // check segments for match to selected metabolite\n        for (var met_bigg_id in reaction.metabolites) {\n\n            // if starting with a selected metabolite, check for that id\n            if (starting_from_scratch || met_bigg_id == selected_node.bigg_id) {\n\n                // don't add suggestions twice\n                if (bigg_id in reaction_suggestions) continue;\n\n                var met_name = cobra_metabolites[met_bigg_id].name;\n\n                if (has_data_on_reactions) {\n                    options.push({ reaction_data: reaction.data,\n                                   html: ('<b>' + show_r_name + '</b>' +\n                                          ': ' +\n                                          reaction.data_string),\n                                   matches: [show_r_name],\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                } else {\n                    // get the metabolite names or IDs\n                    var mets = {},\n                        show_met_names = [],\n                        met_id;\n                    if (show_names) {\n                        for (met_id in reaction.metabolites) {\n                            var name = cobra_metabolites[met_id].name;\n                            mets[name] = reaction.metabolites[met_id];\n                            show_met_names.push(name);\n                        }\n                    } else {\n                        mets = utils.clone(reaction.metabolites);\n                        for (met_id in reaction.metabolites) {\n                            show_met_names.push(met_id);\n                        }\n                    }\n                    var show_gene_names = _.flatten(reaction.genes.map(function(g_obj) {\n                        return [g_obj.name, g_obj.bigg_id];\n                    }));\n                    console.log(show_gene_names);\n                    // get the reaction string\n                    var reaction_string = CobraModel.build_reaction_string(mets,\n                                                                           reaction.reversibility,\n                                                                           reaction.lower_bound,\n                                                                           reaction.upper_bound);\n                    options.push({ html: ('<b>' + show_r_name + '</b>' +\n                                          '\\t' +\n                                          bold_mets_in_str(reaction_string, [selected_m_name])),\n                                   matches: [show_r_name].concat(show_met_names).concat(show_gene_names),\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                }\n            }\n        }\n    }\n\n    // Generate the array of reactions to suggest and sort it\n    var sort_fn;\n    if (has_data_on_reactions) {\n        sort_fn = function(x, y) {\n            return Math.abs(y.reaction_data) - Math.abs(x.reaction_data);\n        };\n    } else {\n        sort_fn = function(x, y) {\n            return (x.html.toLowerCase() < y.html.toLowerCase() ? -1 : 1);\n        };\n    }\n    options = options.sort(sort_fn);\n    // set up the box with data\n    var complete = this.completely;\n    complete.options = options;\n\n    // TODO test this behavior\n    // if (strings_to_display.length==1) complete.setText(strings_to_display[0]);\n    // else complete.setText(\"\");\n    complete.setText('');\n\n    var direction_arrow = this.direction_arrow,\n        check_and_build = function(id) {\n            if (id !== null) {\n                // make sure the selected node exists, in case changes were made in the meantime\n                if (starting_from_scratch) {\n                    this.map.new_reaction_from_scratch(id,\n                                                       coords,\n                                                       direction_arrow.get_rotation());\n                } else {\n                    if (!(selected_node.node_id in this.map.nodes)) {\n                        console.error('Selected node no longer exists');\n                        this.hide_dropdown();\n                        return;\n                    }\n                    this.map.new_reaction_for_metabolite(id,\n                                                         selected_node.node_id,\n                                                         direction_arrow.get_rotation());\n                }\n            }\n        }.bind(this);\n    complete.onEnter = function(id) {\n        this.setText('');\n        this.onChange('');\n        check_and_build(id);\n    };\n\n    //definitions\n    function already_drawn(bigg_id, reactions) {\n        for (var drawn_id in reactions) {\n            if (reactions[drawn_id].bigg_id==bigg_id)\n                return true;\n        }\n        return false;\n    };\n}\n\nfunction toggle_start_reaction_listener(on_off) {\n    /** Toggle listening for a click to place a new reaction on the canvas. */\n    if (on_off===undefined)\n        this.start_reaction_listener = !this.start_reaction_listener;\n    else if (this.start_reaction_listener==on_off)\n        return;\n    else\n        this.start_reaction_listener = on_off;\n\n    if (this.start_reaction_listener) {\n        this.map.sel.on('click.start_reaction', function(node) {\n            // TODO fix this hack\n            if (this.direction_arrow.dragging) return;\n            // reload the reaction input\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            // unselect metabolites\n            this.map.deselect_nodes();\n            this.map.deselect_text_labels();\n            // reload the reaction input\n            this.reload(null, coords, true);\n            // generate the target symbol\n            this.show_target(this.map, coords);\n            // show the dropdown\n            this.show_dropdown(coords);\n        }.bind(this, this.map.sel.node()));\n        this.map.sel.classed('start-reaction-cursor', true);\n    } else {\n        this.map.sel.on('click.start_reaction', null);\n        this.map.sel.classed('start-reaction-cursor', false);\n        this.hide_target();\n    }\n}\n\nfunction hide_target() {\n    if (this.target_coords)\n        this.map.sel.selectAll('.start-reaction-target').remove();\n    this.target_coords = null;\n}\n\nfunction show_target(map, coords) {\n    var s = map.sel.selectAll('.start-reaction-target').data([12, 5]);\n    s.enter().append('circle')\n        .classed('start-reaction-target', true)\n        .attr('r', function(d) { return d; })\n        .style('stroke-width', 4);\n    s.style('visibility', 'visible')\n        .attr('transform', 'translate('+coords.x+','+coords.y+')');\n    this.target_coords = coords;\n}\n","/** For documentation of this class, see docs/javascript_api.rst\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar BuildInput = require('./BuildInput');\nvar ZoomContainer = require('./ZoomContainer');\nvar Map = require('./Map');\nvar CobraModel = require('./CobraModel');\nvar Brush = require('./Brush');\nvar CallbackManager = require('./CallbackManager');\nvar ui = require('./ui');\nvar SearchBar = require('./SearchBar');\nvar Settings = require('./Settings');\nvar SettingsMenu = require('./SettingsMenu');\nvar TextEditInput = require('./TextEditInput');\nvar QuickJump = require('./QuickJump');\nvar data_styles = require('./data_styles');\nvar builder_embed = require('./inline').builder_embed;\n\n\nvar Builder = utils.make_class();\nBuilder.prototype = {\n    init: init,\n    load_map: load_map,\n    load_model: load_model,\n    _set_mode: _set_mode,\n    view_mode: view_mode,\n    build_mode: build_mode,\n    brush_mode: brush_mode,\n    zoom_mode: zoom_mode,\n    rotate_mode: rotate_mode,\n    text_mode: text_mode,\n    set_reaction_data: set_reaction_data,\n    set_metabolite_data: set_metabolite_data,\n    set_gene_data: set_gene_data,\n    _update_data: _update_data,\n    _toggle_direction_buttons: _toggle_direction_buttons,\n    _setup_menu: _setup_menu,\n    _setup_simple_zoom_buttons: _setup_simple_zoom_buttons,\n    _setup_status: _setup_status,\n    _setup_quick_jump: _setup_quick_jump,\n    _setup_modes: _setup_modes,\n    _get_keys: _get_keys,\n    _setup_confirm_before_exit: _setup_confirm_before_exit\n};\nmodule.exports = Builder;\n\n\nfunction init(map_data, model_data, embedded_css, selection, options) {\n\n    // defaults\n    if (!selection)\n        selection = d3.select('body').append('div');\n    if (!options)\n        options = {};\n    if (!embedded_css)\n        embedded_css = builder_embed;\n\n    this.map_data = map_data;\n    this.model_data = model_data;\n    this.embedded_css = embedded_css;\n    this.selection = selection;\n\n    // apply this object as data for the selection\n    this.selection.datum(this);\n\n    // set defaults\n    this.options = utils.set_options(options, {\n        // view options\n        menu: 'all',\n        scroll_behavior: 'pan',\n        use_3d_transform: !utils.check_browser('safari'),\n        enable_editing: true,\n        enable_keys: true,\n        enable_search: true,\n        fill_screen: false,\n        zoom_to_element: null,\n        // map, model, and styles\n        starting_reaction: null,\n        never_ask_before_quit: false,\n        unique_map_id: null,\n        primary_metabolite_radius: 20,\n        secondary_metabolite_radius: 10,\n        marker_radius: 5,\n        gene_font_size: 18,\n        hide_secondary_metabolites: false,\n        show_gene_reaction_rules: false,\n        hide_all_labels: false,\n        // applied data\n        // reaction\n        reaction_data: null,\n        reaction_styles: ['color', 'size', 'text'],\n        reaction_compare_style: 'log2_fold',\n        reaction_scale: [{ type: 'min', color: '#c8c8c8', size: 12 },\n                         { type: 'median', color: '#9696ff', size: 20 },\n                         { type: 'max', color: '#ff0000', size: 25 }],\n        reaction_no_data_color: '#dcdcdc',\n        reaction_no_data_size: 8,\n        // gene\n        gene_data: null,\n        and_method_in_gene_reaction_rule: 'mean',\n        // metabolite\n        metabolite_data: null,\n        metabolite_styles: ['color', 'size', 'text'],\n        metabolite_compare_style: 'log2_fold',\n        metabolite_scale: [ { type: 'min', color: '#fffaf0', size: 20 },\n                            { type: 'median', color: '#f1c470', size: 30 },\n                            { type: 'max', color: '#800000', size: 40 } ],\n        metabolite_no_data_color: '#ffffff',\n        metabolite_no_data_size: 10,\n        // View and build options\n        identifiers_on_map: 'bigg_id',\n        highlight_missing: false,\n        allow_building_duplicate_reactions: false,\n        // Callbacks\n        first_load_callback: null\n    }, {\n        primary_metabolite_radius: true,\n        secondary_metabolite_radius: true,\n        marker_radius: true,\n        gene_font_size: true,\n        reaction_no_data_size: true,\n        metabolite_no_data_size: true\n    });\n\n    // check the location\n    if (utils.check_for_parent_tag(this.selection, 'svg')) {\n        throw new Error('Builder cannot be placed within an svg node '+\n                        'becuase UI elements are html-based.');\n    }\n\n    // Initialize the settings\n    var set_option = function(option, new_value) {\n        this.options[option] = new_value;\n    }.bind(this),\n        get_option = function(option) {\n            return this.options[option];\n        }.bind(this),\n        // the options that are erased when the settings menu is canceled\n        conditional_options = ['hide_secondary_metabolites', 'show_gene_reaction_rules',\n                               'hide_all_labels', 'scroll_behavior', 'reaction_styles',\n                               'reaction_compare_style', 'reaction_scale',\n                               'reaction_no_data_color', 'reaction_no_data_size',\n                               'and_method_in_gene_reaction_rule', 'metabolite_styles',\n                               'metabolite_compare_style', 'metabolite_scale',\n                               'metabolite_no_data_color', 'metabolite_no_data_size',\n                               'identifiers_on_map', 'highlight_missing',\n                               'allow_building_duplicate_reactions',];\n    this.settings = new Settings(set_option, get_option, conditional_options);\n\n    // check the scales have max and min\n    ['reaction_scale', 'metabolite_scale'].forEach(function(name) {\n        this.settings.streams[name].onValue(function(val) {\n            ['min', 'max'].forEach(function(type) {\n                var has = val.reduce(function(has_found, scale_el) {\n                    return has_found || (scale_el.type == type);\n                }, false);\n                if (!has) {\n                    val.push({ type: type, color: '#ffffff', size: 10 });\n                    this.settings.set_conditional(name, val);\n                }\n            }.bind(this));\n        }.bind(this));\n    }.bind(this));\n    // TODO warn about repeated types in the scale\n\n    // set up this callback manager\n    this.callback_manager = CallbackManager();\n    if (this.options.first_load_callback !== null)\n        this.callback_manager.set('first_load', this.options.first_load_callback);\n\n    // load the model, map, and update data in both\n    this.load_model(this.model_data, false);\n    this.load_map(this.map_data, false);\n    this._update_data(true, true);\n\n    // setting callbacks\n    // TODO enable atomic updates. Right now, every time\n    // the menu closes, everything is drawn.\n    this.settings.status_bus\n        .onValue(function(x) {\n            if (x === 'accepted') {\n                this._update_data(true, true, ['reaction', 'metabolite'], false);\n                if (this.zoom_container !== null) {\n                    var new_behavior = this.settings.get_option('scroll_behavior');\n                    this.zoom_container.set_scroll_behavior(new_behavior);\n                }\n                if (this.map !== null) {\n                    this.map.draw_all_nodes(false);\n                    this.map.draw_all_reactions(true, false);\n                }\n            }\n        }.bind(this));\n\n    this.callback_manager.run('first_load', this);\n}\n\nfunction load_model(model_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Check the cobra model\n    if (model_data === null)\n        this.cobra_model = null;\n    else\n        this.cobra_model = CobraModel.from_cobra_json(model_data);\n\n    if (this.map) {\n        this.map.cobra_model = this.cobra_model;\n        if (should_update_data)\n            this._update_data(true, false);\n        if (this.settings.get_option('highlight_missing'))\n            this.map.draw_all_reactions(false, false);\n    }\n\n    this.callback_manager.run('load_model', null, model_data, should_update_data);\n}\n\nfunction load_map(map_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst\n\n     */\n\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Begin with some definitions\n    var selectable_mousedown_enabled = true,\n        shift_key_on = false;\n\n    // remove the old builder\n    utils.remove_child_nodes(this.selection);\n\n    // set up the zoom container\n    this.zoom_container = new ZoomContainer(this.selection,\n                                            this.options.scroll_behavior,\n                                            this.options.use_3d_transform,\n                                            this.options.fill_screen);\n    var zoomed_sel = this.zoom_container.zoomed_sel;\n    var svg = this.zoom_container.svg;\n\n    if (map_data!==null) {\n        // import map\n        this.map = Map.from_data(map_data,\n                                 svg,\n                                 this.embedded_css,\n                                 zoomed_sel,\n                                 this.zoom_container,\n                                 this.settings,\n                                 this.cobra_model,\n                                 this.options.enable_search);\n    } else {\n        // new map\n        this.map = new Map(svg,\n                           this.embedded_css,\n                           zoomed_sel,\n                           this.zoom_container,\n                           this.settings,\n                           this.cobra_model,\n                           null,\n                           this.options.enable_search);\n    }\n    // zoom container status changes\n    this.zoom_container.callback_manager.set('svg_start', function() {\n        this.map.set_status('Drawing ...');\n    }.bind(this));\n    this.zoom_container.callback_manager.set('svg_finish', function() {\n        this.map.set_status('');\n    }.bind(this));\n\n    // set the data for the map\n    if (should_update_data)\n        this._update_data(false, true);\n\n    // set up the reaction input with complete.ly\n    this.build_input = BuildInput(this.selection, this.map,\n                                  this.zoom_container, this.settings);\n\n    // set up the text edit input\n    this.text_edit_input = TextEditInput(this.selection, this.map,\n                                         this.zoom_container);\n\n    // set up the Brush\n    this.brush = new Brush(zoomed_sel, false, this.map, '.canvas-group');\n    this.map.canvas.callback_manager.set('resize', function() {\n        this.brush.toggle(true);\n    }.bind(this));\n\n    // set up the modes\n    this._setup_modes(this.map, this.brush, this.zoom_container);\n\n    var s = this.selection\n            .append('div').attr('class', 'search-menu-container')\n            .append('div').attr('class', 'search-menu-container-inline'),\n        menu_div = s.append('div'),\n        search_bar_div = s.append('div'),\n        button_div = this.selection.append('div');\n\n    // set up the search bar\n    this.search_bar = SearchBar(search_bar_div, this.map.search_index,\n                                this.map);\n    // set up the hide callbacks\n    this.search_bar.callback_manager.set('show', function() {\n        this.settings_bar.toggle(false);\n    }.bind(this));\n\n    // set up the settings\n    var settings_div = this.selection.append('div');\n    this.settings_bar = SettingsMenu(settings_div, this.settings, this.map,\n                                     function(type, on_off) {\n                                         // temporarily set the abs type, for\n                                         // previewing it in the Settings\n                                         // menu\n                                         var o = this.options[type + '_styles'];\n                                         if (on_off && o.indexOf('abs') == -1)\n                                             o.push('abs');\n                                         else if (!on_off) {\n                                             var i = o.indexOf('abs');\n                                             if (i != -1)\n                                                 this.options[type + '_styles'] = o.slice(0, i).concat(o.slice(i + 1));\n                                         }\n                                         this._update_data(false, true, type);\n                                     }.bind(this));\n    this.settings_bar.callback_manager.set('show', function() {\n        this.search_bar.toggle(false);\n    }.bind(this));\n\n    // set up key manager\n    var keys = this._get_keys(this.map, this.zoom_container,\n                              this.search_bar, this.settings_bar,\n                              this.options.enable_editing);\n    this.map.key_manager.assigned_keys = keys;\n    // tell the key manager about the reaction input and search bar\n    this.map.key_manager.input_list = [this.build_input, this.search_bar,\n                                       this.settings_bar, this.text_edit_input];\n    // make sure the key manager remembers all those changes\n    this.map.key_manager.update();\n    // turn it on/off\n    this.map.key_manager.toggle(this.options.enable_keys);\n\n    // set up menu and status bars\n    if (this.options.menu=='all') {\n        this._setup_menu(menu_div, button_div, this.map, this.zoom_container, this.map.key_manager, keys,\n                         this.options.enable_editing, this.options.enable_keys);\n    } else if (this.options.menu=='zoom') {\n        this._setup_simple_zoom_buttons(button_div, keys);\n    }\n\n    // setup selection box\n    if (this.options.zoom_to_element) {\n        var type = this.options.zoom_to_element.type,\n            element_id = this.options.zoom_to_element.id;\n        if (typeof type === 'undefined' || ['reaction', 'node'].indexOf(type) == -1)\n            throw new Error('zoom_to_element type must be \"reaction\" or \"node\"');\n        if (typeof element_id === 'undefined')\n            throw new Error('zoom_to_element must include id');\n        if (type == 'reaction')\n            this.map.zoom_to_reaction(element_id);\n        else if (type == 'node')\n            this.map.zoom_to_node(element_id);\n    } else if (map_data !== null) {\n        this.map.zoom_extent_canvas();\n    } else {\n        if (this.options.starting_reaction !== null && this.cobra_model !== null) {\n            // Draw default reaction if no map is provided\n            var size = this.zoom_container.get_size();\n            var start_coords = { x: size.width / 2,\n                                 y: size.height / 4 };\n            this.map.new_reaction_from_scratch(this.options.starting_reaction, start_coords, 90);\n            this.map.zoom_extent_nodes();\n        } else {\n            this.map.zoom_extent_canvas();\n        }\n    }\n\n    // status in both modes\n    var status = this._setup_status(this.selection, this.map);\n\n    // set up quick jump\n    this._setup_quick_jump(this.selection);\n\n    // start in zoom mode for builder, view mode for viewer\n    if (this.options.enable_editing)\n        this.zoom_mode();\n    else\n        this.view_mode();\n\n    // confirm before leaving the page\n    if (this.options.enable_editing)\n        this._setup_confirm_before_exit();\n\n    // draw\n    this.map.draw_everything();\n}\n\nfunction _set_mode(mode) {\n    this.search_bar.toggle(false);\n    // input\n    this.build_input.toggle(mode=='build');\n    this.build_input.direction_arrow.toggle(mode=='build');\n    if (this.options.menu=='all' && this.options.enable_editing)\n        this._toggle_direction_buttons(mode=='build');\n    // brush\n    this.brush.toggle(mode=='brush');\n    // zoom\n    this.zoom_container.toggle_pan_drag(mode=='zoom' || mode=='view');\n    // resize canvas\n    this.map.canvas.toggle_resize(mode=='zoom' || mode=='brush');\n    // Behavior. Be careful of the order becuase rotation and\n    // toggle_selectable_drag both use Behavior.selectable_drag.\n    if (mode == 'rotate') {\n        this.map.behavior.toggle_selectable_drag(false); // before toggle_rotation_mode\n        this.map.behavior.toggle_rotation_mode(true);\n    } else {\n        this.map.behavior.toggle_rotation_mode(mode=='rotate'); // before toggle_selectable_drag\n        this.map.behavior.toggle_selectable_drag(mode=='brush');\n    }\n    this.map.behavior.toggle_selectable_click(mode=='build' || mode=='brush');\n    this.map.behavior.toggle_label_drag(mode=='brush');\n    this.map.behavior.toggle_label_mousedown(mode=='brush');\n    this.map.behavior.toggle_text_label_edit(mode=='text');\n    this.map.behavior.toggle_bezier_drag(mode=='brush');\n    // edit selections\n    if (mode=='view' || mode=='text')\n        this.map.select_none();\n    if (mode=='rotate')\n        this.map.deselect_text_labels();\n    this.map.draw_everything();\n}\n\nfunction view_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('view_mode');\n    this._set_mode('view');\n}\n\nfunction build_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('build_mode');\n    this._set_mode('build');\n}\n\nfunction brush_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('brush_mode');\n    this._set_mode('brush');\n}\n\nfunction zoom_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('zoom_mode');\n    this._set_mode('zoom');\n}\n\nfunction rotate_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('rotate_mode');\n    this._set_mode('rotate');\n}\n\nfunction text_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('text_mode');\n    this._set_mode('text');\n}\n\nfunction set_reaction_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.reaction_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_gene_data(data, clear_gene_reaction_rules) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (clear_gene_reaction_rules) // default undefined\n        this.settings.set_conditional('show_gene_reaction_rules', false);\n    this.options.gene_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_metabolite_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.metabolite_data = data;\n    this._update_data(true, true, 'metabolite');\n    this.map.set_status('');\n}\n\nfunction _update_data(update_model, update_map, kind, should_draw) {\n    /** Set data and settings for the model.\n\n     Arguments\n     ---------\n\n     update_model: (Boolean) Update data for the model.\n\n     update_map: (Boolean) Update data for the map.\n\n     kind: (Optional, Default: all) An array defining which data is being\n     updated that can include any of: ['reaction', 'metabolite'].\n\n     should_draw: (Optional, Default: true) Whether to redraw the update\n     sections of the map.\n\n     */\n\n    // defaults\n    if (kind === undefined)\n        kind = ['reaction', 'metabolite'];\n    if (should_draw === undefined)\n        should_draw = true;\n\n    var update_metabolite_data = (kind.indexOf('metabolite') != -1),\n        update_reaction_data = (kind.indexOf('reaction') != -1),\n        met_data_object,\n        reaction_data_object,\n        gene_data_object;\n\n    // -------------------\n    // First map, and draw\n\n    // metabolite data\n    if (update_metabolite_data && update_map && this.map !== null) {\n        met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                       'metabolite_data');\n        this.map.apply_metabolite_data_to_map(met_data_object);\n        if (should_draw)\n            this.map.draw_all_nodes(false);\n    }\n\n    // reaction data\n    if (update_reaction_data) {\n        if (this.options.reaction_data !== null && update_map && this.map !== null) {\n            reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                'reaction_data');\n            this.map.apply_reaction_data_to_map(reaction_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (this.options.gene_data !== null && update_map && this.map !== null) {\n            gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                     this.cobra_model, this.map);\n            this.map.apply_gene_data_to_map(gene_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (update_map && this.map !== null) {\n            // clear the data\n            this.map.apply_reaction_data_to_map(null);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        }\n    }\n\n    // ----------------------------------------------------------------\n    // Then the model, after drawing. Delay by 5ms so the the map draws\n    // first.\n\n    // if this function runs again, cancel the previous model update\n    if (this.update_model_timer)\n        clearTimeout(this.update_model_timer);\n\n    var delay = 5;\n    this.update_model_timer = setTimeout(function() {\n\n        // metabolite_data\n        if (update_metabolite_data && update_model && this.cobra_model !== null) {\n            // if we haven't already made this\n            if (!met_data_object)\n                met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                               'metabolite_data');\n            this.cobra_model.apply_metabolite_data(met_data_object,\n                                                   this.options.metabolite_styles,\n                                                   this.options.metabolite_compare_style);\n        }\n\n        // reaction data\n        if (update_reaction_data) {\n            if (this.options.reaction_data !== null && update_model && this.cobra_model !== null) {\n                // if we haven't already made this\n                if (!reaction_data_object)\n                    reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                        'reaction_data');\n                this.cobra_model.apply_reaction_data(reaction_data_object,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            } else if (this.options.gene_data !== null && update_model && this.cobra_model !== null) {\n                if (!gene_data_object)\n                    gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                             this.cobra_model, this.map);\n                this.cobra_model.apply_gene_data(gene_data_object,\n                                                 this.options.reaction_styles,\n                                                 this.options.identifiers_on_map,\n                                                 this.options.reaction_compare_style,\n                                                 this.options.and_method_in_gene_reaction_rule);\n            } else if (update_model && this.cobra_model !== null) {\n                // clear the data\n                this.cobra_model.apply_reaction_data(null,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            }\n        }\n\n        // callback\n        this.callback_manager.run('update_data', null, update_model, update_map, kind, should_draw);\n\n    }.bind(this), delay);\n\n    // definitions\n    function make_gene_data_object(gene_data, cobra_model, map) {\n        var all_reactions = {};\n        if (cobra_model !== null)\n            utils.extend(all_reactions, cobra_model.reactions);\n        // extend, overwrite\n        if (map !== null)\n            utils.extend(all_reactions, map.reactions, true);\n\n        // this object has reaction keys and values containing associated genes\n        return data_styles.import_and_check(gene_data, 'gene_data', all_reactions);\n    }\n}\n\nfunction _setup_menu(menu_selection, button_selection, map, zoom_container,\n                     key_manager, keys, enable_editing, enable_keys) {\n    var menu = menu_selection.attr('id', 'menu')\n            .append('ul')\n            .attr('class', 'nav nav-pills');\n    // map dropdown\n    ui.dropdown_menu(menu, 'Map')\n        .button({ key: keys.save,\n                  text: 'Save map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+S)' : null) })\n        .button({ text: 'Load map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+O)' : null),\n                  input: { assign: key_manager.assigned_keys.load,\n                           key: 'fn',\n                           fn: load_map_for_file.bind(this),\n                           pre_fn: function() {\n                               map.set_status('Loading map ...');\n                           },\n                           failure_fn: function() {\n                               map.set_status('');\n                           }}\n                })\n        .button({ key: keys.save_svg,\n                  text: 'Export as SVG',\n                  key_text: (enable_keys ? ' (Ctrl+Shift+S)' : null) })\n        .button({ key: keys.clear_map,\n                  text: 'Clear map' });\n    // model dropdown\n    var model_menu = ui.dropdown_menu(menu, 'Model')\n            .button({ text: 'Load COBRA model JSON',\n                      key_text: (enable_keys ? ' (Ctrl+M)' : null),\n                      input: { assign: key_manager.assigned_keys.load_model,\n                               key: 'fn',\n                               fn: load_model_for_file.bind(this),\n                               pre_fn: function() {\n                                   map.set_status('Loading model ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               } }\n                    })\n            .button({ id: 'convert_map',\n                      key: keys.convert_map,\n                      text: 'Update names and gene reaction rules using model' })\n            .button({ id: 'clear_model',\n                      key: keys.clear_model,\n                      text: 'Clear model' });\n    // disable the clear and convert buttons\n    var disable_model_clear_convert = function() {\n        model_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if ((d.id == 'clear_model' || d.id == 'convert_map') &&\n                    this.cobra_model === null)\n                    return true;\n                return null;\n            }.bind(this));\n    }.bind(this);\n    disable_model_clear_convert();\n    this.callback_manager.set('load_model', disable_model_clear_convert);\n\n    // data dropdown\n    var data_menu = ui.dropdown_menu(menu, 'Data')\n            .button({ input: { assign: key_manager.assigned_keys.load_reaction_data,\n                               key: 'fn',\n                               fn: load_reaction_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading reaction data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load reaction data' })\n            .button({ key: keys.clear_reaction_data,\n                      text: 'Clear reaction data' })\n            .divider()\n            .button({ input: { fn: load_gene_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading gene data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load gene data' })\n            .button({ key: keys.clear_gene_data,\n                      text: 'Clear gene data' })\n            .divider()\n            .button({ input: { fn: load_metabolite_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading metabolite data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load metabolite data' })\n            .button({ key: keys.clear_metabolite_data,\n                      text: 'Clear metabolite data' });\n\n    // update the buttons\n    var disable_clears = function() {\n        data_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if (!d) return null;\n                if (d.text == 'Clear reaction data' && this.options.reaction_data === null)\n                    return true;\n                if (d.text == 'Clear gene data' && this.options.gene_data === null)\n                    return true;\n                if (d.text == 'Clear metabolite data' && this.options.metabolite_data === null)\n                    return true;\n                return null;\n            }.bind(this));\n    }.bind(this);\n    disable_clears();\n    this.callback_manager.set('update_data', disable_clears);\n\n    // edit dropdown\n    var edit_menu = ui.dropdown_menu(menu, 'Edit', true);\n    if (enable_editing) {\n        edit_menu\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-menu-button',\n                      text: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-menu-button',\n                      text: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-menu-button',\n                      text: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-menu-button',\n                      text: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-menu-button',\n                      text: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) })\n            .divider()\n            .button({ key: keys.delete,\n                      text: 'Delete',\n                      key_text: (enable_keys ? ' (Del)' : null) })\n            .button({ key: keys.undo,\n                      text: 'Undo',\n                      key_text: (enable_keys ? ' (Ctrl+Z)' : null) })\n            .button({ key: keys.redo,\n                      text: 'Redo',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+Z)' : null) })\n            .button({ key: keys.toggle_primary,\n                      text: 'Toggle primary/secondary',\n                      key_text: (enable_keys ? ' (P)' : null) })\n            .button({ key: keys.cycle_primary,\n                      text: 'Rotate reactant locations',\n                      key_text: (enable_keys ? ' (C)' : null) })\n            .button({ key: keys.select_all,\n                      text: 'Select all',\n                      key_text: (enable_keys ? ' (Ctrl+A)' : null) })\n            .button({ key: keys.select_none,\n                      text: 'Select none',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+A)' : null) })\n            .button({ key: keys.invert_selection,\n                      text: 'Invert selection' });\n    } else {\n        edit_menu.button({ key: keys.view_mode,\n                           id: 'view-mode-menu-button',\n                           text: 'View mode' });\n    }\n\n    // view dropdown\n    var view_menu = ui.dropdown_menu(menu, 'View', true)\n            .button({ key: keys.zoom_in,\n                      text: 'Zoom in',\n                      key_text: (enable_keys ? ' (Ctrl and +)' : null) })\n            .button({ key: keys.zoom_out,\n                      text: 'Zoom out',\n                      key_text: (enable_keys ? ' (Ctrl and -)' : null) })\n            .button({ key: keys.extent_nodes,\n                      text: 'Zoom to nodes',\n                      key_text: (enable_keys ? ' (Ctrl+0)' : null) })\n            .button({ key: keys.extent_canvas,\n                      text: 'Zoom to canvas',\n                      key_text: (enable_keys ? ' (Ctrl+1)' : null) })\n            .button({ key: keys.search,\n                      text: 'Find',\n                      key_text: (enable_keys ? ' (Ctrl+F)' : null) });\n    if (enable_editing) {\n        view_menu.button({ key: keys.toggle_beziers,\n                           id: 'bezier-button',\n                           text: 'Show control points',\n                           key_text: (enable_keys ? ' (B)' : null) });\n        map.callback_manager\n            .set('toggle_beziers.button', function(on_off) {\n                menu.select('#bezier-button').select('.dropdown-button-text')\n                    .text((on_off ? 'Hide' : 'Show') +\n                          ' control points' +\n                          (enable_keys ? ' (B)' : ''));\n            });\n    }\n    view_menu.divider()\n        .button({ key: keys.show_settings,\n                  text: 'Settings',\n                  key_text: (enable_keys ? ' (Ctrl+,)' : null) });\n\n    // help\n    menu.append('a')\n        .attr('class', 'help-button')\n        .attr('target', '#')\n        .attr('href', 'https://escher.readthedocs.org')\n        .text('?');\n\n    var button_panel = button_selection.append('ul')\n            .attr('class', 'nav nav-pills nav-stacked')\n            .attr('id', 'button-panel');\n\n    // buttons\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_in,\n                           icon: 'glyphicon glyphicon-plus-sign',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom in',\n                           key_text: (enable_keys ? ' (Ctrl and +)' : null) });\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_out,\n                           icon: 'glyphicon glyphicon-minus-sign',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom out',\n                           key_text: (enable_keys ? ' (Ctrl and -)' : null) });\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.extent_canvas,\n                           icon: 'glyphicon glyphicon-resize-full',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom to canvas',\n                           key_text: (enable_keys ? ' (Ctrl+1)' : null) });\n\n    // mode buttons\n    if (enable_editing) {\n        ui.radio_button_group(button_panel.append('li'))\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-button',\n                      icon: 'glyphicon glyphicon-move',\n                      tooltip: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-button',\n                      icon: 'glyphicon glyphicon-hand-up',\n                      tooltip: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-button',\n                      icon: 'glyphicon glyphicon-plus',\n                      tooltip: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-button',\n                      icon: 'glyphicon glyphicon-repeat',\n                      tooltip: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-button',\n                      icon: 'glyphicon glyphicon-font',\n                      tooltip: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) });\n\n        // arrow buttons\n        this.direction_buttons = button_panel.append('li');\n        var o = ui.button_group(this.direction_buttons)\n                .button({ key: keys.direction_arrow_left,\n                          icon: 'glyphicon glyphicon-arrow-left',\n                          tooltip: 'Direction arrow (←)' })\n                .button({ key: keys.direction_arrow_right,\n                          icon: 'glyphicon glyphicon-arrow-right',\n                          tooltip: 'Direction arrow (→)' })\n                .button({ key: keys.direction_arrow_up,\n                          icon: 'glyphicon glyphicon-arrow-up',\n                          tooltip: 'Direction arrow (↑)' })\n                .button({ key: keys.direction_arrow_down,\n                          icon: 'glyphicon glyphicon-arrow-down',\n                          tooltip: 'Direction arrow (↓)' });\n    }\n\n    // set up mode callbacks\n    var select_button = function(id) {\n        // toggle the button\n        $(this.selection.node()).find('#' + id)\n            .button('toggle');\n\n        // menu buttons\n        var ids = ['zoom-mode-menu-button', 'brush-mode-menu-button',\n                   'build-mode-menu-button', 'rotate-mode-menu-button',\n                   'view-mode-menu-button', 'text-mode-menu-button'];\n        ids.forEach(function(this_id) {\n            var b_id = this_id.replace('-menu', '');\n            this.selection.select('#' + this_id)\n                .select('span')\n                .classed('glyphicon', b_id == id)\n                .classed('glyphicon-ok', b_id == id);\n        }.bind(this));\n    };\n    this.callback_manager.set('zoom_mode', select_button.bind(this, 'zoom-mode-button'));\n    this.callback_manager.set('brush_mode', select_button.bind(this, 'brush-mode-button'));\n    this.callback_manager.set('build_mode', select_button.bind(this, 'build-mode-button'));\n    this.callback_manager.set('rotate_mode', select_button.bind(this, 'rotate-mode-button'));\n    this.callback_manager.set('view_mode', select_button.bind(this, 'view-mode-button'));\n    this.callback_manager.set('text_mode', select_button.bind(this, 'text-mode-button'));\n\n    // definitions\n    function load_map_for_file(error, map_data) {\n        /** Load a map. This reloads the whole builder.\n\n         */\n\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Error loading map: ' + error, 2000);\n            return;\n        }\n\n        try {\n            check_map(map_data);\n            this.load_map(map_data);\n            this.map.set_status('Loaded map ' + map_data[0].map_name, 3000);\n        } catch (e) {\n            console.warn(e);\n            this.map.set_status('Error loading map: ' + e, 2000);\n        }\n\n        // definitions\n        function check_map(data) {\n            /** Perform a quick check to make sure the map is mostly valid.\n\n             */\n\n            if (!('map_id' in data[0] && 'reactions' in data[1] &&\n                  'nodes' in data[1] && 'canvas' in data[1]))\n                throw new Error('Bad map data.');\n        }\n    }\n    function load_model_for_file(error, data) {\n        /** Load a cobra model. Redraws the whole map if the\n         highlight_missing option is true.\n\n         */\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Error loading model: ' + error, 2000);\n            return;\n        }\n\n        try {\n            this.load_model(data, true);\n            this.build_input.toggle(false);\n            if ('id' in data)\n                this.map.set_status('Loaded model ' + data.id, 3000);\n            else\n                this.map.set_status('Loaded model (no model id)', 3000);\n        } catch (e) {\n            console.warn(e);\n            this.map.set_status('Error loading model: ' + e, 2000);\n        }\n\n    }\n    function load_reaction_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        // turn off gene data\n        if (data !== null)\n            this.set_gene_data(null);\n\n        this.set_reaction_data(data);\n    }\n    function load_metabolite_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        this.set_metabolite_data(data);\n    }\n    function load_gene_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        // turn off reaction data\n        if (data !== null)\n            this.set_reaction_data(null);\n\n        // turn on gene_reaction_rules\n        this.settings.set_conditional('show_gene_reaction_rules', true);\n\n        this.set_gene_data(data);\n    }\n}\n\nfunction _setup_simple_zoom_buttons(button_selection, keys) {\n    var button_panel = button_selection.append('div')\n            .attr('id', 'simple-button-panel');\n\n    // buttons\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.zoom_in,\n                           text: '+',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom in (Ctrl +)' });\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.zoom_out,\n                           text: '–',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom out (Ctrl -)' });\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.extent_canvas,\n                           text: '↔',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom to canvas (Ctrl 1)' });\n\n}\n\nfunction _toggle_direction_buttons(on_off) {\n    if (on_off===undefined)\n        on_off = !this.direction_buttons.style('visibility')=='visible';\n    this.direction_buttons.style('visibility', on_off ? 'visible' : 'hidden');\n}\n\nfunction _setup_status(selection, map) {\n    var status_bar = selection.append('div').attr('id', 'status');\n    map.callback_manager.set('set_status', function(status) {\n        status_bar.html(status);\n    });\n    return status_bar;\n}\n\nfunction _setup_quick_jump(selection) {\n    // function to load a map\n    var load_fn = function(new_map_name, quick_jump_path, callback) {\n        if (this.options.enable_editing && !this.options.never_ask_before_quit) {\n            if (!(confirm(('You will lose any unsaved changes.\\n\\n' +\n                           'Are you sure you want to switch maps?')))) {\n                if (callback) callback(false);\n                return;\n            }\n        }\n        this.map.set_status('Loading map ' + new_map_name + ' ...');\n        var url = utils.name_to_url(new_map_name, quick_jump_path);\n        d3.json(url, function(error, data) {\n            if (error) {\n                console.warn('Could not load data: ' + error);\n                if (callback) callback(false);\n            }\n            // run callback before load_map so the new map has the correct\n            // quick_jump menu\n            if (callback) callback(true);\n            // now reload\n            this.load_map(data);\n            this.map.set_status('');\n        }.bind(this));\n    }.bind(this);\n\n    // make the quick jump object\n    this.quick_jump = QuickJump(selection, load_fn);\n}\n\nfunction _setup_modes(map, brush, zoom_container) {\n    // set up zoom+pan and brush modes\n    var was_enabled = {};\n    map.callback_manager.set('start_rotation', function() {\n        was_enabled.brush = brush.enabled;\n        brush.toggle(false);\n        was_enabled.zoom = zoom_container.zoom_on;\n        zoom_container.toggle_pan_drag(false);\n        was_enabled.selectable_mousedown = map.behavior.selectable_mousedown!=null;\n        map.behavior.toggle_selectable_click(false);\n        was_enabled.label_mousedown = map.behavior.label_mousedown!=null;\n        map.behavior.toggle_label_mousedown(false);\n    });\n    map.callback_manager.set('end_rotation', function() {\n        brush.toggle(was_enabled.brush);\n        zoom_container.toggle_pan_drag(was_enabled.zoom);\n        map.behavior.toggle_selectable_click(was_enabled.selectable_mousedown);\n        map.behavior.toggle_label_mousedown(was_enabled.label_mousedown);\n        was_enabled = {};\n    });\n}\n\nfunction _get_keys(map, zoom_container, search_bar, settings_bar, enable_editing) {\n    var keys = {\n        save: {\n            key: 'ctrl+s',\n            target: map,\n            fn: map.save\n        },\n        save_svg: {\n            key: 'ctrl+shift+s',\n            target: map,\n            fn: map.save_svg\n        },\n        load: {\n            key: 'ctrl+o',\n            fn: null  // defined by button\n        },\n        convert_map: {\n            target: map,\n            fn: map.convert_map\n        },\n        clear_map: {\n            target: map,\n            fn: map.clear_map\n        },\n        load_model: {\n            key: 'ctrl+m',\n            fn: null // defined by button\n        },\n        clear_model: {\n            fn: this.load_model.bind(this, null, true)\n        },\n        load_reaction_data: { fn: null }, // defined by button\n        clear_reaction_data: {\n            target: this,\n            fn: function() { this.set_reaction_data(null); }\n        },\n        load_metabolite_data: { fn: null }, // defined by button\n        clear_metabolite_data: {\n            target: this,\n            fn: function() { this.set_metabolite_data(null); }\n        },\n        load_gene_data: { fn: null }, // defined by button\n        clear_gene_data: {\n            target: this,\n            fn: function() { this.set_gene_data(null, true); }\n        },\n        zoom_in: {\n            key: 'ctrl+=',\n            target: zoom_container,\n            fn: zoom_container.zoom_in\n        },\n        zoom_out: {\n            key: 'ctrl+-',\n            target: zoom_container,\n            fn: zoom_container.zoom_out\n        },\n        extent_nodes: {\n            key: 'ctrl+0',\n            target: map,\n            fn: map.zoom_extent_nodes\n        },\n        extent_canvas: {\n            key: 'ctrl+1',\n            target: map,\n            fn: map.zoom_extent_canvas\n        },\n        search: {\n            key: 'ctrl+f',\n            fn: search_bar.toggle.bind(search_bar, true)\n        },\n        view_mode: {\n            target: this,\n            fn: this.view_mode,\n            ignore_with_input: true\n        },\n        show_settings: {\n            key: 'ctrl+,',\n            target: settings_bar,\n            fn: settings_bar.toggle\n        }\n    };\n    if (enable_editing) {\n        utils.extend(keys, {\n            build_mode: {\n                key: 'n',\n                target: this,\n                fn: this.build_mode,\n                ignore_with_input: true\n            },\n            zoom_mode: {\n                key: 'z',\n                target: this,\n                fn: this.zoom_mode,\n                ignore_with_input: true\n            },\n            brush_mode: {\n                key: 'v',\n                target: this,\n                fn: this.brush_mode,\n                ignore_with_input: true\n            },\n            rotate_mode: {\n                key: 'r',\n                target: this,\n                fn: this.rotate_mode,\n                ignore_with_input: true\n            },\n            text_mode: {\n                key: 't',\n                target: this,\n                fn: this.text_mode,\n                ignore_with_input: true\n            },\n            toggle_beziers: {\n                key: 'b',\n                target: map,\n                fn: map.toggle_beziers,\n                ignore_with_input: true\n            },\n            delete: {\n                key: 'ctrl+backspace',\n                target: map,\n                fn: map.delete_selected,\n                ignore_with_input: true\n            },\n            delete_del: {\n                key: 'del',\n                target: map,\n                fn: map.delete_selected,\n                ignore_with_input: true\n            },\n            toggle_primary: {\n                key: 'p',\n                target: map,\n                fn: map.toggle_selected_node_primary,\n                ignore_with_input: true\n            },\n            cycle_primary: {\n                key: 'c',\n                target: map,\n                fn: map.cycle_primary_node,\n                ignore_with_input: true\n            },\n            direction_arrow_right: {\n                key: 'right',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.right,\n                ignore_with_input: true\n            },\n            direction_arrow_down: {\n                key: 'down',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.down,\n                ignore_with_input: true\n            },\n            direction_arrow_left: {\n                key: 'left',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.left,\n                ignore_with_input: true\n            },\n            direction_arrow_up: {\n                key: 'up',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.up,\n                ignore_with_input: true\n            },\n            undo: {\n                key: 'ctrl+z',\n                target: map.undo_stack,\n                fn: map.undo_stack.undo\n            },\n            redo: {\n                key: 'ctrl+shift+z',\n                target: map.undo_stack,\n                fn: map.undo_stack.redo\n            },\n            select_all: {\n                key: 'ctrl+a',\n                target: map,\n                fn: map.select_all\n            },\n            select_none: {\n                key: 'ctrl+shift+a',\n                target: map,\n                fn: map.select_none\n            },\n            invert_selection: {\n                target: map,\n                fn: map.invert_selection\n            }\n        });\n    }\n    return keys;\n}\n\nfunction _setup_confirm_before_exit() {\n    /** Ask if the user wants to exit the page (to avoid unplanned refresh).\n\n     */\n\n    window.onbeforeunload = function(e) {\n        // If we haven't been passed the event get the window.event\n        e = e || window.event;\n        return  (this.options.never_ask_before_quit ? null :\n                 'You will lose any unsaved changes.');\n    }.bind(this);\n}\n","/** CallbackManager */\n\nvar utils = require('./utils');\nvar _ = require('underscore');\n\n\nvar CallbackManager = utils.make_class();\nCallbackManager.prototype = {\n    init: init,\n    set: set,\n    remove: remove,\n    run: run\n};\nmodule.exports = CallbackManager;\n\n\nfunction init() {\n\n}\n\n\nfunction set(name, fn) {\n    /** As in d3 callbacks, you can namespace your callbacks after a period:\n\n     select_metabolite.direction_arrow\n     select_metabolite.input\n\n     Both are called by select_metabolite\n\n\n     TODO add *arguments to set, as in _.defer()\n\n     */\n    if (this.callbacks===undefined) this.callbacks = {};\n    if (this.callbacks[name]===undefined) this.callbacks[name] = [];\n    this.callbacks[name].push(fn);\n\n    return this;\n}\n\n\nfunction remove(name) {\n    /** Remove a callback by name\n\n     */\n    if (this.callbacks===undefined || Object.keys(this.callbacks).length==0) {\n        console.warn('No callbacks to remove');\n    }\n    delete this.callbacks[name];\n    return this;\n}\n\n\nfunction run(name, this_arg) {\n    /** Run all callbacks that match the portion of name before the period ('.').\n\n     Arguments\n     ---------\n\n     name: The callback name, which can include a tag after a '.' to\n     specificy a particular callback.\n\n     this_arg: (Optional, Default: null) The object assigned to `this` in\n     the callback.\n\n     */\n    if (_.isUndefined(this.callbacks)) return this;\n    if (_.isUndefined(this_arg)) this_arg = null;\n    // pass all but the first (name) argument to the callback\n    var pass_args = Array.prototype.slice.call(arguments, 2);\n    // look for matching callback names\n    for (var a_name in this.callbacks) {\n        var split_name = a_name.split('.')[0];\n        if (split_name==name) {\n            this.callbacks[a_name].forEach(function(fn) {\n                fn.apply(this_arg, pass_args);\n            });\n        }\n    }\n    return this;\n}\n","/** Canvas. Defines a canvas that accepts drag/zoom events and can be resized.\n\n Canvas(selection, x, y, width, height)\n\n Adapted from http://bl.ocks.org/mccannf/1629464.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Canvas = utils.make_class();\nCanvas.prototype = {\n    init: init,\n    toggle_resize: toggle_resize,\n    setup: setup,\n    size_and_location: size_and_location\n};\nmodule.exports = Canvas;\n\n\nfunction init(selection, size_and_location) {\n    this.selection = selection;\n    this.x = size_and_location.x;\n    this.y = size_and_location.y;\n    this.width = size_and_location.width;\n    this.height = size_and_location.height;\n\n    // enable by default\n    this.resize_enabled = true;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    this.setup();\n}\n\nfunction toggle_resize(on_off) {\n    /** Turn the resize on or off\n\n     */\n    if (on_off===undefined) on_off = !this.resize_enabled;\n\n    if (on_off) {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'auto');\n    } else {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'none');\n    }\n}\n\nfunction setup() {\n    var self = this,\n        extent = {\"x\": this.width, \"y\": this.height},\n        dragbar_width = 100,\n        mouse_node_mult = 10,\n        new_sel = this.selection.append('g')\n            .classed('canvas-group', true)\n            .data([{x: this.x, y: this.y}]);\n\n    var mouse_node = new_sel.append('rect')\n            .attr('id', 'mouse-node')\n            .attr(\"width\", this.width*mouse_node_mult)\n            .attr(\"height\", this.height*mouse_node_mult)\n            .attr(\"transform\", \"translate(\"+[self.x - this.width*mouse_node_mult/2,\n                                             self.y - this.height*mouse_node_mult/2]+\")\")\n            .attr('pointer-events', 'all');\n    this.mouse_node = mouse_node;\n\n    var rect = new_sel.append('rect')\n            .attr('id', 'canvas')\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height)\n            .attr(\"transform\", \"translate(\"+[self.x, self.y]+\")\");\n\n    var drag_right = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", rdragresize),\n        drag_left = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", ldragresize),\n        drag_top = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", tdragresize),\n        drag_bottom = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", bdragresize);\n\n    var left = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"id\", \"dragleft\")\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_left);\n\n    var right = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + self.width - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragright\")\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_right);\n\n    var top = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y - (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", dragbar_width)\n            .attr(\"id\", \"dragtop\")\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_top);\n\n    var bottom = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y + self.height - (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragbottom\")\n            .attr(\"height\", dragbar_width)\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_bottom);\n\n    // definitions\n    function stop_propagation() {\n        d3.event.sourceEvent.stopPropagation();\n    }\n    function transform_string(x, y, current_transform) {\n        var tr = utils.d3_transform_catch(current_transform),\n            translate = tr.translate;\n        if (x!==null) translate[0] = x;\n        if (y!==null) translate[1] = y;\n        return 'translate('+translate+')';\n    }\n    function ldragresize(d) {\n        var oldx = d.x;\n        d.x = Math.min(d.x + self.width - (dragbar_width / 2), d3.event.x);\n        self.x = d.x;\n        self.width = self.width + (oldx - d.x);\n        left.attr(\"transform\", function(d) {\n            return transform_string(d.x - (dragbar_width / 2), null, left.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, mouse_node.attr('transform'));\n        }).attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, rect.attr('transform'));\n        }).attr(\"width\", self.width);\n        top.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, top.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, bottom.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function rdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragx = Math.max(d.x + (dragbar_width/2), d.x + self.width + d3.event.dx);\n        //recalculate width\n        self.width = dragx - d.x;\n        //move the right drag handle\n        right.attr(\"transform\", function(d) {\n            return transform_string(dragx - (dragbar_width/2), null, right.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"width\", self.width);\n        top.attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function tdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var oldy = d.y;\n        d.y = Math.min(d.y + self.height - (dragbar_width / 2), d3.event.y);\n        self.y = d.y;\n        self.height = self.height + (oldy - d.y);\n        top.attr(\"transform\", function(d) {\n            return transform_string(null, d.y - (dragbar_width / 2), top.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, mouse_node.attr('transform'));\n        }).attr(\"width\", self.height*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, rect.attr('transform'));\n        }).attr(\"height\", self.height);\n        left.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), left.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n        right.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), right.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function bdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragy = Math.max(d.y + (dragbar_width/2), d.y + self.height + d3.event.dy);\n        //recalculate width\n        self.height = dragy - d.y;\n        //move the right drag handle\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(null, dragy - (dragbar_width/2), bottom.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"height\", self.height*mouse_node_mult);\n        rect.attr(\"height\", self.height);\n        left.attr(\"height\", self.height - dragbar_width);\n        right.attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n}\n\nfunction size_and_location() {\n    return { x: this.x,\n             y: this.y,\n             width: this.width,\n             height: this.height };\n}\n","/** CobraModel\n *\n */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nvar CobraModel = utils.make_class();\n// class methods\nCobraModel.from_exported_data = from_exported_data;\nCobraModel.from_cobra_json = from_cobra_json;\nCobraModel.build_reaction_string = build_reaction_string;\n// instance methods\nCobraModel.prototype = { init: init,\n                         apply_reaction_data: apply_reaction_data,\n                         apply_metabolite_data: apply_metabolite_data,\n                         apply_gene_data: apply_gene_data,\n                         model_for_export: model_for_export };\nmodule.exports = CobraModel;\n\n// class methods\nfunction build_reaction_string(stoichiometries, is_reversible) {\n    /** Return a reaction string for the given stoichiometries.\n\n     Adapted from cobra.core.Reaction.build_reaction_string().\n\n     Arguments\n     ---------\n\n     stoichiometries: An object with metabolites as keys and\n     stoichiometries as values.\n\n     is_reversible: Boolean. Whether the reaction is reversible.\n\n     */\n\n    var format = function(number) {\n        if (number == 1)\n            return \"\";\n        return String(number) + \" \";\n    };\n    var reactant_dict = {},\n        product_dict = {},\n        reactant_bits = [],\n        product_bits = [];\n    for (var the_metabolite in stoichiometries) {\n        var coefficient = stoichiometries[the_metabolite];\n        if (coefficient > 0)\n            product_bits.push(format(coefficient) + the_metabolite);\n        else\n            reactant_bits.push(format(Math.abs(coefficient)) + the_metabolite);\n    }\n    var reaction_string = reactant_bits.join(' + ');\n    if (is_reversible) {\n        reaction_string += ' ↔ ';\n    } else {\n        reaction_string += ' → ';\n    }\n    reaction_string += product_bits.join(' + ');\n    return reaction_string;\n}\n\nfunction from_exported_data(data) {\n    /** Use data generated by CobraModel.model_for_export() to make a new\n     CobraModel object.\n\n     */\n    if (!(data.reactions && data.metabolites))\n        throw new Error('Bad model data.');\n\n    var model = new CobraModel();\n    model.reactions = data.reactions;\n    model.metabolites = data.metabolites;\n    return model;\n}\n\nfunction from_cobra_json(model_data) {\n    /** Use a JSON Cobra model exported by COBRApy to make a new CobraModel\n     object.\n\n     The COBRA \"id\" becomes a \"bigg_id\", and \"upper_bound\" and \"lower_bound\"\n     bounds become \"reversibility\".\n\n     Fills out a \"genes\" list.\n\n     */\n    // reactions and metabolites\n    if (!(model_data.reactions && model_data.metabolites))\n        throw new Error('Bad model data.');\n\n    // make a gene dictionary\n    var genes = {};\n    for (var i = 0, l = model_data.genes.length; i < l; i++) {\n        var r = model_data.genes[i],\n            the_id = r.id;\n        genes[the_id] = r;\n    }\n\n    var model = new CobraModel();\n\n    model.reactions = {};\n    for (var i = 0, l = model_data.reactions.length; i<l; i++) {\n        var r = model_data.reactions[i],\n            the_id = r.id,\n            reaction = utils.clone(r);\n        delete reaction.id;\n        reaction.bigg_id = the_id;\n        // add the appropriate genes\n        reaction.genes = [];\n\n        // set reversibility\n        reaction.reversibility = (reaction.lower_bound < 0 && reaction.upper_bound > 0);\n        if (reaction.upper_bound <= 0 && reaction.lower_bound < 0) {\n            // reverse stoichiometries\n            for (var met_id in reaction.metabolites) {\n                reaction.metabolites[met_id] = -reaction.metabolites[met_id];\n            }\n        }\n        delete reaction.lower_bound;\n        delete reaction.upper_bound;\n\n        if ('gene_reaction_rule' in reaction) {\n            var gene_ids = data_styles.genes_for_gene_reaction_rule(reaction.gene_reaction_rule);\n            gene_ids.forEach(function(gene_id) {\n                if (gene_id in genes) {\n                    var gene = utils.clone(genes[gene_id]);\n                    // rename id to bigg_id\n                    gene.bigg_id = gene.id;\n                    delete gene.id;\n                    reaction.genes.push(gene);\n                } else {\n                    console.warn('Could not find gene for gene_id ' + gene_id);\n                }\n            });\n        }\n        model.reactions[the_id] = reaction;\n    }\n    model.metabolites = {};\n    for (var i=0, l=model_data.metabolites.length; i<l; i++) {\n        var r = model_data.metabolites[i],\n            the_id = r.id,\n            met = utils.clone(r);\n        delete met.id;\n        met.bigg_id = the_id;\n        model.metabolites[the_id] = met;\n    }\n    return model;\n}\n\n// instance methods\nfunction init() {\n    this.reactions = {};\n    this.metabolites = {};\n    this.cofactors = ['atp', 'adp', 'nad', 'nadh', 'nadp', 'nadph', 'gtp',\n                      'gdp', 'h', 'coa'];\n}\n\nfunction apply_reaction_data(reaction_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_reaction_data overrides apply_gene_data.\n\n     */\n    data_styles.apply_reaction_data_to_reactions(this.reactions, reaction_data,\n                                                 styles, compare_style);\n}\n\nfunction apply_metabolite_data(metabolite_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     */\n    data_styles.apply_metabolite_data_to_nodes(this.metabolites, metabolite_data,\n                                               styles, compare_style);\n}\n\nfunction apply_gene_data(gene_data_obj, styles, identifiers_on_map,\n                         compare_style, and_method_in_gene_reaction_rule) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_gene_data overrides apply_reaction_data.\n\n     */\n    data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                             styles, identifiers_on_map,\n                                             compare_style,\n                                             and_method_in_gene_reaction_rule);\n}\n\nfunction model_for_export() {\n    /** Export a CobraModel object for reloading later.\n\n     This object is not for loading into COBRApy! Export to COBRApy is not\n     currently supported.\n\n     */\n    return { reactions: this.reactions,\n             metabolites: this.metabolites };\n}\n","/** DataMenu */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = function(options) {\n    var o = utils.set_options(options, {\n        selection: null,\n        getdatafiles: null,\n        datafiles: null,\n        update_callback: null,\n        target: null});\n\n    if (o.selection===null)\n        throw new Error('No selection provided for DataMenu');\n\n    // setup dropdown menu\n    // Append menu if it doesn't exist\n    var menu = o.selection.select('.data-menu');\n    if (menu.empty()) {\n        menu = o.selection.append('div')\n            .attr('class','data-menu');\n    }\n    var select_sel = menu.append('form')\n            .append('select').attr('class','dropdown-menu');\n\n    if (o.getdatafiles) {\n        if (o.datafiles) {\n            console.warn('DataMenu: getdatafiles option overrides datafiles');\n        }\n        d3.json(o.getdatafiles, function(error, d) {\n            // returns json object:  { data: [file0, file1, ...] }\n            if (error) {\n                return console.warn(error);\n            } else {\n                load_with_files(o.target, d.data, select_sel, o.update_callback, o.selection);\n            }\n            return null;\n        });\n    } else if (o.datafiles) {\n        load_with_files(o.target, o.datafiles, select_sel, o.update_callback, o.selection);\n    } else {\n        console.warn('DataMenu: No datafiles given');\n    }\n\n    return { update: update };\n\n    // definitions\n    function load_with_files(t, files, select_sel, update_callback, selection) {\n\n        //when it changes\n        select_sel.node().addEventListener(\"change\", function() {\n            load_datafile(t, this.value, selection, update_callback);\n        }, false);\n\n        var file = files[0];\n\n        update(files, select_sel);\n        load_datafile(t, file, selection, update_callback);\n    };\n    function load_datafile(t, this_file, selection, callback) {\n        utils.load_the_file(t, this_file, function(error, data) {\n            if (error) {\n                return console.warn(error);\n                selection.append('error loading');\n                o.data = null;\n            } else {\n                o.data = data;\n                if (callback) {\n                    callback(data);\n                }\n            }\n        });\n    };\n\n    function update(list, select_sel) {\n        // update select element with d3 selection /select_sel/ to have options\n        // given by /list/\n        // TODO remove paths from file list\n        select_sel.selectAll(\".menu-option\")\n            .data(list)\n            .enter()\n            .append('option')\n            .attr('value', function (d) { return d; } )\n            .text(function (d) { return d; } );\n        // TODO set value to default_filename_index\n        select_sel.node().focus();\n    };\n\n    function get_data() {\n        return o.data;\n    };\n};\n","/** DirectionArrow. A constructor for an arrow that can be rotated and dragged,\n and supplies its direction. */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar DirectionArrow = utils.make_class();\nDirectionArrow.prototype = {\n    init: init,\n    set_location: set_location,\n    set_rotation: set_rotation,\n    displace_rotation: displace_rotation,\n    get_rotation: get_rotation,\n    toggle: toggle,\n    show: show,\n    hide: hide,\n    right: right,\n    left: left,\n    up: up,\n    down: down,\n    _setup_drag: _setup_drag\n};\nmodule.exports = DirectionArrow;\n\n\n// definitions\nfunction init(sel) {\n    this.arrow_container = sel.append('g')\n        .attr('id', 'direction-arrow-container')\n        .attr('transform', 'translate(0,0)rotate(0)');\n    this.arrow = this.arrow_container.append('path')\n        .classed('direction-arrow', true)\n        .attr('d', path_for_arrow())\n        .style('visibility', 'hidden')\n        .attr('transform', 'translate(30,0)scale(2.5)');\n\n    this.sel = sel;\n    this.center = { x: 0, y: 0 };\n\n    this._setup_drag();\n    this.dragging = false;\n\n    this.is_visible = false;\n    this.show();\n\n    // definitions\n    function path_for_arrow() {\n        return \"M0 -5 L0 5 L20 5 L20 10 L30 0 L20 -10 L20 -5 Z\";\n    }\n}\nfunction set_location(coords) {\n    /** Move the arrow to coords.\n     */\n    this.center = coords;\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+coords.x+','+coords.y+')rotate('+transform.rotate+')');\n}\nfunction set_rotation(rotation) {\n    /** Rotate the arrow to rotation.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')rotate('+rotation+')');\n}\nfunction displace_rotation(d_rotation) {\n    /** Displace the arrow rotation by a set amount.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')'+\n                              'rotate('+(transform.rotate+d_rotation)+')');\n}\nfunction get_rotation() {\n    /** Returns the arrow rotation.\n     */\n    return utils.d3_transform_catch(this.arrow_container.attr('transform')).rotate;\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_visible = !this.is_visible;\n    else this.is_visible = on_off;\n    this.arrow.style('visibility', this.is_visible ? 'visible' : 'hidden');\n}\nfunction show() {\n    this.toggle(true);\n}\nfunction hide() {\n    this.toggle(false);\n}\nfunction right() {\n    this.set_rotation(0);\n}\nfunction down() {\n    this.set_rotation(90);\n}\nfunction left() {\n    this.set_rotation(180);\n}\nfunction up() {\n    this.set_rotation(270);\n}\n\nfunction _setup_drag() {\n    var b = d3.behavior.drag()\n            .on(\"dragstart\", function(d) {\n                // silence other listeners\n                d3.event.sourceEvent.stopPropagation();\n                this.dragging = true;\n            }.bind(this))\n            .on(\"drag.direction_arrow\", function(d) {\n                var displacement = { x: d3.event.dx,\n                                     y: d3.event.dy },\n                    location = { x: d3.mouse(this.sel.node())[0],\n                                 y: d3.mouse(this.sel.node())[1] },\n                    d_angle = utils.angle_for_event(displacement,\n                                                    location,\n                                                    this.center);\n                this.displace_rotation(utils.to_degrees(d_angle));\n            }.bind(this))\n            .on(\"dragend\", function(d) {\n                setTimeout(function() {\n                    this.dragging = false;\n                }.bind(this), 200);\n            }.bind(this));\n    this.arrow_container.call(b);\n}\n","/** Draw. Manages creating, updating, and removing objects during d3 data binding.\n\n Arguments\n ---------\n\n behavior: An escher.Behavior object.\n\n settings: An escher.Settings object.\n\n Callbacks\n ---------\n\n draw.callback_manager.run('create_membrane', draw, enter_selection);\n draw.callback_manager.run('update_membrane', draw, update_selection);\n draw.callback_manager.run('create_reaction', draw, enter_selection);\n draw.callback_manager.run('update_reaction', draw, update_selection);\n draw.callback_manager.run('create_reaction_label', draw, enter_selection);\n draw.callback_manager.run('update_reaction_label', draw, update_selection);\n draw.callback_manager.run('create_segment', draw, enter_selection);\n draw.callback_manager.run('update_segment', draw, update_selection);\n draw.callback_manager.run('create_bezier', draw, enter_selection);\n draw.callback_manager.run('update_bezier', draw, update_selection);\n draw.callback_manager.run('create_node', draw, enter_selection);\n draw.callback_manager.run('update_node', draw, update_selection);\n draw.callback_manager.run('create_text_label', draw, enter_selection);\n draw.callback_manager.run('update_text_label', draw, update_selection);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Draw = utils.make_class();\n// instance methods\nDraw.prototype = {\n    init: init,\n    create_reaction: create_reaction,\n    update_reaction: update_reaction,\n    create_bezier: create_bezier,\n    update_bezier: update_bezier,\n    create_node: create_node,\n    update_node: update_node,\n    create_text_label: create_text_label,\n    update_text_label: update_text_label,\n    create_membrane: create_membrane,\n    update_membrane: update_membrane,\n    create_reaction_label: create_reaction_label,\n    update_reaction_label: update_reaction_label,\n    create_segment: create_segment,\n    update_segment: update_segment\n};\nmodule.exports = Draw;\n\n// definitions\nfunction init(behavior, settings) {\n    this.behavior = behavior;\n    this.settings = settings;\n    this.callback_manager = new CallbackManager();\n}\n\nfunction create_membrane(enter_selection) {\n    enter_selection.append('rect')\n        .attr('class', 'membrane');\n    this.callback_manager.run('create_membrane', this, enter_selection);\n}\n\nfunction update_membrane(update_selection) {\n    update_selection\n        .attr('width', function(d){ return d.width; })\n        .attr('height', function(d){ return d.height; })\n        .attr('transform', function(d){return 'translate('+d.x+','+d.y+')';})\n        .style('stroke-width', function(d) { return 10; })\n        .attr('rx', function(d){ return 20; })\n        .attr('ry', function(d){ return 20; });\n\n    this.callback_manager.run('update_membrane', this, update_selection);\n}\n\nfunction create_reaction(enter_selection) {\n    // attributes for new reaction group\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'r'+d.reaction_id; })\n        .attr('class', 'reaction')\n        .call(this.create_reaction_label.bind(this));\n\n    this.callback_manager.run('create_reaction', this, enter_selection);\n    return;\n}\n\nfunction update_reaction(update_selection, scale, cobra_model, drawn_nodes,\n                         defs, has_data_on_reactions) {\n    /** Run on the update selection for reactions.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     cobra_model: A CobraModel object.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     defs: The defs object generated by utils.setup_defs() (e.g. Map.defs).\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    // update reaction label\n    update_selection.select('.reaction-label-group')\n        .call(function(sel) {\n            return this.update_reaction_label(sel, has_data_on_reactions);\n        }.bind(this));\n\n    // draw segments\n    utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                               this.create_segment.bind(this),\n                               function(sel) {\n                                   return this.update_segment(sel, scale, cobra_model,\n                                                              drawn_nodes, defs,\n                                                              has_data_on_reactions);\n                               }.bind(this),\n                               function(sel) {\n                                   sel.remove();\n                               });\n\n    // run the callback\n    this.callback_manager.run('update_reaction', this, update_selection);\n}\n\nfunction create_reaction_label(enter_selection) {\n    /** Draw reaction label for selection.\n\n     */\n\n    var group = enter_selection.append('g')\n            .attr('class', 'reaction-label-group');\n    group.append('title'); // tooltip\n    group.append('text')\n        .attr('class', 'reaction-label label');\n    group.append('g')\n        .attr('class', 'all-genes-label-group');\n\n    this.callback_manager.run('create_reaction_label', this, enter_selection);\n}\n\nfunction update_reaction_label(update_selection, has_data_on_reactions) {\n    /** Run on the update selection for reaction labels.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    var decimal_format = d3.format('.4g'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id'),\n        reaction_data_styles = this.settings.get_option('reaction_styles'),\n        show_gene_reaction_rules = this.settings.get_option('show_gene_reaction_rules'),\n        hide_all_labels = this.settings.get_option('hide_all_labels'),\n        gene_font_size = this.settings.get_option('gene_font_size'),\n        label_mousedown_fn = this.behavior.label_mousedown,\n        label_mouseover_fn = this.behavior.label_mouseover,\n        label_mouseout_fn = this.behavior.label_mouseout;\n\n    // label location\n    update_selection\n        .attr('transform', function(d) {\n            return 'translate(' + d.label_x + ',' + d.label_y + ')';\n        })\n        .call(this.behavior.turn_off_drag)\n        .call(this.behavior.reaction_label_drag);\n\n    // update label visibility\n    var label = update_selection.select('.reaction-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible');\n    if (!hide_all_labels) {\n        label\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_reactions && reaction_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string;\n                return t;\n            })\n            .on('mousedown', label_mousedown_fn)\n            .on('mouseover', label_mouseover_fn)\n            .on('mouseout', label_mouseout_fn);\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip];\n        });\n    }\n    // gene label\n    var all_genes_g = update_selection.select('.all-genes-label-group')\n            .selectAll('.gene-label-group')\n            .data(function(d) {\n                var show_gene_string = ('gene_string' in d &&\n                                        d.gene_string !== null &&\n                                        show_gene_reaction_rules &&\n                                        (!hide_all_labels) &&\n                                        reaction_data_styles.indexOf('text') !== -1),\n                    show_gene_reaction_rule = ('gene_reaction_rule' in d &&\n                                               d.gene_reaction_rule !== null &&\n                                               show_gene_reaction_rules &&\n                                               (!hide_all_labels) );\n                if (show_gene_string) {\n                    return d.gene_string;\n                } else if (show_gene_reaction_rule) {\n                    // make the gene string with no data\n                    return data_styles.gene_string_for_data(d.gene_reaction_rule, null,\n                                                            d.genes, null, identifiers_on_map,\n                                                            null);\n                } else {\n                    return [];\n                }\n            });\n    // enter\n    var gene_g = all_genes_g.enter()\n            .append('g')\n            .attr('class', 'gene-label-group');\n    gene_g.append('text')\n        .attr('class', 'gene-label')\n        .style('font-size', gene_font_size + 'px');\n    gene_g.append('title');\n    // update\n    all_genes_g.attr('transform', function(d, i) {\n        return 'translate(0, ' + (gene_font_size * 1.5 * (i + 1)) + ')';\n    });\n    // update text\n    all_genes_g.select('text').text(function(d) {\n        return d['text'];\n    });\n    // update tooltip\n    all_genes_g.select('title').text(function(d) {\n        return d[identifiers_in_tooltip];\n    });\n    // exit\n    all_genes_g.exit()\n        .remove();\n\n    this.callback_manager.run('update_reaction_label', this, update_selection);\n}\n\nfunction create_segment(enter_selection) {\n    // create segments\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'segment-group')\n            .attr('id', function(d) { return 's'+d.segment_id; });\n\n    // create reaction arrow\n    g.append('path')\n        .attr('class', 'segment');\n\n    g.append('g')\n        .attr('class', 'arrowheads');\n\n    g.append('g')\n        .attr('class', 'stoichiometry-labels');\n\n    this.callback_manager.run('create_segment', this, enter_selection);\n}\n\nfunction update_segment(update_selection, scale, cobra_model,\n                        drawn_nodes, defs, has_data_on_reactions) {\n    var reaction_data_styles = this.settings.get_option('reaction_styles'),\n        should_size = (has_data_on_reactions && reaction_data_styles.indexOf('size') != -1),\n        should_color = (has_data_on_reactions && reaction_data_styles.indexOf('color') != -1),\n        no_data_size = this.settings.get_option('reaction_no_data_size'),\n        no_data_color = this.settings.get_option('reaction_no_data_color');\n\n    // update segment attributes\n    var highlight_missing  = this.settings.get_option('highlight_missing'),\n        hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        get_arrow_size = function(data, should_size) {\n            var width = 20,\n                height = 13;\n            if (should_size) {\n                height = (data === null ? no_data_size : scale.reaction_size(data));\n                // check for nan\n                if (isNaN(height))\n                    height = no_data_size;\n                width = height * 2;\n            }\n            return { width: width, height: height };\n        },\n        get_disp = function(arrow_size, reversibility, coefficient, node_is_primary) {\n            var arrow_height = ((reversibility || coefficient > 0) ?\n                                arrow_size.height :\n                                0),\n                r = node_is_primary ? primary_r : secondary_r;\n            return r + arrow_height + 10;\n        };\n    // update arrows\n    update_selection\n        .selectAll('.segment')\n        .datum(function() {\n            return this.parentNode.__data__;\n        })\n        .style('visibility', function(d) {\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        })\n        .attr('d', function(d) {\n            if (d.from_node_id === null || d.to_node_id === null)\n                return null;\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id],\n                b1 = d.b1,\n                b2 = d.b2;\n            // if metabolite, then displace the arrow\n            if (start['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.from_node_coefficient,\n                                    start.node_is_primary);\n                var direction = (b1 === null) ? end : b1;\n                start = displaced_coords(disp, start, direction, 'start');\n            }\n            if (end['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.to_node_coefficient,\n                                    end.node_is_primary);\n                var direction = (b2 === null) ? start : b2;\n                end = displaced_coords(disp, direction, end, 'end');\n            }\n            var curve = ('M' + start.x + ',' + start.y + ' ');\n            if (b1 !== null && b2 !== null) {\n                curve += ('C' + b1.x + ',' + b1.y + ' ' +\n                          b2.x + ',' + b2.y + ' ');\n            }\n            curve += (end.x + ',' + end.y);\n            return curve;\n        })\n        .style('stroke', function(d) {\n            var reaction_id = this.parentNode.parentNode.__data__.bigg_id,\n                show_missing = (highlight_missing &&\n                                cobra_model !== null &&\n                                !(reaction_id in cobra_model.reactions));\n            if (show_missing) {\n                return 'red';\n            }\n            if (should_color) {\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            return null;\n        })\n        .style('stroke-width', function(d) {\n            if (should_size) {\n                var f = d.data;\n                return f === null ? no_data_size : scale.reaction_size(f);\n            } else {\n                return null;\n            }\n        });\n\n    // new arrowheads\n    var arrowheads = update_selection.select('.arrowheads')\n            .selectAll('.arrowhead')\n            .data(function (d) {\n                var arrowheads = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return arrowheads;\n\n                if (start.node_type == 'metabolite' && (d.reversibility || d.from_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.from_node_coefficient,\n                                        start.node_is_primary),\n                        direction = (b1 === null) ? end : b1,\n                        rotation = utils.to_degrees(utils.get_angle([start, direction])) + 90,\n                        loc = displaced_coords(disp, start, direction, 'start');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.from_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                if (end.node_type == 'metabolite' && (d.reversibility || d.to_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.to_node_coefficient,\n                                        end.node_is_primary),\n                        direction = (b2 === null) ? start : b2,\n                        rotation = utils.to_degrees(utils.get_angle([end, direction])) + 90,\n                        loc = displaced_coords(disp, direction, end, 'end');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.to_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                return arrowheads;\n            });\n    arrowheads.enter().append('path')\n        .classed('arrowhead', true);\n    // update arrowheads\n    arrowheads.attr('d', function(d) {\n        return ('M' + [-d.size.width / 2, 0] +\n                ' L' + [0, d.size.height] +\n                ' L' + [d.size.width / 2, 0] + ' Z');\n    }).attr('transform', function(d) {\n        return 'translate(' + d.x + ',' + d.y + ')rotate(' + d.rotation + ')';\n    }).style('fill', function(d) {\n        if (should_color) {\n            if (d.show_arrowhead_flux) {\n                // show the flux\n                var f = d.data;\n                return f===null ? no_data_color : scale.reaction_color(f);\n            } else {\n                // if the arrowhead is not filled because it is reversed\n                return '#FFFFFF';\n            }\n        }\n        // default fill color\n        return null;\n    }).style('stroke', function(d) {\n        if (should_color) {\n            // show the flux color in the stroke whether or not the fill is present\n            var f = d.data;\n            return f===null ? no_data_color : scale.reaction_color(f);\n        }\n        // default stroke color\n        return null;\n    });\n    // remove\n    arrowheads.exit().remove();\n\n    // new stoichiometry labels\n    var stoichiometry_labels = update_selection.select('.stoichiometry-labels')\n            .selectAll('.stoichiometry-label')\n            .data(function (d) {\n                var labels = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2,\n                    disp_factor = 1.5;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return labels;\n\n                if (start.node_type=='metabolite' && (Math.abs(d.from_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b1 === null) ? end : b1;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, start));\n                    var loc = displaced_coords(disp, start, direction, 'start');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.from_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                if (end.node_type=='metabolite' && (Math.abs(d.to_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b2 === null) ? start : b2;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, end));\n                    var loc = displaced_coords(disp, direction, end, 'end');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.to_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                return labels;\n            });\n\n    // add labels\n    stoichiometry_labels.enter()\n        .append('text')\n        .attr('class', 'stoichiometry-label')\n        .attr('text-anchor', 'middle');\n    // update stoichiometry_labels\n    stoichiometry_labels\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .text(function(d) {\n            return d.coefficient;\n        })\n        .style('fill', function (d) {\n            if (should_color) {\n                // show the flux color\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            // default segment color\n            return null;\n        });\n    // remove\n    stoichiometry_labels.exit().remove();\n\n    this.callback_manager.run('update_segment', this, update_selection);\n}\n\nfunction create_bezier(enter_selection) {\n    var g = enter_selection.append('g')\n            .attr('id', function(d) { return d.bezier_id; })\n            .attr('class', function(d) { return 'bezier'; });\n    g.append('path')\n        .attr('class', 'connect-line');\n    g.append('circle')\n        .attr('class', function(d) { return 'bezier-circle '+d.bezier; })\n        .style('stroke-width', String(1)+'px')\n        .attr('r', String(7)+'px');\n\n    this.callback_manager.run('create_bezier', this, enter_selection);\n}\n\nfunction update_bezier(update_selection, show_beziers, drag_behavior,\n                       mouseover, mouseout, drawn_nodes, drawn_reactions) {\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n\n    if (!show_beziers) {\n        update_selection.attr('visibility', 'hidden');\n        return;\n    } else {\n        update_selection.attr('visibility', 'visible');\n    }\n\n    // hide secondary\n    update_selection\n        .style('visibility', function(d) {\n            var seg_data = drawn_reactions[d.reaction_id].segments[d.segment_id],\n                start = drawn_nodes[seg_data.from_node_id],\n                end = drawn_nodes[seg_data.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        });\n\n    // draw bezier points\n    update_selection.select('.bezier-circle')\n        .call(this.behavior.turn_off_drag)\n        .call(drag_behavior)\n        .on('mouseover', mouseover)\n        .on('mouseout', mouseout)\n        .attr('transform', function(d) {\n            if (d.x==null || d.y==null) return '';\n            return 'translate('+d.x+','+d.y+')';\n        });\n\n    // update bezier line\n    update_selection\n        .select('.connect-line')\n        .attr('d', function(d) {\n            var node,\n                segment_d = drawn_reactions[d.reaction_id].segments[d.segment_id];\n            node = (d.bezier=='b1' ?\n                    drawn_nodes[segment_d.from_node_id] :\n                    drawn_nodes[segment_d.to_node_id]);\n            if (d.x==null || d.y==null || node.x==null || node.y==null)\n                return '';\n            return 'M'+d.x+', '+d.y+' '+(node.x)+','+(node.y);\n        });\n\n    this.callback_manager.run('update_bezier', this, update_selection);\n}\n\nfunction create_node(enter_selection, drawn_nodes, drawn_reactions) {\n    /** Run on enter selection for nodes.\n\n     Arguments\n     ---------\n\n     enter_selection: The D3.js enter selection.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     drawn_reactions: The reactions object (e.g. Map.reactions).\n\n     */\n\n    // create nodes\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'node')\n            .attr('id', function(d) { return 'n'+d.node_id; });\n\n    // create metabolite circle and label\n    g.append('circle')\n        .attr('class', function(d) {\n            var c = 'node-circle';\n            if (d.node_type!==null)\n                c += (' ' + d.node_type + '-circle');\n            return c;\n        });\n    // labels\n    var metabolite_groups = g.filter(function(d) {\n        return d.node_type=='metabolite';\n    });\n    metabolite_groups.append('text')\n        .attr('class', 'node-label label');\n    metabolite_groups.append('title'); // tooltip\n\n    this.callback_manager.run('create_node', this, enter_selection);\n}\n\nfunction update_node(update_selection, scale, has_data_on_nodes,\n                     mousedown_fn, click_fn, mouseover_fn, mouseout_fn,\n                     drag_behavior, label_drag_behavior) {\n    /** Run on the update selection for nodes.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     has_data_on_nodes: Boolean to determine whether data needs to be drawn.\n\n     mousedown_fn: A function to call on mousedown for a node.\n\n     click_fn: A function to call on click for a node.\n\n     mouseover_fn: A function to call on mouseover for a node.\n\n     mouseout_fn: A function to call on mouseout for a node.\n\n     drag_behavior: The D3.js drag behavior object for the nodes.\n\n     label_drag_behavior: The D3.js drag behavior object for the node labels.\n\n     */\n\n    // update circle and label location\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        marker_r = this.settings.get_option('marker_radius'),\n        hide_all_labels = this.settings.get_option('hide_all_labels'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id'),\n        metabolite_data_styles = this.settings.get_option('metabolite_styles'),\n        no_data_style = { color: this.settings.get_option('metabolite_no_data_color'),\n                          size: this.settings.get_option('metabolite_no_data_size') };\n\n\n    var mg = update_selection\n            .select('.node-circle')\n            .attr('transform', function(d) {\n                return 'translate('+d.x+','+d.y+')';\n            })\n            .style('visibility', function(d) {\n                return (hide_secondary_metabolites && !d.node_is_primary) ? 'hidden' : null;\n            })\n            .attr('r', function(d) {\n                if (d.node_type == 'metabolite') {\n                    var should_scale = (has_data_on_nodes &&\n                                        metabolite_data_styles.indexOf('size') != -1);\n                    if (should_scale) {\n                        var f = d.data;\n                        return f===null ? no_data_style['size'] : scale.metabolite_size(f);\n                    } else {\n                        return d.node_is_primary ? primary_r : secondary_r;\n                    }\n                }\n                // midmarkers and multimarkers\n                return marker_r;\n            })\n            .style('fill', function(d) {\n                if (d.node_type=='metabolite') {\n                    var should_color_data = (has_data_on_nodes &&\n                                             metabolite_data_styles.indexOf('color') != -1);\n                    if (should_color_data) {\n                        var f = d.data;\n                        return f===null ? no_data_style['color'] : scale.metabolite_color(f);\n                    } else {\n                        return null;\n                    }\n                }\n                // midmarkers and multimarkers\n                return null;\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(drag_behavior)\n            .on('mousedown', mousedown_fn)\n            .on('click', click_fn)\n            .on('mouseover', mouseover_fn)\n            .on('mouseout', mouseout_fn);\n\n    // update node label visibility\n    var node_label = update_selection\n            .select('.node-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible');\n    if (!hide_all_labels) {\n        node_label\n            .style('visibility', function(d) {\n                return (hide_secondary_metabolites && !d.node_is_primary) ? 'hidden' : null;\n            })\n            .attr('transform', function(d) {\n                return 'translate('+d.label_x+','+d.label_y+')';\n            })\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_nodes && metabolite_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string;\n                return t;\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(label_drag_behavior);\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip];\n        });\n    }\n\n    this.callback_manager.run('update_node', this, update_selection);\n}\n\nfunction create_text_label(enter_selection) {\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'l'+d.text_label_id; })\n        .attr('class', 'text-label')\n        .append('text')\n        .attr('class', 'label');\n\n    this.callback_manager.run('create_text_label', this, enter_selection);\n}\n\nfunction update_text_label(update_selection) {\n    var mousedown_fn = this.behavior.text_label_mousedown,\n        click_fn = this.behavior.text_label_click,\n        drag_behavior = this.behavior.selectable_drag,\n        turn_off_drag = this.behavior.turn_off_drag;\n\n    update_selection\n        .select('.label')\n        .text(function(d) { return d.text; })\n        .attr('transform', function(d) { return 'translate('+d.x+','+d.y+')';})\n        .on('mousedown', mousedown_fn)\n        .on('click', click_fn)\n        .call(turn_off_drag)\n        .call(drag_behavior);\n\n    this.callback_manager.run('update_text_label', this, update_selection);\n}\n\nfunction displaced_coords(reaction_arrow_displacement, start, end, displace) {\n    utils.check_undefined(arguments, ['reaction_arrow_displacement', 'start', 'end', 'displace']);\n\n    var length = reaction_arrow_displacement,\n        hyp = utils.distance(start, end),\n        new_x, new_y;\n    if (!length || !hyp) console.error('Bad value');\n    if (displace=='start') {\n        new_x = start.x + length * (end.x - start.x) / hyp,\n        new_y = start.y + length * (end.y - start.y) / hyp;\n    } else if (displace=='end') {\n        new_x = end.x - length * (end.x - start.x) / hyp,\n        new_y = end.y - length * (end.y - start.y) / hyp;\n    } else { console.error('bad displace value: ' + displace); }\n    return {x: new_x, y: new_y};\n}\n","/** KeyManager\n\n Manage key listeners and events.\n\n Arguments\n ---------\n\n assigned_keys (default: {}): An object defining keys to bind.\n\n input_list (default: []): A list of inputs that will override keyboard\n shortcuts when in focus.\n\n selection (default: global): A node to bind the events to.\n\n ctrl_equals_cmd (default: false): If true, then control and command have the\n same effect.\n\n */\n\n\nvar utils = require('./utils');\nvar Mousetrap = require('mousetrap');\nvar _ = require('underscore');\n\n\nvar KeyManager = utils.make_class();\n// instance methods\nKeyManager.prototype = {\n    init: init,\n    update: update,\n    toggle: toggle,\n    add_escape_listener: add_escape_listener,\n    add_enter_listener: add_enter_listener,\n    add_key_listener: add_key_listener\n};\nmodule.exports = KeyManager;\n\n\n// instance methods\nfunction init(assigned_keys, input_list, selection, ctrl_equals_cmd) {\n    // default Arguments\n    this.assigned_keys = assigned_keys || {};\n    this.input_list = input_list || [];\n    this.mousetrap = selection ? new Mousetrap(selection) : new Mousetrap;\n    this.ctrl_equals_cmd = (!_.isBoolean(ctrl_equals_cmd)) ? false : ctrl_equals_cmd;\n\n    // Fix mousetrap behavior; by default, it ignore shortcuts when inputs are\n    // in focus.\n    // TODO NOT WORKING https://craig.is/killing/mice\n    this.mousetrap.stopCallback = function() { return false; };\n\n    this.enabled = true;\n    this.update();\n}\n\n\nfunction _add_cmd(key, ctrl_equals_cmd) {\n    /** If ctrl_equals_cmd is true and key has ctrl+ in it, return an array with\n     ctrl+ and meta+ variations.\n\n     */\n    if (!ctrl_equals_cmd) return key;\n    var key_ar = _.isArray(key) ? key : [key];\n    var new_ar = key_ar.reduce(function(c, k) {\n        var n = k.replace('ctrl+', 'meta+');\n        if (n !== k) c.push(n);\n        return c;\n    }, key_ar.slice());\n    return new_ar.length === key_ar.length ? key : new_ar;\n}\n\n\nfunction update() {\n    /** Updated key bindings if attributes have changed.\n\n     */\n    this.mousetrap.reset();\n    if (!this.enabled) return;\n\n    // loop through keys\n    for (var key_id in this.assigned_keys) {\n        var assigned_key = this.assigned_keys[key_id];\n\n        // OK if this is missing\n        if (!assigned_key.key) continue;\n\n        var key_to_bind = _add_cmd(assigned_key.key, this.ctrl_equals_cmd);\n        // remember the input_list\n        assigned_key.input_list = this.input_list;\n        this.mousetrap.bind(key_to_bind, function(e) {\n            // check inputs\n            var input_blocking = false;\n            if (this.ignore_with_input) {\n                for (var i = 0, l = this.input_list.length; i < l; i++) {\n                    if (this.input_list[i].is_visible()) {\n                        input_blocking = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!input_blocking) {\n                if (this.fn) this.fn.call(this.target);\n                else console.warn('No function for key: ' + this.key);\n                e.preventDefault();\n            }\n        }.bind(assigned_key), 'keydown');\n    }\n}\n\n\nfunction toggle(on_off) {\n    /** Turn the key manager on or off.\n\n     */\n    if (_.isUndefined(on_off)) on_off = !this.enabled;\n    this.enabled = on_off;\n    this.update();\n}\n\n\nfunction add_enter_listener(callback, one_time) {\n    /** Call the callback when the enter key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener('enter', callback, one_time);\n}\n\n\nfunction add_escape_listener(callback, one_time) {\n    /** Call the callback when the escape key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener('escape', callback, one_time);\n}\n\n\nfunction add_key_listener(key_name, callback, one_time) {\n    /** Call the callback when the key is pressed, then unregisters the\n     listener. Returns a function that will unbind the event.\n\n     callback: The callback function with no arguments.\n\n     key_name: A key name, or list of key names, as defined by the mousetrap\n     library: https://craig.is/killing/mice\n\n     one_time: If True, then cancel the listener after the first execution.\n\n     */\n\n    if (_.isUndefined(one_time)) one_time = false;\n\n    // unbind function ready to go\n    var unbind = this.mousetrap.unbind.bind(this.mousetrap, key_name);\n\n    this.mousetrap.bind(_add_cmd(key_name, this.ctrl_equals_cmd), function(e) {\n        e.preventDefault();\n        callback();\n        if (one_time) unbind();\n    });\n\n    return unbind;\n}\n","/** Map\n\n Defines the metabolic map data, and manages drawing and building.\n\n Arguments\n ---------\n\n svg: The parent SVG container for the map.\n\n css:\n\n selection: A d3 selection for a node to place the map inside.\n\n selection:\n\n zoom_container:\n\n settings:\n\n cobra_model:\n\n canvas_size_and_loc:\n\n enable_search:\n\n map_name: (Optional, Default: 'new map')\n\n map_id: (Optional, Default: A string of random characters.)\n\n map_description: (Optional, Default: '')\n\n Callbacks\n ---------\n\n map.callback_manager.run('set_status', null, status);\n map.callback_manager.run('toggle_beziers', null, beziers_enabled);\n map.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n map.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n map.callback_manager.run('deselect_nodes');\n map.callback_manager.run('select_text_label');\n map.callback_manager.run('before_svg_export');\n map.callback_manager.run('after_svg_export');\n map.callback_manager.run('before_convert_map');\n map.callback_manager.run('after_convert_map');\n this.callback_manager.run('calc_data_stats__reaction', null, changed);\n this.callback_manager.run('calc_data_stats__metabolite', null, changed);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar Draw = require('./Draw');\nvar Behavior = require('./Behavior');\nvar Scale = require('./Scale');\nvar build = require('./build');\nvar UndoStack = require('./UndoStack');\nvar CallbackManager = require('./CallbackManager');\nvar KeyManager = require('./KeyManager');\nvar Canvas = require('./Canvas');\nvar data_styles = require('./data_styles');\nvar SearchIndex = require('./SearchIndex');\n\nvar bacon = require('baconjs');\nvar _ = require('underscore');\n\n\nvar Map = utils.make_class();\n// class methods\nMap.from_data = from_data;\n// instance methods\nMap.prototype = {\n    // setup\n    init: init,\n    // more setup\n    setup_containers: setup_containers,\n    reset_containers: reset_containers,\n    // appearance\n    set_status: set_status,\n    clear_map: clear_map,\n    // selection\n    select_all: select_all,\n    select_none: select_none,\n    invert_selection: invert_selection,\n    select_selectable: select_selectable,\n    select_metabolite_with_id: select_metabolite_with_id,\n    select_single_node: select_single_node,\n    deselect_nodes: deselect_nodes,\n    select_text_label: select_text_label,\n    deselect_text_labels: deselect_text_labels,\n    // build\n    new_reaction_from_scratch: new_reaction_from_scratch,\n    extend_nodes: extend_nodes,\n    extend_reactions: extend_reactions,\n    new_reaction_for_metabolite: new_reaction_for_metabolite,\n    cycle_primary_node: cycle_primary_node,\n    toggle_selected_node_primary: toggle_selected_node_primary,\n    new_text_label: new_text_label,\n    edit_text_label: edit_text_label,\n    // delete\n    delete_selected: delete_selected,\n    delete_selectable: delete_selectable,\n    delete_node_data: delete_node_data,\n    delete_segment_data: delete_segment_data,\n    delete_reaction_data: delete_reaction_data,\n    delete_text_label_data: delete_text_label_data,\n    // find\n    get_selected_node_ids: get_selected_node_ids,\n    get_selected_nodes: get_selected_nodes,\n    get_selected_text_label_ids: get_selected_text_label_ids,\n    get_selected_text_labels: get_selected_text_labels,\n    segments_and_reactions_for_nodes: segments_and_reactions_for_nodes,\n    // draw\n    draw_everything: draw_everything,\n    // draw reactions\n    draw_all_reactions: draw_all_reactions,\n    draw_these_reactions: draw_these_reactions,\n    clear_deleted_reactions: clear_deleted_reactions,\n    // draw nodes\n    draw_all_nodes: draw_all_nodes,\n    draw_these_nodes: draw_these_nodes,\n    clear_deleted_nodes: clear_deleted_nodes,\n    // draw text_labels\n    draw_all_text_labels: draw_all_text_labels,\n    draw_these_text_labels: draw_these_text_labels,\n    clear_deleted_text_labels: clear_deleted_text_labels,\n    // draw beziers\n    draw_all_beziers: draw_all_beziers,\n    draw_these_beziers: draw_these_beziers,\n    clear_deleted_beziers: clear_deleted_beziers,\n    toggle_beziers: toggle_beziers,\n    hide_beziers: hide_beziers,\n    show_beziers: show_beziers,\n    // data\n    has_cobra_model: has_cobra_model,\n    apply_reaction_data_to_map: apply_reaction_data_to_map,\n    apply_metabolite_data_to_map: apply_metabolite_data_to_map,\n    apply_gene_data_to_map: apply_gene_data_to_map,\n    // data statistics\n    get_data_statistics: get_data_statistics,\n    calc_data_stats: calc_data_stats,\n    // zoom\n    zoom_extent_nodes: zoom_extent_nodes,\n    zoom_extent_canvas: zoom_extent_canvas,\n    _zoom_extent: _zoom_extent,\n    get_size: get_size,\n    zoom_to_reaction: zoom_to_reaction,\n    zoom_to_node: zoom_to_node,\n    zoom_to_text_label: zoom_to_text_label,\n    highlight_reaction: highlight_reaction,\n    highlight_node: highlight_node,\n    highlight_text_label: highlight_text_label,\n    highlight: highlight,\n    // io\n    save: save,\n    map_for_export: map_for_export,\n    save_svg: save_svg,\n    convert_map: convert_map\n};\nmodule.exports = Map;\n\n\n// -------------------------------------------------------------------------\n// setup\n\nfunction init(svg, css, selection, zoom_container, settings,\n              cobra_model, canvas_size_and_loc, enable_search,\n              map_name, map_id, map_description) {\n    if (canvas_size_and_loc===null) {\n        var size = zoom_container.get_size();\n        canvas_size_and_loc = {x: -size.width, y: -size.height,\n                               width: size.width*3, height: size.height*3};\n    }\n\n    if (map_name === undefined || map_name === null || map_name == '')\n        map_name = 'new_map';\n    else\n        map_name = String(map_name);\n    if (map_id === undefined || map_id === null || map_id == '')\n        map_id = utils.generate_map_id();\n    else\n        map_id = String(map_id);\n    if (map_description === undefined || map_description === null)\n        map_description = '';\n    else\n        map_description = String(map_description);\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // set up the defs\n    this.svg = svg;\n    this.defs = utils.setup_defs(svg, css);\n\n    // make the canvas\n    this.canvas = new Canvas(selection, canvas_size_and_loc);\n\n    this.setup_containers(selection);\n    this.sel = selection;\n    this.zoom_container = zoom_container;\n\n    this.settings = settings;\n\n    // set the model AFTER loading the datasets\n    this.cobra_model = cobra_model;\n\n    this.largest_ids = { reactions: -1,\n                         nodes: -1,\n                         segments: -1,\n                         text_labels: -1 };\n\n    // make the scales\n    this.scale = new Scale();\n    // initialize stats\n    this.calc_data_stats('reaction');\n    this.calc_data_stats('metabolite');\n    this.scale.connect_to_settings(this.settings, this,\n                                   get_data_statistics.bind(this));\n\n    // make the undo/redo stack\n    this.undo_stack = new UndoStack();\n\n    // make a behavior object\n    this.behavior = new Behavior(this, this.undo_stack);\n\n    // draw manager\n    this.draw = new Draw(this.behavior, this.settings);\n\n    // make a key manager\n    this.key_manager = new KeyManager();\n    this.key_manager.ctrl_equals_cmd = true;\n\n    // make the search index\n    this.enable_search = enable_search;\n    this.search_index = new SearchIndex();\n\n    // map properties\n    this.map_name = map_name;\n    this.map_id = map_id;\n    this.map_description = map_description;\n\n    // deal with the window\n    var window_translate = {'x': 0, 'y': 0},\n        window_scale = 1;\n\n    // hide beziers\n    this.beziers_enabled = false;\n\n    // data\n    this.has_data_on_reactions = false;\n    this.has_data_on_nodes = false;\n\n    this.nodes = {};\n    this.reactions = {};\n    this.beziers = {};\n    this.text_labels = {};\n\n    // update data with null to populate data-specific attributes\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n\n    // rotation mode off\n    this.rotation_on = false;\n};\n\n// -------------------------------------------------------------------------\n// Import\n\nfunction from_data(map_data, svg, css, selection, zoom_container, settings,\n                   cobra_model, enable_search) {\n    /** Load a json map and add necessary fields for rendering.\n\n     */\n\n    var canvas = map_data[1].canvas,\n        map_name = map_data[0].map_name,\n        map_id = map_data[0].map_id,\n        map_description = (map_data[0].map_description.replace(/(\\nLast Modified.*)+$/g, '')\n                           + '\\nLast Modified ' + Date(Date.now()).toString()),\n        map = new Map(svg, css, selection, zoom_container, settings,\n                      cobra_model, canvas, enable_search,\n                      map_name, map_id, map_description);\n\n    map.reactions = map_data[1].reactions;\n    map.nodes = map_data[1].nodes;\n    map.text_labels = map_data[1].text_labels;\n\n    for (var n_id in map.nodes) {\n        var node = map.nodes[n_id];\n\n        // clear all the connected segments\n        node.connected_segments = [];\n\n        //  populate the nodes search index.\n        if (enable_search) {\n            if (node.node_type!='metabolite') continue;\n            map.search_index.insert('n'+n_id, { 'name': node.bigg_id,\n                                                'data': { type: 'metabolite',\n                                                          node_id: n_id }});\n            map.search_index.insert('n_name'+n_id, { 'name': node.name,\n                                                     'data': { type: 'metabolite',\n                                                               node_id: n_id }});\n        }\n    }\n\n    // Propagate coefficients and reversibility, build the connected\n    // segments, add bezier points, and populate the reaction search index.\n    for (var r_id in map.reactions) {\n        var reaction = map.reactions[r_id];\n\n        // reaction search index\n        if (enable_search) {\n            map.search_index.insert('r' + r_id,\n                                    { 'name': reaction.bigg_id,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            map.search_index.insert('r_name' + r_id,\n                                    { 'name': reaction.name,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                map.search_index.insert('r' + r_id + '_g' + g_id,\n                                        { 'name': gene.bigg_id,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n                map.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                        { 'name': gene.name,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n            }\n        }\n\n        // keep track of any bad segments\n        var segments_to_delete = [];\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id];\n\n            // propagate reversibility\n            segment.reversibility = reaction.reversibility;\n\n            // if there is an error with to_ or from_ nodes, remove this segment\n            if (!(segment.from_node_id in map.nodes) || !(segment.to_node_id in map.nodes)) {\n                console.warn('Bad node references in segment ' + s_id + '. Deleting segment.');\n                segments_to_delete.push(s_id);\n                continue\n            }\n\n            var from_node = map.nodes[segment.from_node_id],\n                to_node = map.nodes[segment.to_node_id];\n\n            // propagate coefficients\n            reaction.metabolites.forEach(function(met) {\n                if (met.bigg_id==from_node.bigg_id) {\n                    segment.from_node_coefficient = met.coefficient;\n                } else if (met.bigg_id==to_node.bigg_id) {\n                    segment.to_node_coefficient = met.coefficient;\n                }\n            });\n\n            // build connected segments\n            [from_node, to_node].forEach(function(node) {\n                node.connected_segments.push({ segment_id: s_id,\n                                               reaction_id: r_id });\n            });\n\n            // If the metabolite has no bezier points, then add them.\n            var start = map.nodes[segment.from_node_id],\n                end = map.nodes[segment.to_node_id];\n            if (start['node_type']=='metabolite' || end['node_type']=='metabolite') {\n                var midpoint = utils.c_plus_c(start, utils.c_times_scalar(utils.c_minus_c(end, start), 0.5));\n                if (segment.b1 === null) segment.b1 = midpoint;\n                if (segment.b2 === null) segment.b2 = midpoint;\n            }\n\n        }\n        // delete the bad segments\n        segments_to_delete.forEach(function(s_id) {\n            delete reaction.segments[s_id];\n        });\n    }\n\n    // add text_labels to the search index\n    if (enable_search) {\n        for (var label_id in map.text_labels) {\n            var label = map.text_labels[label_id];\n            map.search_index.insert('l'+label_id, { 'name': label.text,\n                                                    'data': { type: 'text_label',\n                                                              text_label_id: label_id }});\n        }\n    }\n\n    // populate the beziers\n    map.beziers = build.new_beziers_for_reactions(map.reactions);\n\n    // get largest ids for adding new reactions, nodes, text labels, and\n    // segments\n    map.largest_ids.reactions = get_largest_id(map.reactions);\n    map.largest_ids.nodes = get_largest_id(map.nodes);\n    map.largest_ids.text_labels = get_largest_id(map.text_labels);\n\n    var largest_segment_id = 0;\n    for (var id in map.reactions) {\n        largest_segment_id = get_largest_id(map.reactions[id].segments,\n                                            largest_segment_id);\n    }\n    map.largest_ids.segments = largest_segment_id;\n\n    // update data with null to populate data-specific attributes\n    map.apply_reaction_data_to_map(null);\n    map.apply_metabolite_data_to_map(null);\n    map.apply_gene_data_to_map(null);\n\n    return map;\n\n    // definitions\n    function get_largest_id(obj, current_largest) {\n        /** Return the largest integer key in obj, or current_largest, whichever is bigger. */\n        if (current_largest===undefined) current_largest = 0;\n        if (obj===undefined) return current_largest;\n        return Math.max.apply(null, Object.keys(obj).map(function(x) {\n            return parseInt(x);\n        }).concat([current_largest]));\n    }\n}\n\n// ---------------------------------------------------------------------\n// more setup\n\nfunction setup_containers(sel) {\n    sel.append('g')\n        .attr('id', 'reactions');\n    sel.append('g')\n        .attr('id', 'nodes');\n    sel.append('g')\n        .attr('id', 'beziers');\n    sel.append('g')\n        .attr('id', 'text-labels');\n}\nfunction reset_containers() {\n    this.sel.select('#reactions')\n        .selectAll('.reaction')\n        .remove();\n    this.sel.select('#nodes')\n        .selectAll('.node')\n        .remove();\n    this.sel.select('#beziers')\n        .selectAll('.bezier')\n        .remove();\n    this.sel.select('#text-labels')\n        .selectAll('.text-label')\n        .remove();\n}\n\n// -------------------------------------------------------------------------\n// Appearance\n\nfunction set_status(status, time) {\n    /** Set the status of the map, with an optional expiration\n     time. Rendering the status is taken care of by the Builder.\n\n     Arguments\n     ---------\n\n     status: The status string.\n\n     time: An optional time, in ms, after which the status is set to ''.\n\n     */\n\n    this.callback_manager.run('set_status', null, status);\n    // clear any other timers on the status bar\n    clearTimeout(this._status_timer);\n    this._status_timer = null;\n\n    if (time!==undefined) {\n        this._status_timer = setTimeout(function() {\n            this.callback_manager.run('set_status', null, '');\n        }.bind(this), time);\n    }\n}\nfunction clear_map() {\n    this.reactions = {};\n    this.beziers = {};\n    this.nodes = {};\n    this.text_labels = {};\n    this.map_name = 'new_map';\n    this.map_id = utils.generate_map_id();\n    this.map_description = '';\n    // reaction_data onto existing map reactions\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n    this.draw_everything();\n}\nfunction has_cobra_model() {\n    return (this.cobra_model !== null);\n}\nfunction draw_everything() {\n    /** Draw the all reactions, nodes, & text labels.\n\n     */\n    this.draw_all_reactions(true, true); // also draw beziers\n    this.draw_all_nodes(true);\n    this.draw_all_text_labels();\n}\n\nfunction draw_all_reactions(draw_beziers, clear_deleted) {\n    /** Draw all reactions, and clear deleted reactions.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n    if (clear_deleted===undefined) clear_deleted = true;\n\n    // Draw all reactions.\n    var reaction_ids = [];\n    for (var reaction_id in this.reactions) {\n        reaction_ids.push(reaction_id);\n    }\n    // If draw_beziers is true, just draw them all, rather than deciding\n    // which ones to draw.\n    this.draw_these_reactions(reaction_ids, false);\n    if (draw_beziers && this.beziers_enabled)\n        this.draw_all_beziers();\n\n    // Clear all deleted reactions.\n    if (clear_deleted)\n        this.clear_deleted_reactions(draw_beziers);\n}\n\nfunction draw_these_reactions(reaction_ids, draw_beziers) {\n    /** Draw specific reactions.\n\n     Does nothing with exit selection. Use clear_deleted_reactions to remove\n     reactions from the DOM.\n\n     Arguments\n     ---------\n\n     reactions_ids: An array of reaction_ids to update.\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n\n    // find reactions for reaction_ids\n    var reaction_subset = utils.object_slice_for_ids_ref(this.reactions,\n                                                         reaction_ids);\n\n    // function to update reactions\n    var update_fn = function(sel) {\n        return this.draw.update_reaction(sel, this.scale, this.cobra_model,\n                                         this.nodes, this.defs,\n                                         this.has_data_on_reactions);\n    }.bind(this);\n\n    // draw the reactions\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', reaction_subset,\n                         'reaction_id', this.draw.create_reaction.bind(this.draw),\n                         update_fn);\n\n    if (draw_beziers) {\n        // particular beziers to draw\n        var bezier_ids = build.bezier_ids_for_reaction_ids(reaction_subset);\n        this.draw_these_beziers(bezier_ids);\n    }\n}\n\nfunction clear_deleted_reactions(draw_beziers) {\n    /** Remove any reactions that are not in *this.reactions*.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also clear deleted\n     bezier control points.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n\n    // remove deleted reactions and segments\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', this.reactions, 'reaction_id',\n                         null,\n                         clear_deleted_segments,\n                         function(sel) { sel.remove(); });\n\n    if (draw_beziers==true)\n        this.clear_deleted_beziers();\n\n    // definitions\n    function clear_deleted_segments(update_selection) {\n        // draw segments\n        utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                                   null,\n                                   null,\n                                   function(sel) { sel.remove(); });\n    };\n}\n\nfunction draw_all_nodes(clear_deleted) {\n    /** Draw all nodes, and clear deleted nodes.\n\n     Arguments\n     ---------\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (clear_deleted === undefined) clear_deleted = true;\n\n    var node_ids = [];\n    for (var node_id in this.nodes) {\n        node_ids.push(node_id);\n    }\n    this.draw_these_nodes(node_ids);\n\n    // clear the deleted nodes\n    if (clear_deleted)\n        this.clear_deleted_nodes();\n}\n\nfunction draw_these_nodes(node_ids) {\n    /** Draw specific nodes.\n\n     Does nothing with exit selection. Use clear_deleted_nodes to remove\n     nodes from the DOM.\n\n     Arguments\n     ---------\n\n     nodes_ids: An array of node_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var node_subset = utils.object_slice_for_ids_ref(this.nodes, node_ids);\n\n    // functions to create and update nodes\n    var create_fn = function(sel) {\n        return this.draw.create_node(sel,\n                                     this.nodes,\n                                     this.reactions);\n    }.bind(this),\n        update_fn = function(sel) {\n            return this.draw.update_node(sel,\n                                         this.scale,\n                                         this.has_data_on_nodes,\n                                         this.behavior.selectable_mousedown,\n                                         this.behavior.selectable_click,\n                                         this.behavior.node_mouseover,\n                                         this.behavior.node_mouseout,\n                                         this.behavior.selectable_drag,\n                                         this.behavior.node_label_drag);\n        }.bind(this);\n\n    // draw the nodes\n    utils.draw_an_object(this.sel, '#nodes', '.node', node_subset, 'node_id',\n                         create_fn, update_fn);\n}\n\nfunction clear_deleted_nodes() {\n    /** Remove any nodes that are not in *this.nodes*.\n\n     */\n    // run remove for exit selection\n    utils.draw_an_object(this.sel, '#nodes', '.node', this.nodes, 'node_id',\n                         null, null, function(sel) { sel.remove(); });\n}\n\nfunction draw_all_text_labels() {\n    // Draw all text_labels.\n    var text_label_ids = [];\n    for (var text_label_id in this.text_labels) {\n        text_label_ids.push(text_label_id);\n    }\n    this.draw_these_text_labels(text_label_ids);\n\n    // Clear all deleted text_labels.\n    this.clear_deleted_text_labels();\n}\n\nfunction draw_these_text_labels(text_label_ids) {\n    /** Draw specific text_labels.\n\n     Does nothing with exit selection. Use clear_deleted_text_labels to remove\n     text_labels from the DOM.\n\n     Arguments\n     ---------\n\n     text_labels_ids: An array of text_label_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var text_label_subset = utils.object_slice_for_ids_ref(this.text_labels, text_label_ids);\n\n    // function to update text_labels\n    var update_fn = function(sel) {\n        return this.draw.update_text_label(sel, this.behavior);;\n    }.bind(this);\n\n    // draw the text_labels\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         text_label_subset, 'text_label_id',\n                         this.draw.create_text_label.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_text_labels() {\n    /** Remove any text_labels that are not in *this.text_labels*.\n\n     */\n    // clear deleted\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         this.text_labels, 'text_label_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction draw_all_beziers() {\n    /** Draw all beziers, and clear deleted reactions.\n\n     */\n    var bezier_ids = [];\n    for (var bezier_id in this.beziers) {\n        bezier_ids.push(bezier_id);\n    }\n    this.draw_these_beziers(bezier_ids);\n\n    // clear delete beziers\n    this.clear_deleted_beziers();\n}\n\nfunction draw_these_beziers(bezier_ids) {\n    /** Draw specific beziers.\n\n     Does nothing with exit selection. Use clear_deleted_beziers to remove\n     beziers from the DOM.\n\n     Arguments\n     ---------\n\n     beziers_ids: An array of bezier_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var bezier_subset = utils.object_slice_for_ids_ref(this.beziers, bezier_ids);\n\n    // function to update beziers\n    var update_fn = function(sel) {\n        return this.draw.update_bezier(sel,\n                                       this.beziers_enabled,\n                                       this.behavior.bezier_drag,\n                                       this.behavior.bezier_mouseover,\n                                       this.behavior.bezier_mouseout,\n                                       this.nodes,\n                                       this.reactions);\n    }.bind(this);\n\n    // draw the beziers\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', bezier_subset,\n                         'bezier_id', this.draw.create_bezier.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_beziers() {\n    /** Remove any beziers that are not in *this.beziers*.\n\n     */\n    // remove deleted\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', this.beziers,\n                         'bezier_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction show_beziers() {\n    this.toggle_beziers(true);\n}\n\nfunction hide_beziers() {\n    this.toggle_beziers(false);\n}\n\nfunction toggle_beziers(on_off) {\n    if (on_off===undefined) this.beziers_enabled = !this.beziers_enabled;\n    else this.beziers_enabled = on_off;\n    this.draw_all_beziers();\n    this.callback_manager.run('toggle_beziers', null, this.beziers_enabled);\n}\n\nfunction apply_reaction_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style');\n    var has_data = data_styles.apply_reaction_data_to_reactions(this.reactions, data,\n                                                                styles, compare_style);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\nfunction apply_metabolite_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('metabolite_styles'),\n        compare_style = this.settings.get_option('metabolite_compare_style');\n\n    var has_data = data_styles.apply_metabolite_data_to_nodes(this.nodes, data,\n                                                              styles, compare_style);\n    this.has_data_on_nodes = has_data;\n\n    return this.calc_data_stats('metabolite');\n}\n\nfunction apply_gene_data_to_map(gene_data_obj) {\n    /** Returns True if the scale has changed.\n\n     Arguments\n     ---------\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { rule: 'rule_string', genes: { gene_id: value } } }\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        and_method_in_gene_reaction_rule = this.settings.get_option('and_method_in_gene_reaction_rule');\n\n    var has_data = data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                                            styles, identifiers_on_map,\n                                                            compare_style,\n                                                            and_method_in_gene_reaction_rule);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\n// ------------------------------------------------\n// Data domains\nfunction get_data_statistics() {\n    return this.data_statistics;\n}\n\nfunction calc_data_stats(type) {\n    /** Returns True if the stats have changed.\n\n     Arguments\n     ---------\n\n     type: Either 'metabolite' or 'reaction'\n\n     */\n\n    if (['reaction', 'metabolite'].indexOf(type) == -1)\n        throw new Error('Bad type ' + type);\n\n    // make the data structure\n    if (!('data_statistics' in this)) {\n        this.data_statistics = {};\n        this.data_statistics[type] = {};\n    } else if (!(type in this.data_statistics)) {\n        this.data_statistics[type] = {};\n    }\n\n    var same = true;\n    // default min and max\n    var vals = [];\n    if (type == 'metabolite') {\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            // check number\n            if (node.data !== null)\n                vals.push(node.data);\n        }\n    } else if (type == 'reaction') {\n        for (var reaction_id in this.reactions) {\n            var reaction = this.reactions[reaction_id];\n            // check number\n            if (reaction.data !== null)\n                vals.push(reaction.data);\n        }\n    }\n\n    // calculate these statistics\n    var quartiles = utils.quartiles(vals),\n        funcs = [['min', on_array(Math.min)],\n                 ['max', on_array(Math.max)],\n                 ['mean', utils.mean],\n                 ['Q1', function() { return quartiles[0]; }],\n                 ['median', function() { return quartiles[1]; }],\n                 ['Q3', function() { return quartiles[2]; }]];\n    funcs.forEach(function(ar) {\n        var new_val, name = ar[0];\n        if (vals.length == 0) {\n            new_val = null;\n        } else {\n            var fn = ar[1];\n            new_val = fn(vals);\n        }\n        if (new_val != this.data_statistics[type][name])\n            same = false;\n        this.data_statistics[type][name] = new_val;\n    }.bind(this));\n\n    if (type == 'reaction')\n        this.callback_manager.run('calc_data_stats__reaction', null, !same);\n    else\n        this.callback_manager.run('calc_data_stats__metabolite', null, !same);\n    return !same;\n\n    // definitions\n    function on_array(fn) {\n        return function (array) { return fn.apply(null, array); };\n    }\n}\n\n// ---------------------------------------------------------------------\n// Node interaction\n\nfunction get_coords_for_node(node_id) {\n    var node = this.nodes[node_id],\n        coords = {'x': node.x, 'y': node.y};\n    return coords;\n}\nfunction get_selected_node_ids() {\n    var selected_node_ids = [];\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) { selected_node_ids.push(d.node_id); });\n    return selected_node_ids;\n}\nfunction get_selected_nodes() {\n    var selected_nodes = {},\n        self = this;\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_nodes[d.node_id] = this.nodes[d.node_id];\n        }.bind(this));\n    return selected_nodes;\n}\nfunction get_selected_text_label_ids() {\n    var selected_text_label_ids = [];\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) { selected_text_label_ids.push(d.text_label_id); });\n    return selected_text_label_ids;\n}\nfunction get_selected_text_labels() {\n    var selected_text_labels = {},\n        self = this;\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_text_labels[d.text_label_id] = this.text_labels[d.text_label_id];\n        }.bind(this));\n    return selected_text_labels;\n}\n\nfunction select_all() {\n    /** Select all nodes and text labels.\n\n     */\n    this.sel.selectAll('#nodes,#text-labels')\n        .selectAll('.node,.text-label')\n        .classed('selected', true);\n}\n\nfunction select_none() {\n    /** Deselect all nodes and text labels.\n\n     */\n    this.sel.selectAll('.selected')\n        .classed('selected', false);\n}\n\nfunction invert_selection() {\n    /** Invert selection of nodes and text labels.\n\n     */\n    var selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label');\n    selection.classed('selected', function() {\n        return !d3.select(this).classed('selected');\n    });\n}\n\nfunction select_metabolite_with_id(node_id) {\n    /** Select a metabolite with the given id, and turn off the reaction\n     target.\n\n     */\n    // deselect all text labels\n    this.deselect_text_labels();\n\n    var node_selection = this.sel.select('#nodes').selectAll('.node'),\n        coords,\n        selected_node;\n    node_selection.classed('selected', function(d) {\n        var selected = String(d.node_id) == String(node_id);\n        if (selected) {\n            selected_node = d;\n            coords = { x: d.x, y: d.y };\n        }\n        return selected;\n    });\n    this.sel.selectAll('.start-reaction-target').style('visibility', 'hidden');\n    this.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n}\n\nfunction select_selectable(node, d, shift_key_on) {\n    /** Select a metabolite or text label, and manage the shift key. */\n    shift_key_on = _.isUndefined(shift_key_on) ? false : shift_key_on;\n    var classable_selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label'),\n        classable_node;\n    if (d3.select(node).attr('class').indexOf('text-label') == -1) {\n        // node\n        classable_node = node.parentNode;\n    } else {\n        // text-label\n        classable_node = node;\n    }\n    // toggle selection\n    if (shift_key_on) {\n        // toggle this node\n        d3.select(classable_node)\n            .classed('selected', !d3.select(classable_node).classed('selected'));\n    } else {\n        // unselect all other nodes, and select this one\n        classable_selection.classed('selected', false);\n        d3.select(classable_node).classed('selected', true);\n    }\n    // run the select_metabolite callback\n    var selected_nodes = this.sel.select('#nodes').selectAll('.selected'),\n        node_count = 0,\n        coords,\n        selected_node;\n    selected_nodes.each(function(d) {\n        selected_node = d;\n        coords = { x: d.x, y: d.y };\n        node_count++;\n    });\n    this.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n}\n\nfunction select_single_node() {\n    /** Unselect all but one selected node, and return the node.\n\n     If no nodes are selected, return null.\n\n     */\n    var out = null,\n        self = this,\n        node_selection = this.sel.select('#nodes').selectAll('.selected');\n    node_selection.classed('selected', function(d, i) {\n        if (i==0) {\n            out = d;\n            return true;\n        } else {\n            return false;\n        }\n    });\n    return out;\n}\nfunction deselect_nodes() {\n    var node_selection = this.sel.select('#nodes').selectAll('.node');\n    node_selection.classed('selected', false);\n    this.callback_manager.run('deselect_nodes');\n}\nfunction select_text_label(sel, d) {\n    // deselect all nodes\n    this.deselect_nodes();\n    // find the new selection\n    // Ignore shift key and only allow single selection for now\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', function(p) { return d === p; });\n    var selected_text_labels = this.sel.select('#text-labels').selectAll('.selected'),\n        coords;\n    selected_text_labels.each(function(d) {\n        coords = { x: d.x, y: d.y };\n    });\n    this.callback_manager.run('select_text_label');\n}\n\nfunction deselect_text_labels() {\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', false);\n}\n\n// ---------------------------------------------------------------------\n// Delete\n\nfunction delete_selected() {\n    /** Delete the selected nodes and associated segments and reactions, and selected labels.\n\n     Undoable.\n\n     */\n    var selected_nodes = this.get_selected_nodes(),\n        selected_text_labels = this.get_selected_text_labels();\n    if (Object.keys(selected_nodes).length >= 1 ||\n        Object.keys(selected_text_labels).length >= 1)\n        this.delete_selectable(selected_nodes, selected_text_labels, true);\n}\n\nfunction delete_selectable(selected_nodes, selected_text_labels, should_draw) {\n    /** Delete the nodes and associated segments and reactions. Undoable.\n\n     Arguments\n     ---------\n\n     selected_nodes: An object that is a subset of map.nodes.\n\n     selected_text_labels: An object that is a subset of map.text_labels.\n\n     should_draw: A boolean argument to determine whether to draw the changes to the map.\n\n     */\n\n    var out = this.segments_and_reactions_for_nodes(selected_nodes),\n        segment_objs_w_segments = out.segment_objs_w_segments, // TODO repeated values here\n        reactions = out.reactions;\n\n    // copy nodes to undelete\n    var saved_nodes = utils.clone(selected_nodes),\n        saved_segment_objs_w_segments = utils.clone(segment_objs_w_segments),\n        saved_reactions = utils.clone(reactions),\n        saved_text_labels = utils.clone(selected_text_labels),\n        delete_and_draw = function(nodes, reactions, segment_objs,\n                                   selected_text_labels) {\n            // delete nodes, segments, and reactions with no segments\n            this.delete_node_data(Object.keys(selected_nodes));\n            this.delete_segment_data(segment_objs); // also deletes beziers\n            this.delete_reaction_data(Object.keys(reactions));\n            this.delete_text_label_data(Object.keys(selected_text_labels));\n\n            // apply the reaction and node data\n            var changed_r_scale = false,\n                changed_m_scale = false;\n            if (this.has_data_on_reactions)\n                changed_r_scale = this.calc_data_stats('reaction');\n            if (this.has_data_on_nodes)\n                changed_m_scale = this.calc_data_stats('metabolite');\n\n            // redraw\n            if (should_draw) {\n                if (changed_r_scale)\n                    this.draw_all_reactions(true, true);\n                else\n                    this.clear_deleted_reactions(); // also clears segments and beziers\n                if (changed_m_scale)\n                    this.draw_all_nodes(true);\n                else\n                    this.clear_deleted_nodes();\n                this.clear_deleted_text_labels();\n            }\n        }.bind(this);\n\n    // delete\n    delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                    selected_text_labels);\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // redraw the saved nodes, reactions, and segments\n\n        this.extend_nodes(saved_nodes);\n        this.extend_reactions(saved_reactions);\n        var reaction_ids_to_draw = Object.keys(saved_reactions);\n        for (var segment_id in saved_segment_objs_w_segments) {\n            var segment_obj = saved_segment_objs_w_segments[segment_id];\n\n            var segment = segment_obj.segment;\n            this.reactions[segment_obj.reaction_id]\n                .segments[segment_obj.segment_id] = segment;\n\n            // updated connected nodes\n            [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n                // not necessary for the deleted nodes\n                if (node_id in saved_nodes) return;\n                var node = this.nodes[node_id];\n                node.connected_segments.push({ reaction_id: segment_obj.reaction_id,\n                                               segment_id: segment_obj.segment_id });\n            }.bind(this));\n\n            // extend the beziers\n            var seg_id = segment_obj.segment_id,\n                r_id = segment_obj.reaction_id,\n                seg_o = {};\n            seg_o[seg_id] = segment_obj.segment;\n            utils.extend(this.beziers, build.new_beziers_for_segments(seg_o, r_id));\n\n            if (reaction_ids_to_draw.indexOf(segment_obj.reaction_id)==-1)\n                reaction_ids_to_draw.push(segment_obj.reaction_id);\n        }\n\n        // apply the reaction and node data\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(reaction_ids_to_draw);\n        } else {\n            if (should_draw) this.draw_these_reactions(reaction_ids_to_draw);\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (should_draw) {\n                if (scale_changed) this.draw_all_nodes(false);\n                else this.draw_these_nodes(Object.keys(saved_nodes));\n            }\n        } else {\n            if (should_draw) this.draw_these_nodes(Object.keys(saved_nodes));\n        }\n\n        // redraw the saved text_labels\n        utils.extend(this.text_labels, saved_text_labels);\n        if (should_draw) this.draw_these_text_labels(Object.keys(saved_text_labels));\n        // copy text_labels to re-delete\n        selected_text_labels = utils.clone(saved_text_labels);\n\n        // copy nodes to re-delete\n        selected_nodes = utils.clone(saved_nodes);\n        segment_objs_w_segments = utils.clone(saved_segment_objs_w_segments);\n        reactions = utils.clone(saved_reactions);\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                        selected_text_labels);\n    }.bind(this));\n}\n\nfunction delete_node_data(node_ids) {\n    /** Delete nodes, and remove from search index.\n     */\n    node_ids.forEach(function(node_id) {\n        if (this.enable_search && this.nodes[node_id].node_type=='metabolite') {\n            var found = (this.search_index.remove('n' + node_id)\n                         && this.search_index.remove('n_name' + node_id));\n            if (!found)\n                console.warn('Could not find deleted metabolite in search index');\n        }\n        delete this.nodes[node_id];\n    }.bind(this));\n}\n\nfunction delete_segment_data(segment_objs) {\n    /** Delete segments, update connected_segments in nodes, and delete\n     bezier points.\n\n     segment_objs: Object with values like { reaction_id: '123', segment_id: '456' }\n\n     */\n    for (var segment_id in segment_objs) {\n        var segment_obj = segment_objs[segment_id];\n        var reaction = this.reactions[segment_obj.reaction_id];\n\n        // segment already deleted\n        if (!(segment_obj.segment_id in reaction.segments)) return;\n\n        var segment = reaction.segments[segment_obj.segment_id];\n        // updated connected nodes\n        [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n            if (!(node_id in this.nodes)) return;\n            var node = this.nodes[node_id];\n            node.connected_segments = node.connected_segments.filter(function(so) {\n                return so.segment_id != segment_obj.segment_id;\n            });\n        }.bind(this));\n\n        // remove beziers\n        ['b1', 'b2'].forEach(function(bez) {\n            var bez_id = build.bezier_id_for_segment_id(segment_obj.segment_id, bez);\n            delete this.beziers[bez_id];\n        }.bind(this));\n\n        delete reaction.segments[segment_obj.segment_id];\n    }\n}\nfunction delete_reaction_data(reaction_ids) {\n    /** Delete reactions, segments, and beziers, and remove reaction from\n     search index.\n\n     */\n    reaction_ids.forEach(function(reaction_id) {\n        // remove beziers\n        var reaction = this.reactions[reaction_id];\n        for (var segment_id in reaction.segments) {\n            ['b1', 'b2'].forEach(function(bez) {\n                var bez_id = build.bezier_id_for_segment_id(segment_id, bez);\n                delete this.beziers[bez_id];\n            }.bind(this));\n        }\n        // delete reaction\n        delete this.reactions[reaction_id];\n        // remove from search index\n        var found = (this.search_index.remove('r' + reaction_id)\n                     && this.search_index.remove('r_name' + reaction_id));\n        if (!found)\n            console.warn('Could not find deleted reaction ' +\n                         reaction_id + ' in search index');\n        for (var g_id in reaction.genes) {\n            var found = (this.search_index.remove('r' + reaction_id + '_g' + g_id)\n                         && this.search_index.remove('r' + reaction_id + '_g_name' + g_id));\n            if (!found)\n                console.warn('Could not find deleted gene ' +\n                             g_id + ' in search index');\n        }\n    }.bind(this));\n}\nfunction delete_text_label_data(text_label_ids) {\n    /** delete text labels for an array of ids\n     */\n    text_label_ids.forEach(function(text_label_id) {\n        // delete label\n        delete this.text_labels[text_label_id];\n        // remove from search index\n        var found = this.search_index.remove('l'+text_label_id);\n        if (!found)\n            console.warn('Could not find deleted text label in search index');\n    }.bind(this));\n}\n\n// ---------------------------------------------------------------------\n// Building\n\nfunction new_reaction_from_scratch(starting_reaction, coords, direction) {\n    /** Draw a reaction on a blank canvas.\n\n     starting_reaction: bigg_id for a reaction to draw.\n     coords: coordinates to start drawing\n\n     */\n\n    // If there is no cobra model, error\n    if (!this.cobra_model) return console.error('No CobraModel. Cannot build new reaction');\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = utils.clone(this.cobra_model.reactions[starting_reaction]);\n\n    // create the first node\n    for (var metabolite_id in cobra_reaction.metabolites) {\n        var coefficient = cobra_reaction.metabolites[metabolite_id],\n            metabolite = this.cobra_model.metabolites[metabolite_id];\n        if (coefficient < 0) {\n            var selected_node_id = String(++this.largest_ids.nodes),\n                label_d = { x: 30, y: 10 },\n                selected_node = { connected_segments: [],\n                                  x: coords.x,\n                                  y: coords.y,\n                                  node_is_primary: true,\n                                  label_x: coords.x + label_d.x,\n                                  label_y: coords.y + label_d.y,\n                                  name: metabolite.name,\n                                  bigg_id: metabolite_id,\n                                  node_type: 'metabolite' },\n                new_nodes = {};\n            new_nodes[selected_node_id] = selected_node;\n            break;\n        }\n    }\n\n    // draw\n    extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes);\n\n    // draw the reaction\n    var out = this.new_reaction_for_metabolite(starting_reaction,\n                                               selected_node_id,\n                                               direction, false),\n        reaction_redo = out.redo,\n        reaction_undo = out.undo;\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // first undo the reaction\n        reaction_undo();\n        // get the nodes to delete\n        this.delete_node_data(Object.keys(new_nodes));\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        // draw\n        this.clear_deleted_nodes();\n        // deselect\n        this.deselect_nodes();\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id]);\n        // now redo the reaction\n        reaction_redo();\n    }.bind(this));\n\n    return null;\n\n    // definitions\n    function extend_and_draw_metabolite(new_nodes, selected_node_id) {\n        this.extend_nodes(new_nodes);\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.apply_metabolite_data_to_nodes(new_nodes);\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes([selected_node_id]);\n        } else {\n            this.draw_these_nodes([selected_node_id]);\n        }\n    }\n}\n\nfunction extend_nodes(new_nodes) {\n    /** Add new nodes to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_type != 'metabolite')\n                continue;\n            this.search_index.insert('n' + node_id,\n                                     { 'name': node.bigg_id,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n            this.search_index.insert('n_name' + node_id,\n                                     { 'name': node.name,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n        }\n    }\n    utils.extend(this.nodes, new_nodes);\n}\nfunction extend_reactions(new_reactions) {\n    /** Add new reactions to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var r_id in new_reactions) {\n            var reaction = new_reactions[r_id];\n            this.search_index.insert('r' + r_id, { 'name': reaction.bigg_id,\n                                                   'data': { type: 'reaction',\n                                                             reaction_id: r_id }});\n            this.search_index.insert('r_name' + r_id, { 'name': reaction.name,\n                                                        'data': { type: 'reaction',\n                                                                  reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                this.search_index.insert('r' + r_id + '_g' + g_id,\n                                         { 'name': gene.bigg_id,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n                this.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                         { 'name': gene.name,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n            }\n        }\n    }\n    utils.extend(this.reactions, new_reactions);\n}\n\nfunction new_reaction_for_metabolite(reaction_bigg_id, selected_node_id,\n                                     direction, apply_undo_redo) {\n    /** Build a new reaction starting with selected_met.\n\n     Undoable\n\n     Arguments\n     ---------\n\n     reaction_bigg_id: The BiGG ID of the reaction to draw.\n\n     selected_node_id: The ID of the node to begin drawing with.\n\n     direction: The direction to draw in.\n\n     apply_undo_redo: (Optional, Default: true) If true, then add to the\n     undo stack. Otherwise, just return the undo and redo functions.\n\n     Returns\n     -------\n\n     { undo: undo_function,\n     redo: redo_function }\n\n     */\n\n    // default args\n    if (apply_undo_redo === undefined) apply_undo_redo = true;\n\n    // get the metabolite node\n    var selected_node = this.nodes[selected_node_id];\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = this.cobra_model.reactions[reaction_bigg_id];\n\n    // build the new reaction\n    var out = build.new_reaction(reaction_bigg_id, cobra_reaction,\n                                 this.cobra_model.metabolites,\n                                 selected_node_id,\n                                 utils.clone(selected_node),\n                                 this.largest_ids,\n                                 this.cobra_model.cofactors,\n                                 direction),\n        new_nodes = out.new_nodes,\n        new_reactions = out.new_reactions,\n        new_beziers = out.new_beziers;\n\n    // draw\n    extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                          new_beziers, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes),\n        saved_reactions = utils.clone(new_reactions),\n        saved_beziers = utils.clone(new_beziers);\n\n    // add to undo/redo stack\n    var undo_fn = function() {\n        // undo\n        // get the nodes to delete\n        delete new_nodes[selected_node_id];\n        this.delete_node_data(Object.keys(new_nodes));\n        this.delete_reaction_data(Object.keys(new_reactions)); // also deletes beziers\n        select_metabolite_with_id.apply(this, [selected_node_id]);\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        new_reactions = utils.clone(saved_reactions);\n        new_beziers = utils.clone(saved_beziers);\n        // draw\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, true);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.clear_deleted_reactions(true); // also clears segments and beziers\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(true);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.clear_deleted_nodes();\n        }\n    }.bind(this),\n        redo_fn = function () {\n            // redo\n            // clone the nodes and reactions, to redo this action later\n            extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                                  new_beziers, selected_node_id]);\n        }.bind(this);\n\n    if (apply_undo_redo)\n        this.undo_stack.push(undo_fn, redo_fn);\n\n    return { undo: undo_fn,\n             redo: redo_fn };\n\n    // definitions\n    function extend_and_draw_reaction(new_nodes, new_reactions, new_beziers,\n                                      selected_node_id) {\n        this.extend_reactions(new_reactions);\n        utils.extend(this.beziers, new_beziers);\n        // remove the selected node so it can be updated\n        this.delete_node_data([selected_node_id]); // TODO this is a hack. fix\n        this.extend_nodes(new_nodes);\n\n        // apply the reaction and node data to the scales\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.draw_these_reactions(Object.keys(new_reactions));\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.draw_these_nodes(Object.keys(new_nodes));\n        }\n\n        // select new primary metabolite\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_is_primary && node_id!=selected_node_id) {\n                this.select_metabolite_with_id(node_id);\n                var new_coords = { x: node.x, y: node.y };\n                if (this.zoom_container)\n                    this.zoom_container.translate_off_screen(new_coords);\n            }\n        }\n    }\n\n}\nfunction cycle_primary_node() {\n    var selected_nodes = this.get_selected_nodes();\n    // get the first node\n    var node_id = Object.keys(selected_nodes)[0],\n        node = selected_nodes[node_id],\n        reactions = this.reactions,\n        nodes = this.nodes;\n    // make the other reactants or products secondary\n    // 1. Get the connected anchor nodes for the node\n    var connected_anchor_ids = [],\n        reactions_to_draw;\n    nodes[node_id].connected_segments.forEach(function(segment_info) {\n        reactions_to_draw = [segment_info.reaction_id];\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        connected_anchor_ids.push(segment.from_node_id==node_id ?\n                                  segment.to_node_id : segment.from_node_id);\n    });\n    // can only be connected to one anchor\n    if (connected_anchor_ids.length != 1) {\n        console.error('Only connected nodes with a single reaction can be selected');\n        return;\n    }\n    var connected_anchor_id = connected_anchor_ids[0];\n    // 2. find nodes connected to the anchor that are metabolites\n    var related_node_ids = [node_id];\n    var segments = [];\n    nodes[connected_anchor_id].connected_segments.forEach(function(segment_info) { // deterministic order\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        var conn_met_id = segment.from_node_id == connected_anchor_id ? segment.to_node_id : segment.from_node_id,\n            conn_node = nodes[conn_met_id];\n        if (conn_node.node_type == 'metabolite' && conn_met_id != node_id) {\n            related_node_ids.push(String(conn_met_id));\n        }\n    });\n    // 3. make sure they only have 1 reaction connection, and check if\n    // they match the other selected nodes\n    for (var i=0; i<related_node_ids.length; i++) {\n        if (nodes[related_node_ids[i]].connected_segments.length > 1) {\n            console.error('Only connected nodes with a single reaction can be selected');\n            return;\n        }\n    }\n    for (var a_selected_node_id in selected_nodes) {\n        if (a_selected_node_id!=node_id && related_node_ids.indexOf(a_selected_node_id) == -1) {\n            console.warn('Selected nodes are not on the same reaction');\n            return;\n        }\n    }\n    // 4. change the primary node, and change coords, label coords, and beziers\n    var nodes_to_draw = [],\n        last_i = related_node_ids.length - 1,\n        last_node = nodes[related_node_ids[last_i]],\n        last_is_primary = last_node.node_is_primary,\n        last_coords = { x: last_node.x, y: last_node.y,\n                        label_x: last_node.label_x, label_y: last_node.label_y };\n    if (last_node.connected_segments.length > 1)\n        console.warn('Too many connected segments for node ' + last_node.node_id);\n    var last_segment_info = last_node.connected_segments[0], // guaranteed above to have only one\n        last_segment;\n    try {\n        last_segment = reactions[last_segment_info.reaction_id].segments[last_segment_info.segment_id];\n        if (last_segment === undefined) throw new Error('undefined segment');\n    } catch (e) {\n        console.error('Could not find connected segment ' + last_segment_info.segment_id);\n        return;\n    }\n    var last_bezier = { b1: last_segment.b1, b2: last_segment.b2 },\n        primary_node_id;\n    related_node_ids.forEach(function(related_node_id) {\n        var node = nodes[related_node_id],\n            this_is_primary = node.node_is_primary,\n            these_coords = { x: node.x, y: node.y,\n                             label_x: node.label_x, label_y: node.label_y },\n            this_segment_info = node.connected_segments[0],\n            this_segment = reactions[this_segment_info.reaction_id].segments[this_segment_info.segment_id],\n            this_bezier = { b1: this_segment.b1, b2: this_segment.b2 };\n        node.node_is_primary = last_is_primary;\n        node.x = last_coords.x; node.y = last_coords.y;\n        node.label_x = last_coords.label_x; node.label_y = last_coords.label_y;\n        this_segment.b1 = last_bezier.b1; this_segment.b2 = last_bezier.b2;\n        last_is_primary = this_is_primary;\n        last_coords = these_coords;\n        last_bezier = this_bezier;\n        if (node.node_is_primary) primary_node_id = related_node_id;\n        nodes_to_draw.push(related_node_id);\n    });\n    // 5. cycle the connected_segments array so the next time, it cycles differently\n    var old_connected_segments = nodes[connected_anchor_id].connected_segments,\n        last_i = old_connected_segments.length - 1,\n        new_connected_segments = [old_connected_segments[last_i]];\n    old_connected_segments.forEach(function(segment, i) {\n        if (last_i==i) return;\n        new_connected_segments.push(segment);\n    });\n    nodes[connected_anchor_id].connected_segments = new_connected_segments;\n    // 6. draw the nodes\n    this.draw_these_nodes(nodes_to_draw);\n    this.draw_these_reactions(reactions_to_draw);\n    // 7. select the primary node\n    this.select_metabolite_with_id(primary_node_id);\n    return;\n}\n\nfunction toggle_selected_node_primary() {\n    /** Toggle the primary/secondary status of each selected node.\n\n     Undoable.\n\n     */\n    var selected_node_ids = this.get_selected_node_ids(),\n        go = function(ids) {\n            var nodes_to_draw = {},\n                hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n            ids.forEach(function(id) {\n                if (!(id in this.nodes)) {\n                    console.warn('Could not find node: ' + id);\n                    return;\n                }\n                var node = this.nodes[id];\n                if (node.node_type == 'metabolite') {\n                    node.node_is_primary = !node.node_is_primary;\n                    nodes_to_draw[id] = node;\n                }\n            }.bind(this));\n            // draw the nodes\n            this.draw_these_nodes(Object.keys(nodes_to_draw));\n            // draw associated reactions\n            if (hide_secondary_metabolites) {\n                var out = this.segments_and_reactions_for_nodes(nodes_to_draw),\n                    reaction_ids_to_draw_o = {};\n                for (var id in out.segment_objs_w_segments) {\n                    var r_id = out.segment_objs_w_segments[id].reaction_id;\n                    reaction_ids_to_draw_o[r_id] = true;\n                }\n                this.draw_these_reactions(Object.keys(reaction_ids_to_draw_o));\n            }\n        }.bind(this);\n\n    // go\n    go(selected_node_ids);\n\n    // add to the undo stack\n    this.undo_stack.push(function () {\n        go(selected_node_ids);\n    }, function () {\n        go(selected_node_ids);\n    });\n}\n\nfunction segments_and_reactions_for_nodes(nodes) {\n    /** Get segments and reactions that should be deleted with node deletions\n\n     */\n    var segment_objs_w_segments = {},\n        these_reactions = {},\n        segment_ids_for_reactions = {},\n        reactions = this.reactions;\n    // for each node\n    for (var node_id in nodes) {\n        var node = nodes[node_id];\n        // find associated segments and reactions\n        node.connected_segments.forEach(function(segment_obj) {\n            var segment;\n            try {\n                segment = reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segments for node');\n                return;\n            }\n            var segment_obj_w_segment = utils.clone(segment_obj);\n            segment_obj_w_segment['segment'] = utils.clone(segment);\n            segment_objs_w_segments[segment_obj.segment_id] = segment_obj_w_segment;\n            if (!(segment_obj.reaction_id in segment_ids_for_reactions))\n                segment_ids_for_reactions[segment_obj.reaction_id] = [];\n            segment_ids_for_reactions[segment_obj.reaction_id].push(segment_obj.segment_id);\n        });\n    }\n    // find the reactions that should be deleted because they have no segments left\n    for (var reaction_id in segment_ids_for_reactions) {\n        var reaction = reactions[reaction_id],\n            these_ids = segment_ids_for_reactions[reaction_id],\n            has = true;\n        for (var segment_id in reaction.segments) {\n            if (these_ids.indexOf(segment_id)==-1) has = false;\n        }\n        if (has) these_reactions[reaction_id] = reaction;\n    }\n    return { segment_objs_w_segments: segment_objs_w_segments, reactions: these_reactions };\n}\n\nfunction new_text_label(coords, text) {\n    // make an label\n    var out = build.new_text_label(this.largest_ids, text, coords);\n    this.text_labels[out.id] = out.label;\n    var sel = this.draw_these_text_labels([out.id]);\n    // add to the search index\n    this.search_index.insert('l' + out.id, { 'name': text,\n                                             'data': { type: 'text_label',\n                                                       text_label_id: out.id }});\n    return out.id;\n}\n\nfunction edit_text_label(text_label_id, new_value, should_draw) {\n    // save old value\n    var saved_value = this.text_labels[text_label_id].text,\n        edit_and_draw = function(new_val, should_draw) {\n            // set the new value\n            this.text_labels[text_label_id].text = new_val;\n            if (should_draw) this.draw_these_text_labels([text_label_id]);\n            // update in the search index\n            var record_id = 'l' + text_label_id,\n                found = this.search_index.remove(record_id);\n            if (!found)\n                console.warn('Could not find modified text label in search index');\n            this.search_index.insert(record_id, { 'name': new_val,\n                                                  'data': { type: 'text_label',\n                                                            text_label_id: text_label_id }});\n        }.bind(this);\n\n    // edit the label\n    edit_and_draw(new_value, should_draw);\n\n    // add to undo stack\n    this.undo_stack.push(function() {\n        edit_and_draw(saved_value, should_draw);\n    }, function () {\n        edit_and_draw(new_value, should_draw);\n    });\n}\n\n// -------------------------------------------------------------------------\n// Zoom\n\nfunction zoom_extent_nodes(margin) {\n    /** Zoom to fit all the nodes.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'nodes');\n}\nfunction zoom_extent_canvas(margin) {\n    /** Zoom to fit the canvas.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'canvas');\n}\nfunction _zoom_extent(margin, mode) {\n    /** Zoom to fit the canvas or all the nodes. Returns error if one is\n     raised.\n\n     Arguments\n     ---------\n\n     margin: optional argument to set the margins.\n\n     mode: Values are 'nodes', 'canvas'.\n\n     */\n\n    // optional args\n    if (margin===undefined) margin = (mode=='nodes' ? 0.2 : 0);\n    if (mode===undefined) mode = 'canvas';\n\n    var new_zoom, new_pos,\n        size = this.get_size();\n    // scale margin to window size\n    margin = margin * size.height;\n\n    if (mode=='nodes') {\n        // get the extent of the nodes\n        var min = { x: null, y: null }, // TODO make infinity?\n            max = { x: null, y: null };\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            if (min.x===null) min.x = node.x;\n            if (min.y===null) min.y = node.y;\n            if (max.x===null) max.x = node.x;\n            if (max.y===null) max.y = node.y;\n\n            min.x = Math.min(min.x, node.x);\n            min.y = Math.min(min.y, node.y);\n            max.x = Math.max(max.x, node.x);\n            max.y = Math.max(max.y, node.y);\n        }\n        // set the zoom\n        new_zoom = Math.min((size.width - margin*2) / (max.x - min.x),\n                            (size.height - margin*2) / (max.y - min.y));\n        new_pos = { x: - (min.x * new_zoom) + margin + ((size.width - margin*2 - (max.x - min.x)*new_zoom) / 2),\n                    y: - (min.y * new_zoom) + margin + ((size.height - margin*2 - (max.y - min.y)*new_zoom) / 2) };\n    } else if (mode=='canvas') {\n        // center the canvas\n        new_zoom =  Math.min((size.width - margin*2) / (this.canvas.width),\n                             (size.height - margin*2) / (this.canvas.height));\n        new_pos = { x: - (this.canvas.x * new_zoom) + margin + ((size.width - margin*2 - this.canvas.width*new_zoom) / 2),\n                    y: - (this.canvas.y * new_zoom) + margin + ((size.height - margin*2 - this.canvas.height*new_zoom) / 2) };\n    } else {\n        return console.error('Did not recognize mode');\n    }\n    debugger;\n    this.zoom_container.go_to(new_zoom, new_pos);\n    return null;\n}\n\nfunction get_size() {\n    return this.zoom_container.get_size();\n}\n\nfunction zoom_to_reaction(reaction_id) {\n    var reaction = this.reactions[reaction_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - reaction.label_x * new_zoom + size.width/2,\n                    y: - reaction.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_node(node_id) {\n    var node = this.nodes[node_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - node.label_x * new_zoom + size.width/2,\n                    y: - node.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_text_label(text_label_id) {\n    var text_label = this.text_labels[text_label_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - text_label.x * new_zoom + size.width/2,\n                    y: - text_label.y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction highlight_reaction(reaction_id) {\n    this.highlight(this.sel.selectAll('#r'+reaction_id).selectAll('text'));\n}\n\nfunction highlight_node(node_id) {\n    this.highlight(this.sel.selectAll('#n'+node_id).selectAll('text'));\n}\n\nfunction highlight_text_label(text_label_id) {\n    this.highlight(this.sel.selectAll('#l'+text_label_id).selectAll('text'));\n}\n\nfunction highlight(sel) {\n    this.sel.selectAll('.highlight')\n        .classed('highlight', false);\n    if (sel !== null) {\n        sel.classed('highlight', true);\n    }\n}\n\n// -------------------------------------------------------------------------\n// IO\n\nfunction save() {\n    utils.download_json(this.map_for_export(), this.map_name);\n}\n\n\nfunction map_for_export() {\n    var out = [{ \"map_name\": this.map_name,\n                 \"map_id\": this.map_id,\n                 \"map_description\": this.map_description,\n                 \"homepage\": \"https://escher.github.io\",\n                 \"schema\": \"https://escher.github.io/escher/jsonschema/1-0-0#\"\n               },\n               { reactions: utils.clone(this.reactions),\n                 nodes: utils.clone(this.nodes),\n                 text_labels: utils.clone(this.text_labels),\n                 canvas: this.canvas.size_and_location() }\n              ];\n\n    // remove extra data\n    for (var r_id in out[1].reactions) {\n        var reaction = out[1].reactions[r_id],\n            new_reaction = {};\n        ['name', 'bigg_id','reversibility', 'label_x', 'label_y',\n         'gene_reaction_rule', 'genes', 'metabolites'\n        ].forEach(function(attr) {\n            new_reaction[attr] = reaction[attr];\n        });\n        new_reaction['segments'] = {};\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id],\n                new_segment = {};\n            ['from_node_id', 'to_node_id', 'b1', 'b2'\n            ].forEach(function(attr) {\n                new_segment[attr] = segment[attr];\n            });\n            new_reaction['segments'][s_id] = new_segment;\n        }\n        out[1].reactions[r_id] = new_reaction;\n    }\n    for (var n_id in out[1].nodes) {\n        var node = out[1].nodes[n_id],\n            new_node = {},\n            attrs;\n        if (node.node_type == 'metabolite') {\n            attrs = ['node_type', 'x', 'y', 'bigg_id', 'name', 'label_x', 'label_y',\n                     'node_is_primary'];\n        } else {\n            attrs = ['node_type', 'x', 'y'];\n        }\n        attrs.forEach(function(attr) {\n            new_node[attr] = node[attr];\n        });\n        out[1].nodes[n_id] = new_node;\n    }\n    for (var t_id in out[1].text_labels) {\n        var text_label = out[1].text_labels[t_id],\n            new_text_label = {},\n            attrs = [\"x\", \"y\", \"text\"];\n        attrs.forEach(function(attr) {\n            new_text_label[attr] = text_label[attr];\n        });\n        out[1].text_labels[t_id] = new_text_label;\n    }\n    // canvas\n    var canvas_el = out[1].canvas,\n        new_canvas_el = {},\n        attrs = [\"x\", \"y\", \"width\", \"height\"];\n    attrs.forEach(function(attr) {\n        new_canvas_el[attr] = canvas_el[attr];\n    });\n    out[1].canvas = new_canvas_el;\n\n    return out;\n}\n\n\nfunction save_svg() {\n    /** Rescale the canvas and save svg.\n\n     */\n    // run the before callback\n    this.callback_manager.run('before_svg_export');\n\n    // turn of zoom and translate so that illustrator likes the map\n    var window_scale = this.zoom_container.window_scale,\n        window_translate = this.zoom_container.window_translate,\n        canvas_size_and_loc = this.canvas.size_and_location(),\n        mouse_node_size_and_trans = {\n            w: this.canvas.mouse_node.attr('width'),\n            h: this.canvas.mouse_node.attr('height'),\n            transform: this.canvas.mouse_node.attr('transform')\n        };\n    this.zoom_container._go_to_svg(1.0, { x: -canvas_size_and_loc.x, y: -canvas_size_and_loc.y }, function() {\n        this.svg.attr('width', canvas_size_and_loc.width);\n        this.svg.attr('height', canvas_size_and_loc.height);\n        this.canvas.mouse_node.attr('width', '0px');\n        this.canvas.mouse_node.attr('height', '0px');\n        this.canvas.mouse_node.attr('transform', null);\n        // hide the segment control points\n        var hidden_sel = this.sel.selectAll('.multimarker-circle,.midmarker-circle,#canvas')\n                .style('visibility', 'hidden');\n\n        // do the epxort\n        utils.download_svg('saved_map', this.svg, true);\n\n        // revert everything\n        this.zoom_container._go_to_svg(window_scale, window_translate, function() {\n            this.svg.attr('width', null);\n            this.svg.attr('height', null);\n            this.canvas.mouse_node.attr('width', mouse_node_size_and_trans.w);\n            this.canvas.mouse_node.attr('height', mouse_node_size_and_trans.h);\n            this.canvas.mouse_node.attr('transform', mouse_node_size_and_trans.transform);\n            // unhide the segment control points\n            hidden_sel.style('visibility', null);\n\n            // run the after callback\n            this.callback_manager.run('after_svg_export');\n        }.bind(this));\n    }.bind(this));\n}\n\n\nfunction convert_map() {\n    /** Assign the descriptive names and gene_reaction_rules from the model\n     to the map.\n\n     If no map is loaded, then throw an Error.\n\n     If some reactions are not in the model, then warn in the status.\n\n     */\n    // run the before callback\n    this.callback_manager.run('before_convert_map');\n\n    // check the model\n    if (!this.has_cobra_model()) throw Error('No COBRA model loaded.');\n    var model = this.cobra_model;\n\n    // ids for reactions and metabolites not found in the model\n    var reactions_not_found = {},\n        reaction_attrs = ['name', 'gene_reaction_rule', 'genes'],\n        met_nodes_not_found = {},\n        metabolite_attrs = ['name'],\n        found;\n    // convert reactions\n    for (var reaction_id in this.reactions) {\n        var reaction = this.reactions[reaction_id];\n        found = false;\n        // find in cobra model\n        for (var model_reaction_id in model.reactions) {\n            var model_reaction = model.reactions[model_reaction_id];\n            if (model_reaction.bigg_id == reaction.bigg_id) {\n                reaction_attrs.forEach(function(attr) {\n                    reaction[attr] = model_reaction[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            reactions_not_found[reaction_id] = true;\n    }\n    // convert metabolites\n    for (var node_id in this.nodes) {\n        var node = this.nodes[node_id];\n        // only look at metabolites\n        if (node.node_type != 'metabolite') continue;\n        found = false;\n        // find in cobra model\n        for (var model_metabolite_id in model.metabolites) {\n            var model_metabolite = model.metabolites[model_metabolite_id];\n            if (model_metabolite.bigg_id == node.bigg_id) {\n                metabolite_attrs.forEach(function(attr) {\n                    node[attr] = model_metabolite[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            met_nodes_not_found[node_id] = true;\n    }\n\n    // status\n    var n_reactions_not_found = Object.keys(reactions_not_found).length,\n        n_met_nodes_not_found = Object.keys(met_nodes_not_found).length,\n        status_delay = 3000;\n    if (n_reactions_not_found == 0 &&\n        n_met_nodes_not_found == 0) {\n        this.set_status('Successfully converted attributes.', status_delay);\n    } else if (n_met_nodes_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else if (n_reactions_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_met_nodes_not_found +\n                        ' metabolites in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions and ' + n_met_nodes_not_found + ' metabolites in the model.',\n                        status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    }\n\n    // redraw\n    this.draw_everything();\n\n    // run the after callback\n    this.callback_manager.run('after_convert_map');\n}\n","/** PlacedDiv. A container to position an html div to match the coordinates of a\n SVG element. */\n\nvar utils = require('./utils');\n\n\nvar PlacedDiv = utils.make_class();\n// instance methods\nPlacedDiv.prototype = {\n    init: init,\n    is_visible: is_visible,\n    place: place,\n    hide: hide\n};\nmodule.exports = PlacedDiv;\n\n\n// definitions\nfunction init(div, map, displacement) {\n    // make the input box\n    this.div = div;\n\n    if (displacement===undefined)\n        displacement = {x: 0, y: 0};\n    this.displacement = displacement;\n\n    this.map = map;\n}\n\nfunction is_visible() {\n    return this.div.style('display') != 'none';\n}\n\nfunction place(coords) {\n    /** Position the html div to match the given SVG coordinates.\n\n     */\n    // show the input\n    this.div.style('display', null);\n\n    // move the new input\n    var window_translate = this.map.zoom_container.window_translate,\n        window_scale = this.map.zoom_container.window_scale,\n        map_size = this.map.get_size(),\n        left = Math.max(20,\n                        Math.min(map_size.width - 270,\n                                 (window_scale * coords.x + window_translate.x - this.displacement.x))),\n        top = Math.max(20,\n                       Math.min(map_size.height - 40,\n                                (window_scale * coords.y + window_translate.y - this.displacement.y)));\n    this.div.style('position', 'absolute')\n        .style('display', 'block')\n        .style('left', left+'px')\n        .style('top', top+'px');\n}\n\nfunction hide() {\n    this.div.style('display', 'none');\n}\n","/** A QuickJump menu to move between maps.\n\n Arguments\n ---------\n\n sel: The d3 selection of an html node to place the menu inside.\n\n options: An array of map names to jump to.\n\n load_callback: A callback function that accepts two arguments: map_name,\n and another callback which returns true or false for success or failure\n (callback purgatory).\n\n */\n\nvar utils = require('./utils');\n\n\nvar QuickJump = utils.make_class();\n// instance methods\nQuickJump.prototype = {\n    init: init,\n    reset_selection: reset_selection,\n    replace_state_for_map_name: replace_state_for_map_name\n};\nmodule.exports = QuickJump;\n\n\n// instance methods\nfunction init(sel, load_callback) {\n    // set up the menu\n    var select_sel = sel.append('select')\n            .attr('id', 'quick-jump-menu')\n            .attr('class', 'form-control');\n    this.selector = select_sel;\n\n    // get the options to show\n    var url_comp = utils.parse_url_components(window),\n        current = ('map_name' in url_comp) ? url_comp.map_name : null,\n        quick_jump_path = ('quick_jump_path' in url_comp) ? url_comp.quick_jump_path : null,\n        options = ('quick_jump' in url_comp) ? url_comp.quick_jump : [],\n        default_value = '— Jump to map —',\n        view_options = [default_value].concat(options);\n    if (current !== null) {\n        view_options = view_options.filter(function(o) {\n            return o != current;\n        });\n    }\n\n    select_sel.selectAll('option')\n        .data(view_options)\n        .enter()\n        .append('option')\n        .text(function(d) {\n            // works whether or not a '.' is present\n            return d.split('.').slice(-1)[0];\n        });\n\n    // only show if there are options\n    select_sel.style('display', view_options.length > 1 ? 'block' : 'none');\n\n    // on selection\n    var change_map = function(map_name) {\n        load_callback(map_name, quick_jump_path, function(success) {\n            if (success)\n                this.replace_state_for_map_name(map_name);\n            else\n                this.reset_selection();\n        }.bind(this));\n    }.bind(this);\n\n    select_sel.on('change', function() {\n        // get the new map\n        var map_name = this.options[this.selectedIndex].__data__;\n        change_map(map_name);\n    });\n}\n\nfunction reset_selection() {\n    this.selector.node().selectedIndex = 0;\n}\n\nfunction replace_state_for_map_name(map_name) {\n    /** Just changes the url to match the new map name. Does not actually\n     manage the HTML5 history.\n\n     */\n\n    // update the url with the new map\n    var url = window.location.href\n            .replace(/(map_name=)([^&]+)(&|$)/, '$1' + map_name + '$3');\n    window.history.replaceState('Not implemented', '', url);\n}\n","/** Scale */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Scale = utils.make_class();\nScale.prototype = {\n    init: init,\n    connect_to_settings: connect_to_settings\n};\nmodule.exports = Scale;\n\n\nfunction init() {\n    this.x = d3.scale.linear();\n    this.y = d3.scale.linear();\n    this.x_size = d3.scale.linear();\n    this.y_size = d3.scale.linear();\n    this.size = d3.scale.linear();\n    this.reaction_color = d3.scale.linear().clamp(true);\n    this.reaction_size = d3.scale.linear().clamp(true);\n    this.metabolite_color = d3.scale.linear().clamp(true);\n    this.metabolite_size = d3.scale.linear().clamp(true);\n    this.scale_path = function(path) {\n        var x_fn = this.x, y_fn = this.y;\n        // TODO: scale arrow width\n        var str = d3.format(\".2f\"),\n            path = path.replace(/(M|L)([0-9-.]+),?\\s*([0-9-.]+)/g, function (match, p0, p1, p2) {\n                return p0 + [str(x_fn(parseFloat(p1))), str(y_fn(parseFloat(p2)))].join(', ');\n            }),\n            reg = /C([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)/g;\n        path = path.replace(reg, function (match, p1, p2, p3, p4, p5, p6) {\n            return 'C'+str(x_fn(parseFloat(p1)))+','+\n                str(y_fn(parseFloat(p2)))+' '+\n                str(x_fn(parseFloat(p3)))+','+\n                str(y_fn(parseFloat(p4)))+' '+\n                [str(x_fn(parseFloat(p5)))+','+str(y_fn(parseFloat(p6)))];\n        });\n        return path;\n    }.bind(this);\n    this.scale_decimals = function(path, scale_fn, precision) {\n        var str = d3.format(\".\"+String(precision)+\"f\");\n        path = path.replace(/([0-9.]+)/g, function (match, p1) {\n            return str(scale_fn(parseFloat(p1)));\n        });\n        return path;\n    };\n}\n\nfunction connect_to_settings(settings, map, get_data_statistics) {\n    // domains\n    var update_reaction = function(s) {\n        var out = sort_scale(s, get_data_statistics()['reaction']);\n        this.reaction_color.domain(out.domain);\n        this.reaction_size.domain(out.domain);\n        this.reaction_color.range(out.color_range);\n        this.reaction_size.range(out.size_range);\n    }.bind(this);\n    var update_metabolite = function(s) {\n        var out = sort_scale(s, get_data_statistics()['metabolite']);\n        this.metabolite_color.domain(out.domain);\n        this.metabolite_size.domain(out.domain);\n        this.metabolite_color.range(out.color_range);\n        this.metabolite_size.range(out.size_range);\n    }.bind(this);\n\n    // scale changes\n    settings.streams['reaction_scale'].onValue(update_reaction);\n    settings.streams['metabolite_scale'].onValue(update_metabolite);\n    // stats changes\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) update_reaction(settings.get_option('reaction_scale'));\n    });\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) update_metabolite(settings.get_option('metabolite_scale'));\n    });\n\n    // definitions\n    function sort_scale(scale, stats) {\n        var sorted = scale.map(function(x) {\n            var v;\n            if (x.type in stats)\n                v = stats[x.type];\n            else if (x.type == 'value')\n                v = x.value;\n            else\n                throw new Error('Bad domain type ' + x.type);\n            return { v: v,\n                     color: x.color,\n                     size: x.size };\n        }).sort(function(a, b) {\n            return a.v - b.v;\n        });\n        return { domain: sorted.map(function(x) { return x.v; }),\n                 color_range: sorted.map(function(x) { return x.color; }),\n                 size_range: sorted.map(function(x) { return x.size; }) };\n    }\n}\n","/** ScaleEditor. An interactive UI to edit color and size scales.\n\n Attributes\n ----------\n\n sel: A d3 selection.\n\n type: A type, that should be unique on the page.\n\n settings: The Settings object.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar bacon = require('baconjs');\n\n\nvar ScaleEditor = utils.make_class();\n// instance methods\nScaleEditor.prototype = {\n    init: init,\n    update: update,\n    update_no_data: update_no_data,\n    _data_not_loaded: _data_not_loaded\n};\nmodule.exports = ScaleEditor;\n\n\n// instance methods\nfunction init(sel, type, settings, get_data_statistics) {\n    // sels\n    var grad_id = 'grad' + type + this.unique_string;\n    this.w = 400;\n    this.h = 30;\n    this.x = 20;\n    this.input_width = 90;\n    this.input_height = 24;\n    var b = sel.append('div')\n            .attr('class', 'scale-editor');\n    // no data loaded\n    this.data_not_loaded = b.append('div')\n        .attr('class', 'data-not-loaded')\n        .text((type == 'reaction' ? 'Reaction and gene' : 'Metabolite') + ' data not loaded');\n    // label\n    this.input_label_group = b.append('div')\n        .attr('class', 'input-label-group');\n    // no data\n    var nd = b.append('div')\n            .style('top', this.input_height * 3 + 56 + 10 + 'px')\n            .attr('class', 'no-data');\n    nd.append('span').text('Styles for ' + type + 's with no data')\n        .attr('class', 'no-data-heading');\n    this.no_data_container = nd.append('div');\n    var c = b.append('div')\n            .attr('class', 'centered');\n    this.add_group = c.append('div');\n    this.trash_group = c.append('div')\n        .attr('class', 'trash-container');\n    var svg = c.append('svg')\n            .attr('class', 'scale-svg');\n    this.input_group = c.append('div')\n        .attr('class', 'input-container');\n    this.gradient = svg.append('defs')\n        .append('linearGradient')\n        .attr('id', grad_id);\n    svg.append('rect')\n        .attr('class', 'rect')\n        .attr('fill', 'url(#' + grad_id + ')')\n        .attr('width', this.w + 'px')\n        .attr('height', this.h + 'px')\n        .attr('x', this.x + 'px'),\n    this.pickers_group = svg.append('g');\n\n    // settings\n    this.type = type;\n    this.settings = settings;\n    this.get_data_statistics = get_data_statistics;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    // collect data\n    this.no_data = {};\n    ['color', 'size'].forEach(function(s) {\n        this.no_data[s] = null;\n        this.settings.streams[this.type + '_no_data_' + s].onValue(function(val) {\n            this.no_data[s] = val;\n            this.update_no_data();\n        }.bind(this));\n    }.bind(this));\n\n    this.settings.streams[type + '_scale'].onValue(function(scale) {\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n}\n\nfunction update() {\n    var scale = this.scale,\n        stats = this.get_data_statistics()[this.type],\n        bar_w = 14,\n        bar_h = 35,\n        x_disp = this.x,\n        data_not_loaded = this._data_not_loaded();\n\n    // Must have max and min. Otherwise, assume that no data is loaded.\n    if (data_not_loaded) {\n        scale = [{ type: 'min', 'color': null, 'size': null },\n                 { type: 'max', 'color': null, 'size': null }];\n        stats = { 'min': 0, 'max': 1 };\n    }\n\n    var sc = d3.scale.linear()\n            .domain([0, this.w])\n            .range([stats.min, stats.max]),\n        sc_size = d3.scale.linear()\n            .domain([0, this.w])\n            .range([0, stats.max - stats.min]);\n\n    // ---------------------------------------------------------------------\n    // convenience functions\n    var bring_to_front = function(d, i) {\n        // bring an input set to the front\n        this.input_group.selectAll('.input-set').each(function(d2) {\n            d3.select(this).classed('selected-set', d === d2);\n        });\n    }.bind(this);\n\n    var get_this_val = function(d) {\n        return (d.type == 'value') ? d.value : stats[d.type];\n    };\n\n    var set_scale = function(scale) {\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this);\n\n    // ---------------------------------------------------------------------\n    // make the gradient\n    var sorted_domain = scale.map(function(d) {\n        return { frac: (get_this_val(d) - stats.min) / (stats.max - stats.min),\n                 color: d.color };\n    }).filter(function(d) {\n        return (d.frac >= 0 && d.frac <= 1.0);\n    }).sort(function(a, b) {\n        return a.frac - b.frac;\n    });\n    var stops = this.gradient.selectAll('stop')\n            .data(sorted_domain);\n    stops.enter()\n        .append('stop');\n    stops.attr('offset', function(d) {\n        return d.frac * 100 + '%';\n    }).style('stop-color', function (d) {\n        return d.color === null ? '#F1ECFA' : d.color;\n    });\n    stops.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // no data sign\n\n    this.data_not_loaded.style('visibility', (data_not_loaded ? null : 'hidden'));\n\n    // ---------------------------------------------------------------------\n    // make the pickers\n    var pickers = this.pickers_group\n            .selectAll('.picker')\n            .data(scale);\n    // drag\n    var drag = d3.behavior.drag();\n    drag.on('drag', function(d, i) {\n        // on drag, make it a value type\n        if (['value', 'min', 'max'].indexOf(scale[i].type) === -1) {\n            // get the current value and set it\n            scale[i].value = get_this_val(d);\n            scale[i].type = 'value';\n        }\n        // change the model on drag\n        var new_d = scale[i].value + sc_size(d3.event.dx),\n            buf = sc_size(bar_w + 2);\n        if (new_d > stats.max - buf) new_d = stats.max - buf;\n        if (new_d < stats.min + buf) new_d = stats.min + buf;\n        // round to 2 decimals\n        new_d = Math.floor(new_d * 100.0) / 100.0;\n        scale[i].value = new_d;\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // enter\n    pickers.enter()\n        .append('g')\n        .attr('class', 'picker')\n        .style('cursor', 'pointer')\n        .append('rect');\n    // update\n    pickers.select('rect')\n        .attr('x', function(d, i) {\n            var val = get_this_val(d),\n                buf = bar_w + 2;\n            if (d.type == 'value' && val <= stats.min)\n                return sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            if (d.type == 'value' && val >= stats.max)\n                return sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            return sc.invert(val) - (bar_w / 2) + x_disp;\n        })\n        .attr('width', bar_w + 'px')\n        .attr('height', bar_h + 'px')\n        .call(drag)\n        .on('mousedown', bring_to_front);\n    // exit\n    pickers.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the delete buttons\n    var trashes = this.trash_group.selectAll('span')\n            .data(scale);\n    // enter\n    trashes.enter()\n        .append('span');\n    // update\n    trashes.attr('class', function(d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return null;\n        return 'trash glyphicon glyphicon-trash';\n    }).style('left', function(d) {\n        return sc.invert(get_this_val(d)) - (bar_w / 2) + x_disp + 'px';\n    }).on('click', function (d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return;\n        scale = scale.slice(0, i).concat(scale.slice(i + 1));\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // exit\n    trashes.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the add button\n    var add = this.add_group.selectAll('.add')\n            .data(['add']);\n    // enter\n    add.enter()\n        .append('span')\n        .attr('class', 'add glyphicon glyphicon-plus');\n    // update\n    add.on('click', function (d) {\n        if (data_not_loaded) return;\n\n        var new_d = (stats.max + stats.min) / 2,\n            buf = sc_size(bar_w + 2),\n            last_ind = 0;\n        // try to make the new point not overlap\n        for (var j = 0, l = scale.length; j < l; j++) {\n            var th = get_this_val(scale[j]);\n            if (Math.abs(th - new_d) < buf) {\n                new_d = new_d + buf;\n                if (new_d > stats.max - buf) new_d = stats.max - buf;\n                if (new_d < stats.min + buf) new_d = stats.min + buf;\n            }\n            if (new_d > th)\n                last_ind = j;\n        }\n        // add\n        scale.push({ type: 'value',\n                     value: new_d,\n                     color: scale[last_ind].color,\n                     size: scale[last_ind].size });\n        set_scale(scale);\n    }.bind(this));\n    // exit\n    add.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // input labels\n    var labels = this.input_label_group.selectAll('.row-label')\n            .data(['Value:', 'Color:', 'Size:']);\n    // enter\n    labels.enter().append('div')\n        .attr('class', 'row-label')\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px');\n    // update\n    labels\n        .style('top', function(d, i) {\n            return 56 + (i * this.input_height) + 'px';\n        }.bind(this))\n        .text(function(d) { return d; });\n    // exit\n    labels.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // inputs\n    var inputs = this.input_group.selectAll('.input-set')\n            .data(scale);\n\n    // enter\n    var i = inputs.enter()\n            .append('div')\n            .attr('class', 'input-set');\n    i.append('input')\n        .attr('class', 'domain-input')\n        .style('width', this.input_width + 'px');\n    // type picker\n    i.append('select')\n        .attr('class', 'domain-type-picker'),\n    // color input\n    i.append('input')\n        .attr('class', 'color-input')\n        .style('width', this.input_width + 'px');\n    i.append('input')\n        .attr('type', 'color')\n        .style('visibility', function() {\n            // hide the input if the HTML5 color picker is not supported\n            return (this.type == 'text') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    i.append('input')\n        .attr('class', 'size-input')\n        .style('width', this.input_width + 'px');\n\n    // update\n    inputs.style('height', this.input_height * 3 + 'px')\n        .style('width', this.input_width + 'px')\n        .style('left', function(d) {\n            var val = get_this_val(d),\n                buf = bar_w + 2,\n                l;\n            if (d.type == 'value' && val <= stats.min)\n                l = sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            else if (d.type == 'value' && val >= stats.max)\n                l = sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            else\n                l = sc.invert(val) - (bar_w / 2) + x_disp;\n            // don't go over the right edge of the bar\n            if (l + this.input_width > this.w + this.x)\n                l = l - this.input_width + (bar_w / 2);\n            return l + 'px';\n        }.bind(this))\n        .on('mousedown', bring_to_front);\n\n    var format = d3.format('.4g');\n    inputs.select('.domain-input')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            if (d.type == 'value') {\n                this.value = get_this_val(d);\n                this.disabled = false;\n            } else {\n                this.value = d.type + ' (' + format(get_this_val(d)) + ')';\n                this.disabled = true;\n            }\n        }).on('change', function(d, i) {\n            var buf = sc_size(bar_w + 2),\n                new_d = parseFloat(this.value);\n            scale[i].value = new_d;\n            set_scale(scale);\n        });\n    // update type picker\n    var select = inputs.select('.domain-type-picker'),\n        // get the function types, except min and max\n        stat_types = (['value'].concat(Object.keys(stats))\n                      .filter(function(x) {\n                          return x != 'min' && x != 'max';\n                      })),\n        opts = select.selectAll('option').data(stat_types);\n    opts.enter().append('option');\n    opts.attr('value', function(d) { return d; })\n        .text(function(d) { return d; });\n    opts.exit().remove();\n    select.style('visibility', function(d) {\n        return (d.type == 'min' || d.type == 'max') ? 'hidden' : null;\n    })\n        .style('left', (this.input_width - 20) + 'px')\n        .style('width', '20px')\n        .each(function (d, i) {\n            var sind = 0;\n            d3.select(this).selectAll('option').each(function(_, i) {\n                if (this.value == d.type)\n                    sind = i;\n            });\n            this.selectedIndex = sind;\n        }).on('change', function(d, i) {\n            // set the value to the current location\n            if (this.value == 'value')\n                scale[i].value = stats[d.type];\n            // switch to the new type\n            scale[i].type = this.value;\n            // reload\n            set_scale(scale);\n        });\n    // update color input\n    inputs.select('.color-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.color-picker')\n        .style('left', (this.input_width - this.input_height) + 'px')\n        .style('top', this.input_height + 'px')\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '#dddddd' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.size-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height * 2 + 'px')\n        .each(function (d, i) {\n            this.value = (d.size === null ? '' : d.size);\n            this.disabled = (d.size === null);\n        }).on('change', function(d, i) {\n            scale[i].size = parseFloat(this.value);\n            set_scale(scale);\n        });\n\n    // exit\n    inputs.exit().remove();\n}\n\nfunction update_no_data() {\n    var no_data = this.no_data,\n        data_not_loaded = this._data_not_loaded(),\n        label_w = 40;\n\n    var ins = this.no_data_container\n            .selectAll('.input-group')\n            .data([['color', 'Color:'], ['size', 'Size:']]);\n    // enter\n    var t = ins.enter().append('div')\n            .attr('class', 'input-group');\n    t.append('span');\n    t.append('input');\n    t.append('input')\n        .attr('type', 'color')\n        .style('visibility', function(d) {\n            // hide the input if the HTML5 color picker is not supported,\n            // or if this is a size box\n            return (this.type == 'text' || d[0] != 'color') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    // update\n    ins.select('span')\n        .text(function(d) { return d[1]; })\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this));\n    var get_o = function(kind) {\n        return this.settings.get_option(this.type + '_no_data_' + kind);\n    }.bind(this);\n    ins.select('input')\n        .style('left', function(d, i) {\n            return (label_w + (label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this))\n        .style('height', this.input_height + 'px')\n        .style('width', this.input_width + 'px')\n        .each(function(d) {\n            // initial value\n            this.value = data_not_loaded ? '' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d) {\n            var val = d3.event.target.value;\n            if (d[0] == 'size')\n                val = parseFloat(val);\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    ins.select('.color-picker')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width) * (i + 1) - this.input_height) + 'px';\n        }.bind(this))\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = data_not_loaded ? '#dddddd' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d, i) {\n            var val = d3.event.target.value;\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    // exit\n    ins.exit().remove();\n}\n\nfunction _data_not_loaded() {\n    var stats = this.get_data_statistics()[this.type];\n    return (stats.max === null || stats.min === null);\n}\n","/** SearchBar */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\nvar _ = require('underscore');\n\nvar SearchBar = utils.make_class();\n// instance methods\nSearchBar.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    update: update,\n    next: next,\n    previous: previous\n};\nmodule.exports = SearchBar;\n\nfunction init(sel, search_index, map) {\n    var container = sel.attr('class', 'search-container')\n            .style('display', 'none');\n    this.input = container.append('input')\n        .attr('class', 'search-bar');\n    var group = container.append('div').attr('class', 'btn-group btn-group-sm');\n    group.append('button')\n        .attr('class', 'btn btn-default')\n        .on('click', this.previous.bind(this))\n        .append('span').attr('class', 'glyphicon glyphicon-chevron-left');\n    group.append('button')\n        .attr('class', 'btn btn-default')\n        .on('click', this.next.bind(this))\n        .append('span').attr('class', 'glyphicon glyphicon-chevron-right');\n    this.counter = container.append('div')\n        .attr('class', 'search-counter');\n    container.append('button')\n        .attr('class', 'btn btn-sm btn-default close-button')\n        .on('click', function() {\n            this.toggle(false);\n        }.bind(this))\n        .append('span').attr('class',  'glyphicon glyphicon-remove');\n\n    this.callback_manager = new CallbackManager();\n\n    this.selection = container;\n    this.map = map;\n    this.search_index = search_index;\n\n    this.current = 1;\n    this.results = null;\n\n    var on_input_fn = function(input) {\n        this.current = 1;\n        this.results = _drop_duplicates(this.search_index.find(input.value));\n        this.update();\n    }.bind(this, this.input.node());\n    this.input.on('input', utils.debounce(on_input_fn, 200));\n}\n\nvar comp_keys = {\n    metabolite: ['m', 'node_id'],\n    reaction: ['r', 'reaction_id'],\n    text_label: ['t', 'text_label_id']\n};\nfunction _drop_duplicates(results) {\n    return _.uniq(results, function(item) {\n        // make a string for fast comparison\n        var t = comp_keys[item.type];\n        return t[0] + item[t[1]];\n    });\n}\n\nfunction is_visible() {\n    return this.selection.style('display') !== 'none';\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n\n    if (this.is_active) {\n        this.selection.style('display', null);\n        this.counter.text('');\n        this.input.node().value = '';\n        this.input.node().focus();\n        // escape key\n        this.clear_escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.toggle(false);\n            }.bind(this), true);\n        // next keys\n        this.clear_next = this.map.key_manager\n            .add_key_listener(['enter', 'ctrl+g'], function() {\n                this.next();\n            }.bind(this), false);\n        // previous keys\n        this.clear_previous = this.map.key_manager\n            .add_key_listener(['shift+enter', 'shift+ctrl+g'], function() {\n                this.previous();\n            }.bind(this), false);\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        this.map.highlight(null);\n        this.selection.style('display', 'none');\n        this.results = null;\n        if (this.clear_escape) this.clear_escape();\n        this.clear_escape = null;\n        if (this.clear_next) this.clear_next();\n        this.clear_next = null;\n        if (this.clear_previous) this.clear_previous();\n        this.clear_previous = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\n\nfunction update() {\n    if (this.results === null) {\n        this.counter.text('');\n        this.map.highlight(null);\n    } else if (this.results.length === 0) {\n        this.counter.text('0 / 0');\n        this.map.highlight(null);\n    } else {\n        this.counter.text(this.current + ' / ' + this.results.length);\n        var r = this.results[this.current - 1];\n        if (r.type=='reaction') {\n            this.map.zoom_to_reaction(r.reaction_id);\n            this.map.highlight_reaction(r.reaction_id);\n        } else if (r.type=='metabolite') {\n            this.map.zoom_to_node(r.node_id);\n            this.map.highlight_node(r.node_id);\n        } else if (r.type=='text_label') {\n            this.map.zoom_to_text_label(r.text_label_id);\n            this.map.highlight_text_label(r.text_label_id);\n        } else {\n            throw new Error('Bad search index data type: ' + r.type);\n        }\n    }\n}\n\nfunction next() {\n    if (this.results === null) return;\n    if (this.current === this.results.length)\n        this.current = 1;\n    else\n        this.current += 1;\n    this.update();\n}\n\nfunction previous() {\n    if (this.results === null) return;\n    if (this.current === 1)\n        this.current = this.results.length;\n    else\n        this.current -= 1;\n    this.update();\n}\n","/** SearchIndex. Define an index for searching for reaction and metabolites in\n the map.\n\n The index is stored in SearchIndex.index, an object of id/record pairs.\n\n */\n\nvar utils = require('./utils');\n\nvar SearchIndex = utils.make_class();\nSearchIndex.prototype = {\n    init: init,\n    insert: insert,\n    remove: remove,\n    find: find\n};\nmodule.exports = SearchIndex;\n\n\nfunction init() {\n    this.index = {};\n}\n\nfunction insert(id, record, overwrite, check_record) {\n    /** Insert a record into the index.\n\n     id: A unique string id.\n\n     record: Records have the form:\n\n     { 'name': '',\n     'data': {} }\n\n     Search is performed on substrings of the name.\n\n     overwrite: (Default false) For faster performance, make overwrite true,\n     and records will be inserted without checking for an existing record.\n\n     check_record: (Default false) For faster performance, make check_record\n     false. If true, records will be checked to make sure they have name and\n     data attributes.\n\n     Returns undefined.\n\n     */\n    if (!overwrite && (id in this.index))\n        throw new Error(\"id is already in the index\");\n    if (check_record && !(('name' in record) && ('data' in record)))\n        throw new Error(\"malformed record\");\n    this.index[id] = record;\n}\n\nfunction remove(record_id) {\n    /** Remove the matching record.\n\n     Returns true is a record is found, or false if no match is found.\n\n     */\n    if (record_id in this.index) {\n        delete this.index[record_id];\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction find(substring) {\n    /** Find a record that matches the substring.\n\n     Returns an array of data from matching records.\n\n     */\n\n    var re = RegExp(substring, \"i\"), // ignore case\n        matches = [];\n    for (var id in this.index) {\n        var record = this.index[id];\n        if (re.exec(record.name))\n            matches.push(record.data);\n    }\n    return matches;\n}\n","/** Settings. A class to manage settings for a Map.\n\n Arguments\n ---------\n\n set_option: A function, fn(key), that returns the option value for the\n key.\n\n get_option: A function, fn(key, value), that sets the option for the key\n and value.\n\n conditional_options: The options to that are conditionally accepted when\n changed. Changes can be abandoned by calling abandon_changes(), or accepted\n by calling accept_changes().\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\nvar bacon = require('baconjs');\n\n\nvar Settings = utils.make_class();\n// instance methods\nSettings.prototype = {\n    init: init,\n    set_conditional: set_conditional,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes\n};\nmodule.exports = Settings;\n\n\n// instance methods\nfunction init(set_option, get_option, conditional_options) {\n    this.set_option = set_option;\n    this.get_option = get_option;\n\n    // manage accepting/abandoning changes\n    this.status_bus = new bacon.Bus();\n\n    // force an update of ui components\n    this.force_update_bus = new bacon.Bus();\n\n    // modify bacon.observable\n    bacon.Observable.prototype.convert_to_conditional_stream = _convert_to_conditional_stream;\n    bacon.Observable.prototype.force_update_with_bus = _force_update_with_bus;\n\n    // create the options\n    this.busses = {};\n    this.streams = {};\n    for (var i = 0, l = conditional_options.length; i < l; i++) {\n        var name = conditional_options[i],\n            out = _create_conditional_setting(name, get_option(name), set_option,\n                                              this.status_bus, this.force_update_bus);\n        this.busses[name] = out.bus;\n        this.streams[name] = out.stream;\n    }\n}\n\nfunction _convert_to_conditional_stream(status_stream) {\n    /** Hold on to event when hold_property is true, and only keep them\n     if accept_property is true (when hold_property becomes false).\n\n     */\n\n    // true if hold is pressed\n    var is_not_hold_event = status_stream\n            .map(function(x) { return x=='hold'; })\n            .not()\n            .toProperty(true),\n        is_not_first_clear = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && (x=='accepted' || x=='rejected'));\n            }).not(),\n        is_not_first_hold = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && x=='hold');\n            }).not(),\n        combined = bacon.combineAsArray(this, status_stream),\n        held = combined\n            .scan([], function(c, x) {\n                if (x[1]=='hold') {\n                    c.push(x[0]);\n                    return c;\n                } else if (x[1]=='accept') {\n                    return c;\n                } else if (x[1]=='reject') {\n                    return [];\n                } else if (x[1]=='rejected' || x[1]=='accepted') {\n                    return [x[0]];\n                } else {\n                    throw Error('bad status ' + x[1]);\n                }\n            })\n    // don't pass in events until the end of a hold\n            .filter(is_not_hold_event)\n    // ignore the event when clear is passed\n            .filter(is_not_first_clear)\n    // ignore the event when hold is passed\n            .filter(is_not_first_hold)\n            .flatMap(function(ar) {\n                return bacon.fromArray(ar);\n            }),\n        unheld = this.filter(is_not_hold_event);\n    return unheld.merge(held);\n}\n\nfunction _force_update_with_bus(bus) {\n    return bacon\n        .combineAsArray(this, bus.toProperty(false))\n        .map(function(t) {\n            return t[0];\n        });\n}\n\nfunction _create_conditional_setting(name, initial_value, set_option,\n                                     status_bus, force_update_bus) {\n    // set up the bus\n    var bus = new bacon.Bus();\n    // make the event stream\n    var stream = bus\n    // conditionally accept changes\n            .convert_to_conditional_stream(status_bus)\n    // force updates\n            .force_update_with_bus(force_update_bus);\n\n    // get the latest\n    stream.onValue(function(v) {\n        set_option(name, v);\n    });\n\n    // push the initial value\n    bus.push(initial_value);\n\n    return { bus: bus, stream: stream };\n}\n\nfunction set_conditional(name, value) {\n    /** Set the value of a conditional setting, one that will only be\n     accepted if this.accept_changes() is called.\n\n     Arguments\n     ---------\n\n     name: The option name\n\n     value: The new value\n\n     */\n\n    if (!(name in this.busses))\n        throw new Error('Invalid setting name');\n    this.busses[name].push(value);\n}\n\nfunction hold_changes() {\n    this.status_bus.push('hold');\n}\n\nfunction abandon_changes() {\n    this.status_bus.push('reject');\n    this.status_bus.push('rejected');\n    this.force_update_bus.push(true);\n}\n\nfunction accept_changes() {\n    this.status_bus.push('accept');\n    this.status_bus.push('accepted');\n}\n","/** SettingsMenu */\n\n'strict mode';\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\nvar ScaleEditor = require('./ScaleEditor');\n\n\nvar SettingsMenu = utils.make_class();\n// instance methods\nSettingsMenu.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes,\n    style_gui: style_gui,\n    view_gui: view_gui\n};\nmodule.exports = SettingsMenu;\n\n\n// instance methods\nfunction init(sel, settings, map, toggle_abs_and_apply_data) {\n    this.sel = sel;\n    this.settings = settings;\n    this.draw = false;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    var background = sel.append('div')\n            .attr('class', 'settings-box-background')\n            .style('display', 'none'),\n        container = background.append('div')\n            .attr('class', 'settings-box-container')\n            .style('display', 'none');\n\n    // done button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button\")\n        .on('click', function() {\n            this.accept_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-ok\");\n    // quit button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button settings-button-close\")\n        .on('click', function() {\n            this.abandon_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\");\n\n    var box = container.append('div')\n            .attr('class', 'settings-box');\n\n    // Tip\n    box.append('div')\n        .text('Tip: Hover over an option to see more details about it.')\n        .classed('settings-tip', true);\n    box.append('hr');\n\n    // view and build\n    box.append('div').text('View and build options')\n        .attr('class', 'settings-section-heading-large');\n    this.view_gui(box.append('div'));\n\n    // reactions\n    box.append('hr');\n    box.append('div')\n        .text('Reactions').attr('class', 'settings-section-heading-large');\n    var rse = new ScaleEditor(box.append('div'), 'reaction', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) {\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n    box.append('div')\n        .text('Reaction or Gene data').attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'reaction', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('reaction', on_off);\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n\n    // metabolite data\n    box.append('hr');\n    box.append('div').text('Metabolites')\n        .attr('class', 'settings-section-heading-large');\n    var mse = new ScaleEditor(box.append('div'), 'metabolite', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) {\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n    box.append('div').text('Metabolite data')\n        .attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'metabolite', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('metabolite', on_off);\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n\n    this.callback_manager = new CallbackManager();\n\n    this.map = map;\n    this.selection = container;\n    this.background = background;\n}\nfunction is_visible() {\n    return this.selection.style('display') != 'none';\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) on_off = !this.is_visible();\n\n    if (on_off) {\n        // hold changes until accepting/abandoning\n        this.hold_changes();\n        // show the menu\n        this.selection.style(\"display\", \"inline-block\");\n        this.background.style(\"display\", \"block\");\n        this.selection.select('input').node().focus();\n        // escape key\n        this.clear_escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.abandon_changes();\n            }.bind(this), true);\n        // enter key\n        this.clear_enter = this.map.key_manager\n            .add_enter_listener(function() {\n                this.accept_changes();\n            }.bind(this), true);\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        // draw on finish\n        if (this.draw) this.map.draw_everything();\n        // hide the menu\n        this.selection.style(\"display\", \"none\");\n        this.background.style(\"display\", \"none\");\n        if (this.clear_escape) this.clear_escape();\n        this.clear_escape = null;\n        if (this.clear_enter) this.clear_enter();\n        this.clear_enter = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\nfunction hold_changes() {\n    this.settings.hold_changes();\n}\nfunction abandon_changes() {\n    this.draw = false;\n    this.settings.abandon_changes();\n    this.toggle(false);\n}\nfunction accept_changes() {\n    this.sel.selectAll('input').each(function (s) {\n        this.blur();\n    });\n    this.draw = true;\n    this.settings.accept_changes();\n    this.toggle(false);\n}\n\nfunction style_gui(sel, type, abs_callback) {\n    /** A UI to edit style.\n\n     */\n\n    var t = sel.append('table').attr('class', 'settings-table'),\n        settings = this.settings;\n\n    // styles\n    t.append('tr').call(function(r) {\n        r.append('td').text('Options:')\n            .attr('class', 'options-label')\n            .attr('title', ('Options for ' + type + ' data.'));\n        var cell = r.append('td');\n\n        var styles = [['Absolute value', 'abs',\n                       ('If checked, use the absolute value when ' +\n                        'calculating colors and sizes of ' + type + 's on the map')],\n                      ['Size', 'size',\n                       ('If checked, then size the ' +\n                        (type == 'metabolite' ? 'radius of metabolite circles ' : 'thickness of reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Color', 'color',\n                       ('If checked, then color the ' +\n                        (type == 'metabolite' ? 'metabolite circles ' : 'reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Text (Show data in label)', 'text',\n                       ('If checked, then show data values in the ' + type + ' ' +\n                        'labels')]],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var streams = [],\n            get_styles = function() {\n                var styles = [];\n                cell.selectAll('input')\n                    .each(function(d) { if (this.checked) styles.push(d[1]); });\n                return styles;\n            };\n        s.append('input').attr('type', 'checkbox')\n            .on('change', function(d) {\n                settings.set_conditional(type + '_styles', get_styles());\n                if (d[1] == 'abs')\n                    abs_callback(this.checked);\n            }).each(function(d) {\n                // subscribe to changes in the model\n                settings.streams[type + '_styles'].onValue(function(ar) {\n                    // check the box if the style is present\n                    this.checked = (ar.indexOf(d[1]) != -1);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; })\n            .attr('title', function(d) { return d[2]; });\n    });\n\n    // compare_style\n    t.append('tr').call(function(r) {\n        r.append('td')\n            .text('Comparison:')\n            .attr('class', 'options-label')\n            .attr('title', ('The function that will be used to compare ' +\n                            'datasets, when paired data is loaded'));\n        var cell = r.append('td')\n                .attr('title', ('The function that will be used to compare ' +\n                                'datasets, when paired data is loaded'));;\n\n        var styles = [['Fold Change', 'fold'],\n                      ['Log2(Fold Change)', 'log2_fold'],\n                      ['Difference', 'diff']],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the radio\n        s.append('input').attr('type', 'radio')\n            .attr('name', type + '_compare_style' + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(type + '_compare_style', this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[type + '_compare_style'].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    // gene-specific settings\n    if (type=='reaction') {\n        var t = sel.append('table').attr('class', 'settings-table')\n                .attr('title', ('The function that will be used to evaluate ' +\n                                'AND connections in gene reaction rules (AND ' +\n                                'connections generally connect components of ' +\n                                'an enzyme complex)'));\n\n        // and_method_in_gene_reaction_rule\n        t.append('tr').call(function(r) {\n            r.append('td')\n                .text('Method for evaluating AND:')\n                .attr('class', 'options-label-wide');\n            var cell = r.append('td');\n\n            var styles = [['Mean', 'mean'], ['Min', 'min']],\n                style_cells = cell.selectAll('.option-group')\n                    .data(styles),\n                s = style_cells.enter()\n                    .append('label')\n                    .attr('class', 'option-group');\n\n            // make the radio\n            var name = 'and_method_in_gene_reaction_rule';\n            s.append('input').attr('type', 'radio')\n                .attr('name', name + this.unique_string)\n                .attr('value', function(d) { return d[1]; })\n                .on('change', function() {\n                    if (this.checked)\n                        settings.set_conditional(name, this.value);\n                })\n                .each(function() {\n                    // subscribe to changes in the model\n                    settings.streams[name].onValue(function(value) {\n                        // check the box for the new value\n                        this.checked = (this.value == value);\n                    }.bind(this));\n                });\n            s.append('span')\n                .text(function(d) { return d[0]; });\n        }.bind(this));\n\n    }\n}\n\nfunction view_gui(s, option_name, string, options) {\n\n    // columns\n    var settings = this.settings;\n\n    var t = s.append('table').attr('class', 'settings-table');\n    t.append('tr').call(function(r) {\n        // identifiers\n        r.attr('title', ('The identifiers that are show in the reaction, ' +\n                         'gene, and metabolite labels on the map.'));\n        r.append('td').text('Identifiers:')\n            .attr('class', 'options-label');\n        var cell = r.append('td');\n\n        var options = [['ID\\'s', 'bigg_id'], ['Descriptive names', 'name']],\n            style_cells = cell.selectAll('.option-group')\n                .data(options),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var name = 'identifiers_on_map';\n        s.append('input').attr('type', 'radio')\n            .attr('name', name + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(name, this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[name].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span').text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    var boolean_options = [\n        ['scroll_behavior', 'Scroll to zoom (instead of scroll to pan)',\n         ('If checked, then the scroll wheel and trackpad will control zoom ' +\n          'rather than pan.'), {'zoom': true, 'pan': false}],\n        ['hide_secondary_metabolites', 'Hide secondary metabolites',\n         ('If checked, then only the primary metabolites ' +\n          'will be displayed.')],\n        ['show_gene_reaction_rules', 'Show gene reaction rules',\n         ('If checked, then gene reaction rules will be displayed ' +\n          'below each reaction label. (Gene reaction rules are always ' +\n          'shown when gene data is loaded.)')],\n        ['hide_all_labels', 'Hide reaction, gene, and metabolite labels',\n         ('If checked, hide all reaction, gene, and metabolite labels')],\n        ['allow_building_duplicate_reactions', 'Allow duplicate reactions',\n         ('If checked, then allow duplicate reactions during model building.')],\n        ['highlight_missing', 'Highlight reactions not in model',\n         ('If checked, then highlight in red all the ' +\n          'reactions on the map that are not present in ' +\n          'the loaded model.')],\n    ];\n\n    var opts = s.append('div').attr('class', 'settings-container')\n            .selectAll('.option-group')\n            .data(boolean_options);\n    // enter\n    var e = opts.enter()\n            .append('label')\n            .attr('class', 'option-group full-line');\n    e.append('input').attr('type', 'checkbox');\n    e.append('span');\n    // update\n    opts.attr('title', function(d) { return d[2]; });\n    opts.select('input')\n        .on('change', function(d) {\n            if (d.length >= 4) { // not a boolean setting\n                for (var key in d[3]) {\n                    if (d[3][key] == this.checked) {\n                        settings.set_conditional(d[0], key);\n                        break;\n                    }\n                }\n            } else { // boolean setting\n                settings.set_conditional(d[0], this.checked);\n            }\n        })\n        .each(function(d) {\n            settings.streams[d[0]].onValue(function(value) {\n                if (d.length >= 4) { // not a boolean setting\n                    this.checked = d[3][value];\n                } else { // boolean setting\n                    this.checked = value;\n                }\n            }.bind(this));\n        });\n    opts.select('span')\n        .text(function(d) { return d[1]; });\n    // exit\n    opts.exit().remove();\n\n    // message about text performance\n    s.append('div')\n        .style('margin-top', '16px')\n        .classed('settings-tip', true)\n        .text('Tip: To increase map performance, turn off text boxes (i.e. labels and gene reaction rules).');\n}\n","/** TextEditInput */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar build = require('./build');\n\n\nvar TextEditInput = utils.make_class();\n// instance methods\nTextEditInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    show: show,\n    hide: hide,\n    _accept_changes: _accept_changes,\n    _add_and_edit: _add_and_edit\n};\nmodule.exports = TextEditInput;\n\n\n// definitions\nfunction init(selection, map, zoom_container) {\n    var div = selection.append('div')\n            .attr('id', 'text-edit-input');\n    this.placed_div = PlacedDiv(div, map);\n    this.placed_div.hide();\n    this.input = div.append('input');\n\n    this.map = map;\n    this.setup_map_callbacks(map);\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('edit_text_label.text_edit_input', function(target, coords) {\n        this.show(target, coords);\n    }.bind(this));\n\n    // new text_label\n    map.callback_manager.set('new_text_label.text_edit_input', function(coords) {\n        if (this.active_target !== null)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n        this._add_and_edit(coords);\n    }.bind(this));\n\n    map.callback_manager.set('hide_text_label_editor.text_edit_input', function() {\n        this.hide();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n    zoom_container.callback_manager.set('go_to.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction show(target, coords) {\n    // save any existing edit\n    if (this.active_target) {\n        this._accept_changes(this.active_target.target);\n    }\n\n    // set the current target\n    this.active_target = { target: target,\n                           coords: coords };\n\n    // set the new value\n    target.each(function(d) {\n        this.input.node().value = d.text;\n    }.bind(this));\n\n    // place the input\n    this.placed_div.place(coords);\n    this.input.node().focus();\n\n    // escape key\n    this.clear_escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this), true);\n    // enter key\n    this.clear_enter = this.map.key_manager\n        .add_enter_listener(function(target) {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this, target), true);\n}\n\nfunction hide() {\n    // hide the input\n    this.placed_div.hide();\n\n    // clear the value\n    this.input.attr('value', '');\n    this.active_target = null;\n\n    // clear escape\n    if (this.clear_escape) this.clear_escape();\n    this.clear_escape = null;\n    // clear enter\n    if (this.clear_enter) this.clear_enter();\n    this.clear_enter = null;\n    // turn off click listener\n    // this.map.sel.on('click.', null);\n}\n\nfunction _accept_changes(target) {\n    if (this.input.node().value == '') {\n        // delete the label\n        target.each(function(d) {\n            var selected = {};\n            selected[d.text_label_id] = this.map.text_labels[d.text_label_id];\n            this.map.delete_selectable({}, selected, true);\n        }.bind(this));\n    } else {\n        // set the text\n        var text_label_ids = [];\n        target.each(function(d) {\n            this.map.edit_text_label(d.text_label_id, this.input.node().value, true);\n            text_label_ids.push(d.text_label_id);\n        }.bind(this));\n    }\n}\n\nfunction _add_and_edit(coords) {\n    // make an empty label\n    var text_label_id = this.map.new_text_label(coords, '');\n    // apply the cursor to the new label\n    var sel = this.map.sel.select('#text-labels').selectAll('.text-label')\n            .filter(function(d) { return d.text_label_id == text_label_id; });\n    sel.select('text').classed('edit-text-cursor', true);\n    this.show(sel, coords);\n}\n","/** UndoStack. A constructor that can be used to store undo info. */\n\nvar utils = require('./utils');\n\n\nvar UndoStack = utils.make_class();\nUndoStack.prototype = {\n    init: init,\n    push: push,\n    undo: undo,\n    redo: redo\n};\nmodule.exports = UndoStack;\n\n\n// definitions\nfunction init() {\n    var stack_size = 40;\n    this.stack = Array(stack_size);\n    this.current = -1;\n    this.oldest = -1;\n    this.newest = -1;\n    this.end_of_stack = true;\n    this.top_of_stack = true;\n}\n\n\nfunction _incr(a, l) {\n    return a + 1 > l - 1 ? 0 : a + 1;\n}\n\n\nfunction _decr(a, l) {\n    return a - 1 < 0 ? l - 1 : a -  1;\n}\n\n\nfunction push(undo_fn, redo_fn) {\n    this.current = _incr(this.current, this.stack.length);\n    // change the oldest\n    if (this.end_of_stack)\n        this.oldest = this.current;\n    else if (this.oldest == this.current)\n        this.oldest = _incr(this.oldest, this.stack.length);\n    this.stack[this.current] = { undo: undo_fn, redo: redo_fn };\n    this.newest = this.current;\n\n    // top of the stack\n    this.top_of_stack = true;\n    this.end_of_stack = false;\n}\n\n\nfunction undo() {\n    // check that we haven't reached the end\n    if (this.end_of_stack) return console.warn('End of stack.');\n    // run the lastest stack function\n    this.stack[this.current].undo();\n    if (this.current == this.oldest) {\n        // if the next index is less than the oldest, then the stack is dead\n        this.end_of_stack = true;\n    } else {\n        // reference the next fn\n        this.current = _decr(this.current, this.stack.length);\n    }\n\n    // not at the top of the stack\n    this.top_of_stack = false;\n}\n\n\nfunction redo() {\n    // check that we haven't reached the end\n    if (this.top_of_stack) return console.warn('Top of stack.');\n\n    if (!this.end_of_stack)\n        this.current = _incr(this.current, this.stack.length);\n    this.stack[this.current].redo();\n\n    // if at top of stack\n    if (this.current == this.newest)\n        this.top_of_stack = true;\n\n    // not at the end of the stack\n    this.end_of_stack = false;\n}\n","/** ZoomContainer\n *\n *\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\nvar _ = require('underscore');\n\n\nvar ZoomContainer = utils.make_class();\nZoomContainer.prototype = {\n    init: init,\n    set_scroll_behavior: set_scroll_behavior,\n    set_use_3d_transform: set_use_3d_transform,\n    _update_scroll: _update_scroll,\n    toggle_pan_drag: toggle_pan_drag,\n    go_to: go_to,\n    _go_to_3d: _go_to_3d,\n    _clear_3d: _clear_3d,\n    _go_to_svg: _go_to_svg,\n    zoom_by: zoom_by,\n    zoom_in: zoom_in,\n    zoom_out: zoom_out,\n    get_size: get_size,\n    translate_off_screen: translate_off_screen\n};\nmodule.exports = ZoomContainer;\n\n\n// definitions\nfunction init(selection, scroll_behavior, use_3d_transform, fill_screen) {\n    /** Make a container that will manage panning and zooming. Creates a new\n     SVG element, with a parent div for CSS3 3D transforms.\n\n     Arguments\n     ---------\n\n     selection: A d3 selection of a HTML node to put the zoom container\n     in. Should have a defined width and height.\n\n     scroll_behavior: Either 'zoom' or 'pan'.\n\n     use_3d_transform: If true, then use CSS3 3D transform to speed up pan\n     and zoom.\n\n     fill_screen: If true, then apply styles to body and selection that fill\n     the screen. The styled classes are \"fill-screen-body\" and\n     \"fill-screen-div\".\n\n     */\n\n    // set the selection class\n    selection.classed('escher-container', true);\n\n    // fill screen classes\n    if (fill_screen) {\n        d3.select(\"body\").classed('fill-screen-body', true);\n        selection.classed('fill-screen-div', true);\n    }\n\n    // make the svg\n    var zoom_container = selection.append('div')\n            .attr('class', 'escher-zoom-container');\n\n    var css3_transform_container = zoom_container.append('div')\n            .attr('class', 'escher-3d-transform-container');\n\n    var svg = css3_transform_container.append('svg')\n            .attr(\"class\", \"escher-svg\")\n            .attr('xmlns', \"http://www.w3.org/2000/svg\");\n\n    // set up the zoom container\n    svg.select(\".zoom-g\").remove();\n    var zoomed_sel = svg.append(\"g\")\n            .attr(\"class\", \"zoom-g\");\n\n    // attributes\n    this.selection = selection;\n    this.zoom_container = zoom_container;\n    this.css3_transform_container = css3_transform_container;\n    this.svg = svg;\n    this.zoomed_sel = zoomed_sel;\n    this.window_translate = {x: 0, y: 0};\n    this.window_scale = 1.0;\n\n    this._scroll_behavior = scroll_behavior;\n    this._use_3d_transform = use_3d_transform;\n    this._pan_drag_on = true;\n    this._zoom_behavior = null;\n    this._zoom_timeout = null;\n    this._svg_scale = this.window_scale;\n    this._svg_translate = this.window_translate;\n    // this._last_svg_ms = null;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // update the scroll behavior\n    this._update_scroll();\n}\n\nfunction set_scroll_behavior(scroll_behavior) {\n    /** Set up pan or zoom on scroll.\n     *\n     * Arguments\n     * ---------\n     *\n     * scroll_behavior: 'none', 'pan' or 'zoom'.\n     *\n     */\n\n    this._scroll_behavior = scroll_behavior;\n    this._update_scroll();\n}\n\nfunction set_use_3d_transform(use_3d_transform) {\n    /** Set the option use_3d_transform */\n    this._use_3d_transform = use_3d_transform;\n}\n\nfunction toggle_pan_drag(on_off) {\n    /** Toggle the zoom drag and the cursor UI for it. */\n\n    if (_.isUndefined(on_off)) {\n        this._pan_drag_on = !this._pan_drag_on;\n    } else {\n        this._pan_drag_on = on_off;\n    }\n\n    if (this._pan_drag_on) {\n        // turn on the hand\n        this.zoomed_sel\n            .classed('cursor-grab', true).classed('cursor-grabbing', false);\n        this.zoomed_sel\n            .on('mousedown.cursor', function(sel) {\n                sel.classed('cursor-grab', false).classed('cursor-grabbing', true);\n            }.bind(null, this.zoomed_sel))\n            .on('mouseup.cursor', function(sel) {\n                sel.classed('cursor-grab', true).classed('cursor-grabbing', false);\n            }.bind(null, this.zoomed_sel));\n    } else {\n        // turn off the hand\n        this.zoomed_sel.style('cursor', null)\n            .classed('cursor-grab', false)\n            .classed('cursor-grabbing', false);\n        this.zoomed_sel.on('mousedown.cursor', null);\n        this.zoomed_sel.on('mouseup.cursor', null);\n    }\n\n    // update the behaviors\n    this._update_scroll();\n}\n\nfunction _update_scroll() {\n    /** Update the pan and zoom behaviors. The behaviors are applied to the\n     * css3_transform_container node.\n     *\n     */\n\n    if (!_.contains(['zoom', 'pan', 'none'], this._scroll_behavior)) {\n        throw Error('Bad value for scroll_behavior: ' + this._scroll_behavior);\n    }\n\n    // clear all behaviors\n    this.zoom_container.on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n        .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n        .on(\"wheel.zoom\", null) // disables newer versions of Firefox\n        .on('dblclick.zoom', null)\n        .on('mousewheel.escher', null) // pan scroll behaviors\n        .on('DOMMouseScroll.escher', null)\n        .on('wheel.escher', null)\n        .on(\"mousedown.zoom\", null) // drag behaviors\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    // This handles dragging to pan, and touch events (in any scroll mode). It\n    // also handles scrolling to zoom (only 'zoom' mode). It also raises an\n    // exception in node, so catch that during testing. This may be a bug with\n    // d3 related to d3 using the global this.document. TODO look into this.\n    try {\n        this._zoom_behavior = d3.behavior.zoom()\n            .on(\"zoom\", function() {\n                this.go_to(d3.event.scale, {x: d3.event.translate[0], y: d3.event.translate[1]});\n            }.bind(this));\n    } catch (err) {\n        console.log('Not in a browser, so d3.behavior.zoom does not work.');\n        this._zoom_behavior = null;\n        return;\n    }\n\n    // set current location\n    this._zoom_behavior.scale(this.window_scale);\n    this._zoom_behavior.translate([this.window_translate.x,\n                                   this.window_translate.y]);\n\n    // set it up\n    this.zoom_container.call(this._zoom_behavior);\n\n    // always turn off double-clicking to zoom\n    this.zoom_container.on('dblclick.zoom', null);\n\n    // if panning is off, then turn off these listeners\n    if (!this._pan_drag_on) {\n        this.zoom_container.on(\"mousedown.zoom\", null)\n            .on(\"touchstart.zoom\", null)\n            .on(\"touchmove.zoom\", null)\n            .on(\"touchend.zoom\", null);\n    }\n\n    // if scroll to zoom is off, then turn off these listeners\n    if (this._scroll_behavior !== 'zoom') {\n        this.zoom_container\n            .on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n            .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n            .on(\"wheel.zoom\", null); // disables newer versions of Firefox\n    }\n\n    // add listeners for scrolling to pan\n    if (this._scroll_behavior === 'pan') {\n        // Add the wheel listener\n        var wheel_fn = function() {\n            var ev = d3.event,\n                sensitivity = 0.5;\n            // stop scroll in parent elements\n            ev.stopPropagation();\n            ev.preventDefault();\n            ev.returnValue = false;\n            // change the location\n            var get_directional_disp = function(wheel_delta, delta) {\n                var the_delt = _.isUndefined(wheel_delta) ? delta : -wheel_delta / 1.5;\n                return the_delt * sensitivity;\n            };\n            var new_translate = {\n                x: this.window_translate.x - get_directional_disp(ev.wheelDeltaX, ev.deltaX),\n                y: this.window_translate.y - get_directional_disp(ev.wheelDeltaY, ev.deltaY)\n            };\n            this.go_to(this.window_scale, new_translate);\n        }.bind(this);\n\n        // apply it\n        this.zoom_container.on('mousewheel.escher', wheel_fn);\n        this.zoom_container.on('DOMMouseScroll.escher', wheel_fn);\n        this.zoom_container.on('wheel.escher', wheel_fn);\n    }\n}\n\n// functions to scale and translate\nfunction go_to(scale, translate) {\n    /** Zoom the container to a specified location.\n\n     Arguments\n     ---------\n\n     scale: The scale, between 0 and 1.\n\n     translate: The location, of the form {x: 2.0, y: 3.0}.\n\n     */\n\n    utils.check_undefined(arguments, ['scale', 'translate']);\n\n    var use_3d_transform = this._use_3d_transform;\n\n    // check inputs\n    if (!scale) throw new Error('Bad scale value');\n    if (!translate || !('x' in translate) || !('y' in translate) ||\n        isNaN(translate.x) || isNaN(translate.y))\n        return console.error('Bad translate value');\n\n    // save inputs\n    this.window_scale = scale;\n    this.window_translate = translate;\n\n    // save to zoom behavior\n    if (!_.isNull(this._zoom_behavior)) {\n        this._zoom_behavior.scale(scale);\n        var translate_array = [translate.x, translate.y];\n        this._zoom_behavior.translate(translate_array);\n    }\n\n    if (use_3d_transform) { // 3d tranform\n        // cancel all timeouts\n        if (!_.isNull(this._zoom_timeout))\n            clearTimeout(this._zoom_timeout);\n\n        // set the 3d transform\n        this._go_to_3d(scale, translate,\n                       this._svg_scale, this._svg_translate);\n\n        // if another go_to does not happen within the delay time, then\n        // redraw the svg\n        this._zoom_timeout = _.delay(function() {\n            // redraw the svg\n            this._go_to_svg(scale, translate);\n        }.bind(this), 100); // between 100 and 600 seems to be usable\n\n    } else { // no 3d transform\n        this._go_to_svg(scale, translate);\n    }\n\n    this.callback_manager.run('go_to');\n}\n\nfunction _go_to_3d(scale, translate, svg_scale, svg_translate) {\n    /** Zoom & pan the CSS 3D transform container */\n    var n_scale = scale / svg_scale,\n        n_translate = utils.c_minus_c(\n            translate,\n            utils.c_times_scalar(svg_translate, n_scale)\n        ),\n        tranform = ('translate(' + n_translate.x + 'px,' + n_translate.y + 'px) ' +\n                    'scale(' + n_scale + ')');\n    this.css3_transform_container.style('transform', tranform);\n    this.css3_transform_container.style('-webkit-transform', tranform);\n    this.css3_transform_container.style('transform-origin', '0 0');\n    this.css3_transform_container.style('-webkit-transform-origin', '0 0');\n}\n\nfunction _clear_3d() {\n    this.css3_transform_container.style('transform', null);\n    this.css3_transform_container.style('-webkit-transform', null);\n    this.css3_transform_container.style('transform-origin', null);\n    this.css3_transform_container.style('-webkit-transform-origin', null);\n}\n\nfunction _go_to_svg(scale, translate, callback) {\n    /** Zoom & pan the svg element.\n\n     Also runs the svg_start and svg_finish callbacks.\n\n     Arguments\n     ---------\n\n     scale: The scale, between 0 and 1.\n\n     translate: The location, of the form {x: 2.0, y: 3.0}.\n\n     callback: (optional) A callback to run after scaling.\n\n     */\n\n    this.callback_manager.run('svg_start');\n\n    // defer to update callbacks\n    _.defer(function() {\n\n        // start time\n        // var start = new Date().getTime();\n\n        // reset the 3d transform\n        this._clear_3d();\n\n        // redraw the svg\n        this.zoomed_sel\n            .attr('transform',\n                  'translate(' + translate.x + ',' + translate.y + ') ' +\n                  'scale(' + scale + ')');\n        // save svg location\n        this._svg_scale = this.window_scale;\n        this._svg_translate = this.window_translate;\n\n        _.defer(function() {\n            // defer for callback after draw\n            this.callback_manager.run('svg_finish');\n\n            if (!_.isUndefined(callback)) callback();\n\n            // wait a few ms to get a reliable end time\n            // _.delay(function() {\n            //     // end time\n            //     var t = new Date().getTime() - start;\n            //     this._last_svg_ms = t;\n            // }.bind(this), 20);\n        }.bind(this));\n    }.bind(this));\n}\n\nfunction zoom_by(amount) {\n    /** Zoom by a specified multiplier.\n     *\n     * Arguments\n     * ---------\n     *\n     * amount: A multiplier for the zoom. Greater than 1 zooms in and less\n     * than 1 zooms out.\n     *\n     */\n    var size = this.get_size(),\n        shift = { x: size.width/2 - ((size.width/2 - this.window_translate.x) * amount +\n                                     this.window_translate.x),\n                  y: size.height/2 - ((size.height/2 - this.window_translate.y) * amount +\n                                      this.window_translate.y) };\n    this.go_to(this.window_scale * amount,\n               utils.c_plus_c(this.window_translate, shift));\n}\n\nfunction zoom_in() {\n    /** Zoom in by the default amount with the default options. */\n    this.zoom_by(1.5);\n}\n\nfunction zoom_out() {\n    /** Zoom out by the default amount with the default options. */\n    this.zoom_by(0.667);\n}\n\nfunction get_size() {\n    /** Return the size of the zoom container as coordinates.\n     *\n     * e.g. {x: 2, y: 3}\n     *\n     */\n    return { width: parseInt(this.selection.style('width'), 10),\n             height: parseInt(this.selection.style('height'), 10) };\n}\n\nfunction translate_off_screen(coords) {\n    /** Shift window if new reaction will draw off the screen */\n\n    // TODO BUG not accounting for scale correctly\n\n    var margin = 120, // pixels\n        size = this.get_size(),\n        current = {'x': {'min': - this.window_translate.x / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.x / this.window_scale +\n                         (size.width-margin) / this.window_scale },\n                   'y': {'min': - this.window_translate.y / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.y / this.window_scale +\n                         (size.height-margin) / this.window_scale } };\n    if (coords.x < current.x.min) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.x > current.x.max) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n    if (coords.y < current.y.min) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.y > current.y.max) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n}\n","/** build */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    new_reaction: new_reaction,\n    rotate_nodes: rotate_nodes,\n    move_node_and_dependents: move_node_and_dependents,\n    new_text_label: new_text_label,\n    bezier_id_for_segment_id: bezier_id_for_segment_id,\n    bezier_ids_for_reaction_ids: bezier_ids_for_reaction_ids,\n    new_beziers_for_segments: new_beziers_for_segments,\n    new_beziers_for_reactions: new_beziers_for_reactions\n};\n\n\n// definitions\nfunction new_reaction(bigg_id, cobra_reaction, cobra_metabolites,\n                      selected_node_id, selected_node,\n                      largest_ids, cofactors, angle) {\n    /** New reaction.\n\n     angle: clockwise from 'right', in degrees\n\n     */\n\n    // rotate the new reaction around the selected metabolite\n    // convert to radians\n    angle = Math.PI / 180 * angle;\n\n    // generate a new integer id\n    var new_reaction_id = String(++largest_ids.reactions);\n\n    // calculate coordinates of reaction\n    var selected_node_coords = { x: selected_node.x,\n                                 y: selected_node.y };\n\n    // rotate main axis around angle with distance\n    var reaction_length = 300,\n        main_axis = [ selected_node_coords,\n                      utils.c_plus_c(selected_node_coords,\n                                     {'x': reaction_length, 'y': 0}) ],\n        center = { 'x': (main_axis[0].x + main_axis[1].x)/2,\n                   'y': (main_axis[0].y + main_axis[1].y)/2 };\n\n    // relative label location\n    var label_d;\n    if (Math.abs(angle) < Math.PI/4 ||\n        Math.abs(angle - Math.PI) < Math.PI/4 ) {\n            label_d = { x: -50, y: -40 };\n        } else {\n            label_d = { x: 30, y: 10 };\n        }\n\n    // relative anchor node distance\n    var anchor_distance = 20;\n\n    // new reaction structure\n    var new_reaction = utils.clone(cobra_reaction);\n    utils.extend(new_reaction,\n                 { label_x: center.x + label_d.x,\n                   label_y: center.y + label_d.y,\n                   segments: {} });\n\n    // set primary metabolites and count reactants/products\n\n    // look for the selected metabolite, and record the indices\n    var reactant_ranks = [], product_ranks = [],\n        reactant_count = 0, product_count = 0,\n        reaction_is_reversed = false;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        // make the metabolites into objects\n        var metabolite = cobra_metabolites[met_bigg_id],\n            coefficient = new_reaction.metabolites[met_bigg_id],\n            formula = metabolite.formula,\n            new_metabolite = { coefficient: coefficient,\n                               bigg_id: met_bigg_id,\n                               name: metabolite.name };\n        if (coefficient < 0) {\n            new_metabolite.index = reactant_count;\n            // score the metabolites. Infinity == selected, >= 1 == carbon containing\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                reactant_ranks.push([new_metabolite.index, Infinity]);\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                reactant_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            reactant_count++;\n        } else {\n            new_metabolite.index = product_count;\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                product_ranks.push([new_metabolite.index, Infinity]);\n                reaction_is_reversed = true;\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                product_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            product_count++;\n        }\n        new_reaction.metabolites[met_bigg_id] = new_metabolite;\n    }\n\n    // get the rank with the highest score\n    var max_rank = function(old, current) { return current[1] > old[1] ? current : old; },\n        primary_reactant_index = reactant_ranks.reduce(max_rank, [0,0])[0],\n        primary_product_index = product_ranks.reduce(max_rank, [0,0])[0];\n\n    // set primary metabolites, and keep track of the total counts\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id];\n        if (metabolite.coefficient < 0) {\n            if (metabolite.index==primary_reactant_index) metabolite.is_primary = true;\n            metabolite.count = reactant_count + 1;\n        } else {\n            if (metabolite.index==primary_product_index) metabolite.is_primary = true;\n            metabolite.count = product_count + 1;\n        }\n    }\n\n    // generate anchor nodes\n    var new_anchors = {},\n        anchors = [ { node_type: 'anchor_reactants',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? 1 : -1), y: 0 } },\n                    { node_type: 'center',\n                      dis: { x: 0, y: 0 } },\n                    { node_type: 'anchor_products',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? -1 : 1), y: 0 } } ],\n        anchor_ids = {};\n    anchors.map(function(n) {\n        var new_id = String(++largest_ids.nodes),\n            general_node_type = (n.node_type=='center' ? 'midmarker' : 'multimarker');\n        new_anchors[new_id] = { node_type: general_node_type,\n                                x: center.x + n.dis.x,\n                                y: center.y + n.dis.y,\n                                connected_segments: [],\n                                name: null,\n                                bigg_id: null,\n                                label_x: null,\n                                label_y: null,\n                                node_is_primary: null };\n        anchor_ids[n.node_type] = new_id;\n    });\n\n    // add the segments, outside to inside\n    var new_anchor_groups = [ [ anchor_ids['anchor_reactants'], anchor_ids['center'] ],\n                              [ anchor_ids['anchor_products'],  anchor_ids['center'] ] ];\n    new_anchor_groups.map(function(l) {\n        var from_id = l[0], to_id = l[1],\n            new_segment_id = String(++largest_ids.segments);\n        new_reaction.segments[new_segment_id] =  { b1: null,\n                                                   b2: null,\n                                                   from_node_id: from_id,\n                                                   to_node_id: to_id,\n                                                   from_node_coefficient: null,\n                                                   to_node_coefficient: null,\n                                                   reversibility: new_reaction.reversibility,\n                                                   data: new_reaction.data,\n                                                   reverse_flux: new_reaction.reverse_flux };\n        new_anchors[from_id].connected_segments.push({ segment_id: new_segment_id,\n                                                       reaction_id: new_reaction_id });\n        new_anchors[to_id].connected_segments.push({ segment_id: new_segment_id,\n                                                     reaction_id: new_reaction_id });\n    });\n\n    // Add the metabolites, keeping track of total reactants and products.\n    var new_nodes = new_anchors;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id],\n            primary_index, from_node_id;\n        if (metabolite.coefficient < 0) {\n            // metabolite.count = reactant_count + 1;\n            primary_index = primary_reactant_index;\n            from_node_id = anchor_ids['anchor_reactants'];\n        } else {\n            // metabolite.count = product_count + 1;\n            primary_index = primary_product_index;\n            from_node_id = anchor_ids['anchor_products'];\n        }\n\n        // calculate coordinates of metabolite components\n        var met_loc = calculate_new_metabolite_coordinates(metabolite,\n                                                           primary_index,\n                                                           main_axis,\n                                                           center,\n                                                           reaction_length,\n                                                           reaction_is_reversed);\n\n        // if this is the existing metabolite\n        if (selected_node.bigg_id==metabolite.bigg_id) {\n            var new_segment_id = String(++largest_ids.segments);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: selected_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // update the existing node\n            selected_node.connected_segments.push({ segment_id: new_segment_id,\n                                                    reaction_id: new_reaction_id });\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        } else {\n            // save new metabolite\n            var new_segment_id = String(++largest_ids.segments),\n                new_node_id = String(++largest_ids.nodes);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: new_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // save new node\n            new_nodes[new_node_id] = { connected_segments: [{ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id }],\n                                       x: met_loc.circle.x,\n                                       y: met_loc.circle.y,\n                                       node_is_primary: Boolean(metabolite.is_primary),\n                                       label_x: met_loc.circle.x + label_d.x,\n                                       label_y: met_loc.circle.y + label_d.y,\n                                       name: metabolite.name,\n                                       bigg_id: metabolite.bigg_id,\n                                       node_type: 'metabolite' };\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        }\n    }\n\n    // now take out the extra reaction details\n    var metabolites_array = []\n    for (var bigg_id in new_reaction.metabolites) {\n        metabolites_array.push({'bigg_id': bigg_id,\n                                'coefficient': new_reaction.metabolites[bigg_id].coefficient});\n    }\n    new_reaction.metabolites = metabolites_array;\n\n    // new_reactions object\n    var new_reactions = {};\n    new_reactions[new_reaction_id] = new_reaction;\n\n    // new_beziers object\n    var new_beziers = new_beziers_for_reactions(new_reactions);\n\n    // add the selected node for rotation, and return it as a new (updated) node\n    new_nodes[selected_node_id] = selected_node;\n    rotate_nodes(new_nodes, new_reactions, new_beziers,\n                 angle, selected_node_coords);\n\n    return { new_reactions: new_reactions,\n             new_beziers: new_beziers,\n             new_nodes: new_nodes };\n}\n\nfunction rotate_nodes(selected_nodes, reactions, beziers, angle, center) {\n    /** Rotate the nodes around center.\n\n     selected_nodes: Nodes to rotate.\n     reactions: Only updates beziers for these reactions.\n     beziers: Also update the bezier points.\n     angle: Angle to rotate in radians.\n     center: Point to rotate around.\n\n     */\n\n    // functions\n    var rotate_around = function(coord) {\n        if (coord === null)\n            return null;\n        return utils.rotate_coords(coord, angle, center);\n    };\n\n    // recalculate: node\n    var updated_node_ids = [], updated_reaction_ids = [];\n    for (var node_id in selected_nodes) {\n        var node = selected_nodes[node_id],\n            // rotation distance\n            displacement = rotate_around({ x: node.x, y: node.y }),\n            // move the node\n            updated = move_node_and_labels(node, reactions,\n                                           displacement);\n        // move the bezier points\n        node.connected_segments.map(function(segment_obj) {\n            var reaction = reactions[segment_obj.reaction_id];\n            // If the reaction was not passed in the reactions argument, then ignore\n            if (reaction === undefined) return;\n\n            // rotate the beziers\n            var segment_id = segment_obj.segment_id,\n                segment = reaction.segments[segment_id];\n            if (segment.to_node_id==node_id && segment.b2) {\n                var displacement = rotate_around(segment.b2),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b2');\n                segment.b2 = utils.c_plus_c(segment.b2, displacement);\n                beziers[bez_id].x = segment.b2.x;\n                beziers[bez_id].y = segment.b2.y;\n            } else if (segment.from_node_id==node_id && segment.b1) {\n                var displacement = rotate_around(segment.b1),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b1');\n                segment.b1 = utils.c_plus_c(segment.b1, displacement);\n                beziers[bez_id].x = segment.b1.x;\n                beziers[bez_id].y = segment.b1.y;\n            }\n        });\n\n        updated_reaction_ids = utils.unique_concat([updated_reaction_ids,\n                                                    updated.reaction_ids]);\n        updated_node_ids.push(node_id);\n    }\n\n    return { node_ids: updated_node_ids,\n             reaction_ids: updated_reaction_ids };\n}\n\nfunction move_node_and_dependents(node, node_id, reactions, beziers, displacement) {\n    /** Move the node and its labels and beziers.\n\n     */\n    var updated = move_node_and_labels(node, reactions, displacement);\n\n    // move beziers\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // If the reaction was not passed in the reactions argument, then ignore\n        if (reaction === undefined) return;\n\n        // update beziers\n        var segment_id = segment_obj.segment_id,\n            segment = reaction.segments[segment_id];\n        [['b1', 'from_node_id'], ['b2', 'to_node_id']].forEach(function(c) {\n            var bez = c[0],\n                node = c[1];\n            if (segment[node]==node_id && segment[bez]) {\n                segment[bez] = utils.c_plus_c(segment[bez], displacement);\n                var tbez = beziers[bezier_id_for_segment_id(segment_id, bez)];\n                tbez.x = segment[bez].x;\n                tbez.y = segment[bez].y;\n            }\n        });\n\n        // add to list of updated reaction ids if it isn't already there\n        if (updated.reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated.reaction_ids.push(segment_obj.reaction_id);\n        }\n    });\n    return updated;\n}\n\nfunction move_node_and_labels(node, reactions, displacement) {\n    node.x = node.x + displacement.x;\n    node.y = node.y + displacement.y;\n\n    // recalculate: node label\n    node.label_x = node.label_x + displacement.x;\n    node.label_y = node.label_y + displacement.y;\n\n    // recalculate: reaction label\n    var updated_reaction_ids = [];\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // add to list of updated reaction ids if it isn't already there\n        if (updated_reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated_reaction_ids.push(segment_obj.reaction_id);\n\n            // update reaction label (but only once per reaction\n            if (node.node_type == 'midmarker') {\n                reaction.label_x = reaction.label_x + displacement.x;\n                reaction.label_y = reaction.label_y + displacement.y;\n            }\n        }\n    });\n    return { reaction_ids: updated_reaction_ids };\n}\n\nfunction calculate_new_metabolite_coordinates(met, primary_index, main_axis, center, dis, is_reversed) {\n    /** Calculate metabolite coordinates for a new reaction metabolite.\n\n     */\n    // new local coordinate system\n    var displacement = main_axis[0],\n        main_axis = [utils.c_minus_c(main_axis[0], displacement),\n                     utils.c_minus_c(main_axis[1], displacement)],\n        center = utils.c_minus_c(center, displacement);\n\n    // Curve parameters\n    var w = 80,  // distance between reactants and between products\n        b1_strength = 0.4,\n        b2_strength = 0.25,\n        w2 = w*0.7,\n        secondary_dis = 40,\n        num_slots = Math.min(2, met.count - 1);\n\n    // size and spacing for primary and secondary metabolites\n    var ds, draw_at_index, r;\n    if (met.is_primary) { // primary\n        ds = 20;\n    } else { // secondary\n        ds = 10;\n        // don't use center slot\n        if (met.index > primary_index) draw_at_index = met.index - 1;\n        else draw_at_index = met.index;\n    }\n\n    var de = dis - ds, // distance between ends of line axis\n        reaction_axis = [{'x': ds, 'y': 0},\n                         {'x': de, 'y': 0}];\n\n    // Define line parameters and axis.\n    // Begin with unrotated coordinate system. +y = Down, +x = Right.\n    var end, circle, b1, b2;\n    // reactants\n    if (((met.coefficient < 0) != is_reversed) && met.is_primary) { // Ali == BADASS\n        end = {'x': reaction_axis[0].x,\n               'y': reaction_axis[0].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + (end.x)*(1-b2_strength),\n              'y': center.y*b2_strength + (end.y)*(1-b2_strength)},\n        circle = {'x': main_axis[0].x,\n                  'y': main_axis[0].y};\n    } else if ((met.coefficient < 0) != is_reversed) {\n        end = {'x': reaction_axis[0].x + secondary_dis,\n               'y': reaction_axis[0].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength},\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[0].x + secondary_dis,\n                  'y': main_axis[0].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    } else if (((met.coefficient > 0) != is_reversed) && met.is_primary) {        // products\n        end = {'x': reaction_axis[1].x,\n               'y': reaction_axis[1].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x,\n                  'y': main_axis[1].y};\n    } else if ((met.coefficient > 0) != is_reversed) {\n        end = {'x': reaction_axis[1].x - secondary_dis,\n               'y': reaction_axis[1].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x - secondary_dis,\n                  'y': main_axis[1].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    }\n    var loc = {};\n    loc.b1 = utils.c_plus_c(displacement, b1);\n    loc.b2 = utils.c_plus_c(displacement, b2);\n    loc.circle = utils.c_plus_c(displacement, circle);\n    return loc;\n}\n\nfunction new_text_label(largest_ids, text, coords) {\n    var new_id = String(++largest_ids.text_labels),\n        new_label = { text: text,\n                      x: coords.x,\n                      y: coords.y };\n    return {id: new_id, label: new_label};\n}\n\nfunction bezier_id_for_segment_id(segment_id, bez) {\n    return segment_id+'_'+bez;\n}\n\nfunction bezier_ids_for_reaction_ids(reactions) {\n    /** Return an array of beziers ids for the array of reaction ids.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. a subset of *escher.Map.reactions*.\n\n     */\n    var bezier_ids = [];\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n\n            ['b1', 'b2'].forEach(function(bez) {\n                var seg_bez = segment[bez];\n                if (seg_bez !== null) {\n                    bezier_ids.push(bezier_id_for_segment_id(segment_id, bez));\n                }\n            });\n        }\n    }\n    return bezier_ids;\n}\n\nfunction new_beziers_for_segments(segments, reaction_id) {\n    /** Return an object containing beziers for the segments object.\n\n     Arguments\n     ---------\n\n     segments: A segments object, e.g. *escher.Map.segments*.\n\n     reaction_id: The reaction id for the segments.\n\n     */\n    var beziers = {};\n    for (var segment_id in segments) {\n        var segment = segments[segment_id];\n\n        ['b1', 'b2'].forEach(function(bez) {\n            var seg_bez = segment[bez];\n            if (seg_bez !== null) {\n                var bezier_id = bezier_id_for_segment_id(segment_id, bez);\n                beziers[bezier_id] = {\n                    bezier: bez,\n                    x: seg_bez.x,\n                    y: seg_bez.y,\n                    reaction_id: reaction_id,\n                    segment_id: segment_id\n                };\n            }\n        });\n    }\n    return beziers;\n}\n\nfunction new_beziers_for_reactions(reactions) {\n    /** Return an object containing beziers for the reactions object.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. *escher.Map.reactions*.\n\n     */\n    var beziers = {};\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        var these = new_beziers_for_segments(reaction.segments, reaction_id);\n        utils.extend(beziers, these);\n    }\n    return beziers;\n}\n","/**\n * @license\n *\n * complete.ly 1.0.0\n * MIT Licensing\n * Copyright (c) 2013 Lorenzo Puccetti\n *\n * This Software shall be used for doing good things, not bad things.\n *\n *\n * Modified by Zachary King (c) 2014.\n *\n **/\n\nvar utils = require('./utils');\n\nmodule.exports = function(container, config) {\n    document = utils.get_document(container);\n    window = utils.get_window(container);\n\n    config = config || {};\n    config.fontSize =                       config.fontSize   || '13px';\n    config.fontFamily =                     config.fontFamily || 'sans-serif';\n    config.promptInnerHTML =                config.promptInnerHTML || '';\n    config.color =                          config.color || '#333';\n    config.hintColor =                      config.hintColor || '#aaa';\n    config.backgroundColor =                config.backgroundColor || '#fff';\n    config.dropDownBorderColor =            config.dropDownBorderColor || '#aaa';\n    config.dropDownZIndex =                 config.dropDownZIndex || '100'; // to ensure we are in front of everybody\n    config.dropDownOnHoverBackgroundColor = config.dropDownOnHoverBackgroundColor || '#ddd';\n\n    var txtInput = document.createElement('input');\n    txtInput.type ='text';\n    txtInput.spellcheck = false;\n    txtInput.style.fontSize =        config.fontSize;\n    txtInput.style.fontFamily =      config.fontFamily;\n    txtInput.style.color =           config.color;\n    txtInput.style.backgroundColor = config.backgroundColor;\n    txtInput.style.width = '100%';\n    txtInput.style.outline = '0';\n    txtInput.style.border =  '0';\n    txtInput.style.margin =  '0';\n    txtInput.style.padding = '0';\n\n    var txtHint = txtInput.cloneNode();\n    txtHint.disabled='';\n    txtHint.style.position = 'absolute';\n    txtHint.style.top =  '0';\n    txtHint.style.left = '0';\n    txtHint.style.borderColor = 'transparent';\n    txtHint.style.boxShadow =   'none';\n    txtHint.style.color = config.hintColor;\n\n    txtInput.style.backgroundColor ='transparent';\n    txtInput.style.verticalAlign = 'top';\n    txtInput.style.position = 'relative';\n\n    var wrapper = document.createElement('div');\n    wrapper.style.position = 'relative';\n    wrapper.style.outline = '0';\n    wrapper.style.border =  '0';\n    wrapper.style.margin =  '0';\n    wrapper.style.padding = '0';\n\n    var prompt = document.createElement('div');\n    prompt.style.position = 'absolute';\n    prompt.style.outline = '0';\n    prompt.style.margin =  '0';\n    prompt.style.padding = '0';\n    prompt.style.border =  '0';\n    prompt.style.fontSize =   config.fontSize;\n    prompt.style.fontFamily = config.fontFamily;\n    prompt.style.color =           config.color;\n    prompt.style.backgroundColor = config.backgroundColor;\n    prompt.style.top = '0';\n    prompt.style.left = '0';\n    prompt.style.overflow = 'hidden';\n    prompt.innerHTML = config.promptInnerHTML;\n    prompt.style.background = 'transparent';\n    if (document.body === undefined) {\n        throw 'document.body is undefined. The library was wired up incorrectly.';\n    }\n    document.body.appendChild(prompt);\n    var w = prompt.getBoundingClientRect().right; // works out the width of the prompt.\n    wrapper.appendChild(prompt);\n    prompt.style.visibility = 'visible';\n    prompt.style.left = '-'+w+'px';\n    wrapper.style.marginLeft= w+'px';\n\n    wrapper.appendChild(txtHint);\n    wrapper.appendChild(txtInput);\n\n    var dropDown = document.createElement('div');\n    dropDown.style.position = 'absolute';\n    dropDown.style.visibility = 'hidden';\n    dropDown.style.outline = '0';\n    dropDown.style.margin =  '0';\n    dropDown.style.padding = '0';\n    dropDown.style.textAlign = 'left';\n    dropDown.style.fontSize =   config.fontSize;\n    dropDown.style.fontFamily = config.fontFamily;\n    dropDown.style.backgroundColor = config.backgroundColor;\n    dropDown.style.zIndex = config.dropDownZIndex;\n    dropDown.style.cursor = 'default';\n    dropDown.style.borderStyle = 'solid';\n    dropDown.style.borderWidth = '1px';\n    dropDown.style.borderColor = config.dropDownBorderColor;\n    dropDown.style.overflowX= 'hidden';\n    dropDown.style.whiteSpace = 'pre';\n    dropDown.style.overflowY = 'scroll';\n\n    var createDropDownController = function(elem) {\n        var rows = [];\n        var ix = 0;\n        var oldIndex = -1;\n        var current_row = null;\n\n        var onMouseOver =  function() { this.style.outline = '1px solid #ddd'; }\n        var onMouseOut =   function() { this.style.outline = '0'; }\n        var onDblClick =  function(e) {\n            e.preventDefault();\n            p.onmouseselection(this.id);\n        }\n\n        var p = {\n            hide :  function() { elem.style.visibility = 'hidden'; },\n            refresh : function(token, options) {\n                elem.style.visibility = 'hidden';\n                ix = 0;\n                elem.innerHTML ='';\n                var vph = (window.innerHeight || document.documentElement.clientHeight);\n                var rect = elem.parentNode.getBoundingClientRect();\n                var distanceToTop = rect.top - 6;                        // heuristic give 6px\n                var distanceToBottom = vph - rect.bottom -6;  // distance from the browser border.\n\n                rows = [];\n                for (var i = 0; i < options.length; i++) {\n                    // ignore case\n                    var found = options[i].matches.filter(function(match) {\n                        return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                    });\n                    if (found.length == 0)\n                        continue;\n                    var divRow = document.createElement('div');\n                    divRow.style.color = config.color;\n                    divRow.onmouseover = onMouseOver;\n                    divRow.onmouseout =  onMouseOut;\n                    // prevent selection for double click\n                    divRow.onmousedown = function(e) { e.preventDefault(); };\n                    divRow.ondblclick = onDblClick;\n                    divRow.__hint = found[0];\n                    divRow.id = options[i].id;\n                    divRow.innerHTML = options[i].html;\n                    rows.push(divRow);\n                    elem.appendChild(divRow);\n                    // limit results and add a note at the buttom\n                    if (rows.length >= rs.display_limit) {\n                        var divRow2 = document.createElement('div');\n                        divRow2.innerHTML = ' ' + (options.length - rows.length) + ' more';\n                        rows.push(divRow2);\n                        elem.appendChild(divRow2);\n                        break;\n                    }\n                }\n                if (rows.length===0) {\n                    return; // nothing to show.\n                }\n                p.highlight(0);\n\n                // Heuristic (only when the distance to the to top is 4\n                // times more than distance to the bottom\n                if (distanceToTop > distanceToBottom*3) {\n                    // we display the dropDown on the top of the input text\n                    elem.style.maxHeight =  distanceToTop+'px';\n                    elem.style.top ='';\n                    elem.style.bottom ='100%';\n                } else {\n                    elem.style.top = '100%';\n                    elem.style.bottom = '';\n                    elem.style.maxHeight =  distanceToBottom+'px';\n                }\n                elem.style.visibility = 'visible';\n            },\n            highlight : function(index) {\n                if (oldIndex !=-1 && rows[oldIndex]) {\n                    rows[oldIndex].style.backgroundColor = config.backgroundColor;\n                }\n                rows[index].style.backgroundColor = config.dropDownOnHoverBackgroundColor; // <-- should be config\n                oldIndex = index;\n                current_row = rows[index];\n            },\n            // moves the selection either up or down (unless it's not\n            // possible) step is either +1 or -1.\n            move : function(step) {\n                // nothing to move if there is no dropDown. (this happens if\n                // the user hits escape and then down or up)\n                if (elem.style.visibility === 'hidden')\n                    return '';\n                // No circular scrolling\n                if (ix+step === -1 || ix+step === rows.length)\n                    return rows[ix].__hint;\n                ix+=step;\n                p.highlight(ix);\n                return rows[ix].__hint;\n            },\n            onmouseselection : function() {},\n            get_current_row: function () {\n                return current_row;\n            }\n        };\n        return p;\n    }\n\n    var dropDownController = createDropDownController(dropDown);\n\n    dropDownController.onmouseselection = function(id) {\n        rs.onEnter(id)\n        rs.input.focus();\n    }\n\n    wrapper.appendChild(dropDown);\n    container.appendChild(wrapper);\n\n    var spacer,\n        // This will contain the leftSide part of the textfield (the bit that\n        // was already autocompleted)\n        leftSide;\n\n    function calculateWidthForText(text) {\n        if (spacer === undefined) { // on first call only.\n            spacer = document.createElement('span');\n            spacer.style.visibility = 'hidden';\n            spacer.style.position = 'fixed';\n            spacer.style.outline = '0';\n            spacer.style.margin =  '0';\n            spacer.style.padding = '0';\n            spacer.style.border =  '0';\n            spacer.style.left = '0';\n            spacer.style.whiteSpace = 'pre';\n            spacer.style.fontSize =   config.fontSize;\n            spacer.style.fontFamily = config.fontFamily;\n            spacer.style.fontWeight = 'normal';\n            document.body.appendChild(spacer);\n        }\n\n        // Used to encode an HTML string into a plain text.\n        // taken from http://stackoverflow.com/questions/1219860/javascript-jquery-html-encoding\n        spacer.innerHTML = String(text).replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        return spacer.getBoundingClientRect().right;\n    }\n\n\n    var rs = {\n        get_hint :    function(x) { return x; },\n        display_limit: 1000,\n        onArrowDown : function() {},               // defaults to no action.\n        onArrowUp :   function() {},               // defaults to no action.\n        onEnter :     function() {},               // defaults to no action.\n        onTab :       function() {},               // defaults to no action.\n        onChange:     function() { rs.repaint() }, // defaults to repainting.\n        startFrom:    0,\n        options:      [],\n\n        // Only to allow easy access to the HTML elements to the final user\n        // (possibly for minor customizations)\n        wrapper : wrapper,\n        input :  txtInput,\n        hint  :  txtHint,\n        dropDown :  dropDown,\n\n        prompt : prompt,\n        setText : function(text) {\n            txtHint.value = text;\n            txtInput.value = text;\n        },\n        getText : function() {\n            return txtInput.value;\n        },\n        hideDropDown : function() {\n            dropDownController.hide();\n        },\n        repaint : function() {\n            var text = txtInput.value;\n            var startFrom =  rs.startFrom;\n            var options =    rs.options;\n            var optionsLength = options.length;\n\n            // breaking text in leftSide and token.\n            var token = text.substring(startFrom);\n            leftSide =  text.substring(0,startFrom);\n\n            // updating the hint.\n            txtHint.value ='';\n            for (var i = 0; i < optionsLength; i++) {\n                var found = options[i].matches.filter(function(match) {\n                    return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                });\n                if (found.length == 0)\n                    continue;\n                txtHint.value = rs.get_hint(found[0]);\n                break;\n            }\n\n            // moving the dropDown and refreshing it.\n            dropDown.style.left = calculateWidthForText(leftSide)+'px';\n            dropDownController.refresh(token, rs.options);\n        }\n    };\n\n    var registerOnTextChangeOldValue;\n\n    // Register a callback function to detect changes to the content of the\n    // input-type-text.  Those changes are typically followed by user's\n    // action: a key-stroke event but sometimes it might be a mouse click.\n    var registerOnTextChange = function(txt, callback) {\n        registerOnTextChangeOldValue = txt.value;\n        var handler = function() {\n            var value = txt.value;\n            if (registerOnTextChangeOldValue !== value) {\n                registerOnTextChangeOldValue = value;\n                callback(value);\n            }\n        };\n\n        // For user's actions, we listen to both input events and key up events\n        // It appears that input events are not enough so we defensively listen to key up events too.\n        // source: http://help.dottoro.com/ljhxklln.php\n        //\n        // The cost of listening to three sources should be negligible as the handler will invoke callback function\n        // only if the text.value was effectively changed.\n        txt.addEventListener(\"input\",  handler, false);\n        txt.addEventListener('keyup',  handler, false);\n        txt.addEventListener('change', handler, false);\n    };\n\n\n    registerOnTextChange(txtInput,function(text) { // note the function needs to be wrapped as API-users will define their onChange\n        rs.onChange(text);\n        rs.repaint();\n    });\n\n\n    var keyDownHandler = function(e) {\n        e = e || window.event;\n        var keyCode = e.keyCode;\n\n        if (keyCode == 33) { return; } // page up (do nothing)\n        if (keyCode == 34) { return; } // page down (do nothing);\n\n        // right,  end, tab  (autocomplete triggered)\n        if (keyCode == 39 || keyCode == 35 || keyCode == 9) {\n            // for tabs we need to ensure that we override the default\n            // behaviour: move to the next focusable HTML-element\n            if (keyCode == 9) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (txtHint.value.length == 0) {\n                    // tab was called with no action.\n                    rs.onTab();\n                }\n            }\n            // if there is a hint\n            if (txtHint.value.length > 0) {\n                txtInput.value = txtHint.value;\n                var hasTextChanged = registerOnTextChangeOldValue != txtInput.value\n                // avoid dropDown to appear again\n                registerOnTextChangeOldValue = txtInput.value;\n                // for example imagine the array contains the following\n                // words: bee, beef, beetroot. User has hit enter to get\n                // 'bee' it would be prompted with the dropDown again (as\n                // beef and beetroot also match)\n                if (hasTextChanged) {\n                    // force it.\n                    rs.onChange(txtInput.value);\n                }\n            }\n            return;\n        }\n\n        if (keyCode == 13) { // enter\n            // get current\n            var id = dropDownController.get_current_row().id;\n            rs.onEnter(id);\n            return;\n        }\n\n        if (keyCode == 40) { // down\n            var m = dropDownController.move(+1);\n            if (m == '') { rs.onArrowDown(); }\n            txtHint.value = rs.get_hint(m);\n            return;\n        }\n\n        if (keyCode == 38 ) { // up\n            var m = dropDownController.move(-1);\n            if (m == '') { rs.onArrowUp(); }\n            txtHint.value = rs.get_hint(m);\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        // it's important to reset the txtHint on key down. Think: user\n        // presses a letter (e.g. 'x') and never releases. You get\n        // (xxxxxxxxxxxxxxxxx) and you would see still the hint. Reset the\n        // txtHint. (it might be updated onKeyUp).\n        txtHint.value ='';\n    };\n\n    txtInput.addEventListener(\"keydown\",  keyDownHandler, false);\n    return rs;\n};\n","/** data_styles */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    import_and_check: import_and_check,\n    text_for_data: text_for_data,\n    float_for_data: float_for_data,\n    reverse_flux_for_data: reverse_flux_for_data,\n    gene_string_for_data: gene_string_for_data,\n    csv_converter: csv_converter,\n    genes_for_gene_reaction_rule: genes_for_gene_reaction_rule,\n    evaluate_gene_reaction_rule: evaluate_gene_reaction_rule,\n    replace_gene_in_rule: replace_gene_in_rule,\n    apply_reaction_data_to_reactions: apply_reaction_data_to_reactions,\n    apply_metabolite_data_to_nodes: apply_metabolite_data_to_nodes,\n    apply_gene_data_to_reactions: apply_gene_data_to_reactions\n};\n\n\n// globals\nvar RETURN_ARG = function(x) { return x; },\n    ESCAPE_REG = /([.*+?^=!:${}()|\\[\\]\\/\\\\])/g,\n    EMPTY_LINES = /\\n\\s*\\n/g,\n    TRAILING_NEWLINE = /\\n\\s*(\\)*)\\s*$/,\n    AND_OR = /([\\(\\) ])(?:and|or)([\\)\\( ])/ig,\n    ALL_PARENS = /[\\(\\)]/g,\n    // capture an expression surrounded by whitespace and a set of parentheses\n    EXCESS_PARENS = /\\(\\s*(\\S+)\\s*\\)/g,\n    OR = /\\s+or\\s+/i,\n    AND = /\\s+and\\s+/i,\n    // find ORs\n    OR_EXPRESSION = /(^|\\()(\\s*-?[0-9.]+\\s+(?:or\\s+-?[0-9.]+\\s*)+)(\\)|$)/ig,\n    // find ANDS, respecting order of operations (and before or)\n    AND_EXPRESSION = /(^|\\(|or\\s)(\\s*-?[0-9.]+\\s+(?:and\\s+-?[0-9.]+\\s*)+)(\\sor|\\)|$)/ig;\n\n\nfunction import_and_check(data, name, all_reactions) {\n    /** Convert imported data to a style that can be applied to reactions\n     and nodes.\n\n     Arguments\n     ---------\n\n     data: The data object.\n\n     name: Either 'reaction_data', 'metabolite_data', or 'gene_data'\n\n     all_reactions: Required for name == 'gene_data'. Must include all\n     GPRs for the map and model.\n\n     */\n\n    // check arguments\n    if (data===null)\n        return null;\n    if (['reaction_data', 'metabolite_data', 'gene_data'].indexOf(name) == -1)\n        throw new Error('Invalid name argument: ' + name);\n\n    // make array\n    if (!(data instanceof Array)) {\n        data = [data];\n    }\n    // check data\n    var check = function() {\n        if (data===null)\n            return null;\n        if (data.length==1)\n            return null;\n        if (data.length==2)\n            return null;\n        return console.warn('Bad data style: ' + name);\n    };\n    check();\n    data = utils.array_to_object(data);\n\n    if (name == 'gene_data') {\n        if (all_reactions === undefined)\n            throw new Error('Must pass all_reactions argument for gene_data');\n        data = align_gene_data_to_reactions(data, all_reactions);\n    }\n\n    return data;\n\n    // definitions\n    function align_gene_data_to_reactions(data, reactions) {\n        var aligned = {},\n            null_val = [null];\n        // make an array of nulls as the default\n        for (var first_gene_id in data) {\n            null_val = data[first_gene_id].map(function() { return null; });\n            break;\n        }\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id],\n                bigg_id = reaction.bigg_id,\n                this_gene_data = {};\n\n            reaction.genes.forEach(function(gene) {\n                // check both gene id and gene name\n                ['bigg_id', 'name'].forEach(function(kind) {\n                    var d = data[gene[kind]] || utils.clone(null_val);\n                    // merger with existing data if present\n                    var existing_d = this_gene_data[gene.bigg_id];\n                    if (typeof existing_d === 'undefined') {\n                        this_gene_data[gene.bigg_id] = d;\n                    } else {\n                        for (var i = 0; i < d.length; i++) {\n                            var pnt = d[i];\n                            if (pnt !== null)\n                                existing_d[i] = pnt;\n                        }\n                    }\n                });\n            });\n            aligned[bigg_id] = this_gene_data;\n        }\n        return aligned;\n    }\n}\n\nfunction float_for_data(d, styles, compare_style) {\n    // all null\n    if (d === null)\n        return null;\n\n    // absolute value\n    var take_abs = (styles.indexOf('abs') != -1);\n\n    if (d.length==1) { // 1 set\n        // 1 null\n        var f = _parse_float_or_null(d[0]);\n        if (f === null)\n            return null;\n        return abs(f, take_abs);\n    } else if (d.length==2) { // 2 sets\n        // 2 null\n        var fs = d.map(_parse_float_or_null);\n        if (fs[0] === null || fs[1] === null)\n            return null;\n\n        if (compare_style == 'diff') {\n            return diff(fs[0], fs[1], take_abs);\n        } else if (compare_style == 'fold') {\n            return check_finite(fold(fs[0], fs[1], take_abs));\n        }\n        else if (compare_style == 'log2_fold') {\n            return check_finite(log2_fold(fs[0], fs[1], take_abs));\n        }\n    } else {\n        throw new Error('Data array must be of length 1 or 2');\n    }\n    throw new Error('Bad data compare_style: ' + compare_style);\n\n    // definitions\n    function check_finite(x) {\n        return isFinite(x) ? x : null;\n    }\n    function abs(x, take_abs) {\n        return take_abs ? Math.abs(x) : x;\n    }\n    function diff(x, y, take_abs) {\n        if (take_abs) return Math.abs(y - x);\n        else return y - x;\n    }\n    function fold(x, y, take_abs) {\n        if (x == 0 || y == 0) return null;\n        var fold = (y >= x ? y / x : - x / y);\n        return take_abs ? Math.abs(fold) : fold;\n    }\n    function log2_fold(x, y, take_abs) {\n        if (x == 0) return null;\n        if (y / x < 0) return null;\n        var log = Math.log(y / x) / Math.log(2);\n        return take_abs ? Math.abs(log) : log;\n    }\n}\n\nfunction reverse_flux_for_data(d) {\n    if (d === null || d[0] === null)\n        return false;\n    return (d[0] < 0);\n}\n\nfunction gene_string_for_data(rule, gene_values, genes, styles,\n                              identifiers_on_map, compare_style) {\n    /** Add gene values to the gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: (string) The gene reaction rule.\n\n     gene_values: The values.\n\n     genes: An array of objects specifying the gene bigg_id and name.\n\n     styles: The reaction styles.\n\n     identifiers_on_map: The type of identifiers ('bigg_id' or 'name').\n\n     compare_style: The comparison style.\n\n     Returns\n     -------\n\n     A list of objects with {\n     bigg_id: The bigg ID.\n     name: The name.\n     text: The new string with formatted data values.\n     }\n\n     The text elements should each appear on a new line.\n\n     */\n\n    var out_text = rule,\n        no_data = (gene_values === null),\n        // keep track of bigg_id's or names to remove repeats\n        genes_found = {};\n\n\n    genes.forEach(function(g_obj) {\n        // get id or name\n        var name = g_obj[identifiers_on_map];\n        if (typeof name === 'undefined')\n            throw new Error('Bad value for identifiers_on_map: ' + identifiers_on_map);\n        // remove repeats that may have found their way into genes object\n        if (typeof genes_found[name] !== 'undefined')\n            return;\n        genes_found[name] = true;\n        // generate the string\n        if (no_data) {\n            out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, (name + '\\n'));\n        } else {\n            var d = gene_values[g_obj.bigg_id];\n            if (typeof d === 'undefined') d = null;\n            var f = float_for_data(d, styles, compare_style),\n                format = (f === null ? RETURN_ARG : d3.format('.3g'));\n            if (d.length==1) {\n                out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, (name + ' (' + null_or_d(d[0], format) + ')\\n'));\n            }\n            else if (d.length==2) {\n                // check if they are all text\n                var new_str,\n                    any_num = d.reduce(function(c, x) {\n                        return c || _parse_float_or_null(x) !== null;\n                    }, false);\n                if (any_num) {\n                    new_str = (name + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ': ' +\n                               null_or_d(f, format) +\n                               ')\\n');\n                } else {\n                    new_str = (name + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ')\\n');\n                }\n                out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, new_str);\n            }\n        }\n    });\n    // remove emtpy lines\n    out_text = out_text.replace(EMPTY_LINES, '\\n')\n    // remove trailing newline (with or without parens)\n        .replace(TRAILING_NEWLINE, '$1');\n\n    // split by newlines\n    var result = out_text.split('\\n').map(function(text) {\n        for (var i = 0, l = genes.length; i < l; i++) {\n            var gene = genes[i];\n            if (text.indexOf(gene[identifiers_on_map]) != -1) {\n                return { bigg_id: gene.bigg_id, name: gene.name, text: text };\n                continue;\n            }\n        }\n        // not found, then none\n        return { bigg_id: null, name: null, text: text };\n    });\n    return result;\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? 'nd' : format(d);\n    }\n}\n\nfunction text_for_data(d, f) {\n    if (d === null)\n        return null_or_d(null);\n    if (d.length == 1) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g'));\n        return null_or_d(d[0], format);\n    }\n    if (d.length == 2) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g')),\n            t = null_or_d(d[0], format);\n        t += ', ' + null_or_d(d[1], format);\n        t += ': ' + null_or_d(f, format);\n        return t;\n    }\n    return '';\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? '(nd)' : format(d);\n    }\n}\n\nfunction csv_converter(csv_rows) {\n    /** Convert data from a csv file to json-style data.\n\n     File must include a header row.\n\n     */\n    // count rows\n    var c = csv_rows[0].length,\n        converted = [];\n    if (c < 2 || c > 3)\n        throw new Error('CSV file must have 2 or 3 columns');\n    // set up rows\n    for (var i = 1; i < c; i++) {\n        converted[i - 1] = {};\n    }\n    // fill\n    csv_rows.slice(1).forEach(function(row) {\n        for (var i = 1, l = row.length; i < l; i++) {\n            converted[i - 1][row[0]] = row[i];\n        }\n    });\n    return converted;\n}\n\nfunction genes_for_gene_reaction_rule(rule) {\n    /** Find unique genes in gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     Returns\n     -------\n\n     An array of gene strings.\n\n     */\n    var genes = rule\n    // remove ANDs and ORs, surrounded by space or parentheses\n            .replace(AND_OR, '$1$2')\n    // remove parentheses\n            .replace(ALL_PARENS, '')\n    // split on whitespace\n            .split(' ')\n            .filter(function(x) { return x != ''; });\n    // unique strings\n    return utils.unique_strings_array(genes);\n}\n\nfunction evaluate_gene_reaction_rule(rule, gene_values, and_method_in_gene_reaction_rule) {\n    /** Return a value given the rule and gene_values object.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     gene_values: Object with gene_ids for keys and numbers for values.\n\n     and_method_in_gene_reaction_rule: Either 'mean' or 'min'.\n\n     */\n\n    var null_val = [null],\n        l = 1;\n    // make an array of nulls as the default\n    for (var gene_id in gene_values) {\n        null_val = gene_values[gene_id].map(function() { return null; });\n        l = null_val.length;\n        break;\n    }\n\n    if (rule == '') return utils.clone(null_val);\n\n    // for each element in the arrays\n    var out = [];\n    for (var i = 0; i < l; i++) {\n        // get the rule\n        var curr_val = rule;\n\n        // put all the numbers into the expression\n        var all_null = true;\n        for (var gene_id in gene_values) {\n            var f = _parse_float_or_null(gene_values[gene_id][i]);\n            if (f === null) {\n                f = 0;\n            } else {\n                all_null = false;\n            }\n            curr_val = replace_gene_in_rule(curr_val, gene_id, f);\n        }\n        if (all_null) {\n            out.push(null);\n            continue;\n        }\n\n        // recursively evaluate\n        while (true) {\n            // arithemtic expressions\n            var new_curr_val = curr_val;\n\n            // take out excessive parentheses\n            new_curr_val = new_curr_val.replace(EXCESS_PARENS, ' $1 ');\n\n            // or's\n            new_curr_val = new_curr_val.replace(OR_EXPRESSION, function(match, p1, p2, p3) {\n                // sum\n                var nums = p2.split(OR).map(parseFloat),\n                    sum = nums.reduce(function(a, b) { return a + b;});\n                return p1 + sum + p3;\n            });\n            // and's\n            new_curr_val = new_curr_val.replace(AND_EXPRESSION, function(match, p1, p2, p3) {\n                // find min\n                var nums = p2.split(AND).map(parseFloat),\n                    val = (and_method_in_gene_reaction_rule == 'min' ?\n                           Math.min.apply(null, nums) :\n                           nums.reduce(function(a, b) { return a + b; }) / nums.length);\n                return p1 + val + p3;\n            });\n            // break if there is no change\n            if (new_curr_val == curr_val)\n                break;\n            curr_val = new_curr_val;\n        }\n        // strict test for number\n        var num = Number(curr_val);\n        if (isNaN(num)) {\n            console.warn('Could not evaluate ' + rule);\n            out.push(null);\n        } else {\n            out.push(num);\n        }\n    }\n    return out;\n}\n\nfunction replace_gene_in_rule(rule, gene_id, val) {\n    // get the escaped string, with surrounding space or parentheses\n    var space_or_par_start = '(^|[\\\\\\s\\\\\\(\\\\\\)])',\n        space_or_par_finish = '([\\\\\\s\\\\\\(\\\\\\)]|$)',\n        escaped = space_or_par_start + escape_reg_exp(gene_id) + space_or_par_finish;\n    return rule.replace(new RegExp(escaped, 'g'),  '$1' + val + '$2');\n\n    // definitions\n    function escape_reg_exp(string) {\n        return string.replace(ESCAPE_REG, \"\\\\$1\");\n    }\n}\n\nfunction apply_reaction_data_to_reactions(reactions, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var reaction_id, reaction, segment_id, segment;\n\n    if (data === null) {\n        for (reaction_id in reactions) {\n            reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            for (segment_id in reaction.segments) {\n                segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // apply the datasets to the reactions\n    for (reaction_id in reactions) {\n        reaction = reactions[reaction_id];\n        // check bigg_id and name\n        var d = data[reaction.bigg_id] || data[reaction.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        reaction.gene_string = null;\n        // apply to the segments\n        for (segment_id in reaction.segments) {\n            segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n    }\n    return true;\n}\n\nfunction apply_metabolite_data_to_nodes(nodes, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var node_id;\n\n    if (data === null) {\n        for (node_id in nodes) {\n            nodes[node_id].data = null;\n            nodes[node_id].data_string = '';\n        }\n        return false;\n    }\n\n    // grab the data\n    for (node_id in nodes) {\n        var node = nodes[node_id];\n            // check bigg_id and name\n        var d = data[node.bigg_id] || data[node.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            s = text_for_data(d, f);\n        node.data = f;\n        node.data_string = s;\n    }\n    return true;\n}\n\nfunction apply_gene_data_to_reactions(reactions, gene_data_obj, styles, identifiers_on_map,\n                                      compare_style, and_method_in_gene_reaction_rule) {\n    /** Returns true if data is present\n\n     Arguments\n     ---------\n\n     reactions: The reactions to update.\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { gene_id: value } }\n\n     styles:  Gene styles array.\n\n     identifiers_on_map:\n\n     compare_style:\n\n     and_method_in_gene_reaction_rule:\n\n     */\n\n    if (gene_data_obj === null) {\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            reaction.reverse_flux = false;\n            for (var segment_id in reaction.segments) {\n                var segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // get the null val\n    var null_val = [null];\n    // make an array of nulls as the default\n    for (var reaction_id in gene_data_obj) {\n        for (var gene_id in gene_data_obj[reaction_id]) {\n            null_val = gene_data_obj[reaction_id][gene_id]\n                .map(function() { return null; });\n            break;\n        }\n        break;\n    }\n\n    // apply the datasets to the reactions\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id],\n            rule = reaction.gene_reaction_rule;\n        // find the data\n        var d, gene_values,\n            r_data = gene_data_obj[reaction.bigg_id];\n        if (typeof r_data !== 'undefined') {\n            gene_values = r_data;\n            d = evaluate_gene_reaction_rule(rule, gene_values,\n                                            and_method_in_gene_reaction_rule);\n        } else {\n            gene_values = {};\n            d = utils.clone(null_val);\n        }\n        var f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        // apply to the segments\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n        // always update the gene string\n        reaction.gene_string = gene_string_for_data(rule,\n                                                    gene_values,\n                                                    reaction.genes,\n                                                    styles,\n                                                    identifiers_on_map,\n                                                    compare_style);\n    }\n    return true;\n}\n\nfunction _parse_float_or_null(x) {\n    // strict number casting\n    var f = Number(x);\n    // check for null and '', which haven't been caught yet\n    return (isNaN(f) || parseFloat(x) != f) ? null : f;\n}\n","module.exports = {'version': '1.4.0-beta.1', builder_embed: 'svg.escher-svg .gene-label,svg.escher-svg .label{text-rendering:optimizelegibility;cursor:default}svg.escher-svg #mouse-node{fill:none}svg.escher-svg #canvas{stroke:#ccc;stroke-width:7px;fill:#fff}svg.escher-svg .resize-rect{fill:#000;opacity:0;stroke:none}svg.escher-svg .label{font-family:sans-serif;font-style:italic;font-weight:700;font-size:8px;fill:#000;stroke:none}svg.escher-svg .reaction-label{font-size:30px;fill:#202078;text-rendering:optimizelegibility}svg.escher-svg .node-label{font-size:20px}svg.escher-svg .gene-label{font-size:18px;fill:#202078}svg.escher-svg .text-label .label,svg.escher-svg .text-label-input{font-size:50px}svg.escher-svg .node-circle{stroke-width:2px}svg.escher-svg .midmarker-circle,svg.escher-svg .multimarker-circle{fill:#fff;fill-opacity:.2;stroke:#323232}svg.escher-svg g.selected .node-circle{stroke-width:6px;stroke:#1471c7}svg.escher-svg g.selected .label{fill:#1471c7}svg.escher-svg .metabolite-circle{stroke:#a24510;fill:#e0865b}svg.escher-svg g.selected .metabolite-circle{stroke:#050200}svg.escher-svg .segment{stroke:#334E75;stroke-width:10px;fill:none}svg.escher-svg .arrowhead{fill:#334E75}svg.escher-svg .stoichiometry-label-rect{fill:#fff;opacity:.5}svg.escher-svg .stoichiometry-label{fill:#334E75;font-size:17px}svg.escher-svg .membrane{fill:none;stroke:#fb0}svg.escher-svg .brush .extent{fill-opacity:.1;fill:#000;stroke:#fff;shape-rendering:crispEdges}svg.escher-svg #brush-container .background{fill:none}svg.escher-svg .bezier-circle{fill:#fff}svg.escher-svg .bezier-circle.b1{stroke:red}svg.escher-svg .bezier-circle.b2{stroke:#00f}svg.escher-svg .connect-line{stroke:#c8c8c8}svg.escher-svg .direction-arrow{stroke:#000;stroke-width:1px;fill:#fff;opacity:.3}svg.escher-svg .start-reaction-cursor{cursor:pointer}svg.escher-svg .start-reaction-target{stroke:#646464;fill:none;opacity:.5}svg.escher-svg .rotation-center-line{stroke:red;stroke-width:5px}svg.escher-svg .highlight{fill:#D97000;text-decoration:underline}svg.escher-svg .cursor-grab{cursor:grab;cursor:-webkit-grab}svg.escher-svg .cursor-grabbing{cursor:grabbing;cursor:-webkit-grabbing}svg.escher-svg .edit-text-cursor{cursor:text}'};","/**\n* @license\n*\n* Escher\n* Author: Zachary King\n*\n* The MIT License (MIT)\n*\n* This software is Copyright © 2015 The Regents of the University of\n* California. All Rights Reserved.\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in\n* all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n* THE SOFTWARE.\n*/\n\nmodule.exports = {\n    version: require('./inline').version,\n    Builder: require('./Builder'),\n    Map: require('./Map'),\n    Behavior: require('./Behavior'),\n    KeyManager: require('./KeyManager'),\n    DataMenu: require('./DataMenu'),\n    UndoStack: require('./UndoStack'),\n    CobraModel: require('./CobraModel'),\n    utils: require('./utils'),\n    SearchIndex: require('./SearchIndex'),\n    Settings: require('./Settings'),\n    data_styles: require('./data_styles'),\n    ui: require('./ui'),\n    static: require('./static'),\n    ZoomContainer: require('./ZoomContainer')\n};\n","/** static */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    load_map_model_from_url: load_map_model_from_url\n};\n\n\nfunction load_map_model_from_url(map_download_url, model_download_url,\n                                 local_index, options, callback) {\n    var opt = utils.parse_url_components(window, options),\n        to_load = [],\n        load_map = function (fn) { fn(null); },\n        load_model = function (fn) { fn(null); };\n    if (opt.map_name) {\n        var map_path = _get_path('map', opt.map_name,\n                                 local_index, map_download_url);\n        if (map_path) {\n            load_map = function (fn) {\n                d3.json(map_path, function(error, data) {\n                    if (error) console.warn(error);\n                    fn(data);\n                });\n            };\n        }\n    }\n    if (opt.model_name) {\n        var model_path = _get_path('model', opt.model_name,\n                                   local_index, model_download_url);\n        if (model_path) {\n            load_model = function (fn) {\n                d3.json(model_path, function(error, data) {\n                    if (error) console.warn(error);\n                    fn(data);\n                });\n            };\n        }\n    }\n    if (opt.hasOwnProperty('enable_editing')) {\n        options.enable_editing = opt.enable_editing;\n    }\n    load_map(function(map_data) {\n        load_model(function(model_data) {\n            callback(map_data, model_data, options);\n        });\n    });\n}\n\nfunction _get_path(kind, name, index, url) {\n    var match = index[kind+'s'].filter(function(x) {\n        return x[kind+'_name'] == name;\n    });\n    if (match.length == 0)\n        throw new Error('Bad ' + kind + ' ' + name);\n    return (url + encodeURIComponent(match[0].organism) +\n            '/' + encodeURIComponent(match[0][kind+'_name'])) + '.json';\n}\n","/** ui */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nmodule.exports = {\n    individual_button: individual_button,\n    radio_button_group: radio_button_group,\n    button_group: button_group,\n    dropdown_menu: dropdown_menu,\n    set_json_input_button: set_json_input_button,\n    set_json_or_csv_input_button: set_json_or_csv_input_button\n};\n\n\nfunction individual_button(s, button) {\n    var b = s.append('button'),\n        c = b.append('span');\n    if ('id' in button) b.attr('id', button.id);\n    if ('classes' in button) b.attr('class', button.classes);\n\n    // text\n    if ('key_text' in button && 'text' in button && button.key_text !== null)\n        c.text(button.text + button.key_text);\n    else if ('text' in button)\n        c.text(button.text);\n\n    if ('icon' in button) c.classed(button.icon, true);\n    if ('key' in button) set_button(b, button.key);\n    // if ('tooltip' in button)\n    b.attr('title', button.tooltip);\n}\n\nfunction radio_button_group(s) {\n    var s2 = s.append('li')\n            .attr('class', 'btn-group-vertical')\n            .attr('data-toggle', 'buttons');\n    return { button: function(button) {\n        var b = s2.append(\"label\")\n                .attr(\"class\", \"btn btn-default\");\n        b.append('input').attr('type', 'radio');\n        var c = b.append(\"span\");\n        if ('id' in button) b.attr('id', button.id);\n\n        // text\n        if ('key_text' in button && 'text' in button && button.key_text !== null)\n            c.text(button.text + button.key_text);\n        else if ('text' in button)\n            c.text(button.text);\n\n        if ('icon' in button) c.classed(button.icon, true);\n        if ('key' in button) set_button(b, button.key);\n        if ('tooltip' in button) b.attr('title', button.tooltip);\n        return this;\n    }};\n}\n\nfunction button_group(s) {\n    var s2 = s.attr('class', 'btn-group-vertical');\n    return { button: function(button) {\n        var b = s2.append(\"button\")\n                .attr(\"class\", \"btn btn-default\");\n        var c = b.append(\"span\");\n        if ('id' in button) b.attr('id', button.id);\n\n        // text\n        if ('key_text' in button && 'text' in button && button.key_text !== null)\n            c.text(button.text + button.key_text);\n        else if ('text' in button)\n            c.text(button.text);\n\n        if ('icon' in button) c.classed(button.icon, true);\n        if ('key' in button) set_button(b, button.key);\n        if ('tooltip' in button) b.attr('title', button.tooltip);\n        return this;\n    }};\n}\n\nfunction dropdown_menu(s, name, pull_right) {\n    if (pull_right === undefined) pull_right = false;\n    var s2 = s.append('li')\n            .attr('class', 'dropdown');\n    s2.append('button').text(name+\" \")\n        .attr('class', 'btn btn-link btn-sm dropdown-button')\n        .attr('data-toggle', 'dropdown')\n        .append('b').attr('class', 'caret');\n    var ul = s2.append('ul')\n            .attr('class', 'dropdown-menu')\n            .classed('pull-right', pull_right)\n            .attr('role', 'menu')\n            .attr('aria-labelledby', 'dLabel');\n    return {\n        dropdown: s2,\n        button: function(button) {\n            var li = ul.append(\"li\")\n                    .attr('role', 'presentation')\n                    .datum(button),\n                link = li.append(\"a\")\n                    .attr('href', '#'),\n                icon = link.append('span')\n                    .attr('class', 'dropdown-button-icon'),\n                text = link.append('span')\n                    .attr('class', 'dropdown-button-text');\n            if ('id' in button) li.attr('id', button.id);\n\n            // text\n            if ('key_text' in button && 'text' in button && button.key_text !== null)\n                text.text(\" \"+button.text + button.key_text);\n            else if ('text' in button)\n                text.text(\" \"+button.text);\n\n            if ('icon' in button) icon.classed(button.icon, true);\n\n            if ('key' in button) {\n                set_button(link, button.key);\n            } else if ('input' in button) {\n                var input = button.input,\n                    out = (input.accept_csv ?\n                           set_json_or_csv_input_button(link, li, input.pre_fn,\n                                                        input.fn, input.failure_fn) :\n                           set_json_input_button(link, li, input.pre_fn,\n                                                 input.fn, input.failure_fn));\n                // assign a function to the key\n                if ('assign' in input && 'key' in input)\n                    input.assign[input.key] = out;\n            }\n            return this;\n        },\n        divider: function() {\n            ul.append(\"li\")\n                .attr('role', 'presentation')\n                .attr('class', 'divider');\n            return this;\n        }\n    };\n}\n\nfunction set_button(b, key) {\n    b.on(\"click\", function() {\n        key.fn.call(key.target);\n    });\n}\n\nfunction set_json_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json(this.files[0],\n                                function(e, d) {\n                                    post_fn(e, d);\n                                    this.value = \"\";\n                                }.bind(this),\n                                pre_fn,\n                                failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n\nfunction set_json_or_csv_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json_or_csv(this.files[0],\n                                       data_styles.csv_converter,\n                                       function(e, d) {\n                                           post_fn(e, d);\n                                           this.value = \"\";\n                                       }.bind(this),\n                                       pre_fn,\n                                       failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n","/* global d3, Blob, XMLSerializer */\n\nvar vkbeautify = require('vkbeautify');\nvar _ = require('underscore');\ntry {\n    var saveAs = require('filesaverjs').saveAs;\n} catch (e) {\n    console.warn('filesaverjs not available');\n}\n\n\nmodule.exports = {\n    set_options: set_options,\n    remove_child_nodes: remove_child_nodes,\n    load_css: load_css,\n    load_files: load_files,\n    load_the_file: load_the_file,\n    make_class: make_class,\n    setup_defs: setup_defs,\n    draw_an_object: draw_an_object,\n    draw_a_nested_object: draw_a_nested_object,\n    make_array: make_array,\n    make_array_ref: make_array_ref,\n    compare_arrays: compare_arrays,\n    array_to_object: array_to_object,\n    clone: clone,\n    extend: extend,\n    unique_concat: unique_concat,\n    unique_strings_array: unique_strings_array,\n    debounce: debounce,\n    object_slice_for_ids: object_slice_for_ids,\n    object_slice_for_ids_ref: object_slice_for_ids_ref,\n    c_plus_c: c_plus_c,\n    c_minus_c: c_minus_c,\n    c_times_scalar: c_times_scalar,\n    download_json: download_json,\n    load_json: load_json,\n    load_json_or_csv: load_json_or_csv,\n    download_svg: download_svg,\n    rotate_coords_recursive: rotate_coords_recursive,\n    rotate_coords: rotate_coords,\n    get_angle: get_angle,\n    to_degrees: to_degrees,\n    angle_for_event: angle_for_event,\n    distance: distance,\n    check_undefined: check_undefined,\n    compartmentalize: compartmentalize,\n    decompartmentalize: decompartmentalize,\n    mean: mean,\n    median: median,\n    quartiles: quartiles,\n    random_characters: random_characters,\n    generate_map_id: generate_map_id,\n    check_for_parent_tag: check_for_parent_tag,\n    name_to_url: name_to_url,\n    parse_url_components: parse_url_components,\n    get_document: get_document,\n    get_window: get_window,\n    d3_transform_catch: d3_transform_catch,\n    check_browser: check_browser\n};\n\n\n// definitions\nfunction _check_filesaver() {\n    /** Check if Blob is available, and alert if it is not. */\n    try {\n        var isFileSaverSupported = !!new Blob();\n    } catch (e) {\n        alert(\"Blob not supported\");\n    }\n}\n\nfunction set_options(options, defaults, must_be_float) {\n    if (options === undefined || options === null)\n        return defaults;\n    var i = -1,\n        out = {};\n    for (var key in defaults) {\n        var has_key = ((key in options) &&\n                       (options[key] !== null) &&\n                       (options[key] !== undefined));\n        var val = (has_key ? options[key] : defaults[key]);\n        if (must_be_float && key in must_be_float) {\n            val = parseFloat(val);\n            if (isNaN(val)) {\n                if (has_key) {\n                    console.warn('Bad float for option ' + key);\n                    val = parseFloat(defaults[key]);\n                    if (isNaN(val)) {\n                        console.warn('Bad float for default ' + key);\n                        val = null;\n                    }\n                } else {\n                    console.warn('Bad float for default ' + key);\n                    val = null;\n                }\n            }\n        }\n        out[key] = val;\n    }\n    return out;\n}\n\n\nfunction remove_child_nodes(selection) {\n    /** Removes all child nodes from a d3 selection\n\n     */\n    var node = selection.node();\n    while (node.hasChildNodes()) {\n        node.removeChild(node.lastChild);\n    }\n}\n\n\nfunction load_css(css_path, callback) {\n    var css = \"\";\n    if (css_path) {\n        d3.text(css_path, function(error, text) {\n            if (error) {\n                console.warn(error);\n            }\n            css = text;\n            callback(css);\n        });\n    }\n    return false;\n};\n\n\nfunction load_the_file(t, file, callback, value) {\n    /** Load a file.\n\n     t: this context for callback. Should be an object.\n\n     files_to_load: A filename to load. Must be JSON or CSS.\n\n     callback: Function to run after the file is loaded. Takes the arguments\n     error and data.\n\n     value: If the value is specified, just assign it and do not execute the\n     ajax query.\n\n     */\n    if (value) {\n        if (file) console.warn('File ' + file + ' overridden by value.');\n        callback.call(t, null, value);\n        return;\n    }\n    if (!file) {\n        callback.call(t, 'No filename', null);\n        return;\n    }\n    if (ends_with(file, 'json'))\n        d3.json(file, function(e, d) { callback.call(t, e, d); });\n    else if (ends_with(file, 'css'))\n        d3.text(file, function(e, d) { callback.call(t, e, d); });\n    else\n        callback.call(t, 'Unrecognized file type', null);\n    return;\n\n    // definitions\n    function ends_with(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n}\n\n\nfunction load_files(t, files_to_load, final_callback) {\n    /** Load multiple files asynchronously by calling utils.load_the_file.\n\n     t: this context for callback. Should be an object.\n\n     files_to_load: A list of objects with the attributes:\n\n        { file: a_filename.json, callback: a_callback_fn }\n\n        File must be JSON or CSS.\n\n     final_callback: Function that runs after all files have loaded.\n\n     */\n    if (files_to_load.length === 0) final_callback.call(t);\n    var i = -1,\n        remaining = files_to_load.length;\n    while (++i < files_to_load.length) {\n        load_the_file(\n            t,\n            files_to_load[i].file,\n            function(e, d) {\n                this.call(t, e, d);\n                if (!--remaining) final_callback.call(t);\n            }.bind(files_to_load[i].callback),\n            files_to_load[i].value\n        );\n    }\n}\n\n\nfunction make_class(){\n    /** Create a constructor that returns a new object with our without the\n     'new' keyword.\n\n     Adapted from Hubert Kauker (MIT Licensed), John Resig (MIT Licensed).\n     http://stackoverflow.com/questions/7892884/simple-class-instantiation\n\n     */\n    var is_internal,\n        constructor = function(args) {\n            if (this instanceof constructor) {\n                if (typeof this.init === 'function') {\n                    this.init.apply(this, is_internal ? args : arguments);\n                }\n            } else {\n                is_internal = true;\n                var instance = new constructor(arguments);\n                is_internal = false;\n                return instance;\n            }\n        };\n    return constructor;\n}\n\n\nfunction setup_defs(svg, style) {\n    // add stylesheet\n    svg.select(\"defs\").remove();\n    var defs = svg.append(\"defs\");\n    // make sure the defs is the first node\n    var node = defs.node();\n    node.parentNode.insertBefore(node, node.parentNode.firstChild);\n    defs.append(\"style\")\n        .attr(\"type\", \"text/css\")\n        .text(style);\n    return defs;\n}\n\nfunction draw_an_object(container_sel, parent_node_selector, children_selector,\n                        object, id_key, create_function, update_function,\n                        exit_function) {\n    /** Run through the d3 data binding steps for an object. Also checks to\n     make sure none of the values in the *object* are undefined, and\n     ignores those.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     parent_node_selector: A selector string for a subselection of\n     container_sel.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object: An object to bind to the selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var draw_object = {};\n    for (var id in object) {\n        if (object[id] === undefined) {\n            console.warn('Undefined value for id ' + id + ' in object. Ignoring.');\n        } else {\n            draw_object[id] = object[id];\n        }\n    }\n\n    var sel = container_sel.select(parent_node_selector)\n            .selectAll(children_selector)\n            .data(make_array_ref(draw_object, id_key),\n                  function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction draw_a_nested_object(container_sel, children_selector, object_data_key,\n                              id_key, create_function, update_function,\n                              exit_function) {\n    /** Run through the d3 data binding steps for an object that is nested\n     within another element with d3 data.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object_data_key: A key for the parent object containing data for the\n     new selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var sel = container_sel.selectAll(children_selector)\n            .data(function(d) {\n                return make_array_ref(d[object_data_key], id_key);\n            }, function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction make_array(obj, id_key) { // is this super slow?\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = clone(obj[key]);\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction make_array_ref(obj, id_key) {\n    /** Turn the object into an array, but only by reference. Faster than\n     make_array.\n\n     */\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = obj[key];\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction compare_arrays(a1, a2) {\n    /** Compares two simple (not-nested) arrays.\n\n     */\n    if (!a1 || !a2) return false;\n    if (a1.length != a2.length) return false;\n    for (var i = 0, l=a1.length; i < l; i++) {\n        if (a1[i] != a2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction array_to_object(arr) {\n    /** Convert an array of objects to an object with all keys and values\n     that are arrays of the same length as arr. Fills in spaces with null.\n\n     For example, [ { a: 1 }, { b: 2 }] becomes { a: [1, null], b: [null, 2] }.\n\n     */\n    // new object\n    var obj = {};\n    // for each element of the array\n    for (var i = 0, l = arr.length; i < l; i++) {\n        var column = arr[i],\n            keys = Object.keys(column);\n        for (var k = 0, nk = keys.length; k < nk; k++) {\n            var id = keys[k];\n            if (!(id in obj)) {\n                var n = [];\n                // fill spaces with null\n                for (var j = 0; j < l; j++) {\n                    n[j] = null;\n                }\n                n[i] = column[id];\n                obj[id] = n;\n            } else {\n                obj[id][i] = column[id];\n            }\n        }\n    }\n    return obj;\n}\n\nfunction clone(obj) {\n    // Handles the array and object types, and null or undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n    // Handle Array\n    if (obj instanceof Array) {\n        var copy = [];\n        for (var i = 0, len = obj.length; i < len; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n    // Handle Object\n    if (obj instanceof Object) {\n        var copy = {};\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n        }\n        return copy;\n    }\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\nfunction extend(obj1, obj2, overwrite) {\n    /** Extends obj1 with keys/values from obj2. Performs the extension\n     cautiously, and does not override attributes, unless the overwrite\n     argument is true.\n\n     Arguments\n     ---------\n\n     obj1: Object to extend\n\n     obj2: Object with which to extend.\n\n     overwrite: (Optional, Default false) Overwrite attributes in obj1.\n\n     */\n\n    if (overwrite === undefined)\n        overwrite = false;\n\n    for (var attrname in obj2) {\n        if (!(attrname in obj1) || overwrite) // UNIT TEST This\n            obj1[attrname] = obj2[attrname];\n        else\n            throw new Error('Attribute ' + attrname + ' already in object.');\n    }\n}\n\nfunction unique_concat(arrays) {\n    var new_array = [];\n    arrays.forEach(function (a) {\n        a.forEach(function(x) {\n            if (new_array.indexOf(x) < 0)\n                new_array.push(x);\n        });\n    });\n    return new_array;\n}\n\nfunction unique_strings_array(arr) {\n    /** Return unique values in array of strings.\n\n     http://stackoverflow.com/questions/1960473/unique-values-in-an-array\n\n     */\n    var a = [];\n    for (var i = 0, l = arr.length; i < l; i++)\n        if (a.indexOf(arr[i]) === -1)\n            a.push(arr[i]);\n    return a;\n}\n\nfunction debounce(func, wait, immediate) {\n    /** Returns a function, that, as long as it continues to be invoked, will\n     not be triggered.\n\n     The function will be called after it stops being called for N\n     milliseconds. If `immediate` is passed, trigger the function on the leading\n     edge, instead of the trailing.\n\n     */\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\nfunction object_slice_for_ids(obj, ids) {\n    /** Return a copy of the object with just the given ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = clone(obj[ids[i]]);\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction object_slice_for_ids_ref(obj, ids) {\n    /** Return a reference of the object with just the given ids. Faster\n     than object_slice_for_ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = obj[ids[i]];\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction c_plus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x + coords2.x,\n             \"y\": coords1.y + coords2.y };\n}\nfunction c_minus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x - coords2.x,\n             \"y\": coords1.y - coords2.y };\n}\n\nfunction c_times_scalar(coords, scalar) {\n    return { \"x\": coords.x * scalar,\n             \"y\": coords.y * scalar };\n}\n\nfunction download_json(json, name) {\n    /** Download json file in a blob.\n\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    var j = JSON.stringify(json),\n        blob = new Blob([j], {type: \"application/json\"});\n    saveAs(blob, name + '.json');\n}\n\nfunction load_json(f, callback, pre_fn, failure_fn) {\n    /** Try to load the file as JSON.\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     */\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n\n    var reader = new window.FileReader();\n    // Closure to capture the file information.\n    reader.onload = function(event) {\n        var result = event.target.result,\n            data;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            // if it failed, return the error\n            callback(e, null);\n            return;\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n}\n\nfunction load_json_or_csv(f, csv_converter, callback, pre_fn, failure_fn,\n                          debug_event) {\n    /** Try to load the file as JSON or CSV (JSON first).\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     csv_converter: A function to convert the CSV output to equivalent JSON.\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     debug_event: (optional) An event, with a string at event.target.result, to\n     load as though it was the contents of a loaded file.\n\n     */\n\n    // Capture the file information.\n    var onload_function = function(event) {\n        var result = event.target.result,\n            data, errors;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            errors = 'JSON error: ' + e;\n\n            // try csv\n            try {\n                data = csv_converter(d3.csv.parseRows(result));\n            } catch (e) {\n                // if both failed, return the errors\n                callback(errors + '\\nCSV error: ' + e, null);\n                return;\n            }\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (debug_event !== undefined && debug_event !== null) {\n        console.warn('Debugging load_json_or_csv');\n        return onload_function(debug_event);\n    }\n\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n    var reader = new window.FileReader();\n\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.onload = onload_function;\n    reader.readAsText(f);\n}\n\nfunction download_svg(name, svg_sel, do_beautify) {\n    /** Download an svg file using FileSaver.js.\n     *\n     * Arguments\n     * ---------\n     *\n     * name: The filename (without extension).\n     *\n     * svg_sel: The d3 selection for the SVG element.\n     *\n     * do_beautify: (Boolean) If true, then beautify the SVG output.\n     *\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    // make the xml string\n    var xml = (new XMLSerializer()).serializeToString(svg_sel.node());\n    if (do_beautify) xml = vkbeautify.xml(xml);\n    xml = ('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n           '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n' +\n           ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n           xml);\n\n    // save\n    var blob = new Blob([xml], { type: 'image/svg+xml' });\n    saveAs(blob, name + '.svg');\n};\n\nfunction rotate_coords_recursive(coords_array, angle, center) {\n    var rot = function(c) { return rotate_coords(c, angle, center); };\n    return coords_array.map(rot);\n}\n\nfunction rotate_coords(c, angle, center) {\n    /** Calculates displacement { x: dx, y: dy } based on rotating point c around\n     center with angle.\n\n     */\n    var dx = Math.cos(-angle) * (c.x - center.x) +\n            Math.sin(-angle) * (c.y - center.y)\n            + center.x - c.x,\n        dy = - Math.sin(-angle) * (c.x - center.x) +\n            Math.cos(-angle) * (c.y - center.y)\n            + center.y - c.y;\n    return { x: dx, y: dy };\n}\n\nfunction get_angle(coords) {\n    /* Takes an array of 2 coordinate objects {\"x\": 1, \"y\": 1}\n     *\n     * Returns angle between 0 and 2PI.\n     */\n    var denominator = coords[1].x - coords[0].x,\n        numerator = coords[1].y - coords[0].y;\n    if (denominator==0 && numerator >= 0) return Math.PI/2;\n    else if (denominator==0 && numerator < 0) return 3*Math.PI/2;\n    else if (denominator >= 0 && numerator >= 0) return Math.atan(numerator/denominator);\n    else if (denominator >= 0) return (Math.atan(numerator/denominator) + 2*Math.PI);\n    else return (Math.atan(numerator/denominator) + Math.PI);\n}\n\nfunction to_degrees(radians) { return radians*180/Math.PI; }\n\nfunction angle_for_event(displacement, point, center) {\n    var gamma =  Math.atan2((point.x - center.x), (center.y - point.y)),\n        beta = Math.atan2((point.x - center.x + displacement.x),\n                          (center.y - point.y - displacement.y)),\n        angle = beta - gamma;\n    return angle;\n}\n\nfunction distance(start, end) { return Math.sqrt(Math.pow(end.y-start.y, 2) + Math.pow(end.x-start.x, 2)); }\n\nfunction check_undefined(args, names) {\n    /** Report an error if any of the arguments are undefined.\n\n     Call by passing in *arguments* from any function and an array of\n     argument names.\n\n     */\n    names.map(function(name, i) {\n        if (args[i]===undefined) {\n            console.error('Argument is undefined: '+String(names[i]));\n        }\n    });\n}\n\nfunction compartmentalize(bigg_id, compartment_id) {\n    return bigg_id + '_' + compartment_id;\n}\n\n\n// definitions\nfunction decompartmentalize(id) {\n    /** Convert ids to bigg_id and compartment_id.\n\n     */\n    var out = no_compartment(id);\n    if (out===null) out = [id, null];\n    return out;\n\n    // definitions\n    function no_compartment(id) {\n        /** Returns an array of [bigg_id, compartment id].\n\n         Matches compartment ids with length 1 or 2.\n\n         Return null if no match is found.\n\n         */\n        var reg = /(.*)_([a-z0-9]{1,2})$/,\n            result = reg.exec(id);\n        if (result===null) return null;\n        return result.slice(1,3);\n    }\n}\n\nfunction mean(array) {\n    var sum = array.reduce(function(a, b) { return a + b; });\n    var avg = sum / array.length;\n    return avg;\n}\n\nfunction median(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if(array.length % 2 == 1)\n        return array[half];\n    else\n        return (array[half-1] + array[half]) / 2.0;\n}\n\nfunction quartiles(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if (array.length == 1)\n        return [ array[0], array[0], array[0] ];\n    else if (array.length % 2 == 1)\n        return [ median(array.slice(0, half)),\n                 array[half],\n                 median(array.slice(half + 1)) ];\n    else\n        return [ median(array.slice(0, half)),\n                 (array[half-1] + array[half]) / 2.0,\n                 median(array.slice(half)) ];\n}\n\nfunction random_characters(num) {\n    // Thanks to @csharptest.net\n    // http://stackoverflow.com/questions/1349404/generate-a-string-of-5-random-characters-in-javascript\n    var text = '',\n        possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < num; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    return text;\n}\n\nfunction generate_map_id() {\n    return random_characters(12);\n}\n\nfunction check_for_parent_tag(el, tag) {\n    /** Check that the selection has the given parent tag.\n\n     el: A d3 selection or node.\n\n     tag: A tag name (case insensitive)\n\n     */\n    // make sure it is a node\n    if (el instanceof Array)\n        el = el.node();\n    while (el.parentNode !== null) {\n        el = el.parentNode;\n        if (el.tagName === undefined) continue;\n        if (el.tagName.toLowerCase() === tag.toLowerCase())\n            return true;\n    }\n    return false;\n}\n\nfunction name_to_url(name, download_url) {\n    /** Convert model or map name to url.\n\n     Arguments\n     ---------\n\n     name: The short name, e.g. e_coli.iJO1366.central_metabolism.\n\n     download_url: The url to prepend (optional).\n\n     */\n\n    if (download_url !== undefined && download_url !== null) {\n        // strip download_url\n        download_url = download_url.replace(/^\\/|\\/$/g, '');\n        name = [download_url, name].join('/');\n    }\n    // strip final path\n    return name.replace(/^\\/|\\/$/g, '') + '.json';\n}\n\nfunction parse_url_components(the_window, options) {\n    /** Parse the URL and return options based on the URL arguments.\n\n     Arguments\n     ---------\n\n     the_window: A reference to the global window.\n\n     options: (optional) an existing options object to which new options\n     will be added. Overwrites existing arguments in options.\n\n     Adapted from http://stackoverflow.com/questions/979975/how-to-get-the-value-from-url-parameter\n\n     */\n    if (options===undefined) options = {};\n\n    var query = the_window.location.search.substring(1),\n        vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\"),\n            val = decodeURIComponent(pair[1]);\n        // deal with array options\n        if (pair[0].indexOf('[]') == pair[0].length - 2) {\n            var o = pair[0].replace('[]', '');\n            if (!(o in options))\n                options[o] = [];\n            options[o].push(val);\n        } else {\n            options[pair[0]] = val;\n        }\n    }\n    return options;\n}\n\n\nfunction get_document(node) {\n    /** Get the document for the node */\n    return node.ownerDocument;\n}\n\nfunction get_window(node) {\n    /** Get the window for the node */\n    return get_document(node).defaultView;\n}\n\nfunction d3_transform_catch(transform_attr) {\n    /** Return the result of d3.transform, but catch errors if we are in\n     node/jsdom. See also https://github.com/mbostock/d3/issues/1545\n\n     */\n    try {\n        return d3.transform(transform_attr);\n    } catch (err) {\n        console.error('Cannot run d3.transform, probably becuase this is a node/jsdom test. ' +\n                      'Returning a tranform object for testing.');\n        return { translate: [0, 0], rotate: 0 };\n    }\n}\n\nfunction check_browser(name) {\n    /** Look for name in the user agent string */\n    var browser = function() {\n        /** Thanks to http://stackoverflow.com/questions/2400935/browser-detection-in-javascript */\n        var ua = navigator.userAgent,\n            M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [],\n            tem;\n        if (/trident/i.test(M[1])) {\n            tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n            return 'IE '+ (tem[1] || '');\n        }\n        if (M[1] === 'Chrome') {\n            tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n            if (tem != null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\n        }\n        M = M[2] ? [ M[1], M[2] ]: [ navigator.appName, navigator.appVersion, '-?' ];\n        if((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\n        return M.join(' ');\n    };\n\n    try {\n        // navigator.userAgent is deprecated, so don't count on it\n        return browser().toLowerCase().indexOf(name) > -1;\n    } catch (e) {\n        return false;\n    }\n}\n","(function() {\nvar _slice = Array.prototype.slice;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nvar Bacon = {\n  toString: function () {\n    return \"Bacon\";\n  }\n};\n\nBacon.version = '0.7.82';\n\nvar Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\nvar nop = function () {};\nvar latter = function (_, x) {\n  return x;\n};\nvar former = function (x, _) {\n  return x;\n};\nvar cloneArray = function (xs) {\n  return xs.slice(0);\n};\nvar assert = function (message, condition) {\n  if (!condition) {\n    throw new Exception(message);\n  }\n};\nvar assertObservableIsProperty = function (x) {\n  if ((x != null ? x._isObservable : void 0) && !(x != null ? x._isProperty : void 0)) {\n    throw new Exception(\"Observable is not a Property : \" + x);\n  }\n};\nvar assertEventStream = function (event) {\n  if (!(event != null ? event._isEventStream : void 0)) {\n    throw new Exception(\"not an EventStream : \" + event);\n  }\n};\n\nvar assertObservable = function (event) {\n  if (!(event != null ? event._isObservable : void 0)) {\n    throw new Exception(\"not an Observable : \" + event);\n  }\n};\nvar assertFunction = function (f) {\n  return assert(\"not a function : \" + f, _.isFunction(f));\n};\nvar isArray = function (xs) {\n  return xs instanceof Array;\n};\nvar isObservable = function (x) {\n  return x && x._isObservable;\n};\nvar assertArray = function (xs) {\n  if (!isArray(xs)) {\n    throw new Exception(\"not an array : \" + xs);\n  }\n};\nvar assertNoArguments = function (args) {\n  return assert(\"no arguments supported\", args.length === 0);\n};\nvar assertString = function (x) {\n  if (typeof x === \"string\") {\n    throw new Exception(\"not a string : \" + x);\n  }\n};\n\nvar extend = function (target) {\n  var length = arguments.length;\n  for (var i = 1; 1 < length ? i < length : i > length; 1 < length ? i++ : i--) {\n    for (var prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n};\n\nvar inherit = function (child, parent) {\n  var hasProp = ({}).hasOwnProperty;\n  var ctor = function () {};\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) {\n      child[key] = parent[key];\n    }\n  }\n  return child;\n};\n\nvar _ = {\n  indexOf: (function () {\n    if (Array.prototype.indexOf) {\n      return function (xs, x) {\n        return xs.indexOf(x);\n      };\n    } else {\n      return function (xs, x) {\n        for (var i = 0, y; i < xs.length; i++) {\n          y = xs[i];\n          if (x === y) {\n            return i;\n          }\n        }\n        return -1;\n      };\n    }\n  })(),\n  indexWhere: function (xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n      y = xs[i];\n      if (f(y)) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  head: function (xs) {\n    return xs[0];\n  },\n  always: function (x) {\n    return function () {\n      return x;\n    };\n  },\n  negate: function (f) {\n    return function (x) {\n      return !f(x);\n    };\n  },\n  empty: function (xs) {\n    return xs.length === 0;\n  },\n  tail: function (xs) {\n    return xs.slice(1, xs.length);\n  },\n  filter: function (f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        filtered.push(x);\n      }\n    }\n    return filtered;\n  },\n  map: function (f, xs) {\n    return (function () {\n      var result = [];\n      for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n      }\n      return result;\n    })();\n  },\n  each: function (xs, f) {\n    for (var key in xs) {\n      if (Object.prototype.hasOwnProperty.call(xs, key)) {\n        var value = xs[key];\n        f(key, value);\n      }\n    }\n  },\n  toArray: function (xs) {\n    return isArray(xs) ? xs : [xs];\n  },\n  contains: function (xs, x) {\n    return _.indexOf(xs, x) !== -1;\n  },\n  id: function (x) {\n    return x;\n  },\n  last: function (xs) {\n    return xs[xs.length - 1];\n  },\n  all: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (!f(x)) {\n        return false;\n      }\n    }\n    return true;\n  },\n  any: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  without: function (x, xs) {\n    return _.filter(function (y) {\n      return y !== x;\n    }, xs);\n  },\n  remove: function (x, xs) {\n    var i = _.indexOf(xs, x);\n    if (i >= 0) {\n      return xs.splice(i, 1);\n    }\n  },\n  fold: function (xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      seed = f(seed, x);\n    }\n    return seed;\n  },\n  flatMap: function (f, xs) {\n    return _.fold(xs, [], function (ys, x) {\n      return ys.concat(f(x));\n    });\n  },\n  cached: function (f) {\n    var value = None;\n    return function () {\n      if (typeof value !== \"undefined\" && value !== null ? value._isNone : undefined) {\n        value = f();\n        f = undefined;\n      }\n      return value;\n    };\n  },\n  bind: function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n  isFunction: function (f) {\n    return typeof f === \"function\";\n  },\n  toString: function (obj) {\n    var internals, key, value;\n    var hasProp = ({}).hasOwnProperty;\n    try {\n      recursionDepth++;\n      if (obj == null) {\n        return \"undefined\";\n      } else if (_.isFunction(obj)) {\n        return \"function\";\n      } else if (isArray(obj)) {\n        if (recursionDepth > 5) {\n          return \"[..]\";\n        }\n        return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n      } else if ((obj != null ? obj.toString : void 0) != null && obj.toString !== Object.prototype.toString) {\n        return obj.toString();\n      } else if (typeof obj === \"object\") {\n        if (recursionDepth > 5) {\n          return \"{..}\";\n        }\n        internals = (function () {\n          var results = [];\n          for (key in obj) {\n            if (!hasProp.call(obj, key)) continue;\n            value = (function () {\n              var error;\n              try {\n                return obj[key];\n              } catch (error) {\n                return error;\n              }\n            })();\n            results.push(_.toString(key) + \":\" + _.toString(value));\n          }\n          return results;\n        })();\n        return \"{\" + internals + \"}\";\n      } else {\n        return obj;\n      }\n    } finally {\n      recursionDepth--;\n    }\n  }\n};\n\nvar recursionDepth = 0;\n\nBacon._ = _;\n\nvar UpdateBarrier = Bacon.UpdateBarrier = (function () {\n  var rootEvent;\n  var waiterObs = [];\n  var waiters = {};\n  var afters = [];\n  var aftersIndex = 0;\n  var flushed = {};\n\n  var afterTransaction = function (f) {\n    if (rootEvent) {\n      return afters.push(f);\n    } else {\n      return f();\n    }\n  };\n\n  var whenDoneWith = function (obs, f) {\n    if (rootEvent) {\n      var obsWaiters = waiters[obs.id];\n      if (!(typeof obsWaiters !== \"undefined\" && obsWaiters !== null)) {\n        obsWaiters = waiters[obs.id] = [f];\n        return waiterObs.push(obs);\n      } else {\n        return obsWaiters.push(f);\n      }\n    } else {\n      return f();\n    }\n  };\n\n  var flush = function () {\n    while (waiterObs.length > 0) {\n      flushWaiters(0, true);\n    }\n    flushed = {};\n  };\n\n  var flushWaiters = function (index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n      flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n      f = obsWaiters[i];\n      f();\n    }\n  };\n\n  var flushDepsOf = function (obs) {\n    if (flushed[obs.id]) return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n      dep = deps[i];\n      flushDepsOf(dep);\n      if (waiters[dep.id]) {\n        var index = _.indexOf(waiterObs, dep);\n        flushWaiters(index, false);\n      }\n    }\n    flushed[obs.id] = true;\n  };\n\n  var inTransaction = function (event, context, f, args) {\n    if (rootEvent) {\n      return f.apply(context, args);\n    } else {\n      rootEvent = event;\n      try {\n        var result = f.apply(context, args);\n\n        flush();\n      } finally {\n        rootEvent = undefined;\n        while (aftersIndex < afters.length) {\n          var after = afters[aftersIndex];\n          aftersIndex++;\n          after();\n        }\n        aftersIndex = 0;\n        afters = [];\n      }\n      return result;\n    }\n  };\n\n  var currentEventId = function () {\n    return rootEvent ? rootEvent.id : undefined;\n  };\n\n  var wrappedSubscribe = function (obs, sink) {\n    var unsubd = false;\n    var shouldUnsub = false;\n    var doUnsub = function () {\n      shouldUnsub = true;\n      return shouldUnsub;\n    };\n    var unsub = function () {\n      unsubd = true;\n      return doUnsub();\n    };\n    doUnsub = obs.dispatcher.subscribe(function (event) {\n      return afterTransaction(function () {\n        if (!unsubd) {\n          var reply = sink(event);\n          if (reply === Bacon.noMore) {\n            return unsub();\n          }\n        }\n      });\n    });\n    if (shouldUnsub) {\n      doUnsub();\n    }\n    return unsub;\n  };\n\n  var hasWaiters = function () {\n    return waiterObs.length > 0;\n  };\n\n  return { whenDoneWith: whenDoneWith, hasWaiters: hasWaiters, inTransaction: inTransaction, currentEventId: currentEventId, wrappedSubscribe: wrappedSubscribe, afterTransaction: afterTransaction };\n})();\n\nfunction Source(obs, sync) {\n  var lazy = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n  this.obs = obs;\n  this.sync = sync;\n  this.lazy = lazy;\n  this.queue = [];\n}\n\nextend(Source.prototype, {\n  _isSource: true,\n\n  subscribe: function (sink) {\n    return this.obs.dispatcher.subscribe(sink);\n  },\n  toString: function () {\n    return this.obs.toString();\n  },\n  markEnded: function () {\n    this.ended = true;\n    return true;\n  },\n  consume: function () {\n    if (this.lazy) {\n      return { value: _.always(this.queue[0]) };\n    } else {\n      return this.queue[0];\n    }\n  },\n  push: function (x) {\n    this.queue = [x];\n    return [x];\n  },\n  mayHave: function () {\n    return true;\n  },\n  hasAtLeast: function () {\n    return this.queue.length;\n  },\n  flatten: true\n});\n\nfunction ConsumingSource() {\n  Source.apply(this, arguments);\n}\n\ninherit(ConsumingSource, Source);\nextend(ConsumingSource.prototype, {\n  consume: function () {\n    return this.queue.shift();\n  },\n  push: function (x) {\n    return this.queue.push(x);\n  },\n  mayHave: function (c) {\n    return !this.ended || this.queue.length >= c;\n  },\n  hasAtLeast: function (c) {\n    return this.queue.length >= c;\n  },\n  flatten: false\n});\n\nfunction BufferingSource(obs) {\n  Source.call(this, obs, true);\n}\n\ninherit(BufferingSource, Source);\nextend(BufferingSource.prototype, {\n  consume: function () {\n    var values = this.queue;\n    this.queue = [];\n    return {\n      value: function () {\n        return values;\n      }\n    };\n  },\n  push: function (x) {\n    return this.queue.push(x.value());\n  },\n  hasAtLeast: function () {\n    return true;\n  }\n});\n\nSource.isTrigger = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s.sync;\n  } else {\n    return s != null ? s._isEventStream : void 0;\n  }\n};\n\nSource.fromObservable = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s;\n  } else if (s != null ? s._isProperty : void 0) {\n    return new Source(s, false);\n  } else {\n    return new ConsumingSource(s, true);\n  }\n};\n\nfunction Desc(context, method, args) {\n  this.context = context;\n  this.method = method;\n  this.args = args;\n}\n\nextend(Desc.prototype, {\n  _isDesc: true,\n  deps: function () {\n    if (!this.cached) {\n      this.cached = findDeps([this.context].concat(this.args));\n    }\n    return this.cached;\n  },\n  toString: function () {\n    return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n  }\n});\n\nvar describe = function (context, method) {\n  var ref = context || method;\n  if (ref && ref._isDesc) {\n    return context || method;\n  } else {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return new Desc(context, method, args);\n  }\n};\n\nvar withDesc = function (desc, obs) {\n  obs.desc = desc;\n  return obs;\n};\n\nvar findDeps = function (x) {\n  if (isArray(x)) {\n    return _.flatMap(findDeps, x);\n  } else if (isObservable(x)) {\n    return [x];\n  } else if (typeof x !== \"undefined\" && x !== null ? x._isSource : undefined) {\n    return [x.obs];\n  } else {\n    return [];\n  }\n};\n\nBacon.Desc = Desc;\nBacon.Desc.empty = new Bacon.Desc(\"\", \"\", []);\n\nvar withMethodCallSupport = function (wrapped) {\n  return function (f) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof f === \"object\" && args.length) {\n      var context = f;\n      var methodName = args[0];\n      f = function () {\n        return context[methodName].apply(context, arguments);\n      };\n      args = args.slice(1);\n    }\n    return wrapped.apply(undefined, [f].concat(_toConsumableArray(args)));\n  };\n};\n\nvar makeFunctionArgs = function (args) {\n  args = Array.prototype.slice.call(args);\n  return makeFunction_.apply(undefined, _toConsumableArray(args));\n};\n\nvar partiallyApplied = function (f, applied) {\n  return function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return f.apply(undefined, _toConsumableArray(applied.concat(args)));\n  };\n};\n\nvar toSimpleExtractor = function (args) {\n  return function (key) {\n    return function (value) {\n      if (!(typeof value !== \"undefined\" && value !== null)) {\n        return;\n      } else {\n        var fieldValue = value[key];\n        if (_.isFunction(fieldValue)) {\n          return fieldValue.apply(value, args);\n        } else {\n          return fieldValue;\n        }\n      }\n    };\n  };\n};\n\nvar toFieldExtractor = function (f, args) {\n  var parts = f.slice(1).split(\".\");\n  var partFuncs = _.map(toSimpleExtractor(args), parts);\n  return function (value) {\n    for (var i = 0, f; i < partFuncs.length; i++) {\n      f = partFuncs[i];\n      value = f(value);\n    }\n    return value;\n  };\n};\n\nvar isFieldKey = function (f) {\n  return typeof f === \"string\" && f.length > 1 && f.charAt(0) === \".\";\n};\n\nvar makeFunction_ = withMethodCallSupport(function (f) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  if (_.isFunction(f)) {\n    if (args.length) {\n      return partiallyApplied(f, args);\n    } else {\n      return f;\n    }\n  } else if (isFieldKey(f)) {\n    return toFieldExtractor(f, args);\n  } else {\n    return _.always(f);\n  }\n});\n\nvar makeFunction = function (f, args) {\n  return makeFunction_.apply(undefined, [f].concat(_toConsumableArray(args)));\n};\n\nvar convertArgsToFunction = function (obs, f, args, method) {\n  if (typeof f !== \"undefined\" && f !== null ? f._isProperty : undefined) {\n    var sampled = f.sampledBy(obs, function (p, s) {\n      return [p, s];\n    });\n    return method.call(sampled, function (_ref) {\n      var p = _ref[0];\n      var s = _ref[1];\n      return p;\n    }).map(function (_ref2) {\n      var p = _ref2[0];\n      var s = _ref2[1];\n      return s;\n    });\n  } else {\n    f = makeFunction(f, args);\n    return method.call(obs, f);\n  }\n};\n\nvar toCombinator = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else if (isFieldKey(f)) {\n    var key = toFieldKey(f);\n    return function (left, right) {\n      return left[key](right);\n    };\n  } else {\n    throw new Exception(\"not a function or a field key: \" + f);\n  }\n};\n\nvar toFieldKey = function (f) {\n  return f.slice(1);\n};\n\nfunction Some(value) {\n  this.value = value;\n}\n\nextend(Some.prototype, {\n  _isSome: true,\n  getOrElse: function () {\n    return this.value;\n  },\n  get: function () {\n    return this.value;\n  },\n  filter: function (f) {\n    if (f(this.value)) {\n      return new Some(this.value);\n    } else {\n      return None;\n    }\n  },\n  map: function (f) {\n    return new Some(f(this.value));\n  },\n  forEach: function (f) {\n    return f(this.value);\n  },\n  isDefined: true,\n  toArray: function () {\n    return [this.value];\n  },\n  inspect: function () {\n    return \"Some(\" + this.value + \")\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n});\n\nvar None = {\n  _isNone: true,\n  getOrElse: function (value) {\n    return value;\n  },\n  filter: function () {\n    return None;\n  },\n  map: function () {\n    return None;\n  },\n  forEach: function () {},\n  isDefined: false,\n  toArray: function () {\n    return [];\n  },\n  inspect: function () {\n    return \"None\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n};\n\nvar toOption = function (v) {\n  if ((typeof v !== \"undefined\" && v !== null ? v._isSome : undefined) || (typeof v !== \"undefined\" && v !== null ? v._isNone : undefined)) {\n    return v;\n  } else {\n    return new Some(v);\n  }\n};\n\nBacon.noMore = \"<no-more>\";\nBacon.more = \"<more>\";\n\nvar eventIdCounter = 0;\n\nfunction Event() {\n  this.id = ++eventIdCounter;\n}\n\nEvent.prototype._isEvent = true;\nEvent.prototype.isEvent = function () {\n  return true;\n};\nEvent.prototype.isEnd = function () {\n  return false;\n};\nEvent.prototype.isInitial = function () {\n  return false;\n};\nEvent.prototype.isNext = function () {\n  return false;\n};\nEvent.prototype.isError = function () {\n  return false;\n};\nEvent.prototype.hasValue = function () {\n  return false;\n};\nEvent.prototype.filter = function () {\n  return true;\n};\nEvent.prototype.inspect = function () {\n  return this.toString();\n};\nEvent.prototype.log = function () {\n  return this.toString();\n};\n\nfunction Next(valueF, eager) {\n  if (!(this instanceof Next)) {\n    return new Next(valueF, eager);\n  }\n\n  Event.call(this);\n\n  if (!eager && _.isFunction(valueF) || (valueF != null ? valueF._isNext : void 0)) {\n    this.valueF = valueF;\n    this.valueInternal = void 0;\n  } else {\n    this.valueF = void 0;\n    this.valueInternal = valueF;\n  }\n}\n\ninherit(Next, Event);\n\nNext.prototype.isNext = function () {\n  return true;\n};\nNext.prototype.hasValue = function () {\n  return true;\n};\nNext.prototype.value = function () {\n  var ref;\n  if ((ref = this.valueF) != null ? ref._isNext : void 0) {\n    this.valueInternal = this.valueF.value();\n    this.valueF = void 0;\n  } else if (this.valueF) {\n    this.valueInternal = this.valueF();\n    this.valueF = void 0;\n  }\n  return this.valueInternal;\n};\n\nNext.prototype.fmap = function (f) {\n  var event, value;\n  if (this.valueInternal) {\n    value = this.valueInternal;\n    return this.apply(function () {\n      return f(value);\n    });\n  } else {\n    event = this;\n    return this.apply(function () {\n      return f(event.value());\n    });\n  }\n};\n\nNext.prototype.apply = function (value) {\n  return new Next(value);\n};\nNext.prototype.filter = function (f) {\n  return f(this.value());\n};\nNext.prototype.toString = function () {\n  return _.toString(this.value());\n};\nNext.prototype.log = function () {\n  return this.value();\n};\nNext.prototype._isNext = true;\n\nfunction Initial(valueF, eager) {\n  if (!(this instanceof Initial)) {\n    return new Initial(valueF, eager);\n  }\n  Next.call(this, valueF, eager);\n}\n\ninherit(Initial, Next);\nInitial.prototype._isInitial = true;\nInitial.prototype.isInitial = function () {\n  return true;\n};\nInitial.prototype.isNext = function () {\n  return false;\n};\nInitial.prototype.apply = function (value) {\n  return new Initial(value);\n};\nInitial.prototype.toNext = function () {\n  return new Next(this);\n};\n\nfunction End() {\n  if (!(this instanceof End)) {\n    return new End();\n  }\n  Event.call(this);\n}\n\ninherit(End, Event);\nEnd.prototype.isEnd = function () {\n  return true;\n};\nEnd.prototype.fmap = function () {\n  return this;\n};\nEnd.prototype.apply = function () {\n  return this;\n};\nEnd.prototype.toString = function () {\n  return \"<end>\";\n};\n\nfunction Error(error) {\n  if (!(this instanceof Error)) {\n    return new Error(error);\n  }\n  this.error = error;\n  Event.call(this);\n}\n\ninherit(Error, Event);\nError.prototype.isError = function () {\n  return true;\n};\nError.prototype.fmap = function () {\n  return this;\n};\nError.prototype.apply = function () {\n  return this;\n};\nError.prototype.toString = function () {\n  return \"<error> \" + _.toString(this.error);\n};\n\nBacon.Event = Event;\nBacon.Initial = Initial;\nBacon.Next = Next;\nBacon.End = End;\nBacon.Error = Error;\n\nvar initialEvent = function (value) {\n  return new Initial(value, true);\n};\nvar nextEvent = function (value) {\n  return new Next(value, true);\n};\nvar endEvent = function () {\n  return new End();\n};\nvar toEvent = function (x) {\n  if (x && x._isEvent) {\n    return x;\n  } else {\n    return nextEvent(x);\n  }\n};\n\nvar idCounter = 0;\nvar registerObs = function () {};\n\nfunction Observable(desc) {\n  this.desc = desc;\n  this.id = ++idCounter;\n  this.initialDesc = this.desc;\n}\n\nextend(Observable.prototype, {\n  _isObservable: true,\n\n  subscribe: function (sink) {\n    return UpdateBarrier.wrappedSubscribe(this, sink);\n  },\n\n  subscribeInternal: function (sink) {\n    return this.dispatcher.subscribe(sink);\n  },\n\n  onValue: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.hasValue()) {\n        return f(event.value());\n      }\n    });\n  },\n\n  onValues: function (f) {\n    return this.onValue(function (args) {\n      return f.apply(undefined, _toConsumableArray(args));\n    });\n  },\n\n  onError: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isError()) {\n        return f(event.error);\n      }\n    });\n  },\n\n  onEnd: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isEnd()) {\n        return f();\n      }\n    });\n  },\n\n  name: function (name) {\n    this._name = name;\n    return this;\n  },\n\n  withDescription: function () {\n    this.desc = describe.apply(undefined, arguments);\n    return this;\n  },\n\n  toString: function () {\n    if (this._name) {\n      return this._name;\n    } else {\n      return this.desc.toString();\n    }\n  },\n\n  internalDeps: function () {\n    return this.initialDesc.deps();\n  }\n});\n\nObservable.prototype.assign = Observable.prototype.onValue;\nObservable.prototype.forEach = Observable.prototype.onValue;\nObservable.prototype.inspect = Observable.prototype.toString;\n\nBacon.Observable = Observable;\n\nfunction CompositeUnsubscribe() {\n  var ss = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n  this.unsubscribe = _.bind(this.unsubscribe, this);\n  this.unsubscribed = false;\n  this.subscriptions = [];\n  this.starting = [];\n  for (var i = 0, s; i < ss.length; i++) {\n    s = ss[i];\n    this.add(s);\n  }\n}\n\nextend(CompositeUnsubscribe.prototype, {\n  add: function (subscription) {\n    var _this2 = this;\n\n    if (this.unsubscribed) {\n      return;\n    }\n    var ended = false;\n    var unsub = nop;\n    this.starting.push(subscription);\n    var unsubMe = function () {\n      if (_this2.unsubscribed) {\n        return;\n      }\n      ended = true;\n      _this2.remove(unsub);\n      return _.remove(subscription, _this2.starting);\n    };\n    unsub = subscription(this.unsubscribe, unsubMe);\n    if (!(this.unsubscribed || ended)) {\n      this.subscriptions.push(unsub);\n    } else {\n      unsub();\n    }\n    _.remove(subscription, this.starting);\n    return unsub;\n  },\n\n  remove: function (unsub) {\n    if (this.unsubscribed) {\n      return;\n    }\n    if (_.remove(unsub, this.subscriptions) !== undefined) {\n      return unsub();\n    }\n  },\n\n  unsubscribe: function () {\n    if (this.unsubscribed) {\n      return;\n    }\n    this.unsubscribed = true;\n    var iterable = this.subscriptions;\n    for (var i = 0; i < iterable.length; i++) {\n      iterable[i]();\n    }\n    this.subscriptions = [];\n    this.starting = [];\n    return [];\n  },\n\n  count: function () {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.subscriptions.length + this.starting.length;\n  },\n\n  empty: function () {\n    return this.count() === 0;\n  }\n});\n\nBacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\nfunction Dispatcher(_subscribe, _handleEvent) {\n  this._subscribe = _subscribe;\n  this._handleEvent = _handleEvent;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.handleEvent = _.bind(this.handleEvent, this);\n  this.pushing = false;\n  this.ended = false;\n  this.prevError = undefined;\n  this.unsubSrc = undefined;\n  this.subscriptions = [];\n  this.queue = [];\n}\n\nDispatcher.prototype.hasSubscribers = function () {\n  return this.subscriptions.length > 0;\n};\n\nDispatcher.prototype.removeSub = function (subscription) {\n  this.subscriptions = _.without(subscription, this.subscriptions);\n  return this.subscriptions;\n};\n\nDispatcher.prototype.push = function (event) {\n  if (event.isEnd()) {\n    this.ended = true;\n  }\n  return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n};\n\nDispatcher.prototype.pushToSubscriptions = function (event) {\n  try {\n    var tmp = this.subscriptions;\n    var len = tmp.length;\n    for (var i = 0; i < len; i++) {\n      var sub = tmp[i];\n      var reply = sub.sink(event);\n      if (reply === Bacon.noMore || event.isEnd()) {\n        this.removeSub(sub);\n      }\n    }\n    return true;\n  } catch (error) {\n    this.pushing = false;\n    this.queue = [];\n    throw error;\n  }\n};\n\nDispatcher.prototype.pushIt = function (event) {\n  if (!this.pushing) {\n    if (event === this.prevError) {\n      return;\n    }\n    if (event.isError()) {\n      this.prevError = event;\n    }\n    this.pushing = true;\n    this.pushToSubscriptions(event);\n    this.pushing = false;\n    while (this.queue.length) {\n      event = this.queue.shift();\n      this.push(event);\n    }\n    if (this.hasSubscribers()) {\n      return Bacon.more;\n    } else {\n      this.unsubscribeFromSource();\n      return Bacon.noMore;\n    }\n  } else {\n    this.queue.push(event);\n    return Bacon.more;\n  }\n};\n\nDispatcher.prototype.handleEvent = function (event) {\n  if (this._handleEvent) {\n    return this._handleEvent(event);\n  } else {\n    return this.push(event);\n  }\n};\n\nDispatcher.prototype.unsubscribeFromSource = function () {\n  if (this.unsubSrc) {\n    this.unsubSrc();\n  }\n  this.unsubSrc = undefined;\n};\n\nDispatcher.prototype.subscribe = function (sink) {\n  var subscription;\n  if (this.ended) {\n    sink(endEvent());\n    return nop;\n  } else {\n    assertFunction(sink);\n    subscription = {\n      sink: sink\n    };\n    this.subscriptions.push(subscription);\n    if (this.subscriptions.length === 1) {\n      this.unsubSrc = this._subscribe(this.handleEvent);\n      assertFunction(this.unsubSrc);\n    }\n    return (function (_this) {\n      return function () {\n        _this.removeSub(subscription);\n        if (!_this.hasSubscribers()) {\n          return _this.unsubscribeFromSource();\n        }\n      };\n    })(this);\n  }\n};\n\nBacon.Dispatcher = Dispatcher;\n\nfunction EventStream(desc, subscribe, handler) {\n  if (!(this instanceof EventStream)) {\n    return new EventStream(desc, subscribe, handler);\n  }\n  if (_.isFunction(desc)) {\n    handler = subscribe;\n    subscribe = desc;\n    desc = Desc.empty;\n  }\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new Dispatcher(subscribe, handler);\n  registerObs(this);\n}\n\ninherit(EventStream, Observable);\nextend(EventStream.prototype, {\n  _isEventStream: true,\n\n  toProperty: function (initValue_) {\n    var initValue = arguments.length === 0 ? None : toOption(function () {\n      return initValue_;\n    });\n    var disp = this.dispatcher;\n    var desc = new Bacon.Desc(this, \"toProperty\", [initValue_]);\n    return new Property(desc, function (sink) {\n      var initSent = false;\n      var subbed = false;\n      var unsub = nop;\n      var reply = Bacon.more;\n      var sendInit = function () {\n        if (!initSent) {\n          return initValue.forEach(function (value) {\n            initSent = true;\n            reply = sink(new Initial(value));\n            if (reply === Bacon.noMore) {\n              unsub();\n              unsub = nop;\n              return nop;\n            }\n          });\n        }\n      };\n\n      unsub = disp.subscribe(function (event) {\n        if (event.hasValue()) {\n          if (event.isInitial() && !subbed) {\n            initValue = new Some(function () {\n              return event.value();\n            });\n            return Bacon.more;\n          } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = true;\n            initValue = new Some(event);\n            return sink(event);\n          }\n        } else {\n          if (event.isEnd()) {\n            reply = sendInit();\n          }\n          if (reply !== Bacon.noMore) {\n            return sink(event);\n          }\n        }\n      });\n      subbed = true;\n      sendInit();\n      return unsub;\n    });\n  },\n\n  toEventStream: function () {\n    return this;\n  },\n\n  withHandler: function (handler) {\n    return new EventStream(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  }\n});\n\nBacon.EventStream = EventStream;\n\nBacon.never = function () {\n  return new EventStream(describe(Bacon, \"never\"), function (sink) {\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.when = function () {\n  if (arguments.length === 0) {\n    return Bacon.never();\n  }\n  var len = arguments.length;\n  var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n\n  assert(usage, len % 2 === 0);\n  var sources = [];\n  var pats = [];\n  var i = 0;\n  var patterns = [];\n  while (i < len) {\n    patterns[i] = arguments[i];\n    patterns[i + 1] = arguments[i + 1];\n    var patSources = _.toArray(arguments[i]);\n    var f = constantToFunction(arguments[i + 1]);\n    var pat = { f: f, ixs: [] };\n    var triggerFound = false;\n    for (var j = 0, s; j < patSources.length; j++) {\n      s = patSources[j];\n      var index = _.indexOf(sources, s);\n      if (!triggerFound) {\n        triggerFound = Source.isTrigger(s);\n      }\n      if (index < 0) {\n        sources.push(s);\n        index = sources.length - 1;\n      }\n      for (var k = 0, ix; k < pat.ixs.length; k++) {\n        ix = pat.ixs[k];\n        if (ix.index === index) {\n          ix.count++;\n        }\n      }\n      pat.ixs.push({ index: index, count: 1 });\n    }\n\n    assert(\"At least one EventStream required\", triggerFound || !patSources.length);\n\n    if (patSources.length > 0) {\n      pats.push(pat);\n    }\n    i = i + 2;\n  }\n\n  if (!sources.length) {\n    return Bacon.never();\n  }\n\n  sources = _.map(Source.fromObservable, sources);\n  var needsBarrier = _.any(sources, function (s) {\n    return s.flatten;\n  }) && containsDuplicateDeps(_.map(function (s) {\n    return s.obs;\n  }, sources));\n\n  var desc = new Bacon.Desc(Bacon, \"when\", patterns);\n  var resultStream = new EventStream(desc, function (sink) {\n    var triggers = [];\n    var ends = false;\n    var match = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].hasAtLeast(i.count)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var cannotSync = function (source) {\n      return !source.sync || source.ended;\n    };\n    var cannotMatch = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].mayHave(i.count)) {\n          return true;\n        }\n      }\n    };\n    var nonFlattened = function (trigger) {\n      return !trigger.source.flatten;\n    };\n    var part = function (source) {\n      return function (unsubAll) {\n        var flushLater = function () {\n          return UpdateBarrier.whenDoneWith(resultStream, flush);\n        };\n        var flushWhileTriggers = function () {\n          if (triggers.length > 0) {\n            var reply = Bacon.more;\n            var trigger = triggers.pop();\n            for (var i1 = 0, p; i1 < pats.length; i1++) {\n              p = pats[i1];\n              if (match(p)) {\n                var events = (function () {\n                  var result = [];\n                  for (var i2 = 0, i; i2 < p.ixs.length; i2++) {\n                    i = p.ixs[i2];\n                    result.push(sources[i.index].consume());\n                  }\n                  return result;\n                })();\n                reply = sink(trigger.e.apply(function () {\n                  var _p;\n\n                  var values = (function () {\n                    var result = [];\n                    for (var i2 = 0, event; i2 < events.length; i2++) {\n                      event = events[i2];\n                      result.push(event.value());\n                    }\n                    return result;\n                  })();\n\n                  return (_p = p).f.apply(_p, _toConsumableArray(values));\n                }));\n                if (triggers.length) {\n                  triggers = _.filter(nonFlattened, triggers);\n                }\n                if (reply === Bacon.noMore) {\n                  return reply;\n                } else {\n                  return flushWhileTriggers();\n                }\n              }\n            }\n          } else {\n            return Bacon.more;\n          }\n        };\n        var flush = function () {\n          var reply = flushWhileTriggers();\n          if (ends) {\n            if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n              reply = Bacon.noMore;\n              sink(endEvent());\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n\n          return reply;\n        };\n        return source.subscribe(function (e) {\n          if (e.isEnd()) {\n            ends = true;\n            source.markEnded();\n            flushLater();\n          } else if (e.isError()) {\n            var reply = sink(e);\n          } else {\n            source.push(e);\n            if (source.sync) {\n              triggers.push({ source: source, e: e });\n              if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                flushLater();\n              } else {\n                flush();\n              }\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n          return reply || Bacon.more;\n        });\n      };\n    };\n\n    return new Bacon.CompositeUnsubscribe((function () {\n      var result = [];\n      for (var i1 = 0, s; i1 < sources.length; i1++) {\n        s = sources[i1];\n        result.push(part(s));\n      }\n      return result;\n    })()).unsubscribe;\n  });\n  return resultStream;\n};\n\nvar containsDuplicateDeps = function (observables) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n  var checkObservable = function (obs) {\n    if (_.contains(state, obs)) {\n      return true;\n    } else {\n      var deps = obs.internalDeps();\n      if (deps.length) {\n        state.push(obs);\n        return _.any(deps, checkObservable);\n      } else {\n        state.push(obs);\n        return false;\n      }\n    }\n  };\n\n  return _.any(observables, checkObservable);\n};\n\nvar constantToFunction = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else {\n    return _.always(f);\n  }\n};\n\nBacon.groupSimultaneous = function () {\n  for (var _len5 = arguments.length, streams = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    streams[_key5] = arguments[_key5];\n  }\n\n  if (streams.length === 1 && isArray(streams[0])) {\n    streams = streams[0];\n  }\n  var sources = (function () {\n    var result = [];\n    for (var i = 0, s; i < streams.length; i++) {\n      s = streams[i];\n      result.push(new BufferingSource(s));\n    }\n    return result;\n  })();\n  return withDesc(new Bacon.Desc(Bacon, \"groupSimultaneous\", streams), Bacon.when(sources, function () {\n    for (var _len6 = arguments.length, xs = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      xs[_key6] = arguments[_key6];\n    }\n\n    return xs;\n  }));\n};\n\nfunction PropertyDispatcher(property, subscribe, handleEvent) {\n  Dispatcher.call(this, subscribe, handleEvent);\n  this.property = property;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.current = None;\n  this.currentValueRootId = undefined;\n  this.propertyEnded = false;\n}\n\ninherit(PropertyDispatcher, Dispatcher);\nextend(PropertyDispatcher.prototype, {\n  push: function (event) {\n    if (event.isEnd()) {\n      this.propertyEnded = true;\n    }\n    if (event.hasValue()) {\n      this.current = new Some(event);\n      this.currentValueRootId = UpdateBarrier.currentEventId();\n    }\n    return Dispatcher.prototype.push.call(this, event);\n  },\n\n  maybeSubSource: function (sink, reply) {\n    if (reply === Bacon.noMore) {\n      return nop;\n    } else if (this.propertyEnded) {\n      sink(endEvent());\n      return nop;\n    } else {\n      return Dispatcher.prototype.subscribe.call(this, sink);\n    }\n  },\n\n  subscribe: function (sink) {\n    var _this3 = this;\n\n    var initSent = false;\n\n    var reply = Bacon.more;\n\n    if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n      var dispatchingId = UpdateBarrier.currentEventId();\n      var valId = this.currentValueRootId;\n      if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n        UpdateBarrier.whenDoneWith(this.property, function () {\n          if (_this3.currentValueRootId === valId) {\n            return sink(initialEvent(_this3.current.get().value()));\n          }\n        });\n\n        return this.maybeSubSource(sink, reply);\n      } else {\n        UpdateBarrier.inTransaction(undefined, this, function () {\n          reply = sink(initialEvent(this.current.get().value()));\n          return reply;\n        }, []);\n        return this.maybeSubSource(sink, reply);\n      }\n    } else {\n      return this.maybeSubSource(sink, reply);\n    }\n  }\n});\n\nfunction Property(desc, subscribe, handler) {\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n  registerObs(this);\n}\n\ninherit(Property, Observable);\nextend(Property.prototype, {\n  _isProperty: true,\n\n  changes: function () {\n    var _this4 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"changes\", []), function (sink) {\n      return _this4.dispatcher.subscribe(function (event) {\n        if (!event.isInitial()) {\n          return sink(event);\n        }\n      });\n    });\n  },\n\n  withHandler: function (handler) {\n    return new Property(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  },\n\n  toProperty: function () {\n    assertNoArguments(arguments);\n    return this;\n  },\n\n  toEventStream: function () {\n    var _this5 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"toEventStream\", []), function (sink) {\n      return _this5.dispatcher.subscribe(function (event) {\n        if (event.isInitial()) {\n          event = event.toNext();\n        }\n        return sink(event);\n      });\n    });\n  }\n});\n\nBacon.Property = Property;\n\nBacon.constant = function (value) {\n  return new Property(new Bacon.Desc(Bacon, \"constant\", [value]), function (sink) {\n    sink(initialEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.fromBinder = function (binder) {\n  var eventTransformer = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromBinder\", [binder, eventTransformer]);\n  return new EventStream(desc, function (sink) {\n    var unbound = false;\n    var shouldUnbind = false;\n    var unbind = function () {\n      if (!unbound) {\n        if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n          unbinder();\n          return unbound = true;\n        } else {\n          return shouldUnbind = true;\n        }\n      }\n    };\n    var unbinder = binder(function () {\n      var ref;\n\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var value = eventTransformer.apply(this, args);\n      if (!(isArray(value) && ((ref = _.last(value)) != null ? ref._isEvent : undefined))) {\n        value = [value];\n      }\n      var reply = Bacon.more;\n      for (var i = 0, event; i < value.length; i++) {\n        event = value[i];\n        reply = sink(event = toEvent(event));\n        if (reply === Bacon.noMore || event.isEnd()) {\n          unbind();\n          return reply;\n        }\n      }\n      return reply;\n    });\n    if (shouldUnbind) {\n      unbind();\n    }\n    return unbind;\n  });\n};\n\nBacon.Observable.prototype.map = function (p) {\n  for (var _len8 = arguments.length, args = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n\n  return convertArgsToFunction(this, p, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n      return this.push(event.fmap(f));\n    }));\n  });\n};\n\nvar argumentsToObservables = function (args) {\n  if (isArray(args[0])) {\n    return args[0];\n  } else {\n    return Array.prototype.slice.call(args);\n  }\n};\n\nvar argumentsToObservablesAndFunction = function (args) {\n  if (_.isFunction(args[0])) {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n  } else {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n  }\n};\n\nBacon.combineAsArray = function () {\n  var streams = argumentsToObservables(arguments);\n  for (var index = 0, stream; index < streams.length; index++) {\n    stream = streams[index];\n    if (!isObservable(stream)) {\n      streams[index] = Bacon.constant(stream);\n    }\n  }\n  if (streams.length) {\n    var sources = (function () {\n      var result = [];\n      for (var i = 0, s; i < streams.length; i++) {\n        s = streams[i];\n        result.push(new Source(s, true));\n      }\n      return result;\n    })();\n    return withDesc(new Bacon.Desc(Bacon, \"combineAsArray\", streams), Bacon.when(sources, function () {\n      for (var _len9 = arguments.length, xs = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        xs[_key9] = arguments[_key9];\n      }\n\n      return xs;\n    }).toProperty());\n  } else {\n    return Bacon.constant([]);\n  }\n};\n\nBacon.onValues = function () {\n  for (var _len10 = arguments.length, streams = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    streams[_key10] = arguments[_key10];\n  }\n\n  return Bacon.combineAsArray(streams.slice(0, streams.length - 1)).onValues(streams[streams.length - 1]);\n};\n\nBacon.combineWith = function () {\n  var _argumentsToObservablesAndFunction = argumentsToObservablesAndFunction(arguments);\n\n  var streams = _argumentsToObservablesAndFunction[0];\n  var f = _argumentsToObservablesAndFunction[1];\n\n  var desc = new Bacon.Desc(Bacon, \"combineWith\", [f].concat(_toConsumableArray(streams)));\n  return withDesc(desc, Bacon.combineAsArray(streams).map(function (values) {\n    return f.apply(undefined, _toConsumableArray(values));\n  }));\n};\n\nBacon.Observable.prototype.combine = function (other, f) {\n  var combinator = toCombinator(f);\n  var desc = new Bacon.Desc(this, \"combine\", [other, f]);\n  return withDesc(desc, Bacon.combineAsArray(this, other).map(function (values) {\n    return combinator(values[0], values[1]);\n  }));\n};\n\nBacon.Observable.prototype.withStateMachine = function (initState, f) {\n  var state = initState;\n  var desc = new Bacon.Desc(this, \"withStateMachine\", [initState, f]);\n  return withDesc(desc, this.withHandler(function (event) {\n    var fromF = f(state, event);\n    var newState = fromF[0];\n    var outputs = fromF[1];\n\n    state = newState;\n    var reply = Bacon.more;\n    for (var i = 0, output; i < outputs.length; i++) {\n      output = outputs[i];\n      reply = this.push(output);\n      if (reply === Bacon.noMore) {\n        return reply;\n      }\n    }\n    return reply;\n  }));\n};\n\nvar equals = function (a, b) {\n  return a === b;\n};\n\nvar isNone = function (object) {\n  return typeof object !== \"undefined\" && object !== null ? object._isNone : false;\n};\n\nBacon.Observable.prototype.skipDuplicates = function () {\n  var isEqual = arguments.length <= 0 || arguments[0] === undefined ? equals : arguments[0];\n\n  var desc = new Bacon.Desc(this, \"skipDuplicates\", []);\n  return withDesc(desc, this.withStateMachine(None, function (prev, event) {\n    if (!event.hasValue()) {\n      return [prev, [event]];\n    } else if (event.isInitial() || isNone(prev) || !isEqual(prev.get(), event.value())) {\n      return [new Some(event.value()), [event]];\n    } else {\n      return [prev, []];\n    }\n  }));\n};\n\nBacon.Observable.prototype.awaiting = function (other) {\n  var desc = new Bacon.Desc(this, \"awaiting\", [other]);\n  return withDesc(desc, Bacon.groupSimultaneous(this, other).map(function (values) {\n    return values[1].length === 0;\n  }).toProperty(false).skipDuplicates());\n};\n\nBacon.Observable.prototype.not = function () {\n  return withDesc(new Bacon.Desc(this, \"not\", []), this.map(function (x) {\n    return !x;\n  }));\n};\n\nBacon.Property.prototype.and = function (other) {\n  return withDesc(new Bacon.Desc(this, \"and\", [other]), this.combine(other, function (x, y) {\n    return x && y;\n  }));\n};\n\nBacon.Property.prototype.or = function (other) {\n  return withDesc(new Bacon.Desc(this, \"or\", [other]), this.combine(other, function (x, y) {\n    return x || y;\n  }));\n};\n\nBacon.scheduler = {\n  setTimeout: function (f, d) {\n    return setTimeout(f, d);\n  },\n  setInterval: function (f, i) {\n    return setInterval(f, i);\n  },\n  clearInterval: function (id) {\n    return clearInterval(id);\n  },\n  clearTimeout: function (id) {\n    return clearTimeout(id);\n  },\n  now: function () {\n    return new Date().getTime();\n  }\n};\n\nBacon.EventStream.prototype.bufferWithTime = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithTime\", [delay]), this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n};\n\nBacon.EventStream.prototype.bufferWithCount = function (count) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithCount\", [count]), this.bufferWithTimeOrCount(undefined, count));\n};\n\nBacon.EventStream.prototype.bufferWithTimeOrCount = function (delay, count) {\n  var flushOrSchedule = function (buffer) {\n    if (buffer.values.length === count) {\n      return buffer.flush();\n    } else if (delay !== undefined) {\n      return buffer.schedule();\n    }\n  };\n  var desc = new Bacon.Desc(this, \"bufferWithTimeOrCount\", [delay, count]);\n  return withDesc(desc, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n};\n\nBacon.EventStream.prototype.buffer = function (delay) {\n  var onInput = arguments.length <= 1 || arguments[1] === undefined ? nop : arguments[1];\n  var onFlush = arguments.length <= 2 || arguments[2] === undefined ? nop : arguments[2];\n\n  var buffer = {\n    scheduled: null,\n    end: undefined,\n    values: [],\n    flush: function () {\n      if (this.scheduled) {\n        Bacon.scheduler.clearTimeout(this.scheduled);\n        this.scheduled = null;\n      }\n      if (this.values.length > 0) {\n        var valuesToPush = this.values;\n        this.values = [];\n        var reply = this.push(nextEvent(valuesToPush));\n        if (this.end != null) {\n          return this.push(this.end);\n        } else if (reply !== Bacon.noMore) {\n          return onFlush(this);\n        }\n      } else {\n        if (this.end != null) {\n          return this.push(this.end);\n        }\n      }\n    },\n    schedule: function () {\n      var _this6 = this;\n\n      if (!this.scheduled) {\n        return this.scheduled = delay(function () {\n          return _this6.flush();\n        });\n      }\n    }\n  };\n  var reply = Bacon.more;\n  if (!_.isFunction(delay)) {\n    var delayMs = delay;\n    delay = function (f) {\n      return Bacon.scheduler.setTimeout(f, delayMs);\n    };\n  }\n  return withDesc(new Bacon.Desc(this, \"buffer\", []), this.withHandler(function (event) {\n    var _this7 = this;\n\n    buffer.push = function (event) {\n      return _this7.push(event);\n    };\n    if (event.isError()) {\n      reply = this.push(event);\n    } else if (event.isEnd()) {\n      buffer.end = event;\n      if (!buffer.scheduled) {\n        buffer.flush();\n      }\n    } else {\n      buffer.values.push(event.value());\n\n      onInput(buffer);\n    }\n    return reply;\n  }));\n};\n\nBacon.Observable.prototype.filter = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len11 = arguments.length, args = Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    args[_key11 - 1] = arguments[_key11];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"filter\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.once = function (value) {\n  return new EventStream(new Desc(Bacon, \"once\", [value]), function (sink) {\n    sink(toEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.EventStream.prototype.concat = function (right) {\n  var left = this;\n  return new EventStream(new Bacon.Desc(left, \"concat\", [right]), function (sink) {\n    var unsubRight = nop;\n    var unsubLeft = left.dispatcher.subscribe(function (e) {\n      if (e.isEnd()) {\n        unsubRight = right.dispatcher.subscribe(sink);\n        return unsubRight;\n      } else {\n        return sink(e);\n      }\n    });\n    return function () {\n      return (unsubLeft(), unsubRight());\n    };\n  });\n};\n\nBacon.Observable.prototype.flatMap = function () {\n  return flatMap_(this, makeSpawner(arguments));\n};\n\nBacon.Observable.prototype.flatMapFirst = function () {\n  return flatMap_(this, makeSpawner(arguments), true);\n};\n\nvar makeSpawner = function (args) {\n  if (args.length === 1 && isObservable(args[0])) {\n    return _.always(args[0]);\n  } else {\n    return makeFunctionArgs(args);\n  }\n};\n\nvar makeObservable = function (x) {\n  if (isObservable(x)) {\n    return x;\n  } else {\n    return Bacon.once(x);\n  }\n};\n\nvar flatMap_ = function (root, f, firstOnly, limit) {\n  var rootDep = [root];\n  var childDeps = [];\n  var desc = new Bacon.Desc(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), [f]);\n  var result = new EventStream(desc, function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var queue = [];\n    var spawn = function (event) {\n      var child = makeObservable(f(event.value()));\n      childDeps.push(child);\n      return composite.add(function (unsubAll, unsubMe) {\n        return child.dispatcher.subscribe(function (event) {\n          if (event.isEnd()) {\n            _.remove(child, childDeps);\n            checkQueue();\n            checkEnd(unsubMe);\n            return Bacon.noMore;\n          } else {\n            if (typeof event !== \"undefined\" && event !== null ? event._isInitial : undefined) {\n              event = event.toNext();\n            }\n            var reply = sink(event);\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          }\n        });\n      });\n    };\n    var checkQueue = function () {\n      var event = queue.shift();\n      if (event) {\n        return spawn(event);\n      }\n    };\n    var checkEnd = function (unsub) {\n      unsub();\n      if (composite.empty()) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (__, unsubRoot) {\n      return root.dispatcher.subscribe(function (event) {\n        if (event.isEnd()) {\n          return checkEnd(unsubRoot);\n        } else if (event.isError()) {\n          return sink(event);\n        } else if (firstOnly && composite.count() > 1) {\n          return Bacon.more;\n        } else {\n          if (composite.unsubscribed) {\n            return Bacon.noMore;\n          }\n          if (limit && composite.count() > limit) {\n            return queue.push(event);\n          } else {\n            return spawn(event);\n          }\n        }\n      });\n    });\n    return composite.unsubscribe;\n  });\n  result.internalDeps = function () {\n    if (childDeps.length) {\n      return rootDep.concat(childDeps);\n    } else {\n      return rootDep;\n    }\n  };\n  return result;\n};\n\nBacon.Observable.prototype.flatMapWithConcurrencyLimit = function (limit) {\n  for (var _len12 = arguments.length, args = Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n    args[_key12 - 1] = arguments[_key12];\n  }\n\n  var desc = new Bacon.Desc(this, \"flatMapWithConcurrencyLimit\", [limit].concat(args));\n  return withDesc(desc, flatMap_(this, makeSpawner(args), false, limit));\n};\n\nBacon.Observable.prototype.flatMapConcat = function () {\n  var desc = new Bacon.Desc(this, \"flatMapConcat\", Array.prototype.slice.call(arguments, 0));\n  return withDesc(desc, this.flatMapWithConcurrencyLimit.apply(this, [1].concat(_slice.call(arguments))));\n};\n\nBacon.later = function (delay, value) {\n  return withDesc(new Bacon.Desc(Bacon, \"later\", [delay, value]), Bacon.fromBinder(function (sink) {\n    var sender = function () {\n      return sink([value, endEvent()]);\n    };\n    var id = Bacon.scheduler.setTimeout(sender, delay);\n    return function () {\n      return Bacon.scheduler.clearTimeout(id);\n    };\n  }));\n};\n\nBacon.Observable.prototype.bufferingThrottle = function (minimumInterval) {\n  var desc = new Bacon.Desc(this, \"bufferingThrottle\", [minimumInterval]);\n  return withDesc(desc, this.flatMapConcat(function (x) {\n    return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n  }));\n};\n\nBacon.Property.prototype.bufferingThrottle = function () {\n  return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n};\n\nfunction Bus() {\n  if (!(this instanceof Bus)) {\n    return new Bus();\n  }\n\n  this.unsubAll = _.bind(this.unsubAll, this);\n  this.subscribeAll = _.bind(this.subscribeAll, this);\n  this.guardedSink = _.bind(this.guardedSink, this);\n\n  this.sink = undefined;\n  this.subscriptions = [];\n  this.ended = false;\n  EventStream.call(this, new Bacon.Desc(Bacon, \"Bus\", []), this.subscribeAll);\n}\n\ninherit(Bus, EventStream);\nextend(Bus.prototype, {\n  unsubAll: function () {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (typeof sub.unsub === \"function\") {\n        sub.unsub();\n      }\n    }\n  },\n\n  subscribeAll: function (newSink) {\n    if (this.ended) {\n      newSink(endEvent());\n    } else {\n      this.sink = newSink;\n      var iterable = cloneArray(this.subscriptions);\n      for (var i = 0, subscription; i < iterable.length; i++) {\n        subscription = iterable[i];\n        this.subscribeInput(subscription);\n      }\n    }\n    return this.unsubAll;\n  },\n\n  guardedSink: function (input) {\n    var _this8 = this;\n\n    return function (event) {\n      if (event.isEnd()) {\n        _this8.unsubscribeInput(input);\n        return Bacon.noMore;\n      } else {\n        return _this8.sink(event);\n      }\n    };\n  },\n\n  subscribeInput: function (subscription) {\n    subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    return subscription.unsub;\n  },\n\n  unsubscribeInput: function (input) {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (sub.input === input) {\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n        this.subscriptions.splice(i, 1);\n        return;\n      }\n    }\n  },\n\n  plug: function (input) {\n    var _this9 = this;\n\n    assertObservable(input);\n    if (this.ended) {\n      return;\n    }\n    var sub = { input: input };\n    this.subscriptions.push(sub);\n    if (typeof this.sink !== \"undefined\") {\n      this.subscribeInput(sub);\n    }\n    return function () {\n      return _this9.unsubscribeInput(input);\n    };\n  },\n\n  end: function () {\n    this.ended = true;\n    this.unsubAll();\n    if (typeof this.sink === \"function\") {\n      return this.sink(endEvent());\n    }\n  },\n\n  push: function (value) {\n    if (!this.ended && typeof this.sink === \"function\") {\n      return this.sink(nextEvent(value));\n    }\n  },\n\n  error: function (error) {\n    if (typeof this.sink === \"function\") {\n      return this.sink(new Error(error));\n    }\n  }\n});\n\nBacon.Bus = Bus;\n\nvar liftCallback = function (desc, wrapped) {\n  return withMethodCallSupport(function (f) {\n    var stream = partiallyApplied(wrapped, [function (values, callback) {\n      return f.apply(undefined, _toConsumableArray(values).concat([callback]));\n    }]);\n\n    for (var _len13 = arguments.length, args = Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n      args[_key13 - 1] = arguments[_key13];\n    }\n\n    return withDesc(new Bacon.Desc(Bacon, desc, [f].concat(args)), Bacon.combineAsArray(args).flatMap(stream));\n  });\n};\n\nBacon.fromCallback = liftCallback(\"fromCallback\", function (f) {\n  for (var _len14 = arguments.length, args = Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n    args[_key14 - 1] = arguments[_key14];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (value) {\n    return [value, endEvent()];\n  });\n});\n\nBacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function (f) {\n  for (var _len15 = arguments.length, args = Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n    args[_key15 - 1] = arguments[_key15];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (error, value) {\n    if (error) {\n      return [new Error(error), endEvent()];\n    }\n    return [value, endEvent()];\n  });\n});\n\nBacon.combineTemplate = function (template) {\n  function current(ctxStack) {\n    return ctxStack[ctxStack.length - 1];\n  }\n  function setValue(ctxStack, key, value) {\n    current(ctxStack)[key] = value;\n    return value;\n  }\n  function applyStreamValue(key, index) {\n    return function (ctxStack, values) {\n      return setValue(ctxStack, key, values[index]);\n    };\n  }\n  function constantValue(key, value) {\n    return function (ctxStack) {\n      return setValue(ctxStack, key, value);\n    };\n  }\n\n  function mkContext(template) {\n    return isArray(template) ? [] : {};\n  }\n\n  function pushContext(key, value) {\n    return function (ctxStack) {\n      var newContext = mkContext(value);\n      setValue(ctxStack, key, newContext);\n      return ctxStack.push(newContext);\n    };\n  }\n\n  function compile(key, value) {\n    if (isObservable(value)) {\n      streams.push(value);\n      return funcs.push(applyStreamValue(key, streams.length - 1));\n    } else if (value && (value.constructor == Object || value.constructor == Array)) {\n      var popContext = function (ctxStack) {\n        return ctxStack.pop();\n      };\n      funcs.push(pushContext(key, value));\n      compileTemplate(value);\n      return funcs.push(popContext);\n    } else {\n      return funcs.push(constantValue(key, value));\n    }\n  }\n\n  function combinator(values) {\n    var rootContext = mkContext(template);\n    var ctxStack = [rootContext];\n    for (var i = 0, f; i < funcs.length; i++) {\n      f = funcs[i];\n      f(ctxStack, values);\n    }\n    return rootContext;\n  }\n\n  function compileTemplate(template) {\n    return _.each(template, compile);\n  }\n\n  var funcs = [];\n  var streams = [];\n\n  compileTemplate(template);\n\n  return withDesc(new Bacon.Desc(Bacon, \"combineTemplate\", [template]), Bacon.combineAsArray(streams).map(combinator));\n};\n\nvar addPropertyInitValueToStream = function (property, stream) {\n  var justInitValue = new EventStream(describe(property, \"justInitValue\"), function (sink) {\n    var value = undefined;\n    var unsub = property.dispatcher.subscribe(function (event) {\n      if (!event.isEnd()) {\n        value = event;\n      }\n      return Bacon.noMore;\n    });\n    UpdateBarrier.whenDoneWith(justInitValue, function () {\n      if (typeof value !== \"undefined\" && value !== null) {\n        sink(value);\n      }\n      return sink(endEvent());\n    });\n    return unsub;\n  });\n  return justInitValue.concat(stream).toProperty();\n};\n\nBacon.Observable.prototype.mapEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      this.push(nextEvent(f(event)));\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.skipErrors = function () {\n  return withDesc(new Bacon.Desc(this, \"skipErrors\", []), this.withHandler(function (event) {\n    if (event.isError()) {\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.takeUntil = function (stopper) {\n  var endMarker = {};\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      var _event$value = event.value();\n\n      var data = _event$value[0];\n      var stopper = _event$value[1];\n\n      if (stopper.length) {\n        return this.push(endEvent());\n      } else {\n        var reply = Bacon.more;\n        for (var i = 0, value; i < data.length; i++) {\n          value = data[i];\n          if (value === endMarker) {\n            reply = this.push(endEvent());\n          } else {\n            reply = this.push(nextEvent(value));\n          }\n        }\n        return reply;\n      }\n    }\n  }));\n};\n\nBacon.Property.prototype.takeUntil = function (stopper) {\n  var changes = this.changes().takeUntil(stopper);\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), addPropertyInitValueToStream(this, changes));\n};\n\nBacon.Observable.prototype.flatMapLatest = function () {\n  var f = makeSpawner(arguments);\n  var stream = this.toEventStream();\n  return withDesc(new Bacon.Desc(this, \"flatMapLatest\", [f]), stream.flatMap(function (value) {\n    return makeObservable(f(value)).takeUntil(stream);\n  }));\n};\n\nBacon.Property.prototype.delayChanges = function (desc, f) {\n  return withDesc(desc, addPropertyInitValueToStream(this, f(this.changes())));\n};\n\nBacon.EventStream.prototype.delay = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"delay\", [delay]), this.flatMap(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.delay = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"delay\", [delay]), function (changes) {\n    return changes.delay(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounce = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounce\", [delay]), this.flatMapLatest(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.debounce = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounce\", [delay]), function (changes) {\n    return changes.debounce(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounceImmediate = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounceImmediate\", [delay]), this.flatMapFirst(function (value) {\n    return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n  }));\n};\n\nBacon.Observable.prototype.decode = function (cases) {\n  return withDesc(new Bacon.Desc(this, \"decode\", [cases]), this.combine(Bacon.combineTemplate(cases), function (key, values) {\n    return values[key];\n  }));\n};\n\nBacon.Observable.prototype.scan = function (seed, f) {\n  var _this10 = this;\n\n  var resultProperty;\n  f = toCombinator(f);\n  var acc = toOption(seed);\n  var initHandled = false;\n  var subscribe = function (sink) {\n    var initSent = false;\n    var unsub = nop;\n    var reply = Bacon.more;\n    var sendInit = function () {\n      if (!initSent) {\n        return acc.forEach(function (value) {\n          initSent = initHandled = true;\n          reply = sink(new Initial(function () {\n            return value;\n          }));\n          if (reply === Bacon.noMore) {\n            unsub();\n            unsub = nop;\n            return unsub;\n          }\n        });\n      }\n    };\n    unsub = _this10.dispatcher.subscribe(function (event) {\n      if (event.hasValue()) {\n        if (initHandled && event.isInitial()) {\n          return Bacon.more;\n        } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = initHandled = true;\n            var prev = acc.getOrElse(undefined);\n            var next = f(prev, event.value());\n\n            acc = new Some(next);\n            return sink(event.apply(function () {\n              return next;\n            }));\n          }\n      } else {\n        if (event.isEnd()) {\n          reply = sendInit();\n        }\n        if (reply !== Bacon.noMore) {\n          return sink(event);\n        }\n      }\n    });\n    UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n    return unsub;\n  };\n  resultProperty = new Property(new Bacon.Desc(this, \"scan\", [seed, f]), subscribe);\n  return resultProperty;\n};\n\nBacon.Observable.prototype.diff = function (start, f) {\n  f = toCombinator(f);\n  return withDesc(new Bacon.Desc(this, \"diff\", [start, f]), this.scan([start], function (prevTuple, next) {\n    return [next, f(prevTuple[0], next)];\n  }).filter(function (tuple) {\n    return tuple.length === 2;\n  }).map(function (tuple) {\n    return tuple[1];\n  }));\n};\n\nBacon.Observable.prototype.doAction = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doAction\", [f]), this.withHandler(function (event) {\n    if (event.hasValue()) {\n      f(event.value());\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      f();\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      f(event.error);\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doLog = function () {\n  for (var _len16 = arguments.length, args = Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    args[_key16] = arguments[_key16];\n  }\n\n  return withDesc(new Bacon.Desc(this, \"doLog\", args), this.withHandler(function (event) {\n    if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.endOnError = function (f) {\n  if (!(typeof f !== \"undefined\" && f !== null)) {\n    f = true;\n  }\n\n  for (var _len17 = arguments.length, args = Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n    args[_key17 - 1] = arguments[_key17];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"endOnError\", []), this.withHandler(function (event) {\n      if (event.isError() && f(event.error)) {\n        this.push(event);\n        return this.push(endEvent());\n      } else {\n        return this.push(event);\n      }\n    }));\n  });\n};\n\nObservable.prototype.errors = function () {\n  return withDesc(new Bacon.Desc(this, \"errors\", []), this.filter(function () {\n    return false;\n  }));\n};\n\nBacon.Observable.prototype.take = function (count) {\n  if (count <= 0) {\n    return Bacon.never();\n  }\n  return withDesc(new Bacon.Desc(this, \"take\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      count--;\n      if (count > 0) {\n        return this.push(event);\n      } else {\n        if (count === 0) {\n          this.push(event);\n        }\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }\n  }));\n};\n\nBacon.Observable.prototype.first = function () {\n  return withDesc(new Bacon.Desc(this, \"first\", []), this.take(1));\n};\n\nBacon.Observable.prototype.mapError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      return this.push(nextEvent(f(event.error)));\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.flatMapError = function (fn) {\n  var desc = new Bacon.Desc(this, \"flatMapError\", [fn]);\n  return withDesc(desc, this.mapError(function (err) {\n    return new Error(err);\n  }).flatMap(function (x) {\n    if (x instanceof Error) {\n      return fn(x.error);\n    } else {\n      return Bacon.once(x);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.sampledBy = function (sampler, combinator) {\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), this.toProperty().sampledBy(sampler, combinator));\n};\n\nBacon.Property.prototype.sampledBy = function (sampler, combinator) {\n  var lazy = false;\n  if (typeof combinator !== \"undefined\" && combinator !== null) {\n    combinator = toCombinator(combinator);\n  } else {\n    lazy = true;\n    combinator = function (f) {\n      return f.value();\n    };\n  }\n  var thisSource = new Source(this, false, lazy);\n  var samplerSource = new Source(sampler, true, lazy);\n  var stream = Bacon.when([thisSource, samplerSource], combinator);\n  var result = sampler._isProperty ? stream.toProperty() : stream;\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), result);\n};\n\nBacon.Property.prototype.sample = function (interval) {\n  return withDesc(new Bacon.Desc(this, \"sample\", [interval]), this.sampledBy(Bacon.interval(interval, {})));\n};\n\nBacon.Observable.prototype.map = function (p) {\n  if (p && p._isProperty) {\n    return p.sampledBy(this, former);\n  } else {\n    for (var _len18 = arguments.length, args = Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {\n      args[_key18 - 1] = arguments[_key18];\n    }\n\n    return convertArgsToFunction(this, p, args, function (f) {\n      return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  }\n};\n\nBacon.Observable.prototype.fold = function (seed, f) {\n  return withDesc(new Bacon.Desc(this, \"fold\", [seed, f]), this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n};\n\nObservable.prototype.reduce = Observable.prototype.fold;\n\nvar eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\nvar findHandlerMethods = function (target) {\n  var pair;\n  for (var i = 0; i < eventMethods.length; i++) {\n    pair = eventMethods[i];\n    var methodPair = [target[pair[0]], target[pair[1]]];\n    if (methodPair[0] && methodPair[1]) {\n      return methodPair;\n    }\n  }\n  for (var j = 0; j < eventMethods.length; j++) {\n    pair = eventMethods[j];\n    var addListener = target[pair[0]];\n    if (addListener) {\n      return [addListener, function () {}];\n    }\n  }\n  throw new Error(\"No suitable event methods in \" + target);\n};\n\nBacon.fromEventTarget = function (target, eventName, eventTransformer) {\n  var _findHandlerMethods = findHandlerMethods(target);\n\n  var sub = _findHandlerMethods[0];\n  var unsub = _findHandlerMethods[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromEvent\", [target, eventName]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    sub.call(target, eventName, handler);\n    return function () {\n      return unsub.call(target, eventName, handler);\n    };\n  }, eventTransformer));\n};\n\nBacon.fromEvent = Bacon.fromEventTarget;\n\nBacon.fromPoll = function (delay, poll) {\n  var desc = new Bacon.Desc(Bacon, \"fromPoll\", [delay, poll]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    var id = Bacon.scheduler.setInterval(handler, delay);\n    return function () {\n      return Bacon.scheduler.clearInterval(id);\n    };\n  }, poll));\n};\n\nfunction valueAndEnd(value) {\n  return [value, endEvent()];\n}\n\nBacon.fromPromise = function (promise, abort) {\n  var eventTransformer = arguments.length <= 2 || arguments[2] === undefined ? valueAndEnd : arguments[2];\n\n  return withDesc(new Bacon.Desc(Bacon, \"fromPromise\", [promise]), Bacon.fromBinder(function (handler) {\n    var bound = promise.then(handler, function (e) {\n      return handler(new Error(e));\n    });\n    if (bound && typeof bound.done === \"function\") {\n      bound.done();\n    }\n\n    if (abort) {\n      return function () {\n        if (typeof promise.abort === \"function\") {\n          return promise.abort();\n        }\n      };\n    } else {\n      return function () {};\n    }\n  }, eventTransformer));\n};\n\nBacon.Observable.prototype.groupBy = function (keyF) {\n  var limitF = arguments.length <= 1 || arguments[1] === undefined ? Bacon._.id : arguments[1];\n\n  var streams = {};\n  var src = this;\n  return src.filter(function (x) {\n    return !streams[keyF(x)];\n  }).map(function (x) {\n    var key = keyF(x);\n    var similar = src.filter(function (x) {\n      return keyF(x) === key;\n    });\n    var data = Bacon.once(x).concat(similar);\n    var limited = limitF(data, x).withHandler(function (event) {\n      this.push(event);\n      if (event.isEnd()) {\n        return delete streams[key];\n      }\n    });\n    streams[key] = limited;\n    return limited;\n  });\n};\n\nBacon.fromArray = function (values) {\n  assertArray(values);\n  if (!values.length) {\n    return withDesc(new Bacon.Desc(Bacon, \"fromArray\", values), Bacon.never());\n  } else {\n    var i = 0;\n    return new EventStream(new Bacon.Desc(Bacon, \"fromArray\", [values]), function (sink) {\n      var unsubd = false;\n      var reply = Bacon.more;\n      var pushing = false;\n      var pushNeeded = false;\n      var push = function () {\n        pushNeeded = true;\n        if (pushing) {\n          return;\n        }\n        pushing = true;\n        while (pushNeeded) {\n          pushNeeded = false;\n          if (reply !== Bacon.noMore && !unsubd) {\n            var value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                sink(endEvent());\n              } else {\n                UpdateBarrier.afterTransaction(push);\n              }\n            }\n          }\n        }\n        pushing = false;\n        return pushing;\n      };\n\n      push();\n      return function () {\n        unsubd = true;\n        return unsubd;\n      };\n    });\n  }\n};\n\nBacon.EventStream.prototype.holdWhen = function (valve) {\n  var onHold = false;\n  var bufferedValues = [];\n  var src = this;\n  return new EventStream(new Bacon.Desc(this, \"holdWhen\", [valve]), function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var subscribed = false;\n    var endIfBothEnded = function (unsub) {\n      if (typeof unsub === \"function\") {\n        unsub();\n      }\n      if (composite.empty() && subscribed) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (unsubAll, unsubMe) {\n      return valve.subscribeInternal(function (event) {\n        if (event.hasValue()) {\n          onHold = event.value();\n          if (!onHold) {\n            var toSend = bufferedValues;\n            bufferedValues = [];\n            return (function () {\n              var result = [];\n              for (var i = 0, value; i < toSend.length; i++) {\n                value = toSend[i];\n                result.push(sink(nextEvent(value)));\n              }\n              return result;\n            })();\n          }\n        } else if (event.isEnd()) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    composite.add(function (unsubAll, unsubMe) {\n      return src.subscribeInternal(function (event) {\n        if (onHold && event.hasValue()) {\n          return bufferedValues.push(event.value());\n        } else if (event.isEnd() && bufferedValues.length) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    subscribed = true;\n    endIfBothEnded();\n    return composite.unsubscribe;\n  });\n};\n\nBacon.interval = function (delay) {\n  var value = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  return withDesc(new Bacon.Desc(Bacon, \"interval\", [delay, value]), Bacon.fromPoll(delay, function () {\n    return nextEvent(value);\n  }));\n};\n\nBacon.$ = {};\nBacon.$.asEventStream = function (eventName, selector, eventTransformer) {\n  var _this11 = this;\n\n  if (_.isFunction(selector)) {\n    eventTransformer = selector;\n    selector = undefined;\n  }\n\n  return withDesc(new Bacon.Desc(this.selector || this, \"asEventStream\", [eventName]), Bacon.fromBinder(function (handler) {\n    _this11.on(eventName, selector, handler);\n    return function () {\n      return _this11.off(eventName, selector, handler);\n    };\n  }, eventTransformer));\n};\n\nif (typeof jQuery !== \"undefined\" && jQuery) {\n  jQuery.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nif (typeof Zepto !== \"undefined\" && Zepto) {\n  Zepto.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDesc(new Bacon.Desc(this, \"last\", []), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.Observable.prototype.log = function () {\n  for (var _len19 = arguments.length, args = Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n    args[_key19] = arguments[_key19];\n  }\n\n  this.subscribe(function (event) {\n    if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n  });\n  return this;\n};\n\nBacon.EventStream.prototype.merge = function (right) {\n  assertEventStream(right);\n  var left = this;\n  return withDesc(new Bacon.Desc(left, \"merge\", [right]), Bacon.mergeAll(this, right));\n};\n\nBacon.mergeAll = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    return new EventStream(new Bacon.Desc(Bacon, \"mergeAll\", streams), function (sink) {\n      var ends = 0;\n      var smartSink = function (obs) {\n        return function (unsubBoth) {\n          return obs.dispatcher.subscribe(function (event) {\n            if (event.isEnd()) {\n              ends++;\n              if (ends === streams.length) {\n                return sink(endEvent());\n              } else {\n                return Bacon.more;\n              }\n            } else {\n              var reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubBoth();\n              }\n              return reply;\n            }\n          });\n        };\n      };\n      var sinks = _.map(smartSink, streams);\n      return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n    });\n  } else {\n    return Bacon.never();\n  }\n};\n\nBacon.repeatedly = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"repeatedly\", [delay, values]), Bacon.fromPoll(delay, function () {\n    return values[index++ % values.length];\n  }));\n};\n\nBacon.repeat = function (generator) {\n  var index = 0;\n  return Bacon.fromBinder(function (sink) {\n    var flag = false;\n    var reply = Bacon.more;\n    var unsub = function () {};\n    function handleEvent(event) {\n      if (event.isEnd()) {\n        if (!flag) {\n          return flag = true;\n        } else {\n          return subscribeNext();\n        }\n      } else {\n        return reply = sink(event);\n      }\n    };\n    function subscribeNext() {\n      var next;\n      flag = true;\n      while (flag && reply !== Bacon.noMore) {\n        next = generator(index++);\n        flag = false;\n        if (next) {\n          unsub = next.subscribeInternal(handleEvent);\n        } else {\n          sink(endEvent());\n        }\n      }\n      return flag = true;\n    };\n    subscribeNext();\n    return function () {\n      return unsub();\n    };\n  });\n};\n\nBacon.retry = function (options) {\n  if (!_.isFunction(options.source)) {\n    throw new Exception(\"'source' option has to be a function\");\n  }\n  var source = options.source;\n  var retries = options.retries || 0;\n  var maxRetries = options.maxRetries || retries;\n  var delay = options.delay || function () {\n    return 0;\n  };\n  var isRetryable = options.isRetryable || function () {\n    return true;\n  };\n  var finished = false;\n  var error = null;\n\n  return withDesc(new Bacon.Desc(Bacon, \"retry\", [options]), Bacon.repeat(function () {\n    function valueStream() {\n      return source().endOnError().withHandler(function (event) {\n        if (event.isError()) {\n          error = event;\n          if (!(isRetryable(error.error) && retries > 0)) {\n            finished = true;\n            return this.push(event);\n          }\n        } else {\n          if (event.hasValue()) {\n            error = null;\n            finished = true;\n          }\n          return this.push(event);\n        }\n      });\n    }\n\n    if (finished) {\n      return null;\n    } else if (error) {\n      var context = {\n        error: error.error,\n        retriesDone: maxRetries - retries\n      };\n      var pause = Bacon.later(delay(context)).filter(false);\n      retries = retries - 1;\n      return pause.concat(Bacon.once().flatMap(valueStream));\n    } else {\n      return valueStream();\n    }\n  }));\n};\n\nBacon.sequentially = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"sequentially\", [delay, values]), Bacon.fromPoll(delay, function () {\n    var value = values[index++];\n    if (index < values.length) {\n      return value;\n    } else if (index === values.length) {\n      return [value, endEvent()];\n    } else {\n      return endEvent();\n    }\n  }));\n};\n\nBacon.Observable.prototype.skip = function (count) {\n  return withDesc(new Bacon.Desc(this, \"skip\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else if (count > 0) {\n      count--;\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.skipUntil = function (starter) {\n  var started = starter.take(1).map(true).toProperty(false);\n  return withDesc(new Bacon.Desc(this, \"skipUntil\", [starter]), this.filter(started));\n};\n\nBacon.EventStream.prototype.skipWhile = function (f) {\n  assertObservableIsProperty(f);\n  var ok = false;\n\n  for (var _len20 = arguments.length, args = Array(_len20 > 1 ? _len20 - 1 : 0), _key20 = 1; _key20 < _len20; _key20++) {\n    args[_key20 - 1] = arguments[_key20];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"skipWhile\", [f]), this.withHandler(function (event) {\n      if (ok || !event.hasValue() || !f(event.value())) {\n        if (event.hasValue()) {\n          ok = true;\n        }\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.Observable.prototype.slidingWindow = function (n) {\n  var minValues = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n  return withDesc(new Bacon.Desc(this, \"slidingWindow\", [n, minValues]), this.scan([], function (window, value) {\n    return window.concat([value]).slice(-n);\n  }).filter(function (values) {\n    return values.length >= minValues;\n  }));\n};\n\nvar spies = [];\nvar registerObs = function (obs) {\n  if (spies.length) {\n    if (!registerObs.running) {\n      try {\n        registerObs.running = true;\n        spies.forEach(function (spy) {\n          spy(obs);\n        });\n      } finally {\n        delete registerObs.running;\n      }\n    }\n  }\n};\n\nBacon.spy = function (spy) {\n  return spies.push(spy);\n};\n\nBacon.Property.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), this.scan(seed, function (prev, next) {\n    return next;\n  }));\n};\n\nBacon.EventStream.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), Bacon.once(seed).concat(this));\n};\n\nBacon.Observable.prototype.takeWhile = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len21 = arguments.length, args = Array(_len21 > 1 ? _len21 - 1 : 0), _key21 = 1; _key21 < _len21; _key21++) {\n    args[_key21 - 1] = arguments[_key21];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"takeWhile\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }));\n  });\n};\n\nBacon.EventStream.prototype.throttle = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"throttle\", [delay]), this.bufferWithTime(delay).map(function (values) {\n    return values[values.length - 1];\n  }));\n};\n\nBacon.Property.prototype.throttle = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"throttle\", [delay]), function (changes) {\n    return changes.throttle(delay);\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this12 = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this12.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nBacon[\"try\"] = function (f) {\n  return function (value) {\n    try {\n      return Bacon.once(f(value));\n    } catch (e) {\n      return new Bacon.Error(e);\n    }\n  };\n};\n\nBacon.update = function (initial) {\n  function lateBindFirst(f) {\n    return function () {\n      for (var _len23 = arguments.length, args = Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n        args[_key23] = arguments[_key23];\n      }\n\n      return function (i) {\n        return f.apply(undefined, _toConsumableArray([i].concat(args)));\n      };\n    };\n  }\n\n  for (var _len22 = arguments.length, patterns = Array(_len22 > 1 ? _len22 - 1 : 0), _key22 = 1; _key22 < _len22; _key22++) {\n    patterns[_key22 - 1] = arguments[_key22];\n  }\n\n  var i = patterns.length - 1;\n  while (i > 0) {\n    if (!(patterns[i] instanceof Function)) {\n      patterns[i] = _.always(patterns[i]);\n    }\n    patterns[i] = lateBindFirst(patterns[i]);\n    i = i - 2;\n  }\n  return withDesc(new Bacon.Desc(Bacon, \"update\", [initial].concat(patterns)), Bacon.when.apply(Bacon, patterns).scan(initial, function (x, f) {\n    return f(x);\n  }));\n};\n\nBacon.zipAsArray = function () {\n  for (var _len24 = arguments.length, args = Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n    args[_key24] = arguments[_key24];\n  }\n\n  var streams = argumentsToObservables(args);\n  return withDesc(new Bacon.Desc(Bacon, \"zipAsArray\", streams), Bacon.zipWith(streams, function () {\n    for (var _len25 = arguments.length, xs = Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n      xs[_key25] = arguments[_key25];\n    }\n\n    return xs;\n  }));\n};\n\nBacon.zipWith = function () {\n  for (var _len26 = arguments.length, args = Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {\n    args[_key26] = arguments[_key26];\n  }\n\n  var observablesAndFunction = argumentsToObservablesAndFunction(args);\n  var streams = observablesAndFunction[0];\n  var f = observablesAndFunction[1];\n\n  streams = _.map(function (s) {\n    return s.toEventStream();\n  }, streams);\n  return withDesc(new Bacon.Desc(Bacon, \"zipWith\", [f].concat(streams)), Bacon.when(streams, f));\n};\n\nBacon.Observable.prototype.zip = function (other, f) {\n  return withDesc(new Bacon.Desc(this, \"zip\", [other]), Bacon.zipWith([this, other], f || Array));\n};\n\nif (typeof define !== \"undefined\" && define !== null && define.amd != null) {\n  define([], function () {\n    return Bacon;\n  });\n  if (typeof this !== \"undefined\" && this !== null) {\n    this.Bacon = Bacon;\n  }\n} else if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n  module.exports = Bacon;\n  Bacon.Bacon = Bacon;\n} else {\n    this.Bacon = Bacon;\n  }\n}).call(this);\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.1.20151003\n *\n * By Eli Grey, http://eligrey.com\n * License: X11/MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and\n\t\t// https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047\n\t\t// for the reasoning behind the timeout and revocation flow\n\t\t, arbitrary_revoke_timeout = 500 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (view.chrome) {\n\t\t\t\trevoker();\n\t\t\t} else {\n\t\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t\t}\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([\"\\ufeff\", blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar base64Data = reader.result;\n\t\t\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (new_tab == undefined && is_safari) {\n\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name, no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\n\t\t};\n\t}\n\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n","/*global define:false */\n/**\n * Copyright 2015 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.5.3\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n        _MAP[i + 96] = i;\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (window, document);\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/**\r\n* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.\r\n*  \r\n* Version - 0.99.00.beta \r\n* Copyright (c) 2012 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/vkbeautify/\r\n* \r\n* Dual licensed under the MIT and GPL licenses:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*   http://www.gnu.org/licenses/gpl.html\r\n*\r\n*   Pretty print\r\n*\r\n*        vkbeautify.xml(text [,indent_pattern]);\r\n*        vkbeautify.json(text [,indent_pattern]);\r\n*        vkbeautify.css(text [,indent_pattern]);\r\n*        vkbeautify.sql(text [,indent_pattern]);\r\n*\r\n*        @text - String; text to beatufy;\r\n*        @indent_pattern - Integer | String;\r\n*                Integer:  number of white spaces;\r\n*                String:   character string to visualize indentation ( can also be a set of white spaces )\r\n*   Minify\r\n*\r\n*        vkbeautify.xmlmin(text [,preserve_comments]);\r\n*        vkbeautify.jsonmin(text);\r\n*        vkbeautify.cssmin(text [,preserve_comments]);\r\n*        vkbeautify.sqlmin(text);\r\n*\r\n*        @text - String; text to minify;\r\n*        @preserve_comments - Bool; [optional];\r\n*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )\r\n*\r\n*   Examples:\r\n*        vkbeautify.xml(text); // pretty print XML\r\n*        vkbeautify.json(text, 4 ); // pretty print JSON\r\n*        vkbeautify.css(text, '. . . .'); // pretty print CSS\r\n*        vkbeautify.sql(text, '----'); // pretty print SQL\r\n*\r\n*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments\r\n*        vkbeautify.jsonmin(text);// minify JSON\r\n*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )\r\n*        vkbeautify.sqlmin(text);// minify SQL\r\n*\r\n*/\r\nfunction createShiftArr(step) {\r\n\r\n\tvar space = '    ';\r\n\t\r\n\tif ( isNaN(parseInt(step)) ) {  // argument is string\r\n\t\tspace = step;\r\n\t} else { // argument is integer\r\n\t\tswitch(step) {\r\n\t\t\tcase 1: space = ' '; break;\r\n\t\t\tcase 2: space = '  '; break;\r\n\t\t\tcase 3: space = '   '; break;\r\n\t\t\tcase 4: space = '    '; break;\r\n\t\t\tcase 5: space = '     '; break;\r\n\t\t\tcase 6: space = '      '; break;\r\n\t\t\tcase 7: space = '       '; break;\r\n\t\t\tcase 8: space = '        '; break;\r\n\t\t\tcase 9: space = '         '; break;\r\n\t\t\tcase 10: space = '          '; break;\r\n\t\t\tcase 11: space = '           '; break;\r\n\t\t\tcase 12: space = '            '; break;\r\n\t\t}\r\n\t}\r\n\r\n\tvar shift = ['\\n']; // array of shifts\r\n\tfor(ix=0;ix<100;ix++){\r\n\t\tshift.push(shift[ix]+space); \r\n\t}\r\n\treturn shift;\r\n}\r\n\r\nfunction vkbeautify(){\r\n\tthis.step = '    '; // 4 spaces\r\n\tthis.shift = createShiftArr(this.step);\r\n};\r\n\r\nvkbeautify.prototype.xml = function(text,step) {\r\n\r\n\tvar ar = text.replace(/>\\s{0,}</g,\"><\")\r\n\t\t\t\t .replace(/</g,\"~::~<\")\r\n\t\t\t\t .replace(/\\s*xmlns\\:/g,\"~::~xmlns:\")\r\n\t\t\t\t .replace(/\\s*xmlns\\=/g,\"~::~xmlns=\")\r\n\t\t\t\t .split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tinComment = false,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t// start comment or <![CDATA[...]]> or <!DOCTYPE //\r\n\t\t\tif(ar[ix].search(/<!/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tinComment = true; \r\n\t\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) { \r\n\t\t\t\t\tinComment = false; \r\n\t\t\t\t}\r\n\t\t\t} else \r\n\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tinComment = false; \r\n\t\t\t} else \r\n\t\t\t// <elm></elm> //\r\n\t\t\tif( /^<\\w/.exec(ar[ix-1]) && /^<\\/\\w/.exec(ar[ix]) &&\r\n\t\t\t\t/^<[\\w:\\-\\.\\,]+/.exec(ar[ix-1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/','')) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tif(!inComment) deep--;\r\n\t\t\t} else\r\n\t\t\t // <elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1 ) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep++]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t // <elm>...</elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// </elm> //\r\n\t\t\tif(ar[ix].search(/<\\//) > -1) { \r\n\t\t\t\tstr = !inComment ? str += shift[--deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <elm/> //\r\n\t\t\tif(ar[ix].search(/\\/>/) > -1 ) { \r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <? xml ... ?> //\r\n\t\t\tif(ar[ix].search(/<\\?/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\t// xmlns //\r\n\t\t\tif( ar[ix].search(/xmlns\\:/) > -1  || ar[ix].search(/xmlns\\=/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\treturn  (str[0] == '\\n') ? str.slice(1) : str;\r\n}\r\n\r\nvkbeautify.prototype.json = function(text,step) {\r\n\r\n\tvar step = step ? step : this.step;\r\n\t\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\tif ( typeof text === \"string\" ) return JSON.stringify(JSON.parse(text), null, step);\r\n\tif ( typeof text === \"object\" ) return JSON.stringify(text, null, step);\r\n\t\t\r\n\treturn text; // text is not string nor object\r\n}\r\n\r\nvkbeautify.prototype.css = function(text, step) {\r\n\r\n\tvar ar = text.replace(/\\s{1,}/g,' ')\r\n\t\t\t\t.replace(/\\{/g,\"{~::~\")\r\n\t\t\t\t.replace(/\\}/g,\"~::~}~::~\")\r\n\t\t\t\t.replace(/\\;/g,\";~::~\")\r\n\t\t\t\t.replace(/\\/\\*/g,\"~::~/*\")\r\n\t\t\t\t.replace(/\\*\\//g,\"*/~::~\")\r\n\t\t\t\t.replace(/~::~\\s{0,}~::~/g,\"~::~\")\r\n\t\t\t\t.split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\t\t\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\r\n\t\t\tif( /\\{/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep++]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\}/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[--deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\*\\\\/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.replace(/^\\n{1,}/,'');\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nfunction isSubquery(str, parenthesisLevel) {\r\n\treturn  parenthesisLevel - (str.replace(/\\(/g,'').length - str.replace(/\\)/g,'').length )\r\n}\r\n\r\nfunction split_sql(str, tab) {\r\n\r\n\treturn str.replace(/\\s{1,}/g,\" \")\r\n\r\n\t\t\t\t.replace(/ AND /ig,\"~::~\"+tab+tab+\"AND \")\r\n\t\t\t\t.replace(/ BETWEEN /ig,\"~::~\"+tab+\"BETWEEN \")\r\n\t\t\t\t.replace(/ CASE /ig,\"~::~\"+tab+\"CASE \")\r\n\t\t\t\t.replace(/ ELSE /ig,\"~::~\"+tab+\"ELSE \")\r\n\t\t\t\t.replace(/ END /ig,\"~::~\"+tab+\"END \")\r\n\t\t\t\t.replace(/ FROM /ig,\"~::~FROM \")\r\n\t\t\t\t.replace(/ GROUP\\s{1,}BY/ig,\"~::~GROUP BY \")\r\n\t\t\t\t.replace(/ HAVING /ig,\"~::~HAVING \")\r\n\t\t\t\t//.replace(/ SET /ig,\" SET~::~\")\r\n\t\t\t\t.replace(/ IN /ig,\" IN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ JOIN /ig,\"~::~JOIN \")\r\n\t\t\t\t.replace(/ CROSS~::~{1,}JOIN /ig,\"~::~CROSS JOIN \")\r\n\t\t\t\t.replace(/ INNER~::~{1,}JOIN /ig,\"~::~INNER JOIN \")\r\n\t\t\t\t.replace(/ LEFT~::~{1,}JOIN /ig,\"~::~LEFT JOIN \")\r\n\t\t\t\t.replace(/ RIGHT~::~{1,}JOIN /ig,\"~::~RIGHT JOIN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ ON /ig,\"~::~\"+tab+\"ON \")\r\n\t\t\t\t.replace(/ OR /ig,\"~::~\"+tab+tab+\"OR \")\r\n\t\t\t\t.replace(/ ORDER\\s{1,}BY/ig,\"~::~ORDER BY \")\r\n\t\t\t\t.replace(/ OVER /ig,\"~::~\"+tab+\"OVER \")\r\n\r\n\t\t\t\t.replace(/\\(\\s{0,}SELECT /ig,\"~::~(SELECT \")\r\n\t\t\t\t.replace(/\\)\\s{0,}SELECT /ig,\")~::~SELECT \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ THEN /ig,\" THEN~::~\"+tab+\"\")\r\n\t\t\t\t.replace(/ UNION /ig,\"~::~UNION~::~\")\r\n\t\t\t\t.replace(/ USING /ig,\"~::~USING \")\r\n\t\t\t\t.replace(/ WHEN /ig,\"~::~\"+tab+\"WHEN \")\r\n\t\t\t\t.replace(/ WHERE /ig,\"~::~WHERE \")\r\n\t\t\t\t.replace(/ WITH /ig,\"~::~WITH \")\r\n\t\t\t\t\r\n\t\t\t\t//.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\r\n\t\t\t\t//.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\r\n\r\n\t\t\t\t.replace(/ ALL /ig,\" ALL \")\r\n\t\t\t\t.replace(/ AS /ig,\" AS \")\r\n\t\t\t\t.replace(/ ASC /ig,\" ASC \")\t\r\n\t\t\t\t.replace(/ DESC /ig,\" DESC \")\t\r\n\t\t\t\t.replace(/ DISTINCT /ig,\" DISTINCT \")\r\n\t\t\t\t.replace(/ EXISTS /ig,\" EXISTS \")\r\n\t\t\t\t.replace(/ NOT /ig,\" NOT \")\r\n\t\t\t\t.replace(/ NULL /ig,\" NULL \")\r\n\t\t\t\t.replace(/ LIKE /ig,\" LIKE \")\r\n\t\t\t\t.replace(/\\s{0,}SELECT /ig,\"SELECT \")\r\n\t\t\t\t.replace(/\\s{0,}UPDATE /ig,\"UPDATE \")\r\n\t\t\t\t.replace(/ SET /ig,\" SET \")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t.replace(/~::~{1,}/g,\"~::~\")\r\n\t\t\t\t.split('~::~');\r\n}\r\n\r\nvkbeautify.prototype.sql = function(text,step) {\r\n\r\n\tvar ar_by_quote = text.replace(/\\s{1,}/g,\" \")\r\n\t\t\t\t\t\t\t.replace(/\\'/ig,\"~::~\\'\")\r\n\t\t\t\t\t\t\t.split('~::~'),\r\n\t\tlen = ar_by_quote.length,\r\n\t\tar = [],\r\n\t\tdeep = 0,\r\n\t\ttab = this.step,//+this.step,\r\n\t\tinComment = true,\r\n\t\tinQuote = false,\r\n\t\tparenthesisLevel = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\tif(ix%2) {\r\n\t\t\t\tar = ar.concat(ar_by_quote[ix]);\r\n\t\t\t} else {\r\n\t\t\t\tar = ar.concat(split_sql(ar_by_quote[ix], tab) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlen = ar.length;\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t\r\n\t\t\tparenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SET\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tdeep++;\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\'/.exec(ar[ix]) )  { \r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t\telse  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tvar junk = 0;\r\n\t\t}\r\n\r\n\t\tstr = str.replace(/^\\n{1,}/,'').replace(/\\n{1,}/g,\"\\n\");\r\n\t\treturn str;\r\n}\r\n\r\n\r\nvkbeautify.prototype.xmlmin = function(text, preserveComments) {\r\n\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g,\"\")\r\n\t\t\t\t\t\t\t\t\t .replace(/[ \\r\\n\\t]{1,}xmlns/g, ' xmlns');\r\n\treturn  str.replace(/>\\s{0,}</g,\"><\"); \r\n}\r\n\r\nvkbeautify.prototype.jsonmin = function(text) {\r\n\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\treturn JSON.stringify(JSON.parse(text), null, 0); \r\n\t\t\t\t\r\n}\r\n\r\nvkbeautify.prototype.cssmin = function(text, preserveComments) {\r\n\t\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g,\"\") ;\r\n\r\n\treturn str.replace(/\\s{1,}/g,' ')\r\n\t\t\t  .replace(/\\{\\s{1,}/g,\"{\")\r\n\t\t\t  .replace(/\\}\\s{1,}/g,\"}\")\r\n\t\t\t  .replace(/\\;\\s{1,}/g,\";\")\r\n\t\t\t  .replace(/\\/\\*\\s{1,}/g,\"/*\")\r\n\t\t\t  .replace(/\\*\\/\\s{1,}/g,\"*/\");\r\n}\r\n\r\nvkbeautify.prototype.sqlmin = function(text) {\r\n\treturn text.replace(/\\s{1,}/g,\" \").replace(/\\s{1,}\\(/,\"(\").replace(/\\s{1,}\\)/,\")\");\r\n}\r\n\r\nmodule.exports = new vkbeautify();\r\n\r\n"]}