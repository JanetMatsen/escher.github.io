{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","js/src/Behavior.js","js/src/Brush.js","js/src/BuildInput.js","js/src/Builder.js","js/src/CallbackManager.js","js/src/Canvas.js","js/src/CobraModel.js","js/src/DataMenu.js","js/src/DirectionArrow.js","js/src/Draw.js","js/src/KeyManager.js","js/src/Map.js","js/src/PlacedDiv.js","js/src/QuickJump.js","js/src/Scale.js","js/src/ScaleEditor.js","js/src/SearchBar.js","js/src/SearchIndex.js","js/src/Settings.js","js/src/SettingsMenu.js","js/src/TextEditInput.js","js/src/UndoStack.js","js/src/ZoomContainer.js","js/src/build.js","js/src/complete.ly.js","js/src/data_styles.js","js/src/inline.js","js/src/main.js","js/src/static.js","js/src/ui.js","js/src/utils.js","node_modules/baconjs/dist/Bacon.js","node_modules/filesaverjs/FileSaver.js","node_modules/mousetrap/mousetrap.js","node_modules/underscore/underscore.js","node_modules/vkbeautify/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","escher","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","map","undo_stack","empty_behavior","rotation_mode_enabled","rotation_drag","d3","behavior","drag","selectable_mousedown","text_label_mousedown","text_label_click","selectable_drag","node_mouseover","node_mouseout","label_mousedown","label_mouseover","label_mouseout","bezier_drag","bezier_mouseover","bezier_mouseout","reaction_label_drag","node_label_drag","turn_everything_on","toggle_selectable_click","toggle_selectable_drag","toggle_label_drag","toggle_label_mousedown","turn_everything_off","toggle_rotation_mode","on_off","show_center","sel","selectAll","data","enter","append","attr","center","x","y","on","cur","utils","d3_transform_catch","new_loc","event","dx","translate","dy","bind","current","parseFloat","style","hide_center","select","average_location","nodes","xs","ys","node_id","node","undefined","push","mean","selection_node","selection_background","callback_manager","run","selected_nodes","get_selected_nodes","Object","keys","console","warn","selected_node_ids","reactions","beziers","start_fn","d","sourceEvent","stopPropagation","drag_fn","angle","total_angle","updated","build","rotate_nodes","draw_these_nodes","node_ids","draw_these_reactions","reaction_ids","end_fn","undo_fn","these_nodes","forEach","id","redo_fn","center_fn","_get_generic_angular_drag","selectable_click","defaultPrevented","select_selectable","shiftKey","parentNode","classed","toggle_text_label_edit","text_edit_mousedown","selection","coords_a","coords","preventDefault","mouse","_get_selectable_drag","_get_bezier_drag","label_drag","_get_reaction_label_drag","_get_node_label_drag","toggle_bezier_drag","String","turn_off_drag","combine_nodes_and_draw","fixed_node_id","dragged_node_id","dragged_node","fixed_node","updated_segment_objs","connected_segments","segment_obj","segment","reaction_id","segments","segment_id","from_node_id","to_node_id","error","clone","delete_node_data","draw_everything","the_timeout","total_displacement","node_ids_to_drag","text_label_ids_to_drag","move_label","text_label_id","displacement","text_label","text_labels","indexOf","__data__","bigg_id","node_group","setTimeout","insertBefore","firstChild","grabbed","get_selected_node_ids","selected_text_label_ids","get_selected_text_label_ids","c_plus_c","move_node_and_dependents","unique_concat","draw_these_text_labels","node_to_combine_array","each","saved_dragged_node","segment_objs_moved_to_combine","updated_reactions","filter","saved_displacement","saved_node_ids","saved_text_label_ids","saved_reaction_ids","c_times_scalar","clearTimeout","move_bezier","bez","bezier_id","dragging","bezier","draw_these_beziers","_get_generic_drag","reaction","label_x","label_y","relative_to_selection","rel","location","saved_d","saved_location","get_center","angle_for_event","saved_angle","saved_center","Behavior","make_class","prototype","is_enabled","insert_after","brush_sel","insert_before_node","nextSibling","enabled","toggle","selection_brush","setup_selection_brush","remove","selectable_selection","size_and_location","canvas","width","height","brush_fn","svg","brush","scale","identity","domain","shift_key_on","extent","target","sx","sy","clear","Brush","zoom_container","settings","new_sel","placed_div","PlacedDiv","hide","c","completely","backgroundColor","input","text","hide_dropdown","default_angle","direction_arrow","DirectionArrow","set_rotation","setup_map_callbacks","setup_zoom_callbacks","target_coords","set","selected_node","is_active","reload","show_dropdown","hide_target","count","place_at_selected","is_visible","toggle_start_reaction_listener","_","isNull","reload_at_selected","place","set_status","show","clear_escape","key_manager","add_escape_listener","blur","repaint","setText","focus","hideDropDown","deselect_text_labels","select_single_node","set_location","starting_from_scratch","already_drawn","drawn_id","cobra_model","show_names","get_option","allow_duplicates","options","cobra_reactions","cobra_metabolites","metabolites","has_data_on_reactions","selected_m_name","reaction_data","reaction_data_styles","name","bold_mets_in_str","str","mets","replace","RegExp","join","reaction_suggestions","reaction_name","show_r_name","met_bigg_id","html","data_string","matches","met_id","show_met_names","show_gene_names","flatten","genes","g_obj","reaction_string","CobraModel","build_reaction_string","reversibility","lower_bound","upper_bound","concat","sort_fn","Math","abs","toLowerCase","sort","complete","check_and_build","new_reaction_from_scratch","get_rotation","new_reaction_for_metabolite","onEnter","onChange","start_reaction_listener","deselect_nodes","show_target","BuildInput","map_data","model_data","embedded_css","builder_embed","datum","__builder__","set_options","menu","scroll_behavior","use_3d_transform","check_browser","enable_editing","enable_keys","enable_search","fill_screen","zoom_to_element","full_screen_button","ignore_bootstrap","starting_reaction","never_ask_before_quit","unique_map_id","primary_metabolite_radius","secondary_metabolite_radius","marker_radius","gene_font_size","hide_secondary_metabolites","show_gene_reaction_rules","hide_all_labels","reaction_styles","reaction_compare_style","reaction_scale","type","color","size","reaction_no_data_color","reaction_no_data_size","gene_data","and_method_in_gene_reaction_rule","metabolite_data","metabolite_styles","metabolite_compare_style","metabolite_scale","metabolite_no_data_color","metabolite_no_data_size","identifiers_on_map","highlight_missing","allow_building_duplicate_reactions","cofactors","first_load_callback","check_for_parent_tag","set_option","option","new_value","conditional_options","Settings","streams","onValue","val","has","reduce","has_found","scale_el","set_conditional","CallbackManager","load_model","load_map","_update_data","status_bus","new_behavior","set_scroll_behavior","draw_all_nodes","draw_all_reactions","select_none","should_update_data","from_cobra_json","isUndefined","remove_child_nodes","ZoomContainer","zoomed_sel","Map","from_data","build_input","text_edit_input","TextEditInput","_setup_modes","menu_div","search_bar_div","button_div","search_bar","SearchBar","search_index","settings_bar","settings_div","SettingsMenu","slice","_get_keys","assigned_keys","input_list","update","_set_up_menu","_set_up_button_panel","element_id","zoom_to_reaction","zoom_to_node","zoom_extent_canvas","get_size","start_coords","zoom_extent_nodes","_setup_status","_setup_quick_jump","zoom_mode","view_mode","_setup_confirm_before_exit","_set_mode","mode","_toggle_direction_buttons","toggle_pan_drag","toggle_resize","build_mode","brush_mode","rotate_mode","text_mode","set_reaction_data","set_gene_data","clear_gene_reaction_rules","set_metabolite_data","update_model","update_map","kind","should_draw","make_gene_data_object","all_reactions","extend","data_styles","import_and_check","met_data_object","reaction_data_object","gene_data_object","update_metabolite_data","update_reaction_data","apply_metabolite_data_to_map","apply_reaction_data_to_map","apply_gene_data_to_map","update_model_timer","delay","apply_metabolite_data","apply_reaction_data","apply_gene_data","menu_selection","load_map_for_file","check_map","map_name","load_model_for_file","load_reaction_data_for_file","load_metabolite_data_for_file","load_gene_data_for_file","ui","dropdown_menu","button","key","save","key_text","assign","load","fn","pre_fn","failure_fn","save_svg","save_png","clear_map","model_menu","convert_map","clear_model","disable_model_clear_convert","dropdown","data_menu","load_reaction_data","accept_csv","clear_reaction_data","divider","clear_gene_data","clear_metabolite_data","disable_clears","edit_menu","undo","redo","toggle_primary","cycle_primary","select_all","invert_selection","view_menu","zoom_in","zoom_out","extent_nodes","extent_canvas","search","full_screen","toggle_beziers","show_settings","select_button","$","find","ids","this_id","b_id","button_selection","menu_option","button_panel","individual_button","icon","tooltip","radio_button_group","direction_buttons","button_group","direction_arrow_left","direction_arrow_right","direction_arrow_up","direction_arrow_down","status_bar","status","load_fn","new_map_name","quick_jump_path","callback","confirm","url","name_to_url","json","quick_jump","QuickJump","was_enabled","zoom","zoom_on","load_metabolite_data","load_gene_data","ignore_with_input","delete","delete_selected","delete_del","toggle_selected_node_primary","cycle_primary_node","right","down","left","up","onbeforeunload","Builder","callbacks","this_arg","pass_args","Array","arguments","a_name","split_name","split","apply","resize_enabled","setup","stop_propagation","transform_string","current_transform","tr","ldragresize","oldx","min","dragbar_width","mouse_node","mouse_node_mult","rect","top","bottom","rdragresize","dragx","max","tdragresize","oldy","bdragresize","dragy","drag_right","origin","drag_left","drag_top","drag_bottom","Canvas","stoichiometries","is_reversible","format","number","reactant_bits","product_bits","the_metabolite","coefficient","from_exported_data","model","the_id","gene_ids","genes_for_gene_reaction_rule","gene_reaction_rule","gene_id","gene","met","styles","compare_style","apply_reaction_data_to_reactions","apply_metabolite_data_to_nodes","gene_data_obj","apply_gene_data_to_reactions","model_for_export","load_with_files","files","select_sel","update_callback","addEventListener","load_datafile","value","file","this_file","load_the_file","list","getdatafiles","datafiles","empty","path_for_arrow","arrow_container","arrow","_setup_drag","transform","rotate","rotation","displace_rotation","d_rotation","b","d_angle","to_degrees","create_membrane","enter_selection","update_membrane","update_selection","create_reaction","create_reaction_label","update_reaction","drawn_nodes","defs","update_reaction_label","draw_a_nested_object","create_segment","update_segment","group","identifiers_in_tooltip","label_mousedown_fn","label_mouseover_fn","label_mouseout_fn","label","all_genes_g","show_gene_string","gene_string","show_gene_reaction_rule","gene_string_for_data","gene_g","exit","should_size","should_color","no_data_size","no_data_color","primary_r","secondary_r","get_arrow_size","reaction_size","isNaN","get_disp","arrow_size","node_is_primary","arrow_height","start","end","b1","b2","disp","from_node_coefficient","direction","displaced_coords","to_node_coefficient","curve","show_missing","reaction_color","arrowheads","node_type","get_angle","loc","show_arrowhead_flux","stoichiometry_labels","labels","disp_factor","rotate_coords","create_bezier","update_bezier","show_beziers","drag_behavior","mouseover","mouseout","drawn_reactions","seg_data","segment_d","create_node","metabolite_groups","update_node","has_data_on_nodes","mousedown_fn","click_fn","mouseover_fn","mouseout_fn","label_drag_behavior","hideNode","marker_r","metabolite_data_styles","no_data_style","node_label","should_scale","metabolite_size","should_color_data","metabolite_color","create_text_label","update_text_label","reaction_arrow_displacement","displace","check_undefined","new_x","new_y","hyp","distance","Draw","ctrl_equals_cmd","mousetrap","Mousetrap","isBoolean","stopCallback","_add_cmd","key_ar","isArray","new_ar","k","reset","key_id","assigned_key","key_to_bind","input_blocking","add_enter_listener","one_time","add_key_listener","key_name","unbind","KeyManager","css","canvas_size_and_loc","map_id","map_description","generate_map_id","setup_defs","setup_containers","largest_ids","Scale","calc_data_stats","connect_to_settings","get_data_statistics","UndoStack","draw","SearchIndex","beziers_enabled","rotation_on","listen_for_full_screen","get_largest_id","obj","current_largest","parseInt","Date","now","toString","n_id","insert","r_id","g_id","segments_to_delete","s_id","from_node","to_node","midpoint","c_minus_c","label_id","new_beziers_for_reactions","largest_segment_id","reset_containers","time","_status_timer","has_cobra_model","draw_all_text_labels","draw_beziers","clear_deleted","draw_all_beziers","clear_deleted_reactions","reaction_subset","object_slice_for_ids_ref","update_fn","draw_an_object","bezier_ids","bezier_ids_for_reaction_ids","clear_deleted_segments","clear_deleted_beziers","clear_deleted_nodes","node_subset","create_fn","text_label_ids","clear_deleted_text_labels","text_label_subset","bezier_subset","hide_beziers","has_data","data_statistics","on_array","array","same","vals","quartiles","funcs","ar","new_val","get_selected_text_labels","selected_text_labels","select_metabolite_with_id","node_selection","selected","classable_node","classable_selection","node_count","out","select_text_label","text_label_selection","p","delete_selectable","segments_and_reactions_for_nodes","segment_objs_w_segments","saved_nodes","saved_segment_objs_w_segments","saved_reactions","saved_text_labels","delete_and_draw","segment_objs","delete_segment_data","delete_reaction_data","delete_text_label_data","changed_r_scale","changed_m_scale","extend_nodes","extend_reactions","reaction_ids_to_draw","seg_id","seg_o","new_beziers_for_segments","scale_changed","found","so","bez_id","bezier_id_for_segment_id","extend_and_draw_metabolite","new_nodes","selected_node_id","cobra_reaction","reactant_ids","coeff","metabolite_id","metabolite","label_d","reaction_redo","reaction_undo","new_reactions","reaction_bigg_id","apply_undo_redo","extend_and_draw_reaction","new_beziers","new_coords","translate_off_screen","new_reaction","saved_beziers","reactions_to_draw","connected_anchor_ids","segment_info","connected_anchor_id","related_node_ids","conn_met_id","conn_node","a_selected_node_id","nodes_to_draw","last_i","last_node","last_is_primary","last_coords","last_segment","last_segment_info","primary_node_id","last_bezier","related_node_id","this_is_primary","these_coords","this_segment_info","this_segment","this_bezier","old_connected_segments","new_connected_segments","go","reaction_ids_to_draw_o","these_reactions","segment_ids_for_reactions","segment_obj_w_segment","these_ids","new_text_label","edit_text_label","saved_value","edit_and_draw","record_id","margin","_zoom_extent","new_zoom","new_pos","go_to","zoom_to_text_label","highlight_reaction","highlight","highlight_node","highlight_text_label","full_screen_event","document","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","full_screen_listener","unlisten_for_full_screen","removeEventListener","full_screen_on","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","download_json","map_for_export","homepage","schema","new_segment","attrs","new_node","t_id","canvas_el","new_canvas_el","save_map","callback_before","callback_after","map_type","window_scale","window_translate","mouse_node_size_and_trans","w","h","_go_to_svg","hidden_sel","download_svg","download_png","reactions_not_found","reaction_attrs","met_nodes_not_found","metabolite_attrs","model_reaction_id","model_reaction","model_metabolite_id","model_metabolite","n_reactions_not_found","n_met_nodes_not_found","status_delay","div","map_size","load_callback","selector","url_comp","parse_url_components","default_value","view_options","change_map","success","replace_state_for_map_name","reset_selection","selectedIndex","href","history","replaceState","linear","x_size","y_size","clamp","scale_path","path","x_fn","y_fn","match","p0","p1","p2","reg","p3","p4","p5","p6","scale_decimals","scale_fn","precision","sort_scale","stats","sorted","v","color_range","size_range","range","update_metabolite","changed","grad_id","unique_string","input_width","input_height","data_not_loaded","input_label_group","nd","no_data_container","add_group","trash_group","input_group","gradient","pickers_group","no_data","update_no_data","bar_w","bar_h","x_disp","_data_not_loaded","sc","sc_size","bring_to_front","d2","get_this_val","set_scale","sorted_domain","frac","stops","pickers","new_d","buf","floor","invert","trashes","add","last_ind","j","th","inputs","disabled","stat_types","opts","sind","label_w","ins","ScaleEditor","container","previous","next","counter","results","on_input_fn","_drop_duplicates","debounce","uniq","item","comp_keys","clear_next","clear_previous","index","record","overwrite","check_record","substring","re","exec","bacon","Bus","force_update_bus","Observable","convert_to_conditional_stream","_convert_to_conditional_stream","force_update_with_bus","_force_update_with_bus","busses","_create_conditional_setting","bus","stream","status_stream","is_not_hold_event","not","toProperty","is_not_first_clear","scan","is_not_first_hold","combined","combineAsArray","held","flatMap","fromArray","unheld","merge","initial_value","hold_changes","abandon_changes","accept_changes","toggle_abs_and_apply_data","background","box","view_gui","rse","style_gui","mse","clear_enter","abs_callback","cell","style_cells","get_styles","checked","option_name","string","boolean_options","pan","active_target","_accept_changes","_add_and_edit","stack_size","stack","oldest","newest","end_of_stack","top_of_stack","_incr","_decr","css3_transform_container","_scroll_behavior","_use_3d_transform","_pan_drag_on","_zoom_behavior","_zoom_timeout","_svg_scale","_svg_translate","_update_scroll","set_use_3d_transform","contains","err","log","wheel_fn","ev","sensitivity","returnValue","get_directional_disp","wheel_delta","delta","the_delt","new_translate","wheelDeltaX","deltaX","wheelDeltaY","deltaY","translate_array","_go_to_3d","svg_scale","svg_translate","n_scale","n_translate","tranform","_clear_3d","defer","zoom_by","amount","shift","PI","new_reaction_id","selected_node_coords","reaction_length","main_axis","anchor_distance","reactant_ranks","product_ranks","reactant_count","product_count","reaction_is_reversed","formula","new_metabolite","carbons","Infinity","decompartmentalize","max_rank","old","primary_reactant_index","primary_product_index","is_primary","new_anchors","anchors","dis","anchor_ids","new_id","general_node_type","new_anchor_groups","from_id","to_id","new_segment_id","reverse_flux","primary_index","met_loc","calculate_new_metabolite_coordinates","new_node_id","circle","Boolean","metabolites_array","rotate_around","coord","updated_node_ids","updated_reaction_ids","move_node_and_labels","tbez","is_reversed","ds","draw_at_index","b1_strength","b2_strength","w2","secondary_dis","num_slots","de","reaction_axis","new_label","seg_bez","these","config","calculateWidthForText","spacer","createElement","visibility","position","outline","padding","border","whiteSpace","fontSize","fontFamily","fontWeight","body","appendChild","innerHTML","getBoundingClientRect","get_document","get_window","promptInnerHTML","hintColor","dropDownBorderColor","dropDownZIndex","dropDownOnHoverBackgroundColor","txtInput","spellcheck","txtHint","cloneNode","borderColor","boxShadow","verticalAlign","wrapper","prompt","overflow","marginLeft","dropDown","textAlign","zIndex","cursor","borderStyle","borderWidth","overflowX","overflowY","createDropDownController","elem","rows","ix","oldIndex","current_row","onMouseOver","onMouseOut","onDblClick","onmouseselection","refresh","token","vph","innerHeight","documentElement","clientHeight","distanceToTop","distanceToBottom","divRow","onmouseover","onmouseout","onmousedown","ondblclick","__hint","rs","display_limit","divRow2","maxHeight","move","step","get_current_row","dropDownController","leftSide","registerOnTextChangeOldValue","get_hint","onArrowDown","onArrowUp","onTab","startFrom","hint","getText","optionsLength","registerOnTextChange","txt","handler","keyDownHandler","keyCode","m","hasTextChanged","align_gene_data_to_reactions","aligned","null_val","first_gene_id","this_gene_data","existing_d","pnt","check","array_to_object","float_for_data","check_finite","isFinite","take_abs","diff","fold","log2_fold","_parse_float_or_null","fs","reverse_flux_for_data","rule","gene_values","null_or_d","out_text","genes_found","replace_gene_in_rule","RETURN_ARG","new_str","any_num","any","EMPTY_LINES","TRAILING_NEWLINE","result","text_for_data","csv_converter","csv_rows","converted","row","AND_OR","ALL_PARENS","unique_strings_array","evaluate_gene_reaction_rule","curr_val","all_null","new_curr_val","EXCESS_PARENS","OR_EXPRESSION","nums","OR","sum","AND_EXPRESSION","AND","num","Number","escape_reg_exp","ESCAPE_REG","space_or_par_start","space_or_par_finish","escaped","r_data","version","DataMenu","static","load_map_model_from_url","map_download_url","model_download_url","local_index","opt","map_path","_get_path","model_name","model_path","hasOwnProperty","encodeURIComponent","organism","_button_with_sel","set_button","s2","pull_right","ul","li","link","set_json_or_csv_input_button","set_json_input_button","post_fn","load_json","click","load_json_or_csv","_check_filesaver","Blob","alert","defaults","must_be_float","has_key","hasChildNodes","removeChild","lastChild","load_css","css_path","ends_with","suffix","load_files","files_to_load","final_callback","remaining","is_internal","constructor","args","instance","container_sel","parent_node_selector","children_selector","object","id_key","create_function","update_function","exit_function","draw_object","make_array_ref","object_data_key","make_array","it","compare_arrays","a1","a2","arr","column","nk","isObject","mapObject","obj1","obj2","attrname","arrays","new_array","func","wait","immediate","timeout","context","later","callNow","object_slice_for_ids","subset","coords1","coords2","scalar","JSON","stringify","blob","saveAs","File","FileReader","FileList","reader","onload","parse","onabort","onerror","readAsText","debug_event","onload_function","errors","csv","parseRows","svg_sel","do_beautify","xml","XMLSerializer","serializeToString","vkbeautify","getContext","svg_size","getBBox","svg_width","svg_height","base_image","Image","src","btoa","fillStyle","fillRect","drawImage","toBlob","rotate_coords_recursive","coords_array","rot","cos","sin","denominator","numerator","atan","radians","point","gamma","atan2","beta","sqrt","pow","names","compartmentalize","compartment_id","no_compartment","avg","median","half","random_characters","possible","charAt","random","el","tag","tagName","download_url","the_window","query","vars","pair","decodeURIComponent","ownerDocument","defaultView","transform_attr","browser","tem","ua","navigator","userAgent","M","test","appName","appVersion","splice","Source","obs","sync","lazy","queue","ConsumingSource","BufferingSource","Desc","method","Some","Event","eventIdCounter","Next","valueF","eager","isFunction","_isNext","valueInternal","Initial","End","desc","idCounter","initialDesc","CompositeUnsubscribe","ss","unsubscribe","unsubscribed","subscriptions","starting","Dispatcher","_subscribe","_handleEvent","subscribe","handleEvent","pushing","ended","prevError","unsubSrc","EventStream","assertFunction","dispatcher","registerObs","PropertyDispatcher","property","None","currentValueRootId","propertyEnded","Property","unsubAll","subscribeAll","guardedSink","sink","Bacon","valueAndEnd","endEvent","_slice","Exception","nop","former","cloneArray","assert","message","condition","assertObservableIsProperty","_isObservable","_isProperty","assertEventStream","_isEventStream","assertObservable","isObservable","assertArray","assertNoArguments","prop","inherit","child","parent","hasProp","ctor","indexWhere","head","always","negate","tail","filtered","toArray","last","all","without","seed","cached","_isNone","me","internals","recursionDepth","UpdateBarrier","rootEvent","waiterObs","waiters","afters","aftersIndex","flushed","afterTransaction","whenDoneWith","obsWaiters","flush","flushWaiters","deps","obsId","flushDepsOf","dep","internalDeps","inTransaction","after","currentEventId","wrappedSubscribe","unsubd","shouldUnsub","doUnsub","unsub","reply","noMore","hasWaiters","_isSource","markEnded","consume","mayHave","hasAtLeast","values","isTrigger","fromObservable","_isDesc","findDeps","describe","ref","_len","_key","withDesc","withMethodCallSupport","wrapped","_len2","_key2","methodName","makeFunctionArgs","makeFunction_","partiallyApplied","applied","_len3","_key3","toSimpleExtractor","fieldValue","toFieldExtractor","parts","partFuncs","isFieldKey","_len4","_key4","makeFunction","convertArgsToFunction","sampled","sampledBy","_ref","_ref2","toCombinator","toFieldKey","_isSome","getOrElse","get","isDefined","inspect","toOption","more","_isEvent","isEvent","isEnd","isInitial","isNext","isError","hasValue","fmap","_isInitial","toNext","initialEvent","nextEvent","toEvent","subscribeInternal","onValues","onError","onEnd","_name","withDescription","subscription","_this2","unsubMe","iterable","hasSubscribers","removeSub","pushIt","pushToSubscriptions","tmp","len","sub","unsubscribeFromSource","_this","initValue_","initValue","initSent","subbed","sendInit","toEventStream","withHandler","never","when","usage","sources","pats","patterns","patSources","constantToFunction","pat","ixs","triggerFound","needsBarrier","containsDuplicateDeps","resultStream","triggers","ends","i1","cannotSync","source","cannotMatch","nonFlattened","trigger","part","flushLater","flushWhileTriggers","pop","events","i2","_p","observables","state","checkObservable","groupSimultaneous","_len5","_key5","_len6","_key6","maybeSubSource","_this3","dispatchingId","valId","changes","_this4","_this5","constant","fromBinder","binder","eventTransformer","unbound","shouldUnbind","unbinder","_len7","_key7","_len8","_key8","argumentsToObservables","argumentsToObservablesAndFunction","_len9","_key9","_len10","_key10","combineWith","_argumentsToObservablesAndFunction","combine","other","combinator","withStateMachine","initState","fromF","newState","outputs","output","equals","isNone","skipDuplicates","isEqual","prev","awaiting","and","or","scheduler","setInterval","clearInterval","getTime","bufferWithTime","bufferWithTimeOrCount","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","schedule","onInput","onFlush","scheduled","valuesToPush","_this6","delayMs","_this7","_len11","_key11","once","unsubRight","unsubLeft","flatMap_","makeSpawner","flatMapFirst","makeObservable","root","firstOnly","limit","rootDep","childDeps","composite","spawn","checkQueue","checkEnd","__","unsubRoot","flatMapWithConcurrencyLimit","_len12","_key12","flatMapConcat","sender","bufferingThrottle","minimumInterval","newSink","subscribeInput","_this8","unsubscribeInput","plug","_this9","liftCallback","_len13","_key13","fromCallback","_len14","_key14","fromNodeCallback","_len15","_key15","combineTemplate","template","ctxStack","setValue","applyStreamValue","constantValue","mkContext","pushContext","newContext","compile","popContext","compileTemplate","rootContext","addPropertyInitValueToStream","justInitValue","mapEnd","skipErrors","takeUntil","stopper","endMarker","_event$value","flatMapLatest","delayChanges","debounceImmediate","decode","cases","resultProperty","_this10","acc","initHandled","prevTuple","tuple","doAction","doEnd","doError","doLog","_len16","_key16","endOnError","_len17","_key17","take","first","mapError","flatMapError","sampler","thisSource","samplerSource","sample","interval","_len18","_key18","eventMethods","findHandlerMethods","methodPair","addListener","fromEventTarget","eventName","_findHandlerMethods","fromEvent","fromPoll","poll","fromPromise","promise","abort","bound","then","done","groupBy","keyF","limitF","similar","limited","pushNeeded","holdWhen","valve","onHold","bufferedValues","subscribed","endIfBothEnded","toSend","asEventStream","_this11","off","jQuery","Zepto","lastEvent","_len19","_key19","mergeAll","smartSink","unsubBoth","sinks","repeatedly","repeat","generator","flag","subscribeNext","retry","retries","maxRetries","isRetryable","finished","valueStream","retriesDone","pause","sequentially","skip","skipUntil","starter","started","skipWhile","ok","_len20","_key20","slidingWindow","minValues","spies","running","spy","startWith","takeWhile","_len21","_key21","throttle","firstToPromise","PromiseCtr","_this12","Promise","resolve","reject","toPromise","initial","lateBindFirst","_len23","_key23","_len22","_key22","Function","zipAsArray","_len24","_key24","zipWith","_len25","_key25","_len26","_key26","observablesAndFunction","zip","view","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","revoker","revokeObjectURL","chrome","dispatch","filesaver","event_types","listener","auto_bom","FileSaver","no_auto_bom","object_url","target_view","blob_changed","dispatch_all","fs_error","onloadend","base64Data","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","open","abortable","create_if_not_found","create","exclusive","download","webkitSlice","TEMPORARY","getDirectory","dir","getFile","createWriter","writer","onwriteend","toURL","ABORT_ERR","write","WRITING","NOT_FOUND_ERR","FS_proto","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","content","_addEvent","attachEvent","_characterFromEvent","character","fromCharCode","which","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","_stopPropagation","cancelBubble","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","action","_keysFromString","combination","_getKeyInfo","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","element","ancestor","targetElement","_resetSequences","doNotReset","activeSequences","_sequenceLevels","_nextExpectedAction","_getMatches","sequenceName","level","_callbacks","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","srcElement","_handleKeyEvent","_ignoreNextKeyup","handleKey","_resetSequenceTimer","_resetTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","_directMap","info","_ignoreNextKeypress","_handleKey","maxLevel","processedSequenceCallback","ignoreThisKeypress","_bindMultiple","combinations",8,9,13,16,17,18,20,27,32,33,34,35,36,37,38,39,40,45,46,91,93,224,106,107,109,110,111,186,187,188,189,190,191,192,219,220,221,222,"~","!","@","#","%","^","&","*","(",")","+",":","\"","<",">","?","|","command","return","escape","plus","mod","platform","className","isContentEditable","documentMousetrap","createReduce","iterator","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","ObjProto","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","argCount","collection","accumulator","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","every","some","includes","include","fromIndex","guard","invoke","isFunc","pluck","where","findWhere","computed","lastComputed","shuffle","rand","shuffled","sortBy","criteria","indexBy","countBy","partition","pass","fail","rest","drop","compact","shallow","strict","startIndex","isArguments","difference","unique","isSorted","seen","union","intersection","argsLength","unzip","findLastIndex","low","high","mid","lastIndexOf","stop","ceil","executeBound","sourceFunc","boundFunc","callingContext","TypeError","partial","boundArgs","bindAll","memoize","hasher","cache","address","leading","trailing","timestamp","wrap","compose","times","before","hasEnumBug","propertyIsEnumerable","allKeys","pairs","functions","methods","extendOwn","pick","oiteratee","omit","props","tap","interceptor","isMatch","eq","aStack","bStack","areArrays","aCtor","bCtor","isEmpty","isString","isElement","nodeType","Int8Array","isNumber","noConflict","noop","propertyOf","accum","escapeMap","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","fallback","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","offset","variable","render","argument","chain","_chain","mixin","valueOf","toJSON","createShiftArr","space","isSubquery","parenthesisLevel","split_sql","tab","inComment","deep","sql","ar_by_quote","xmlmin","preserveComments","jsonmin","cssmin","sqlmin"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvhwrupflFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1atJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtxcrihamtjizgfile":"escher.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/** Behavior. Defines the set of click and drag behaviors for the map, and keeps track\n of which behaviors are activated.\n\n A Behavior instance has the following attributes:\n\n my_behavior.rotation_drag, my_behavior.text_label_mousedown,\n my_behavior.text_label_click, my_behavior.selectable_mousedown,\n my_behavior.selectable_click, my_behavior.selectable_drag,\n my_behavior.node_mouseover, my_behavior.node_mouseout,\n my_behavior.label_mousedown, my_behavior.label_mouseover,\n my_behavior.label_mouseout, my_behavior.bezier_drag,\n my_behavior.bezier_mouseover, my_behavior.bezier_mouseout,\n my_behavior.reaction_label_drag, my_behavior.node_label_drag,\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar build = require('./build');\n\n\nvar Behavior = utils.make_class();\n// methods\nBehavior.prototype = {\n    init: init,\n    toggle_rotation_mode: toggle_rotation_mode,\n    turn_everything_on: turn_everything_on,\n    turn_everything_off: turn_everything_off,\n    // toggle\n    toggle_selectable_click: toggle_selectable_click,\n    toggle_text_label_edit: toggle_text_label_edit,\n    toggle_selectable_drag: toggle_selectable_drag,\n    toggle_label_drag: toggle_label_drag,\n    toggle_label_mousedown: toggle_label_mousedown,\n    toggle_bezier_drag: toggle_bezier_drag,\n    // util\n    turn_off_drag: turn_off_drag,\n    // get drag behaviors\n    _get_selectable_drag: _get_selectable_drag,\n    _get_bezier_drag: _get_bezier_drag,\n    _get_reaction_label_drag: _get_reaction_label_drag,\n    _get_node_label_drag: _get_node_label_drag,\n    _get_generic_drag: _get_generic_drag,\n    _get_generic_angular_drag: _get_generic_angular_drag\n};\nmodule.exports = Behavior;\n\n\n// definitions\nfunction init(map, undo_stack) {\n    this.map = map;\n    this.undo_stack = undo_stack;\n\n    // make an empty function that can be called as a behavior and does nothing\n    this.empty_behavior = function() {};\n\n    // rotation mode operates separately from the rest\n    this.rotation_mode_enabled = false;\n    this.rotation_drag = d3.behavior.drag();\n\n    // behaviors to be applied\n    this.selectable_mousedown = null;\n    this.text_label_mousedown = null;\n    this.text_label_click = null;\n    this.selectable_drag = this.empty_behavior;\n    this.node_mouseover = null;\n    this.node_mouseout = null;\n    this.label_mousedown = null;\n    this.label_mouseover = null;\n    this.label_mouseout = null;\n    this.bezier_drag = this.empty_behavior;\n    this.bezier_mouseover = null;\n    this.bezier_mouseout = null;\n    this.reaction_label_drag = this.empty_behavior;\n    this.node_label_drag = this.empty_behavior;\n    this.turn_everything_on();\n}\nfunction turn_everything_on() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(true);\n    this.toggle_selectable_drag(true);\n    this.toggle_label_drag(true);\n    this.toggle_label_mousedown(true);\n}\nfunction turn_everything_off() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(false);\n    this.toggle_selectable_drag(false);\n    this.toggle_label_drag(false);\n    this.toggle_label_mousedown(false);\n}\n\nfunction toggle_rotation_mode(on_off) {\n    /** Listen for rotation, and rotate selected nodes.\n\n     */\n    if (on_off===undefined) {\n        this.rotation_mode_enabled = !this.rotation_mode_enabled;\n    } else {\n        this.rotation_mode_enabled = on_off;\n    }\n\n    var selection_node = this.map.sel.selectAll('.node-circle'),\n        selection_background = this.map.sel.selectAll('#canvas');\n\n    if (this.rotation_mode_enabled) {\n        this.map.callback_manager.run('start_rotation');\n\n        var selected_nodes = this.map.get_selected_nodes();\n        if (Object.keys(selected_nodes).length == 0) {\n            console.warn('No selected nodes');\n            return;\n        }\n\n        // show center\n        this.center = average_location(selected_nodes);\n        show_center.call(this);\n\n        // this.set_status('Drag to rotate.');\n        var map = this.map,\n            selected_node_ids = Object.keys(selected_nodes),\n            reactions = this.map.reactions,\n            nodes = this.map.nodes,\n            beziers = this.map.beziers;\n\n        var start_fn = function(d) {\n            // silence other listeners\n            d3.event.sourceEvent.stopPropagation();\n        },\n            drag_fn = function(d, angle, total_angle, center) {\n                var updated = build.rotate_nodes(selected_nodes, reactions,\n                                                 beziers, angle, center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            end_fn = function(d) {},\n            undo_fn = function(d, total_angle, center) {\n                // undo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, -total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            redo_fn = function(d, total_angle, center) {\n                // redo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            center_fn = function() {\n                return this.center;\n            }.bind(this);\n        this.rotation_drag = this._get_generic_angular_drag(start_fn, drag_fn, end_fn,\n                                                            undo_fn, redo_fn, center_fn,\n                                                            this.map.sel);\n        selection_background.call(this.rotation_drag);\n        this.selectable_drag = this.rotation_drag;\n    } else {\n        // turn off all listeners\n        hide_center.call(this);\n        selection_node.on('mousedown.center', null);\n        selection_background.on('mousedown.center', null);\n        selection_background.on('mousedown.drag', null);\n        selection_background.on('touchstart.drag', null);\n        this.rotation_drag = null;\n        this.selectable_drag = null;\n    }\n\n    // definitions\n    function show_center() {\n        var s = this.map.sel.selectAll('#rotation-center')\n                .data([0]),\n            enter = s.enter()\n                .append('g').attr('id', 'rotation-center');\n\n        enter.append('path').attr('d', 'M-32 0 L32 0')\n            .attr('class', 'rotation-center-line');\n        enter.append('path').attr('d', 'M0 -32 L0 32')\n            .attr('class', 'rotation-center-line');\n\n        s.attr('transform', 'translate('+this.center.x+','+this.center.y+')')\n            .attr('visibility', 'visible');\n\n        s.call(d3.behavior.drag()\n               .on('drag', function(sel) {\n                   var cur = utils.d3_transform_catch(sel.attr('transform')),\n                       new_loc = [d3.event.dx + cur.translate[0],\n                                  d3.event.dy + cur.translate[1]];\n                   sel.attr('transform', 'translate('+new_loc+')');\n                   this.center = { x: new_loc[0], y: new_loc[1] };\n               }.bind(this, s)));\n        s.on('mouseover', function() {\n            var current = parseFloat(this.selectAll('path').style('stroke-width'));\n            this.selectAll('path').style('stroke-width', current * 2 + 'px');\n        }.bind(s));\n        s.on('mouseout', function() {\n            this.selectAll('path').style('stroke-width', null);\n        }.bind(s));\n    }\n    function hide_center(sel) {\n        this.map.sel.select('#rotation-center')\n            .attr('visibility', 'hidden');\n    }\n    function average_location(nodes) {\n        var xs = [], ys = [];\n        for (var node_id in nodes) {\n            var node = nodes[node_id];\n            if (node.x !== undefined)\n                xs.push(node.x);\n            if (node.y !== undefined)\n                ys.push(node.y);\n        }\n        return { x: utils.mean(xs),\n                 y: utils.mean(ys) };\n    }\n}\n\nfunction toggle_selectable_click(on_off) {\n    /** With no argument, toggle the node click on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_mousedown === null;\n    if (on_off) {\n        var map = this.map;\n        this.selectable_mousedown = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // this.parentNode.__data__.was_selected = d3.select(this.parentNode).classed('selected');\n            // d3.select(this.parentNode).classed('selected', true);\n        };\n        this.selectable_click = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // click suppressed. This DOES have en effect.\n            if (d3.event.defaultPrevented) return;\n            // turn off the temporary selection so select_selectable\n            // works. This is a bit of a hack.\n            // if (!this.parentNode.__data__.was_selected)\n            //     d3.select(this.parentNode).classed('selected', false);\n            map.select_selectable(this, d, d3.event.shiftKey);\n            // this.parentNode.__data__.was_selected = false;\n        };\n        this.node_mouseover = function(d) {\n            d3.select(this).style('stroke-width', null);\n            var current = parseFloat(d3.select(this).style('stroke-width'));\n            if (!d3.select(this.parentNode).classed('selected'))\n                d3.select(this).style('stroke-width', current * 3 + 'px');\n        };\n        this.node_mouseout = function(d) {\n            d3.select(this).style('stroke-width', null);\n        };\n    } else {\n        this.selectable_mousedown = null;\n        this.selectable_click = null;\n        this.node_mouseover = null;\n        this.node_mouseout = null;\n        this.map.sel.select('#nodes')\n            .selectAll('.node-circle').style('stroke-width', null);\n    }\n}\n\nfunction toggle_text_label_edit(on_off) {\n    /** With no argument, toggle the text edit on mousedown on/off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     The backup state is equal to selectable_mousedown.\n\n     */\n    if (on_off===undefined) on_off = this.text_edit_mousedown == null;\n    if (on_off) {\n        var map = this.map,\n            selection = this.selection;\n        this.text_label_mousedown = function() {\n            if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // run the callback\n            var coords_a = utils.d3_transform_catch(d3.select(this).attr('transform')).translate,\n                coords = {x: coords_a[0], y: coords_a[1]};\n            map.callback_manager.run('edit_text_label', null, d3.select(this), coords);\n            d3.event.stopPropagation();\n        };\n        this.text_label_click = null;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', true);\n        // add the new-label listener\n        this.map.sel.on('mousedown.new_text_label', function(node) {\n            // silence other listeners\n            d3.event.preventDefault();\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            this.map.callback_manager.run('new_text_label', null, coords);\n        }.bind(this, this.map.sel.node()));\n    } else {\n        this.text_label_mousedown = this.selectable_mousedown;\n        this.text_label_click = this.selectable_click;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', false);\n        // remove the new-label listener\n        this.map.sel.on('mousedown.new_text_label', null);\n        this.map.callback_manager.run('hide_text_label_editor');\n    }\n}\n\nfunction toggle_selectable_drag(on_off) {\n    /** With no argument, toggle the node drag & bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_drag===this.empty_behavior;\n    if (on_off) {\n        this.selectable_drag = this._get_selectable_drag(this.map, this.undo_stack);\n        this.bezier_drag = this._get_bezier_drag(this.map, this.undo_stack);\n    } else {\n        this.selectable_drag = this.empty_behavior;\n        this.bezier_drag = this.empty_behavior;\n    }\n}\nfunction toggle_label_drag(on_off) {\n    /** With no argument, toggle the label drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_drag===this.empty_behavior;\n    if (on_off) {\n        this.reaction_label_drag = this._get_reaction_label_drag(this.map);\n        this.node_label_drag = this._get_node_label_drag(this.map);\n    } else {\n        this.reaction_label_drag = this.empty_behavior;\n        this.node_label_drag = this.empty_behavior;\n    }\n}\n\nfunction toggle_label_mousedown(on_off) {\n    /** With no argument, toggle the reaction label mousedown on or off.z\n\n     Arguments\n     ---------\n\n     on_off: A boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_mousedown==null;\n    if (on_off) {\n        var map = this.map;\n        // TODO turn this feature (reaction label selection) back on, but\n        // with correct shift key management\n        this.label_mousedown = function(d) {\n            // if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // // select reaction/node\n            // d3.select(this.parentNode.parentNode)\n            //     .each(function(d) {\n            //         var node_ids = {};\n            //         for (var seg_id in d.segments) {\n            //             ['to_node_id', 'from_node_id'].forEach(function(n) {\n            //                 node_ids[d.segments[seg_id][n]] = true;\n            //             });\n            //         }\n            //         map.sel.selectAll('.selected').classed('selected', false);\n            //         map.sel.selectAll('.node')\n            //             .classed('selected', function(d) {\n            //                 return (d.node_id in node_ids);\n            //             });\n            //     });\n            // d3.event.stopPropagation();\n        };\n        this.label_mouseover = function(d) {\n            // d3.select(this).style('fill', 'rgb(56, 56, 184)');\n        };\n        this.label_mouseout = function(d) {\n            // d3.select(this).style('fill', null);\n        };\n    } else {\n        this.label_mousedown = null;\n        this.label_mouseover = null;\n        this.label_mouseout = null;\n        this.map.sel.select('.node-label,.reaction-label')\n            .style('fill', null);\n    }\n}\n\nfunction toggle_bezier_drag(on_off) {\n    /** With no argument, toggle the bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.bezier_drag===this.empty_behavior;\n    if (on_off) {\n        this.bezier_drag = this._get_bezier_drag(this.map);\n        this.bezier_mouseover = function(d) {\n            d3.select(this).style('stroke-width', String(3)+'px');\n        };\n        this.bezier_mouseout = function(d) {\n            d3.select(this).style('stroke-width', String(1)+'px');\n        };\n    } else {\n        this.bezier_drag = this.empty_behavior;\n        this.bezier_mouseover = null;\n        this.bezier_mouseout = null;\n    }\n}\n\nfunction turn_off_drag(sel) {\n    sel.on('mousedown.drag', null);\n    sel.on('touchstart.drag', null);\n}\n\nfunction _get_selectable_drag(map, undo_stack) {\n    /** Drag the selected nodes and text labels.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        the_timeout = null,\n        total_displacement = null,\n        // for nodes\n        node_ids_to_drag = null,\n        reaction_ids = null,\n        // for text labels\n        text_label_ids_to_drag = null,\n        move_label = function(text_label_id, displacement) {\n            var text_label = map.text_labels[text_label_id];\n            text_label.x = text_label.x + displacement.x;\n            text_label.y = text_label.y + displacement.y;\n        };\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners (e.g. nodes BELOW this one)\n        d3.event.sourceEvent.stopPropagation();\n        // remember the total displacement for later\n        // total_displacement = {};\n        total_displacement = {x: 0, y: 0};\n\n        // If a text label is selected, the rest is not necessary\n        if (d3.select(this).attr('class').indexOf('label') == -1) {\n            // Note that dragstart is called even for a click event\n            var data = this.parentNode.__data__,\n                bigg_id = data.bigg_id,\n                node_group = this.parentNode;\n            // Move element to back (for the next step to work). Wait 200ms\n            // before making the move, becuase otherwise the element will be\n            // deleted before the click event gets called, and selection\n            // will stop working.\n            the_timeout = setTimeout(function() {\n                node_group.parentNode.insertBefore(node_group,node_group.parentNode.firstChild);\n            }, 200);\n            // prepare to combine metabolites\n            map.sel.selectAll('.metabolite-circle')\n                .on('mouseover.combine', function(d) {\n                    if (d.bigg_id==bigg_id && d.node_id!=data.node_id) {\n                        d3.select(this).style('stroke-width', String(12)+'px')\n                            .classed('node-to-combine', true);\n                    }\n                }).on('mouseout.combine', function(d) {\n                    if (d.bigg_id==bigg_id) {\n                        map.sel.selectAll('.node-to-combine').style('stroke-width', String(2)+'px')\n                            .classed('node-to-combine', false);\n                    }\n                });\n        }\n    });\n    behavior.on(\"drag\", function(d) {\n        // if this node is not already selected, then select this one and\n        // deselect all other nodes. Otherwise, leave the selection alone.\n        if (!d3.select(this.parentNode).classed('selected'))\n            map.select_selectable(this, d);\n\n        // get the grabbed id\n        var grabbed = {};\n        if (d3.select(this).attr('class').indexOf('label') === -1) {\n            // if it is a node\n            grabbed['type'] = 'node';\n            grabbed['id'] = this.parentNode.__data__.node_id;\n        } else {\n            // if it is a text label\n            grabbed['type'] = 'label';\n            grabbed['id'] = this.__data__.text_label_id;\n        }\n\n        var selected_node_ids = map.get_selected_node_ids(),\n            selected_text_label_ids = map.get_selected_text_label_ids();\n        node_ids_to_drag = []; text_label_ids_to_drag = [];\n        // choose the nodes and text labels to drag\n        if (grabbed['type']=='node' &&\n            selected_node_ids.indexOf(grabbed['id'])==-1) {\n            node_ids_to_drag.push(grabbed['id']);\n        } else if (grabbed['type']=='label' &&\n                   selected_text_label_ids.indexOf(grabbed['id'])==-1) {\n            text_label_ids_to_drag.push(grabbed['id']);\n        } else {\n            node_ids_to_drag = selected_node_ids;\n            text_label_ids_to_drag = selected_text_label_ids;\n        }\n        reaction_ids = [];\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy };\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        node_ids_to_drag.forEach(function(node_id) {\n            // update data\n            var node = map.nodes[node_id],\n                updated = build.move_node_and_dependents(node, node_id,\n                                                         map.reactions,\n                                                         map.beziers,\n                                                         displacement);\n            reaction_ids = utils.unique_concat([reaction_ids, updated.reaction_ids]);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        text_label_ids_to_drag.forEach(function(text_label_id) {\n            move_label(text_label_id, displacement);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        // draw\n        map.draw_these_nodes(node_ids_to_drag);\n        map.draw_these_reactions(reaction_ids);\n        map.draw_these_text_labels(text_label_ids_to_drag);\n    });\n    behavior.on(\"dragend\", function() {\n        if (node_ids_to_drag===null) {\n            // Dragend can be called when drag has not been called. In this,\n            // case, do nothing.\n            total_displacement = null;\n            node_ids_to_drag = null;\n            text_label_ids_to_drag = null;\n            reaction_ids = null;\n            the_timeout = null;\n            return;\n        }\n        // look for mets to combine\n        var node_to_combine_array = [];\n        map.sel.selectAll('.node-to-combine').each(function(d) {\n            node_to_combine_array.push(d.node_id);\n        });\n        if (node_to_combine_array.length==1) {\n            // If a node is ready for it, combine nodes\n            var fixed_node_id = node_to_combine_array[0],\n                dragged_node_id = this.parentNode.__data__.node_id,\n                saved_dragged_node = utils.clone(map.nodes[dragged_node_id]),\n                segment_objs_moved_to_combine = combine_nodes_and_draw(fixed_node_id,\n                                                                       dragged_node_id);\n            undo_stack.push(function() {\n                // undo\n                // put the old node back\n                map.nodes[dragged_node_id] = saved_dragged_node;\n                var fixed_node = map.nodes[fixed_node_id],\n                    updated_reactions = [];\n                segment_objs_moved_to_combine.forEach(function(segment_obj) {\n                    var segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                    if (segment.from_node_id==fixed_node_id) {\n                        segment.from_node_id = dragged_node_id;\n                    } else if (segment.to_node_id==fixed_node_id) {\n                        segment.to_node_id = dragged_node_id;\n                    } else {\n                        console.error('Segment does not connect to fixed node');\n                    }\n                    // removed this segment_obj from the fixed node\n                    fixed_node.connected_segments = fixed_node.connected_segments.filter(function(x) {\n                        return !(x.reaction_id==segment_obj.reaction_id && x.segment_id==segment_obj.segment_id);\n                    });\n                    if (updated_reactions.indexOf(segment_obj.reaction_id)==-1)\n                        updated_reactions.push(segment_obj.reaction_id);\n                });\n                map.draw_these_nodes([dragged_node_id]);\n                map.draw_these_reactions(updated_reactions);\n            }, function () {\n                // redo\n                combine_nodes_and_draw(fixed_node_id, dragged_node_id);\n            });\n\n        } else {\n            // otherwise, drag node\n\n            // add to undo/redo stack\n            // remember the displacement, dragged nodes, and reactions\n            var saved_displacement = utils.clone(total_displacement),\n                // BUG TODO this variable disappears!\n                // Happens sometimes when you drag a node, then delete it, then undo twice\n                saved_node_ids = utils.clone(node_ids_to_drag),\n                saved_text_label_ids = utils.clone(text_label_ids_to_drag),\n                saved_reaction_ids = utils.clone(reaction_ids);\n            undo_stack.push(function() {\n                // undo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   utils.c_times_scalar(saved_displacement, -1));\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id,\n                               utils.c_times_scalar(saved_displacement, -1));\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            }, function () {\n                // redo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   saved_displacement);\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id, saved_displacement);\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            });\n        }\n\n        // stop combining metabolites\n        map.sel.selectAll('.metabolite-circle')\n            .on('mouseover.combine', null)\n            .on('mouseout.combine', null);\n\n        // clear the timeout\n        clearTimeout(the_timeout);\n\n        // clear the shared variables\n        total_displacement = null;\n        node_ids_to_drag = null;\n        text_label_ids_to_drag = null;\n        reaction_ids = null;\n        the_timeout = null;\n    });\n    return behavior;\n\n    // definitions\n    function combine_nodes_and_draw(fixed_node_id, dragged_node_id) {\n        var dragged_node = map.nodes[dragged_node_id],\n            fixed_node = map.nodes[fixed_node_id],\n            updated_segment_objs = [];\n        dragged_node.connected_segments.forEach(function(segment_obj) {\n            // change the segments to reflect\n            var segment;\n            try {\n                segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segment ' + segment_obj.segment_id);\n                return;\n            }\n            if (segment.from_node_id==dragged_node_id) segment.from_node_id = fixed_node_id;\n            else if (segment.to_node_id==dragged_node_id) segment.to_node_id = fixed_node_id;\n            else {\n                console.error('Segment does not connect to dragged node');\n                return;\n            }\n            // moved segment_obj to fixed_node\n            fixed_node.connected_segments.push(segment_obj);\n            updated_segment_objs.push(utils.clone(segment_obj));\n            return;\n        });\n        // delete the old node\n        map.delete_node_data([dragged_node_id]);\n        // turn off the class\n        map.sel.selectAll('.node-to-combine').classed('node-to-combine', false);\n        // draw\n        map.draw_everything();\n        // return for undo\n        return updated_segment_objs;\n    }\n}\nfunction _get_bezier_drag(map) {\n    var move_bezier = function(reaction_id, segment_id, bez, bezier_id, displacement) {\n        var segment = map.reactions[reaction_id].segments[segment_id];\n        segment[bez] = utils.c_plus_c(segment[bez], displacement);\n        map.beziers[bezier_id].x = segment[bez].x;\n        map.beziers[bezier_id].y = segment[bez].y;\n    },\n        start_fn = function(d) {\n            d.dragging = true;\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        end_fn = function(d) {\n            d.dragging = false;\n        },\n        undo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_reaction_label_drag(map) {\n    var move_label = function(reaction_id, displacement) {\n        var reaction = map.reactions[reaction_id];\n        reaction.label_x = reaction.label_x + displacement.x;\n        reaction.label_y = reaction.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.reaction_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_node_label_drag(map) {\n    var move_label = function(node_id, displacement) {\n        var node = map.nodes[node_id];\n        node.label_x = node.label_x + displacement.x;\n        node.label_y = node.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.node_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_nodes([d.node_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\n\nfunction _get_generic_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn\n\n     undo_fn\n\n     redo_fn\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_displacement,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_displacement = { x: 0, y: 0 };\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] };\n\n        // remember the displacement\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        drag_fn(d, displacement, total_displacement, location);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_displacement = utils.clone(total_displacement), // BUG TODO this variable disappears!\n            saved_location = { x: d3.mouse(rel)[0],\n                               y: d3.mouse(rel)[1] };\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_displacement, saved_location);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_displacement, saved_location);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n\nfunction _get_generic_angular_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                   get_center, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo. Supplies angles in\n     place of displacements.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn:\n\n     undo_fn:\n\n     redo_fn:\n\n     get_center:\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_angle,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_angle = 0;\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] },\n            center = get_center(),\n            angle = utils.angle_for_event(displacement,\n                                          location,\n                                          center);\n        // remember the displacement\n        total_angle = total_angle + angle;\n        drag_fn(d, angle, total_angle, center);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_angle = total_angle,\n            saved_center = utils.clone(get_center());\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_angle, saved_center);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_angle, saved_center);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n","/** Brush. Define a brush to select elements in a map.\n\n Arguments\n ---------\n\n selection: A d3 selection to place the brush in.\n\n is_enabled: Whether to turn the brush on.\n\n map: An instance of escher.Map.\n\n insert_after: A d3 selector string to choose the svg element that the brush\n will be inserted after. Often a canvas element (e.g. '.canvas-group').\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Brush = utils.make_class();\nBrush.prototype = {\n    init: init,\n    toggle: toggle,\n    setup_selection_brush: setup_selection_brush\n};\nmodule.exports = Brush;\n\n\n// definitions\nfunction init(selection, is_enabled, map, insert_after) {\n    this.brush_sel = selection.append('g')\n        .attr('id', 'brush-container');\n    var node = this.brush_sel.node(),\n        insert_before_node = selection.select(insert_after).node().nextSibling;\n    if (!(node===insert_before_node))\n        node.parentNode.insertBefore(node, insert_before_node);\n    this.enabled = is_enabled;\n    this.map = map;\n};\n\n/**\n * Returns a boolean for the on/off status of the brush\n * @return {Boolean}\n */\nfunction brush_is_enabled () {\n    return this.map.sel.select('.brush').empty()\n}\n\n/**\n * Turn the brush on or off\n * @param {Boolean} on_off\n */\nfunction toggle (on_off) {\n    if (on_off === undefined) on_off = !this.enabled\n    if (on_off) {\n        this.selection_brush = this.setup_selection_brush()\n    } else {\n        this.brush_sel.selectAll('.brush').remove()\n    }\n}\n\nfunction setup_selection_brush() {\n    var selection = this.brush_sel\n    var selectable_selection = this.map.sel.selectAll('#nodes,#text-labels')\n    var size_and_location = this.map.canvas.size_and_location()\n    var width = size_and_location.width\n    var height = size_and_location.height\n    var x = size_and_location.x\n    var y = size_and_location.y\n\n    // clear existing brush\n    selection.selectAll('g').remove()\n\n    var brush_fn = d3.svg.brush()\n            .x(d3.scale.identity().domain([ x, x + width ]))\n            .y(d3.scale.identity().domain([ y, y + height ]))\n            .on('brush', function() {\n                var shift_key_on = d3.event.sourceEvent.shiftKey\n                var extent = d3.event.target.extent()\n                var selection\n                if (shift_key_on) {\n                    // when shift is pressed, ignore the currently selected nodes\n                    selection = selectable_selection\n                        .selectAll('.node:not(.selected),.text-label:not(.selected)')\n                } else {\n                    // otherwise, brush all nodes\n                    selection = selectable_selection\n                        .selectAll('.node,.text-label')\n                }\n                selection.classed('selected', function(d) {\n                    var sx = d.x\n                    var sy = d.y\n                    return (extent[0][0] <= sx && sx < extent[1][0] &&\n                            extent[0][1] <= sy && sy < extent[1][1] &&\n                            d3.select(this).select('.node-circle').style('visibility') !== 'hidden')\n                    // TODO this is a bit of a hack. The best behavior would be:\n                    // When secondary metabolites are hidden, have them 'follow'\n                    // the nearest attached multimarker. If that multimarker\n                    // moves, the metabolite moves. If that multimarker is\n                    // deleted, the metabolite is deleted.\n                })\n            })\n            .on('brushend', function() {\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target)\n            })\n    var brush = selection.append('g')\n            .attr('class', 'brush')\n            .call(brush_fn)\n\n    // turn off the mouse crosshair\n    selection.selectAll('.background')\n        .classed('cursor-grab', false)\n        .classed('cursor-grabbing', false)\n        .style('cursor', null)\n\n    return brush\n}\n","/** BuildInput\n\n Arguments\n ---------\n\n selection: A d3 selection for the BuildInput.\n\n map: A Map instance.\n\n zoom_container: A ZoomContainer instance.\n\n settings: A Settings instance.\n\n  */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar completely = require('./complete.ly');\nvar DirectionArrow = require('./DirectionArrow');\nvar CobraModel = require('./CobraModel');\n\nvar _ = require('underscore');\n\n\nvar BuildInput = utils.make_class();\nBuildInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    toggle: toggle,\n    show_dropdown: show_dropdown,\n    hide_dropdown: hide_dropdown,\n    place_at_selected: place_at_selected,\n    place: place,\n    reload_at_selected: reload_at_selected,\n    reload: reload,\n    toggle_start_reaction_listener: toggle_start_reaction_listener,\n    hide_target: hide_target,\n    show_target: show_target\n};\nmodule.exports = BuildInput;\n\n\nfunction init(selection, map, zoom_container, settings) {\n    // set up container\n    var new_sel = selection.append('div').attr('id', 'rxn-input');\n    this.placed_div = PlacedDiv(new_sel, map, {x: 240, y: 0});\n    this.placed_div.hide();\n\n    // set up complete.ly\n    var c = completely(new_sel.node(), { backgroundColor: '#eee' });\n\n    d3.select(c.input);\n    this.completely = c;\n    // close button\n    new_sel.append('button').attr('class', \"button input-close-button\")\n        .text(\"×\")\n        .on('mousedown', function() { this.hide_dropdown(); }.bind(this));\n\n    // map\n    this.map = map;\n    // set up the reaction direction arrow\n    var default_angle = 90; // degrees\n    this.direction_arrow = new DirectionArrow(map.sel);\n    this.direction_arrow.set_rotation(default_angle);\n    this.setup_map_callbacks(map);\n\n    // zoom container\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n\n    // settings\n    this.settings = settings;\n\n    // toggle off\n    this.toggle(false);\n    this.target_coords = null;\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('select_metabolite_with_id.input', function(selected_node, coords) {\n        if (this.is_active) {\n            this.reload(selected_node, coords, false);\n            this.show_dropdown(coords);\n        }\n        this.hide_target();\n    }.bind(this));\n    map.callback_manager.set('select_selectable.input', function(count, selected_node, coords) {\n        this.hide_target();\n        if (count == 1 && this.is_active && coords) {\n            this.reload(selected_node, coords, false);\n            this.show_dropdown(coords);\n        } else {\n            this.toggle(false);\n        }\n    }.bind(this));\n    map.callback_manager.set('deselect_nodes', function() {\n        this.direction_arrow.hide();\n        this.hide_dropdown();\n    }.bind(this));\n\n    // svg export\n    map.callback_manager.set('before_svg_export', function() {\n        this.direction_arrow.hide();\n        this.hide_target();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.input', function() {\n        if (this.is_active) {\n            this.place_at_selected();\n        }\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n    if (this.is_active) {\n        this.toggle_start_reaction_listener(true);\n        if (_.isNull(this.target_coords))\n            this.reload_at_selected();\n        else\n            this.placed_div.place(this.target_coords);\n        this.show_dropdown();\n        this.map.set_status('Click on the canvas or an existing metabolite');\n        this.direction_arrow.show();\n    } else {\n        this.toggle_start_reaction_listener(false);\n        this.hide_dropdown();\n        this.map.set_status(null);\n        this.direction_arrow.hide();\n    }\n}\n\nfunction show_dropdown(coords) {\n    // escape key\n    this.clear_escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this.hide_dropdown();\n        }.bind(this), true);\n    // dropdown\n    this.completely.input.blur();\n    this.completely.repaint();\n    this.completely.setText('');\n    this.completely.input.focus();\n}\n\nfunction hide_dropdown() {\n    // escape key\n    if (this.clear_escape) this.clear_escape();\n    this.clear_escape = null;\n    // dropdown\n    this.placed_div.hide();\n    this.completely.input.blur();\n    this.completely.hideDropDown();\n}\n\nfunction place_at_selected() {\n    /** Place autocomplete box at the first selected node. */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    this.place(coords);\n}\n\nfunction place(coords) {\n    this.placed_div.place(coords);\n    this.direction_arrow.set_location(coords);\n    this.direction_arrow.show();\n}\n\nfunction reload_at_selected() {\n    /** Reload data for autocomplete box and redraw box at the first selected\n     node. */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return false;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    // reload the reaction input\n    this.reload(selected_node, coords, false);\n    return true;\n}\n\nfunction reload(selected_node, coords, starting_from_scratch) {\n    /** Reload data for autocomplete box and redraw box at the new\n     coordinates. */\n\n    // try finding the selected node\n    if (!starting_from_scratch && !selected_node) {\n        console.error('No selected node, and not starting from scratch');\n        return;\n    }\n\n    this.place(coords);\n\n    if (this.map.cobra_model===null) {\n        this.completely.setText('Cannot add: No model.');\n        return;\n    }\n\n    // settings\n    var show_names = this.settings.get_option('identifiers_on_map') == 'name',\n        allow_duplicates = this.settings.get_option('allow_building_duplicate_reactions');\n\n    // Find selected\n    var options = [],\n        cobra_reactions = this.map.cobra_model.reactions,\n        cobra_metabolites = this.map.cobra_model.metabolites,\n        reactions = this.map.reactions,\n        has_data_on_reactions = this.map.has_data_on_reactions,\n        reaction_data = this.map.reaction_data,\n        reaction_data_styles = this.map.reaction_data_styles,\n        selected_m_name = (selected_node ? (show_names ? selected_node.name : selected_node.bigg_id) : ''),\n        bold_mets_in_str = function(str, mets) {\n            return str.replace(new RegExp('(^| )(' + mets.join('|') + ')($| )', 'g'),\n                               '$1<b>$2</b>$3');\n        };\n\n    // for reactions\n    var reaction_suggestions = {};\n    for (var bigg_id in cobra_reactions) {\n        var reaction = cobra_reactions[bigg_id],\n            reaction_name = reaction.name,\n            show_r_name = (show_names ? reaction_name : bigg_id);\n\n        // ignore drawn reactions\n        if ((!allow_duplicates) && already_drawn(bigg_id, reactions))\n            continue;\n\n        // check segments for match to selected metabolite\n        for (var met_bigg_id in reaction.metabolites) {\n\n            // if starting with a selected metabolite, check for that id\n            if (starting_from_scratch || met_bigg_id == selected_node.bigg_id) {\n\n                // don't add suggestions twice\n                if (bigg_id in reaction_suggestions) continue;\n\n                var met_name = cobra_metabolites[met_bigg_id].name;\n\n                if (has_data_on_reactions) {\n                    options.push({ reaction_data: reaction.data,\n                                   html: ('<b>' + show_r_name + '</b>' +\n                                          ': ' +\n                                          reaction.data_string),\n                                   matches: [show_r_name],\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                } else {\n                    // get the metabolite names or IDs\n                    var mets = {},\n                        show_met_names = [],\n                        met_id;\n                    if (show_names) {\n                        for (met_id in reaction.metabolites) {\n                            var name = cobra_metabolites[met_id].name;\n                            mets[name] = reaction.metabolites[met_id];\n                            show_met_names.push(name);\n                        }\n                    } else {\n                        mets = utils.clone(reaction.metabolites);\n                        for (met_id in reaction.metabolites) {\n                            show_met_names.push(met_id);\n                        }\n                    }\n                    var show_gene_names = _.flatten(reaction.genes.map(function(g_obj) {\n                        return [g_obj.name, g_obj.bigg_id];\n                    }));\n                    // get the reaction string\n                    var reaction_string = CobraModel.build_reaction_string(mets,\n                                                                           reaction.reversibility,\n                                                                           reaction.lower_bound,\n                                                                           reaction.upper_bound);\n                    options.push({ html: ('<b>' + show_r_name + '</b>' +\n                                          '\\t' +\n                                          bold_mets_in_str(reaction_string, [selected_m_name])),\n                                   matches: [show_r_name].concat(show_met_names).concat(show_gene_names),\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                }\n            }\n        }\n    }\n\n    // Generate the array of reactions to suggest and sort it\n    var sort_fn;\n    if (has_data_on_reactions) {\n        sort_fn = function(x, y) {\n            return Math.abs(y.reaction_data) - Math.abs(x.reaction_data);\n        };\n    } else {\n        sort_fn = function(x, y) {\n            return (x.html.toLowerCase() < y.html.toLowerCase() ? -1 : 1);\n        };\n    }\n    options = options.sort(sort_fn);\n    // set up the box with data\n    var complete = this.completely;\n    complete.options = options;\n\n    // TODO test this behavior\n    // if (strings_to_display.length==1) complete.setText(strings_to_display[0]);\n    // else complete.setText(\"\");\n    complete.setText('');\n\n    var direction_arrow = this.direction_arrow,\n        check_and_build = function(id) {\n            if (id !== null) {\n                // make sure the selected node exists, in case changes were made in the meantime\n                if (starting_from_scratch) {\n                    this.map.new_reaction_from_scratch(id,\n                                                       coords,\n                                                       direction_arrow.get_rotation());\n                } else {\n                    if (!(selected_node.node_id in this.map.nodes)) {\n                        console.error('Selected node no longer exists');\n                        this.hide_dropdown();\n                        return;\n                    }\n                    this.map.new_reaction_for_metabolite(id,\n                                                         selected_node.node_id,\n                                                         direction_arrow.get_rotation());\n                }\n            }\n        }.bind(this);\n    complete.onEnter = function(id) {\n        this.setText('');\n        this.onChange('');\n        check_and_build(id);\n    };\n\n    //definitions\n    function already_drawn(bigg_id, reactions) {\n        for (var drawn_id in reactions) {\n            if (reactions[drawn_id].bigg_id==bigg_id)\n                return true;\n        }\n        return false;\n    };\n}\n\nfunction toggle_start_reaction_listener(on_off) {\n    /** Toggle listening for a click to place a new reaction on the canvas. */\n    if (on_off===undefined)\n        this.start_reaction_listener = !this.start_reaction_listener;\n    else if (this.start_reaction_listener==on_off)\n        return;\n    else\n        this.start_reaction_listener = on_off;\n\n    if (this.start_reaction_listener) {\n        this.map.sel.on('click.start_reaction', function(node) {\n            // TODO fix this hack\n            if (this.direction_arrow.dragging) return;\n            // reload the reaction input\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            // unselect metabolites\n            this.map.deselect_nodes();\n            this.map.deselect_text_labels();\n            // reload the reaction input\n            this.reload(null, coords, true);\n            // generate the target symbol\n            this.show_target(this.map, coords);\n            // show the dropdown\n            this.show_dropdown(coords);\n        }.bind(this, this.map.sel.node()));\n        this.map.sel.classed('start-reaction-cursor', true);\n    } else {\n        this.map.sel.on('click.start_reaction', null);\n        this.map.sel.classed('start-reaction-cursor', false);\n        this.hide_target();\n    }\n}\n\nfunction hide_target() {\n    if (this.target_coords)\n        this.map.sel.selectAll('.start-reaction-target').remove();\n    this.target_coords = null;\n}\n\nfunction show_target(map, coords) {\n    var s = map.sel.selectAll('.start-reaction-target').data([12, 5]);\n    s.enter().append('circle')\n        .classed('start-reaction-target', true)\n        .attr('r', function(d) { return d; })\n        .style('stroke-width', 4);\n    s.style('visibility', 'visible')\n        .attr('transform', 'translate('+coords.x+','+coords.y+')');\n    this.target_coords = coords;\n}\n","/**\n * For documentation of this class, see docs/javascript_api.rst\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar BuildInput = require('./BuildInput');\nvar ZoomContainer = require('./ZoomContainer');\nvar Map = require('./Map');\nvar CobraModel = require('./CobraModel');\nvar Brush = require('./Brush');\nvar CallbackManager = require('./CallbackManager');\nvar ui = require('./ui');\nvar SearchBar = require('./SearchBar');\nvar Settings = require('./Settings');\nvar SettingsMenu = require('./SettingsMenu');\nvar TextEditInput = require('./TextEditInput');\nvar QuickJump = require('./QuickJump');\nvar data_styles = require('./data_styles');\nvar builder_embed = require('./inline').builder_embed;\nvar _ = require('underscore')\n\nvar Builder = utils.make_class();\nBuilder.prototype = {\n    init: init,\n    load_map: load_map,\n    load_model: load_model,\n    _set_mode: _set_mode,\n    view_mode: view_mode,\n    build_mode: build_mode,\n    brush_mode: brush_mode,\n    zoom_mode: zoom_mode,\n    rotate_mode: rotate_mode,\n    text_mode: text_mode,\n    set_reaction_data: set_reaction_data,\n    set_metabolite_data: set_metabolite_data,\n    set_gene_data: set_gene_data,\n    _update_data: _update_data,\n    _toggle_direction_buttons: _toggle_direction_buttons,\n    _set_up_menu: _set_up_menu,\n    _set_up_button_panel: _set_up_button_panel,\n    _setup_status: _setup_status,\n    _setup_quick_jump: _setup_quick_jump,\n    _setup_modes: _setup_modes,\n    _get_keys: _get_keys,\n    _setup_confirm_before_exit: _setup_confirm_before_exit\n};\nmodule.exports = Builder;\n\n\nfunction init(map_data, model_data, embedded_css, selection, options) {\n\n    // defaults\n    if (!selection)\n        selection = d3.select('body').append('div');\n    if (!options)\n        options = {};\n    if (!embedded_css)\n        embedded_css = builder_embed;\n\n    this.map_data = map_data;\n    this.model_data = model_data;\n    this.embedded_css = embedded_css;\n    this.selection = selection;\n\n    // apply this object as data for the selection\n    this.selection.datum(this)\n    this.selection.__builder__ = this\n\n    // set defaults\n    this.options = utils.set_options(options, {\n        // view options\n        menu: 'all',\n        scroll_behavior: 'pan',\n        use_3d_transform: !utils.check_browser('safari'),\n        enable_editing: true,\n        enable_keys: true,\n        enable_search: true,\n        fill_screen: false,\n        zoom_to_element: null,\n        full_screen_button: false,\n        ignore_bootstrap: false,\n        // map, model, and styles\n        starting_reaction: null,\n        never_ask_before_quit: false,\n        unique_map_id: null,\n        primary_metabolite_radius: 20,\n        secondary_metabolite_radius: 10,\n        marker_radius: 5,\n        gene_font_size: 18,\n        hide_secondary_metabolites: false,\n        show_gene_reaction_rules: false,\n        hide_all_labels: false,\n        // applied data\n        // reaction\n        reaction_data: null,\n        reaction_styles: ['color', 'size', 'text'],\n        reaction_compare_style: 'log2_fold',\n        reaction_scale: [{ type: 'min', color: '#c8c8c8', size: 12 },\n                         { type: 'median', color: '#9696ff', size: 20 },\n                         { type: 'max', color: '#ff0000', size: 25 }],\n        reaction_no_data_color: '#dcdcdc',\n        reaction_no_data_size: 8,\n        // gene\n        gene_data: null,\n        and_method_in_gene_reaction_rule: 'mean',\n        // metabolite\n        metabolite_data: null,\n        metabolite_styles: ['color', 'size', 'text'],\n        metabolite_compare_style: 'log2_fold',\n        metabolite_scale: [ { type: 'min', color: '#fffaf0', size: 20 },\n                            { type: 'median', color: '#f1c470', size: 30 },\n                            { type: 'max', color: '#800000', size: 40 } ],\n        metabolite_no_data_color: '#ffffff',\n        metabolite_no_data_size: 10,\n        // View and build options\n        identifiers_on_map: 'bigg_id',\n        highlight_missing: false,\n        allow_building_duplicate_reactions: false,\n        cofactors: ['atp', 'adp', 'nad', 'nadh', 'nadp', 'nadph', 'gtp', 'gdp',\n                    'h', 'coa', 'ump', 'h20', 'ppi'],\n        // Callbacks\n        first_load_callback: null\n    }, {\n        primary_metabolite_radius: true,\n        secondary_metabolite_radius: true,\n        marker_radius: true,\n        gene_font_size: true,\n        reaction_no_data_size: true,\n        metabolite_no_data_size: true\n    });\n\n    // check the location\n    if (utils.check_for_parent_tag(this.selection, 'svg')) {\n        throw new Error('Builder cannot be placed within an svg node '+\n                        'becuase UI elements are html-based.');\n    }\n\n    // Initialize the settings\n    var set_option = function(option, new_value) {\n        this.options[option] = new_value;\n    }.bind(this),\n        get_option = function(option) {\n            return this.options[option];\n        }.bind(this),\n        // the options that are erased when the settings menu is canceled\n        conditional_options = ['hide_secondary_metabolites', 'show_gene_reaction_rules',\n                               'hide_all_labels', 'scroll_behavior', 'reaction_styles',\n                               'reaction_compare_style', 'reaction_scale',\n                               'reaction_no_data_color', 'reaction_no_data_size',\n                               'and_method_in_gene_reaction_rule', 'metabolite_styles',\n                               'metabolite_compare_style', 'metabolite_scale',\n                               'metabolite_no_data_color', 'metabolite_no_data_size',\n                               'identifiers_on_map', 'highlight_missing',\n                               'allow_building_duplicate_reactions',];\n    this.settings = new Settings(set_option, get_option, conditional_options);\n\n    // check the scales have max and min\n    ['reaction_scale', 'metabolite_scale'].forEach(function(name) {\n        this.settings.streams[name].onValue(function(val) {\n            ['min', 'max'].forEach(function(type) {\n                var has = val.reduce(function(has_found, scale_el) {\n                    return has_found || (scale_el.type == type);\n                }, false);\n                if (!has) {\n                    val.push({ type: type, color: '#ffffff', size: 10 });\n                    this.settings.set_conditional(name, val);\n                }\n            }.bind(this));\n        }.bind(this));\n    }.bind(this));\n    // TODO warn about repeated types in the scale\n\n    // set up this callback manager\n    this.callback_manager = CallbackManager();\n    if (this.options.first_load_callback !== null)\n        this.callback_manager.set('first_load', this.options.first_load_callback);\n\n    // load the model, map, and update data in both\n    this.load_model(this.model_data, false)\n    this.load_map(this.map_data, false)\n    this._update_data(true, true)\n\n    // Setting callbacks. TODO enable atomic updates. Right now, every time the\n    // menu closes, everything is drawn.\n    this.settings.status_bus\n        .onValue(function(x) {\n            if (x === 'accepted') {\n                this._update_data(true, true, ['reaction', 'metabolite'], false)\n                if (this.zoom_container !== null) {\n                    var new_behavior = this.settings.get_option('scroll_behavior')\n                    this.zoom_container.set_scroll_behavior(new_behavior)\n                }\n                if (this.map !== null) {\n                    this.map.draw_all_nodes(false)\n                    this.map.draw_all_reactions(true, false)\n                    this.map.select_none()\n                }\n            }\n        }.bind(this))\n\n    this.callback_manager.run('first_load', this)\n}\n\nfunction load_model(model_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Check the cobra model\n    if (model_data === null)\n        this.cobra_model = null;\n    else\n        this.cobra_model = CobraModel.from_cobra_json(model_data);\n\n    if (this.map) {\n        this.map.cobra_model = this.cobra_model;\n        if (should_update_data)\n            this._update_data(true, false);\n        if (this.settings.get_option('highlight_missing'))\n            this.map.draw_all_reactions(false, false);\n    }\n\n    this.callback_manager.run('load_model', null, model_data, should_update_data);\n}\n\n/**\n * For documentation of this function, see docs/javascript_api.rst\n */\nfunction load_map(map_data, should_update_data) {\n    if (_.isUndefined(should_update_data))\n        should_update_data = true\n\n    // Begin with some definitions\n    var selectable_mousedown_enabled = true\n    var shift_key_on = false\n\n    // remove the old builder\n    utils.remove_child_nodes(this.selection)\n\n    // set up the zoom container\n    this.zoom_container = new ZoomContainer(this.selection,\n                                            this.options.scroll_behavior,\n                                            this.options.use_3d_transform,\n                                            this.options.fill_screen)\n    var zoomed_sel = this.zoom_container.zoomed_sel\n    var svg = this.zoom_container.svg\n\n    // remove the old map side effects\n    if (this.map)\n        this.map.key_manager.toggle(false)\n\n    if (map_data !== null) {\n        // import map\n        this.map = Map.from_data(map_data,\n                                 svg,\n                                 this.embedded_css,\n                                 zoomed_sel,\n                                 this.zoom_container,\n                                 this.settings,\n                                 this.cobra_model,\n                                 this.options.enable_search)\n    } else {\n        // new map\n        this.map = new Map(svg,\n                           this.embedded_css,\n                           zoomed_sel,\n                           this.zoom_container,\n                           this.settings,\n                           this.cobra_model,\n                           null,\n                           this.options.enable_search)\n    }\n    // zoom container status changes\n    this.zoom_container.callback_manager.set('svg_start', function() {\n        this.map.set_status('Drawing ...')\n    }.bind(this))\n    this.zoom_container.callback_manager.set('svg_finish', function() {\n        this.map.set_status('')\n    }.bind(this))\n\n    // set the data for the map\n    if (should_update_data)\n        this._update_data(false, true)\n\n    // set up the reaction input with complete.ly\n    this.build_input = new BuildInput(this.selection, this.map,\n                                      this.zoom_container, this.settings)\n\n    // set up the text edit input\n    this.text_edit_input = new TextEditInput(this.selection, this.map,\n                                             this.zoom_container)\n\n    // set up the Brush\n    this.brush = new Brush(zoomed_sel, false, this.map, '.canvas-group')\n    this.map.canvas.callback_manager.set('resize', function() {\n        this.brush.toggle(true)\n    }.bind(this))\n\n    // set up the modes\n    this._setup_modes(this.map, this.brush, this.zoom_container)\n\n    var s = this.selection\n            .append('div').attr('class', 'search-menu-container')\n            .append('div').attr('class', 'search-menu-container-inline'),\n        menu_div = s.append('div'),\n        search_bar_div = s.append('div'),\n        button_div = this.selection.append('div')\n\n    // set up the search bar\n    this.search_bar = new SearchBar(search_bar_div, this.map.search_index,\n                                this.map)\n    // set up the hide callbacks\n    this.search_bar.callback_manager.set('show', function() {\n        this.settings_bar.toggle(false)\n    }.bind(this))\n\n    // set up the settings\n    var settings_div = this.selection.append('div')\n    this.settings_bar = new SettingsMenu(settings_div, this.settings, this.map,\n                                         function(type, on_off) {\n                                             // temporarily set the abs type, for\n                                             // previewing it in the Settings\n                                             // menu\n                                             var o = this.options[type + '_styles']\n                                             if (on_off && o.indexOf('abs') == -1)\n                                                 o.push('abs')\n                                             else if (!on_off) {\n                                                 var i = o.indexOf('abs')\n                                                 if (i != -1)\n                                                     this.options[type + '_styles'] = o.slice(0, i).concat(o.slice(i + 1))\n                                             }\n                                             this._update_data(false, true, type)\n                                         }.bind(this))\n    this.settings_bar.callback_manager.set('show', function() {\n        this.search_bar.toggle(false)\n    }.bind(this))\n\n    // set up key manager\n    var keys = this._get_keys(this.map, this.zoom_container,\n                              this.search_bar, this.settings_bar,\n                              this.options.enable_editing,\n                              this.options.full_screen_button)\n    this.map.key_manager.assigned_keys = keys\n    // tell the key manager about the reaction input and search bar\n    this.map.key_manager.input_list = [this.build_input, this.search_bar,\n                                       this.settings_bar, this.text_edit_input]\n    // make sure the key manager remembers all those changes\n    this.map.key_manager.update()\n    // turn it on/off\n    this.map.key_manager.toggle(this.options.enable_keys)\n\n    // set up menu and status bars\n    if (this.options.menu === 'all') {\n        if (this.options.ignore_bootstrap)\n            console.error('Cannot create the dropdown menus if ignore_bootstrap = true')\n        else\n            this._set_up_menu(menu_div, this.map, this.map.key_manager, keys,\n                              this.options.enable_editing, this.options.enable_keys,\n                              this.options.full_screen_button)\n    }\n\n    this._set_up_button_panel(button_div, keys, this.options.enable_editing,\n                              this.options.enable_keys,\n                              this.options.full_screen_button,\n                              this.options.menu, this.options.ignore_bootstrap)\n\n    // setup selection box\n    if (this.options.zoom_to_element) {\n        var type = this.options.zoom_to_element.type,\n            element_id = this.options.zoom_to_element.id\n        if (typeof type === 'undefined' || ['reaction', 'node'].indexOf(type) == -1)\n            throw new Error('zoom_to_element type must be \"reaction\" or \"node\"')\n        if (typeof element_id === 'undefined')\n            throw new Error('zoom_to_element must include id')\n        if (type == 'reaction')\n            this.map.zoom_to_reaction(element_id)\n        else if (type == 'node')\n            this.map.zoom_to_node(element_id)\n    } else if (map_data !== null) {\n        this.map.zoom_extent_canvas()\n    } else {\n        if (this.options.starting_reaction !== null && this.cobra_model !== null) {\n            // Draw default reaction if no map is provided\n            var size = this.zoom_container.get_size()\n            var start_coords = { x: size.width / 2,\n                                 y: size.height / 4 }\n            this.map.new_reaction_from_scratch(this.options.starting_reaction, start_coords, 90)\n            this.map.zoom_extent_nodes()\n        } else {\n            this.map.zoom_extent_canvas()\n        }\n    }\n\n    // status in both modes\n    var status = this._setup_status(this.selection, this.map)\n\n    // set up quick jump\n    this._setup_quick_jump(this.selection)\n\n    // start in zoom mode for builder, view mode for viewer\n    if (this.options.enable_editing)\n        this.zoom_mode()\n    else\n        this.view_mode()\n\n    // confirm before leaving the page\n    if (this.options.enable_editing)\n        this._setup_confirm_before_exit()\n\n    // draw\n    this.map.draw_everything()\n}\n\nfunction _set_mode(mode) {\n    this.search_bar.toggle(false);\n    // input\n    this.build_input.toggle(mode=='build');\n    this.build_input.direction_arrow.toggle(mode=='build');\n    if (this.options.menu=='all' && this.options.enable_editing)\n        this._toggle_direction_buttons(mode=='build');\n    // brush\n    this.brush.toggle(mode=='brush');\n    // zoom\n    this.zoom_container.toggle_pan_drag(mode=='zoom' || mode=='view');\n    // resize canvas\n    this.map.canvas.toggle_resize(mode=='zoom' || mode=='brush');\n    // Behavior. Be careful of the order becuase rotation and\n    // toggle_selectable_drag both use Behavior.selectable_drag.\n    if (mode == 'rotate') {\n        this.map.behavior.toggle_selectable_drag(false); // before toggle_rotation_mode\n        this.map.behavior.toggle_rotation_mode(true);\n    } else {\n        this.map.behavior.toggle_rotation_mode(mode=='rotate'); // before toggle_selectable_drag\n        this.map.behavior.toggle_selectable_drag(mode=='brush');\n    }\n    this.map.behavior.toggle_selectable_click(mode=='build' || mode=='brush');\n    this.map.behavior.toggle_label_drag(mode=='brush');\n    this.map.behavior.toggle_label_mousedown(mode=='brush');\n    this.map.behavior.toggle_text_label_edit(mode=='text');\n    this.map.behavior.toggle_bezier_drag(mode=='brush');\n    // edit selections\n    if (mode=='view' || mode=='text')\n        this.map.select_none();\n    if (mode=='rotate')\n        this.map.deselect_text_labels();\n    this.map.draw_everything();\n}\n\nfunction view_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('view_mode');\n    this._set_mode('view');\n}\n\nfunction build_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('build_mode');\n    this._set_mode('build');\n}\n\nfunction brush_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('brush_mode');\n    this._set_mode('brush');\n}\n\nfunction zoom_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('zoom_mode');\n    this._set_mode('zoom');\n}\n\nfunction rotate_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('rotate_mode');\n    this._set_mode('rotate');\n}\n\nfunction text_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('text_mode');\n    this._set_mode('text');\n}\n\nfunction set_reaction_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.reaction_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_gene_data(data, clear_gene_reaction_rules) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (clear_gene_reaction_rules) // default undefined\n        this.settings.set_conditional('show_gene_reaction_rules', false);\n    this.options.gene_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_metabolite_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.metabolite_data = data;\n    this._update_data(true, true, 'metabolite');\n    this.map.set_status('');\n}\n\nfunction _update_data(update_model, update_map, kind, should_draw) {\n    /** Set data and settings for the model.\n\n     Arguments\n     ---------\n\n     update_model: (Boolean) Update data for the model.\n\n     update_map: (Boolean) Update data for the map.\n\n     kind: (Optional, Default: all) An array defining which data is being\n     updated that can include any of: ['reaction', 'metabolite'].\n\n     should_draw: (Optional, Default: true) Whether to redraw the update\n     sections of the map.\n\n     */\n\n    // defaults\n    if (kind === undefined)\n        kind = ['reaction', 'metabolite'];\n    if (should_draw === undefined)\n        should_draw = true;\n\n    var update_metabolite_data = (kind.indexOf('metabolite') != -1),\n        update_reaction_data = (kind.indexOf('reaction') != -1),\n        met_data_object,\n        reaction_data_object,\n        gene_data_object;\n\n    // -------------------\n    // First map, and draw\n\n    // metabolite data\n    if (update_metabolite_data && update_map && this.map !== null) {\n        met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                       'metabolite_data');\n        this.map.apply_metabolite_data_to_map(met_data_object);\n        if (should_draw)\n            this.map.draw_all_nodes(false);\n    }\n\n    // reaction data\n    if (update_reaction_data) {\n        if (this.options.reaction_data !== null && update_map && this.map !== null) {\n            reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                'reaction_data');\n            this.map.apply_reaction_data_to_map(reaction_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (this.options.gene_data !== null && update_map && this.map !== null) {\n            gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                     this.cobra_model, this.map);\n            this.map.apply_gene_data_to_map(gene_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (update_map && this.map !== null) {\n            // clear the data\n            this.map.apply_reaction_data_to_map(null);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        }\n    }\n\n    // ----------------------------------------------------------------\n    // Then the model, after drawing. Delay by 5ms so the the map draws\n    // first.\n    // ----------------------------------------------------------------\n\n    // if this function runs again, cancel the previous model update\n    if (this.update_model_timer)\n        clearTimeout(this.update_model_timer);\n\n    var delay = 5;\n    this.update_model_timer = setTimeout(function() {\n\n        // metabolite_data\n        if (update_metabolite_data && update_model && this.cobra_model !== null) {\n            // if we haven't already made this\n            if (!met_data_object)\n                met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                               'metabolite_data');\n            this.cobra_model.apply_metabolite_data(met_data_object,\n                                                   this.options.metabolite_styles,\n                                                   this.options.metabolite_compare_style);\n        }\n\n        // reaction data\n        if (update_reaction_data) {\n            if (this.options.reaction_data !== null && update_model && this.cobra_model !== null) {\n                // if we haven't already made this\n                if (!reaction_data_object)\n                    reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                        'reaction_data');\n                this.cobra_model.apply_reaction_data(reaction_data_object,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            } else if (this.options.gene_data !== null && update_model && this.cobra_model !== null) {\n                if (!gene_data_object)\n                    gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                             this.cobra_model, this.map);\n                this.cobra_model.apply_gene_data(gene_data_object,\n                                                 this.options.reaction_styles,\n                                                 this.options.identifiers_on_map,\n                                                 this.options.reaction_compare_style,\n                                                 this.options.and_method_in_gene_reaction_rule);\n            } else if (update_model && this.cobra_model !== null) {\n                // clear the data\n                this.cobra_model.apply_reaction_data(null,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            }\n        }\n\n        // callback\n        this.callback_manager.run('update_data', null, update_model, update_map, kind, should_draw);\n\n    }.bind(this), delay);\n\n    // definitions\n    function make_gene_data_object(gene_data, cobra_model, map) {\n        var all_reactions = {};\n        if (cobra_model !== null)\n            utils.extend(all_reactions, cobra_model.reactions);\n        // extend, overwrite\n        if (map !== null)\n            utils.extend(all_reactions, map.reactions, true);\n\n        // this object has reaction keys and values containing associated genes\n        return data_styles.import_and_check(gene_data, 'gene_data', all_reactions);\n    }\n}\n\nfunction _set_up_menu(menu_selection, map, key_manager, keys, enable_editing,\n                      enable_keys, full_screen_button, ignore_bootstrap) {\n    var menu = menu_selection.attr('id', 'menu')\n            .append('ul')\n            .attr('class', 'nav nav-pills')\n    // map dropdown\n    ui.dropdown_menu(menu, 'Map')\n        .button({ key: keys.save,\n                  text: 'Save map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+S)' : null) })\n        .button({ text: 'Load map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+O)' : null),\n                  input: { assign: key_manager.assigned_keys.load,\n                           key: 'fn',\n                           fn: load_map_for_file.bind(this),\n                           pre_fn: function() {\n                               map.set_status('Loading map ...')\n                           },\n                           failure_fn: function() {\n                               map.set_status('')\n                           }}\n                })\n        .button({ key: keys.save_svg,\n                  text: 'Export as SVG',\n                  key_text: (enable_keys ? ' (Ctrl+Shift+S)' : null) })\n        .button({ key: keys.save_png,\n                  text: 'Export as PNG',\n                  key_text: (enable_keys ? ' (Ctrl+Shift+P)' : null) })\n        .button({ key: keys.clear_map,\n                  text: 'Clear map' })\n    // model dropdown\n    var model_menu = ui.dropdown_menu(menu, 'Model')\n            .button({ text: 'Load COBRA model JSON',\n                      key_text: (enable_keys ? ' (Ctrl+M)' : null),\n                      input: { assign: key_manager.assigned_keys.load_model,\n                               key: 'fn',\n                               fn: load_model_for_file.bind(this),\n                               pre_fn: function() {\n                                   map.set_status('Loading model ...')\n                               },\n                               failure_fn: function() {\n                                   map.set_status('')\n                               } }\n                    })\n            .button({ id: 'convert_map',\n                      key: keys.convert_map,\n                      text: 'Update names and gene reaction rules using model' })\n            .button({ id: 'clear_model',\n                      key: keys.clear_model,\n                      text: 'Clear model' })\n    // disable the clear and convert buttons\n    var disable_model_clear_convert = function() {\n        model_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if ((d.id == 'clear_model' || d.id == 'convert_map') &&\n                    this.cobra_model === null)\n                    return true\n                return null\n            }.bind(this))\n    }.bind(this)\n    disable_model_clear_convert()\n    this.callback_manager.set('load_model', disable_model_clear_convert)\n\n    // data dropdown\n    var data_menu = ui.dropdown_menu(menu, 'Data')\n            .button({ input: { assign: key_manager.assigned_keys.load_reaction_data,\n                               key: 'fn',\n                               fn: load_reaction_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading reaction data ...')\n                               },\n                               failure_fn: function() {\n                                   map.set_status('')\n                               }},\n                      text: 'Load reaction data' })\n            .button({ key: keys.clear_reaction_data,\n                      text: 'Clear reaction data' })\n            .divider()\n            .button({ input: { fn: load_gene_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading gene data ...')\n                               },\n                               failure_fn: function() {\n                                   map.set_status('')\n                               }},\n                      text: 'Load gene data' })\n            .button({ key: keys.clear_gene_data,\n                      text: 'Clear gene data' })\n            .divider()\n            .button({ input: { fn: load_metabolite_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading metabolite data ...')\n                               },\n                               failure_fn: function() {\n                                   map.set_status('')\n                               }},\n                      text: 'Load metabolite data' })\n            .button({ key: keys.clear_metabolite_data,\n                      text: 'Clear metabolite data' })\n\n    // update the buttons\n    var disable_clears = function() {\n        data_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if (!d) return null\n                if (d.text == 'Clear reaction data' && this.options.reaction_data === null)\n                    return true\n                if (d.text == 'Clear gene data' && this.options.gene_data === null)\n                    return true\n                if (d.text == 'Clear metabolite data' && this.options.metabolite_data === null)\n                    return true\n                return null\n            }.bind(this))\n    }.bind(this)\n    disable_clears()\n    this.callback_manager.set('update_data', disable_clears)\n\n    // edit dropdown\n    var edit_menu = ui.dropdown_menu(menu, 'Edit', true)\n    if (enable_editing) {\n        edit_menu\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-menu-button',\n                      text: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-menu-button',\n                      text: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-menu-button',\n                      text: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-menu-button',\n                      text: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-menu-button',\n                      text: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) })\n            .divider()\n            .button({ key: keys.delete,\n                      text: 'Delete',\n                      key_text: (enable_keys ? ' (Del)' : null) })\n            .button({ key: keys.undo,\n                      text: 'Undo',\n                      key_text: (enable_keys ? ' (Ctrl+Z)' : null) })\n            .button({ key: keys.redo,\n                      text: 'Redo',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+Z)' : null) })\n            .button({ key: keys.toggle_primary,\n                      text: 'Toggle primary/secondary',\n                      key_text: (enable_keys ? ' (P)' : null) })\n            .button({ key: keys.cycle_primary,\n                      text: 'Rotate reactant locations',\n                      key_text: (enable_keys ? ' (C)' : null) })\n            .button({ key: keys.select_all,\n                      text: 'Select all',\n                      key_text: (enable_keys ? ' (Ctrl+A)' : null) })\n            .button({ key: keys.select_none,\n                      text: 'Select none',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+A)' : null) })\n            .button({ key: keys.invert_selection,\n                      text: 'Invert selection' })\n    } else {\n        edit_menu.button({ key: keys.view_mode,\n                           id: 'view-mode-menu-button',\n                           text: 'View mode' })\n    }\n\n    // view dropdown\n    var view_menu = ui.dropdown_menu(menu, 'View', true)\n            .button({ key: keys.zoom_in,\n                      text: 'Zoom in',\n                      key_text: (enable_keys ? ' (Ctrl and +)' : null) })\n            .button({ key: keys.zoom_out,\n                      text: 'Zoom out',\n                      key_text: (enable_keys ? ' (Ctrl and -)' : null) })\n            .button({ key: keys.extent_nodes,\n                      text: 'Zoom to nodes',\n                      key_text: (enable_keys ? ' (Ctrl+0)' : null) })\n            .button({ key: keys.extent_canvas,\n                      text: 'Zoom to canvas',\n                      key_text: (enable_keys ? ' (Ctrl+1)' : null) })\n            .button({ key: keys.search,\n                      text: 'Find',\n                      key_text: (enable_keys ? ' (Ctrl+F)' : null) })\n    if (full_screen_button) {\n        view_menu.button({ key: keys.full_screen,\n                           text: 'Full screen',\n                           key_text: (enable_keys ? ' (Ctrl+2)' : null) })\n    }\n    if (enable_editing) {\n        view_menu.button({ key: keys.toggle_beziers,\n                           id: 'bezier-button',\n                           text: 'Show control points',\n                           key_text: (enable_keys ? ' (B)' : null) })\n        map.callback_manager\n            .set('toggle_beziers.button', function(on_off) {\n                menu.select('#bezier-button').select('.dropdown-button-text')\n                    .text((on_off ? 'Hide' : 'Show') +\n                          ' control points' +\n                          (enable_keys ? ' (B)' : ''))\n            })\n    }\n    view_menu.divider()\n        .button({ key: keys.show_settings,\n                  text: 'Settings',\n                  key_text: (enable_keys ? ' (Ctrl+,)' : null) })\n\n    // help\n    menu.append('a')\n        .attr('class', 'help-button')\n        .attr('target', '#')\n        .attr('href', 'https://escher.readthedocs.org')\n        .text('?')\n\n    // set up mode callbacks\n    var select_button = function(id) {\n        // toggle the button\n        $(this.selection.node()).find('#' + id)\n            .button('toggle')\n\n        // menu buttons\n        var ids = ['zoom-mode-menu-button', 'brush-mode-menu-button',\n                   'build-mode-menu-button', 'rotate-mode-menu-button',\n                   'view-mode-menu-button', 'text-mode-menu-button']\n        ids.forEach(function(this_id) {\n            var b_id = this_id.replace('-menu', '')\n            this.selection.select('#' + this_id)\n                .select('span')\n                .classed('glyphicon', b_id == id)\n                .classed('glyphicon-ok', b_id == id)\n        }.bind(this))\n    }\n    this.callback_manager.set('zoom_mode', select_button.bind(this, 'zoom-mode-button'))\n    this.callback_manager.set('brush_mode', select_button.bind(this, 'brush-mode-button'))\n    this.callback_manager.set('build_mode', select_button.bind(this, 'build-mode-button'))\n    this.callback_manager.set('rotate_mode', select_button.bind(this, 'rotate-mode-button'))\n    this.callback_manager.set('view_mode', select_button.bind(this, 'view-mode-button'))\n    this.callback_manager.set('text_mode', select_button.bind(this, 'text-mode-button'))\n\n    // definitions\n    function load_map_for_file(error, map_data) {\n        /** Load a map. This reloads the whole builder. */\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Error loading map: ' + error, 2000)\n            return\n        }\n\n        try {\n            check_map(map_data)\n            this.load_map(map_data)\n            this.map.set_status('Loaded map ' + map_data[0].map_name, 3000)\n        } catch (e) {\n            console.warn(e)\n            this.map.set_status('Error loading map: ' + e, 2000)\n        }\n\n        // definitions\n        function check_map(data) {\n            /** Perform a quick check to make sure the map is mostly valid.\n\n             */\n\n            if (!('map_id' in data[0] && 'reactions' in data[1] &&\n                  'nodes' in data[1] && 'canvas' in data[1]))\n                throw new Error('Bad map data.')\n        }\n    }\n    function load_model_for_file(error, data) {\n        /** Load a cobra model. Redraws the whole map if the\n         highlight_missing option is true.\n\n         */\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Error loading model: ' + error, 2000)\n            return\n        }\n\n        try {\n            this.load_model(data, true)\n            this.build_input.toggle(false)\n            if ('id' in data)\n                this.map.set_status('Loaded model ' + data.id, 3000)\n            else\n                this.map.set_status('Loaded model (no model id)', 3000)\n        } catch (e) {\n            console.warn(e)\n            this.map.set_status('Error loading model: ' + e, 2000)\n        }\n\n    }\n    function load_reaction_data_for_file(error, data) {\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Could not parse file as JSON or CSV', 2000)\n            return\n        }\n        // turn off gene data\n        if (data !== null)\n            this.set_gene_data(null)\n\n        this.set_reaction_data(data)\n    }\n    function load_metabolite_data_for_file(error, data) {\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Could not parse file as JSON or CSV', 2000)\n            return\n        }\n        this.set_metabolite_data(data)\n    }\n    function load_gene_data_for_file(error, data) {\n        if (error) {\n            console.warn(error)\n            this.map.set_status('Could not parse file as JSON or CSV', 2000)\n            return\n        }\n        // turn off reaction data\n        if (data !== null)\n            this.set_reaction_data(null)\n\n        // turn on gene_reaction_rules\n        this.settings.set_conditional('show_gene_reaction_rules', true)\n\n        this.set_gene_data(data)\n    }\n}\n\nfunction _set_up_button_panel(button_selection, keys, enable_editing,\n                              enable_keys, full_screen_button, menu_option,\n                              ignore_bootstrap) {\n    var button_panel = button_selection.append('ul')\n            .attr('class', 'nav nav-pills nav-stacked')\n            .attr('id', 'button-panel')\n\n    // buttons\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_in,\n                           text: '+',\n                           icon: 'glyphicon glyphicon-plus-sign',\n                           tooltip: 'Zoom in',\n                           key_text: (enable_keys ? ' (Ctrl and +)' : null),\n                           ignore_bootstrap: ignore_bootstrap })\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_out,\n                           text: '–',\n                           icon: 'glyphicon glyphicon-minus-sign',\n                           tooltip: 'Zoom out',\n                           key_text: (enable_keys ? ' (Ctrl and -)' : null),\n                           ignore_bootstrap: ignore_bootstrap  })\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.extent_canvas,\n                           text: '↔',\n                           icon: 'glyphicon glyphicon-resize-full',\n                           tooltip: 'Zoom to canvas',\n                           key_text: (enable_keys ? ' (Ctrl+1)' : null),\n                           ignore_bootstrap: ignore_bootstrap  })\n    if (full_screen_button) {\n        ui.individual_button(button_panel.append('li'),\n            {   key: keys.full_screen,\n                text: '▣',\n                icon: 'glyphicon glyphicon-fullscreen',\n                tooltip: 'Full screen',\n                key_text: (enable_keys ? ' (Ctrl+2)' : null),\n                ignore_bootstrap: ignore_bootstrap\n            })\n    }\n\n    // mode buttons\n    if (enable_editing && menu_option === 'all') {\n        ui.radio_button_group(button_panel.append('li'))\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-button',\n                      text: 'Z',\n                      icon: 'glyphicon glyphicon-move',\n                      tooltip: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n            .button({ key: keys.brush_mode,\n                      text: 'V',\n                      id: 'brush-mode-button',\n                      icon: 'glyphicon glyphicon-hand-up',\n                      tooltip: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n            .button({ key: keys.build_mode,\n                      text: 'N',\n                      id: 'build-mode-button',\n                      icon: 'glyphicon glyphicon-plus',\n                      tooltip: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n            .button({ key: keys.rotate_mode,\n                      text: 'R',\n                      id: 'rotate-mode-button',\n                      icon: 'glyphicon glyphicon-repeat',\n                      tooltip: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n            .button({ key: keys.text_mode,\n                      text: 'T',\n                      id: 'text-mode-button',\n                      icon: 'glyphicon glyphicon-font',\n                      tooltip: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null),\n                      ignore_bootstrap: ignore_bootstrap  })\n\n        // arrow buttons\n        this.direction_buttons = button_panel.append('li')\n        var o = ui.button_group(this.direction_buttons)\n                .button({ key: keys.direction_arrow_left,\n                          text: '←',\n                          icon: 'glyphicon glyphicon-arrow-left',\n                          tooltip: 'Direction arrow (←)',\n                          ignore_bootstrap: ignore_bootstrap  })\n                .button({ key: keys.direction_arrow_right,\n                          text: '→',\n                          icon: 'glyphicon glyphicon-arrow-right',\n                          tooltip: 'Direction arrow (→)',\n                          ignore_bootstrap: ignore_bootstrap  })\n                .button({ key: keys.direction_arrow_up,\n                          text: '↑',\n                          icon: 'glyphicon glyphicon-arrow-up',\n                          tooltip: 'Direction arrow (↑)',\n                          ignore_bootstrap: ignore_bootstrap  })\n                .button({ key: keys.direction_arrow_down,\n                          text: '↓',\n                          icon: 'glyphicon glyphicon-arrow-down',\n                          tooltip: 'Direction arrow (↓)',\n                          ignore_bootstrap: ignore_bootstrap  })\n    }\n}\n\nfunction _toggle_direction_buttons(on_off) {\n    if (_.isUndefined(on_off))\n        on_off = !this.direction_buttons.style('display') === 'block'\n    this.direction_buttons.style('display', on_off ? 'block' : 'none')\n}\n\nfunction _setup_status(selection, map) {\n    var status_bar = selection.append('div').attr('id', 'status');\n    map.callback_manager.set('set_status', function(status) {\n        status_bar.html(status);\n    });\n    return status_bar;\n}\n\nfunction _setup_quick_jump(selection) {\n    // function to load a map\n    var load_fn = function(new_map_name, quick_jump_path, callback) {\n        if (this.options.enable_editing && !this.options.never_ask_before_quit) {\n            if (!(confirm(('You will lose any unsaved changes.\\n\\n' +\n                           'Are you sure you want to switch maps?')))) {\n                if (callback) callback(false)\n                return\n            }\n        }\n        this.map.set_status('Loading map ' + new_map_name + ' ...');\n        var url = utils.name_to_url(new_map_name, quick_jump_path);\n        d3.json(url, function(error, data) {\n            if (error) {\n                console.warn('Could not load data: ' + error)\n                this.map.set_status('Could not load map', 2000)\n                if (callback) callback(false)\n                return\n            }\n            // run callback before load_map so the new map has the correct\n            // quick_jump menu\n            if (callback) callback(true)\n            // now reload\n            this.load_map(data)\n            this.map.set_status('')\n        }.bind(this))\n    }.bind(this)\n\n    // make the quick jump object\n    this.quick_jump = QuickJump(selection, load_fn)\n}\n\nfunction _setup_modes(map, brush, zoom_container) {\n    // set up zoom+pan and brush modes\n    var was_enabled = {};\n    map.callback_manager.set('start_rotation', function() {\n        was_enabled.brush = brush.enabled;\n        brush.toggle(false);\n        was_enabled.zoom = zoom_container.zoom_on;\n        zoom_container.toggle_pan_drag(false);\n        was_enabled.selectable_mousedown = map.behavior.selectable_mousedown!=null;\n        map.behavior.toggle_selectable_click(false);\n        was_enabled.label_mousedown = map.behavior.label_mousedown!=null;\n        map.behavior.toggle_label_mousedown(false);\n    });\n    map.callback_manager.set('end_rotation', function() {\n        brush.toggle(was_enabled.brush);\n        zoom_container.toggle_pan_drag(was_enabled.zoom);\n        map.behavior.toggle_selectable_click(was_enabled.selectable_mousedown);\n        map.behavior.toggle_label_mousedown(was_enabled.label_mousedown);\n        was_enabled = {};\n    });\n}\n\nfunction _get_keys(map, zoom_container, search_bar, settings_bar, enable_editing, full_screen_button) {\n\n        var keys = {\n        save: {\n            key: 'ctrl+s',\n            target: map,\n            fn: map.save\n        },\n        save_svg: {\n            key: 'ctrl+shift+s',\n            target: map,\n            fn: map.save_svg\n        },\n        save_png: {\n            key: 'ctrl+shift+p',\n            target: map,\n            fn: map.save_png\n        },\n        load: {\n            key: 'ctrl+o',\n            fn: null  // defined by button\n        },\n        convert_map: {\n            target: map,\n            fn: map.convert_map\n        },\n        clear_map: {\n            target: map,\n            fn: map.clear_map\n        },\n        load_model: {\n            key: 'ctrl+m',\n            fn: null // defined by button\n        },\n        clear_model: {\n            fn: this.load_model.bind(this, null, true)\n        },\n        load_reaction_data: { fn: null }, // defined by button\n        clear_reaction_data: {\n            target: this,\n            fn: function() { this.set_reaction_data(null); }\n        },\n        load_metabolite_data: { fn: null }, // defined by button\n        clear_metabolite_data: {\n            target: this,\n            fn: function() { this.set_metabolite_data(null); }\n        },\n        load_gene_data: { fn: null }, // defined by button\n        clear_gene_data: {\n            target: this,\n            fn: function() { this.set_gene_data(null, true); }\n        },\n        zoom_in: {\n            key: 'ctrl+=',\n            target: zoom_container,\n            fn: zoom_container.zoom_in\n        },\n        zoom_out: {\n            key: 'ctrl+-',\n            target: zoom_container,\n            fn: zoom_container.zoom_out\n        },\n        extent_nodes: {\n            key: 'ctrl+0',\n            target: map,\n            fn: map.zoom_extent_nodes\n        },\n        extent_canvas: {\n            key: 'ctrl+1',\n            target: map,\n            fn: map.zoom_extent_canvas\n        },\n        search: {\n            key: 'ctrl+f',\n            fn: search_bar.toggle.bind(search_bar, true)\n        },\n        view_mode: {\n            target: this,\n            fn: this.view_mode,\n            ignore_with_input: true\n        },\n        show_settings: {\n            key: 'ctrl+,',\n            target: settings_bar,\n            fn: settings_bar.toggle\n        }\n    };\n    if (full_screen_button) {\n        utils.extend(keys, {\n            full_screen: {\n                key: 'ctrl+2',\n                target: map,\n                fn: map.full_screen\n            }\n        })\n    }\n    if (enable_editing) {\n        utils.extend(keys, {\n            build_mode: {\n                key: 'n',\n                target: this,\n                fn: this.build_mode,\n                ignore_with_input: true\n            },\n            zoom_mode: {\n                key: 'z',\n                target: this,\n                fn: this.zoom_mode,\n                ignore_with_input: true\n            },\n            brush_mode: {\n                key: 'v',\n                target: this,\n                fn: this.brush_mode,\n                ignore_with_input: true\n            },\n            rotate_mode: {\n                key: 'r',\n                target: this,\n                fn: this.rotate_mode,\n                ignore_with_input: true\n            },\n            text_mode: {\n                key: 't',\n                target: this,\n                fn: this.text_mode,\n                ignore_with_input: true\n            },\n            toggle_beziers: {\n                key: 'b',\n                target: map,\n                fn: map.toggle_beziers,\n                ignore_with_input: true\n            },\n            delete: {\n                key: 'ctrl+backspace',\n                target: map,\n                fn: map.delete_selected,\n                ignore_with_input: true\n            },\n            delete_del: {\n                key: 'del',\n                target: map,\n                fn: map.delete_selected,\n                ignore_with_input: true\n            },\n            toggle_primary: {\n                key: 'p',\n                target: map,\n                fn: map.toggle_selected_node_primary,\n                ignore_with_input: true\n            },\n            cycle_primary: {\n                key: 'c',\n                target: map,\n                fn: map.cycle_primary_node,\n                ignore_with_input: true\n            },\n            direction_arrow_right: {\n                key: 'right',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.right,\n                ignore_with_input: true\n            },\n            direction_arrow_down: {\n                key: 'down',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.down,\n                ignore_with_input: true\n            },\n            direction_arrow_left: {\n                key: 'left',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.left,\n                ignore_with_input: true\n            },\n            direction_arrow_up: {\n                key: 'up',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.up,\n                ignore_with_input: true\n            },\n            undo: {\n                key: 'ctrl+z',\n                target: map.undo_stack,\n                fn: map.undo_stack.undo\n            },\n            redo: {\n                key: 'ctrl+shift+z',\n                target: map.undo_stack,\n                fn: map.undo_stack.redo\n            },\n            select_all: {\n                key: 'ctrl+a',\n                target: map,\n                fn: map.select_all\n            },\n            select_none: {\n                key: 'ctrl+shift+a',\n                target: map,\n                fn: map.select_none\n            },\n            invert_selection: {\n                target: map,\n                fn: map.invert_selection\n            }\n        });\n    }\n    return keys;\n}\n\nfunction _setup_confirm_before_exit() {\n    /** Ask if the user wants to exit the page (to avoid unplanned refresh).\n\n     */\n\n    window.onbeforeunload = function(e) {\n        // If we haven't been passed the event get the window.event\n        e = e || window.event;\n        return  (this.options.never_ask_before_quit ? null :\n                 'You will lose any unsaved changes.');\n    }.bind(this);\n}\n","/** CallbackManager */\n\nvar utils = require('./utils');\nvar _ = require('underscore');\n\n\nvar CallbackManager = utils.make_class();\nCallbackManager.prototype = {\n    init: init,\n    set: set,\n    remove: remove,\n    run: run\n};\nmodule.exports = CallbackManager;\n\n\nfunction init() {\n\n}\n\n\nfunction set(name, fn) {\n    /** As in d3 callbacks, you can namespace your callbacks after a period:\n\n     select_metabolite.direction_arrow\n     select_metabolite.input\n\n     Both are called by select_metabolite\n\n\n     TODO add *arguments to set, as in _.defer()\n\n     */\n    if (this.callbacks===undefined) this.callbacks = {};\n    if (this.callbacks[name]===undefined) this.callbacks[name] = [];\n    this.callbacks[name].push(fn);\n\n    return this;\n}\n\n\nfunction remove(name) {\n    /** Remove a callback by name\n\n     */\n    if (this.callbacks===undefined || Object.keys(this.callbacks).length==0) {\n        console.warn('No callbacks to remove');\n    }\n    delete this.callbacks[name];\n    return this;\n}\n\n\nfunction run(name, this_arg) {\n    /** Run all callbacks that match the portion of name before the period ('.').\n\n     Arguments\n     ---------\n\n     name: The callback name, which can include a tag after a '.' to\n     specificy a particular callback.\n\n     this_arg: (Optional, Default: null) The object assigned to `this` in\n     the callback.\n\n     */\n    if (_.isUndefined(this.callbacks)) return this;\n    if (_.isUndefined(this_arg)) this_arg = null;\n    // pass all but the first (name) argument to the callback\n    var pass_args = Array.prototype.slice.call(arguments, 2);\n    // look for matching callback names\n    for (var a_name in this.callbacks) {\n        var split_name = a_name.split('.')[0];\n        if (split_name==name) {\n            this.callbacks[a_name].forEach(function(fn) {\n                fn.apply(this_arg, pass_args);\n            });\n        }\n    }\n    return this;\n}\n","/** Canvas. Defines a canvas that accepts drag/zoom events and can be resized.\n\n Canvas(selection, x, y, width, height)\n\n Adapted from http://bl.ocks.org/mccannf/1629464.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Canvas = utils.make_class();\nCanvas.prototype = {\n    init: init,\n    toggle_resize: toggle_resize,\n    setup: setup,\n    size_and_location: size_and_location\n};\nmodule.exports = Canvas;\n\n\nfunction init(selection, size_and_location) {\n    this.selection = selection;\n    this.x = size_and_location.x;\n    this.y = size_and_location.y;\n    this.width = size_and_location.width;\n    this.height = size_and_location.height;\n\n    // enable by default\n    this.resize_enabled = true;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    this.setup();\n}\n\nfunction toggle_resize(on_off) {\n    /** Turn the resize on or off\n\n     */\n    if (on_off===undefined) on_off = !this.resize_enabled;\n\n    if (on_off) {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'auto');\n    } else {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'none');\n    }\n}\n\nfunction setup() {\n    var self = this,\n        extent = {\"x\": this.width, \"y\": this.height},\n        dragbar_width = 100,\n        mouse_node_mult = 10,\n        new_sel = this.selection.append('g')\n            .classed('canvas-group', true)\n            .data([{x: this.x, y: this.y}]);\n\n    var mouse_node = new_sel.append('rect')\n            .attr('id', 'mouse-node')\n            .attr(\"width\", this.width*mouse_node_mult)\n            .attr(\"height\", this.height*mouse_node_mult)\n            .attr(\"transform\", \"translate(\"+[self.x - this.width*mouse_node_mult/2,\n                                             self.y - this.height*mouse_node_mult/2]+\")\")\n            .attr('pointer-events', 'all');\n    this.mouse_node = mouse_node;\n\n    var rect = new_sel.append('rect')\n            .attr('id', 'canvas')\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height)\n            .attr(\"transform\", \"translate(\"+[self.x, self.y]+\")\");\n\n    var drag_right = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", rdragresize),\n        drag_left = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", ldragresize),\n        drag_top = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", tdragresize),\n        drag_bottom = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", bdragresize);\n\n    var left = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"id\", \"dragleft\")\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_left);\n\n    var right = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + self.width - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragright\")\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_right);\n\n    var top = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y - (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", dragbar_width)\n            .attr(\"id\", \"dragtop\")\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_top);\n\n    var bottom = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y + self.height - (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragbottom\")\n            .attr(\"height\", dragbar_width)\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_bottom);\n\n    // definitions\n    function stop_propagation() {\n        d3.event.sourceEvent.stopPropagation();\n    }\n    function transform_string(x, y, current_transform) {\n        var tr = utils.d3_transform_catch(current_transform),\n            translate = tr.translate;\n        if (x!==null) translate[0] = x;\n        if (y!==null) translate[1] = y;\n        return 'translate('+translate+')';\n    }\n    function ldragresize(d) {\n        var oldx = d.x;\n        d.x = Math.min(d.x + self.width - (dragbar_width / 2), d3.event.x);\n        self.x = d.x;\n        self.width = self.width + (oldx - d.x);\n        left.attr(\"transform\", function(d) {\n            return transform_string(d.x - (dragbar_width / 2), null, left.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, mouse_node.attr('transform'));\n        }).attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, rect.attr('transform'));\n        }).attr(\"width\", self.width);\n        top.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, top.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, bottom.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function rdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragx = Math.max(d.x + (dragbar_width/2), d.x + self.width + d3.event.dx);\n        //recalculate width\n        self.width = dragx - d.x;\n        //move the right drag handle\n        right.attr(\"transform\", function(d) {\n            return transform_string(dragx - (dragbar_width/2), null, right.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"width\", self.width);\n        top.attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function tdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var oldy = d.y;\n        d.y = Math.min(d.y + self.height - (dragbar_width / 2), d3.event.y);\n        self.y = d.y;\n        self.height = self.height + (oldy - d.y);\n        top.attr(\"transform\", function(d) {\n            return transform_string(null, d.y - (dragbar_width / 2), top.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, mouse_node.attr('transform'));\n        }).attr(\"width\", self.height*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, rect.attr('transform'));\n        }).attr(\"height\", self.height);\n        left.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), left.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n        right.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), right.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function bdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragy = Math.max(d.y + (dragbar_width/2), d.y + self.height + d3.event.dy);\n        //recalculate width\n        self.height = dragy - d.y;\n        //move the right drag handle\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(null, dragy - (dragbar_width/2), bottom.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"height\", self.height*mouse_node_mult);\n        rect.attr(\"height\", self.height);\n        left.attr(\"height\", self.height - dragbar_width);\n        right.attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n}\n\nfunction size_and_location() {\n    return { x: this.x,\n             y: this.y,\n             width: this.width,\n             height: this.height };\n}\n","/** CobraModel\n *\n */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nvar CobraModel = utils.make_class();\n// class methods\nCobraModel.from_exported_data = from_exported_data;\nCobraModel.from_cobra_json = from_cobra_json;\nCobraModel.build_reaction_string = build_reaction_string;\n// instance methods\nCobraModel.prototype = { init: init,\n                         apply_reaction_data: apply_reaction_data,\n                         apply_metabolite_data: apply_metabolite_data,\n                         apply_gene_data: apply_gene_data,\n                         model_for_export: model_for_export };\nmodule.exports = CobraModel;\n\n// class methods\nfunction build_reaction_string(stoichiometries, is_reversible) {\n    /** Return a reaction string for the given stoichiometries.\n\n     Adapted from cobra.core.Reaction.build_reaction_string().\n\n     Arguments\n     ---------\n\n     stoichiometries: An object with metabolites as keys and\n     stoichiometries as values.\n\n     is_reversible: Boolean. Whether the reaction is reversible.\n\n     */\n\n    var format = function(number) {\n        if (number == 1)\n            return \"\";\n        return String(number) + \" \";\n    };\n    var reactant_dict = {},\n        product_dict = {},\n        reactant_bits = [],\n        product_bits = [];\n    for (var the_metabolite in stoichiometries) {\n        var coefficient = stoichiometries[the_metabolite];\n        if (coefficient > 0)\n            product_bits.push(format(coefficient) + the_metabolite);\n        else\n            reactant_bits.push(format(Math.abs(coefficient)) + the_metabolite);\n    }\n    var reaction_string = reactant_bits.join(' + ');\n    if (is_reversible) {\n        reaction_string += ' ↔ ';\n    } else {\n        reaction_string += ' → ';\n    }\n    reaction_string += product_bits.join(' + ');\n    return reaction_string;\n}\n\nfunction from_exported_data(data) {\n    /** Use data generated by CobraModel.model_for_export() to make a new\n     CobraModel object.\n\n     */\n    if (!(data.reactions && data.metabolites))\n        throw new Error('Bad model data.');\n\n    var model = new CobraModel();\n    model.reactions = data.reactions;\n    model.metabolites = data.metabolites;\n    return model;\n}\n\nfunction from_cobra_json(model_data) {\n    /** Use a JSON Cobra model exported by COBRApy to make a new CobraModel\n     object.\n\n     The COBRA \"id\" becomes a \"bigg_id\", and \"upper_bound\" and \"lower_bound\"\n     bounds become \"reversibility\".\n\n     Fills out a \"genes\" list.\n\n     */\n    // reactions and metabolites\n    if (!(model_data.reactions && model_data.metabolites))\n        throw new Error('Bad model data.');\n\n    // make a gene dictionary\n    var genes = {};\n    for (var i = 0, l = model_data.genes.length; i < l; i++) {\n        var r = model_data.genes[i],\n            the_id = r.id;\n        genes[the_id] = r;\n    }\n\n    var model = new CobraModel();\n\n    model.reactions = {};\n    for (var i = 0, l = model_data.reactions.length; i<l; i++) {\n        var r = model_data.reactions[i],\n            the_id = r.id,\n            reaction = utils.clone(r);\n        delete reaction.id;\n        reaction.bigg_id = the_id;\n        // add the appropriate genes\n        reaction.genes = [];\n\n        // set reversibility\n        reaction.reversibility = (reaction.lower_bound < 0 && reaction.upper_bound > 0);\n        if (reaction.upper_bound <= 0 && reaction.lower_bound < 0) {\n            // reverse stoichiometries\n            for (var met_id in reaction.metabolites) {\n                reaction.metabolites[met_id] = -reaction.metabolites[met_id];\n            }\n        }\n        delete reaction.lower_bound;\n        delete reaction.upper_bound;\n\n        if ('gene_reaction_rule' in reaction) {\n            var gene_ids = data_styles.genes_for_gene_reaction_rule(reaction.gene_reaction_rule);\n            gene_ids.forEach(function(gene_id) {\n                if (gene_id in genes) {\n                    var gene = utils.clone(genes[gene_id]);\n                    // rename id to bigg_id\n                    gene.bigg_id = gene.id;\n                    delete gene.id;\n                    reaction.genes.push(gene);\n                } else {\n                    console.warn('Could not find gene for gene_id ' + gene_id);\n                }\n            });\n        }\n        model.reactions[the_id] = reaction;\n    }\n    model.metabolites = {};\n    for (var i=0, l=model_data.metabolites.length; i<l; i++) {\n        var r = model_data.metabolites[i],\n            the_id = r.id,\n            met = utils.clone(r);\n        delete met.id;\n        met.bigg_id = the_id;\n        model.metabolites[the_id] = met;\n    }\n    return model;\n}\n\n// instance methods\nfunction init() {\n    this.reactions = {};\n    this.metabolites = {};\n}\n\nfunction apply_reaction_data(reaction_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_reaction_data overrides apply_gene_data.\n\n     */\n    data_styles.apply_reaction_data_to_reactions(this.reactions, reaction_data,\n                                                 styles, compare_style);\n}\n\nfunction apply_metabolite_data(metabolite_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     */\n    data_styles.apply_metabolite_data_to_nodes(this.metabolites, metabolite_data,\n                                               styles, compare_style);\n}\n\nfunction apply_gene_data(gene_data_obj, styles, identifiers_on_map,\n                         compare_style, and_method_in_gene_reaction_rule) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_gene_data overrides apply_reaction_data.\n\n     */\n    data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                             styles, identifiers_on_map,\n                                             compare_style,\n                                             and_method_in_gene_reaction_rule);\n}\n\nfunction model_for_export() {\n    /** Export a CobraModel object for reloading later.\n\n     This object is not for loading into COBRApy! Export to COBRApy is not\n     currently supported.\n\n     */\n    return { reactions: this.reactions,\n             metabolites: this.metabolites };\n}\n","/** DataMenu */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = function(options) {\n    var o = utils.set_options(options, {\n        selection: null,\n        getdatafiles: null,\n        datafiles: null,\n        update_callback: null,\n        target: null});\n\n    if (o.selection===null)\n        throw new Error('No selection provided for DataMenu');\n\n    // setup dropdown menu\n    // Append menu if it doesn't exist\n    var menu = o.selection.select('.data-menu');\n    if (menu.empty()) {\n        menu = o.selection.append('div')\n            .attr('class','data-menu');\n    }\n    var select_sel = menu.append('form')\n            .append('select').attr('class','dropdown-menu');\n\n    if (o.getdatafiles) {\n        if (o.datafiles) {\n            console.warn('DataMenu: getdatafiles option overrides datafiles');\n        }\n        d3.json(o.getdatafiles, function(error, d) {\n            // returns json object:  { data: [file0, file1, ...] }\n            if (error) {\n                return console.warn(error);\n            } else {\n                load_with_files(o.target, d.data, select_sel, o.update_callback, o.selection);\n            }\n            return null;\n        });\n    } else if (o.datafiles) {\n        load_with_files(o.target, o.datafiles, select_sel, o.update_callback, o.selection);\n    } else {\n        console.warn('DataMenu: No datafiles given');\n    }\n\n    return { update: update };\n\n    // definitions\n    function load_with_files(t, files, select_sel, update_callback, selection) {\n\n        //when it changes\n        select_sel.node().addEventListener(\"change\", function() {\n            load_datafile(t, this.value, selection, update_callback);\n        }, false);\n\n        var file = files[0];\n\n        update(files, select_sel);\n        load_datafile(t, file, selection, update_callback);\n    };\n    function load_datafile(t, this_file, selection, callback) {\n        utils.load_the_file(t, this_file, function(error, data) {\n            if (error) {\n                return console.warn(error);\n                selection.append('error loading');\n                o.data = null;\n            } else {\n                o.data = data;\n                if (callback) {\n                    callback(data);\n                }\n            }\n        });\n    };\n\n    function update(list, select_sel) {\n        // update select element with d3 selection /select_sel/ to have options\n        // given by /list/\n        // TODO remove paths from file list\n        select_sel.selectAll(\".menu-option\")\n            .data(list)\n            .enter()\n            .append('option')\n            .attr('value', function (d) { return d; } )\n            .text(function (d) { return d; } );\n        // TODO set value to default_filename_index\n        select_sel.node().focus();\n    };\n\n    function get_data() {\n        return o.data;\n    };\n};\n","/** DirectionArrow. A constructor for an arrow that can be rotated and dragged,\n and supplies its direction. */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar DirectionArrow = utils.make_class();\nDirectionArrow.prototype = {\n    init: init,\n    set_location: set_location,\n    set_rotation: set_rotation,\n    displace_rotation: displace_rotation,\n    get_rotation: get_rotation,\n    toggle: toggle,\n    show: show,\n    hide: hide,\n    right: right,\n    left: left,\n    up: up,\n    down: down,\n    _setup_drag: _setup_drag\n};\nmodule.exports = DirectionArrow;\n\n\n// definitions\nfunction init(sel) {\n    this.arrow_container = sel.append('g')\n        .attr('id', 'direction-arrow-container')\n        .attr('transform', 'translate(0,0)rotate(0)');\n    this.arrow = this.arrow_container.append('path')\n        .classed('direction-arrow', true)\n        .attr('d', path_for_arrow())\n        .style('visibility', 'hidden')\n        .attr('transform', 'translate(30,0)scale(2.5)');\n\n    this.sel = sel;\n    this.center = { x: 0, y: 0 };\n\n    this._setup_drag();\n    this.dragging = false;\n\n    this.is_visible = false;\n    this.show();\n\n    // definitions\n    function path_for_arrow() {\n        return \"M0 -5 L0 5 L20 5 L20 10 L30 0 L20 -10 L20 -5 Z\";\n    }\n}\nfunction set_location(coords) {\n    /** Move the arrow to coords.\n     */\n    this.center = coords;\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+coords.x+','+coords.y+')rotate('+transform.rotate+')');\n}\nfunction set_rotation(rotation) {\n    /** Rotate the arrow to rotation.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')rotate('+rotation+')');\n}\nfunction displace_rotation(d_rotation) {\n    /** Displace the arrow rotation by a set amount.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')'+\n                              'rotate('+(transform.rotate+d_rotation)+')');\n}\nfunction get_rotation() {\n    /** Returns the arrow rotation.\n     */\n    return utils.d3_transform_catch(this.arrow_container.attr('transform')).rotate;\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_visible = !this.is_visible;\n    else this.is_visible = on_off;\n    this.arrow.style('visibility', this.is_visible ? 'visible' : 'hidden');\n}\nfunction show() {\n    this.toggle(true);\n}\nfunction hide() {\n    this.toggle(false);\n}\nfunction right() {\n    this.set_rotation(0);\n}\nfunction down() {\n    this.set_rotation(90);\n}\nfunction left() {\n    this.set_rotation(180);\n}\nfunction up() {\n    this.set_rotation(270);\n}\n\nfunction _setup_drag() {\n    var b = d3.behavior.drag()\n            .on(\"dragstart\", function(d) {\n                // silence other listeners\n                d3.event.sourceEvent.stopPropagation();\n                this.dragging = true;\n            }.bind(this))\n            .on(\"drag.direction_arrow\", function(d) {\n                var displacement = { x: d3.event.dx,\n                                     y: d3.event.dy },\n                    location = { x: d3.mouse(this.sel.node())[0],\n                                 y: d3.mouse(this.sel.node())[1] },\n                    d_angle = utils.angle_for_event(displacement,\n                                                    location,\n                                                    this.center);\n                this.displace_rotation(utils.to_degrees(d_angle));\n            }.bind(this))\n            .on(\"dragend\", function(d) {\n                setTimeout(function() {\n                    this.dragging = false;\n                }.bind(this), 200);\n            }.bind(this));\n    this.arrow_container.call(b);\n}\n","/** Draw. Manages creating, updating, and removing objects during d3 data binding.\n\n Arguments\n ---------\n\n behavior: An escher.Behavior object.\n\n settings: An escher.Settings object.\n\n Callbacks\n ---------\n\n draw.callback_manager.run('create_membrane', draw, enter_selection);\n draw.callback_manager.run('update_membrane', draw, update_selection);\n draw.callback_manager.run('create_reaction', draw, enter_selection);\n draw.callback_manager.run('update_reaction', draw, update_selection);\n draw.callback_manager.run('create_reaction_label', draw, enter_selection);\n draw.callback_manager.run('update_reaction_label', draw, update_selection);\n draw.callback_manager.run('create_segment', draw, enter_selection);\n draw.callback_manager.run('update_segment', draw, update_selection);\n draw.callback_manager.run('create_bezier', draw, enter_selection);\n draw.callback_manager.run('update_bezier', draw, update_selection);\n draw.callback_manager.run('create_node', draw, enter_selection);\n draw.callback_manager.run('update_node', draw, update_selection);\n draw.callback_manager.run('create_text_label', draw, enter_selection);\n draw.callback_manager.run('update_text_label', draw, update_selection);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Draw = utils.make_class();\n// instance methods\nDraw.prototype = {\n    init: init,\n    create_reaction: create_reaction,\n    update_reaction: update_reaction,\n    create_bezier: create_bezier,\n    update_bezier: update_bezier,\n    create_node: create_node,\n    update_node: update_node,\n    create_text_label: create_text_label,\n    update_text_label: update_text_label,\n    create_membrane: create_membrane,\n    update_membrane: update_membrane,\n    create_reaction_label: create_reaction_label,\n    update_reaction_label: update_reaction_label,\n    create_segment: create_segment,\n    update_segment: update_segment\n};\nmodule.exports = Draw;\n\n// definitions\nfunction init(behavior, settings) {\n    this.behavior = behavior;\n    this.settings = settings;\n    this.callback_manager = new CallbackManager();\n}\n\nfunction create_membrane(enter_selection) {\n    enter_selection.append('rect')\n        .attr('class', 'membrane');\n    this.callback_manager.run('create_membrane', this, enter_selection);\n}\n\nfunction update_membrane(update_selection) {\n    update_selection\n        .attr('width', function(d){ return d.width; })\n        .attr('height', function(d){ return d.height; })\n        .attr('transform', function(d){return 'translate('+d.x+','+d.y+')';})\n        .style('stroke-width', function(d) { return 10; })\n        .attr('rx', function(d){ return 20; })\n        .attr('ry', function(d){ return 20; });\n\n    this.callback_manager.run('update_membrane', this, update_selection);\n}\n\nfunction create_reaction(enter_selection) {\n    // attributes for new reaction group\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'r'+d.reaction_id; })\n        .attr('class', 'reaction')\n        .call(this.create_reaction_label.bind(this));\n\n    this.callback_manager.run('create_reaction', this, enter_selection);\n    return;\n}\n\nfunction update_reaction(update_selection, scale, cobra_model, drawn_nodes,\n                         defs, has_data_on_reactions) {\n    /** Run on the update selection for reactions.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     cobra_model: A CobraModel object.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     defs: The defs object generated by utils.setup_defs() (e.g. Map.defs).\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    // update reaction label\n    update_selection.select('.reaction-label-group')\n        .call(function(sel) {\n            return this.update_reaction_label(sel, has_data_on_reactions);\n        }.bind(this));\n\n    // draw segments\n    utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                               this.create_segment.bind(this),\n                               function(sel) {\n                                   return this.update_segment(sel, scale, cobra_model,\n                                                              drawn_nodes, defs,\n                                                              has_data_on_reactions);\n                               }.bind(this),\n                               function(sel) {\n                                   sel.remove();\n                               });\n\n    // run the callback\n    this.callback_manager.run('update_reaction', this, update_selection);\n}\n\nfunction create_reaction_label(enter_selection) {\n    /** Draw reaction label for selection.\n\n     */\n\n    var group = enter_selection.append('g')\n            .attr('class', 'reaction-label-group');\n    group.append('title'); // tooltip\n    group.append('text')\n        .attr('class', 'reaction-label label');\n    group.append('g')\n        .attr('class', 'all-genes-label-group');\n\n    this.callback_manager.run('create_reaction_label', this, enter_selection);\n}\n\n/**\n * Run on the update selection for reaction labels.\n * @param {D3 Selection} update_selection - The D3.js update selection.\n * @param {Boolean} has_data_on_reactions - Whether data needs to be drawn.\n */\nfunction update_reaction_label (update_selection, has_data_on_reactions) {\n    var decimal_format = d3.format('.4g')\n    var identifiers_on_map = this.settings.get_option('identifiers_on_map')\n    var identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id')\n    var reaction_data_styles = this.settings.get_option('reaction_styles')\n    var show_gene_reaction_rules = this.settings.get_option('show_gene_reaction_rules')\n    var hide_all_labels = this.settings.get_option('hide_all_labels')\n    var gene_font_size = this.settings.get_option('gene_font_size')\n    var label_mousedown_fn = this.behavior.label_mousedown\n    var label_mouseover_fn = this.behavior.label_mouseover\n    var label_mouseout_fn = this.behavior.label_mouseout\n\n    // label location\n    update_selection\n        .attr('transform', function(d) {\n            return 'translate(' + d.label_x + ',' + d.label_y + ')'\n        })\n        .call(this.behavior.turn_off_drag)\n        .call(this.behavior.reaction_label_drag)\n\n    // update label visibility\n    var label = update_selection.select('.reaction-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible')\n    if (!hide_all_labels) {\n        label\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_reactions && reaction_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string\n                return t\n            })\n            .on('mousedown', label_mousedown_fn)\n            .on('mouseover', label_mouseover_fn)\n            .on('mouseout', label_mouseout_fn)\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip]\n        })\n    }\n    // gene label\n    var all_genes_g = update_selection.select('.all-genes-label-group')\n            .selectAll('.gene-label-group')\n            .data(function(d) {\n                var show_gene_string = ('gene_string' in d &&\n                                        d.gene_string !== null &&\n                                        show_gene_reaction_rules &&\n                                        (!hide_all_labels) &&\n                                        reaction_data_styles.indexOf('text') !== -1)\n                var show_gene_reaction_rule = ('gene_reaction_rule' in d &&\n                                               d.gene_reaction_rule !== null &&\n                                               show_gene_reaction_rules &&\n                                               (!hide_all_labels) )\n                if (show_gene_string) {\n                    return d.gene_string\n                } else if (show_gene_reaction_rule) {\n                    // make the gene string with no data\n                    return data_styles.gene_string_for_data(d.gene_reaction_rule, null,\n                                                            d.genes, null, identifiers_on_map,\n                                                            null)\n                } else {\n                    return []\n                }\n            })\n    // enter\n    var gene_g = all_genes_g.enter()\n            .append('g')\n            .attr('class', 'gene-label-group')\n    gene_g.append('text')\n        .attr('class', 'gene-label')\n        .style('font-size', gene_font_size + 'px')\n    gene_g.append('title')\n    // update\n    all_genes_g.attr('transform', function(d, i) {\n        return 'translate(0, ' + (gene_font_size * 1.5 * (i + 1)) + ')'\n    });\n    // update text\n    all_genes_g.select('text').text(function(d) {\n        return d['text']\n    });\n    // update tooltip\n    all_genes_g.select('title').text(function(d) {\n        return d[identifiers_in_tooltip]\n    });\n    // exit\n    all_genes_g.exit()\n        .remove()\n\n    this.callback_manager.run('update_reaction_label', this, update_selection)\n}\n\nfunction create_segment(enter_selection) {\n    // create segments\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'segment-group')\n            .attr('id', function(d) { return 's'+d.segment_id; });\n\n    // create reaction arrow\n    g.append('path')\n        .attr('class', 'segment');\n\n    g.append('g')\n        .attr('class', 'arrowheads');\n\n    g.append('g')\n        .attr('class', 'stoichiometry-labels');\n\n    this.callback_manager.run('create_segment', this, enter_selection);\n}\n\nfunction update_segment(update_selection, scale, cobra_model,\n                        drawn_nodes, defs, has_data_on_reactions) {\n    var reaction_data_styles = this.settings.get_option('reaction_styles'),\n        should_size = (has_data_on_reactions && reaction_data_styles.indexOf('size') != -1),\n        should_color = (has_data_on_reactions && reaction_data_styles.indexOf('color') != -1),\n        no_data_size = this.settings.get_option('reaction_no_data_size'),\n        no_data_color = this.settings.get_option('reaction_no_data_color');\n\n    // update segment attributes\n    var highlight_missing  = this.settings.get_option('highlight_missing'),\n        hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        get_arrow_size = function(data, should_size) {\n            var width = 20,\n                height = 13;\n            if (should_size) {\n                height = (data === null ? no_data_size : scale.reaction_size(data));\n                // check for nan\n                if (isNaN(height))\n                    height = no_data_size;\n                width = height * 2;\n            }\n            return { width: width, height: height };\n        },\n        get_disp = function(arrow_size, reversibility, coefficient, node_is_primary) {\n            var arrow_height = ((reversibility || coefficient > 0) ?\n                                arrow_size.height :\n                                0),\n                r = node_is_primary ? primary_r : secondary_r;\n            return r + arrow_height + 10;\n        };\n    // update arrows\n    update_selection\n        .selectAll('.segment')\n        .datum(function() {\n            return this.parentNode.__data__;\n        })\n        .style('visibility', function(d) {\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        })\n        .attr('d', function(d) {\n            if (d.from_node_id === null || d.to_node_id === null)\n                return null;\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id],\n                b1 = d.b1,\n                b2 = d.b2;\n            // if metabolite, then displace the arrow\n            if (start['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.from_node_coefficient,\n                                    start.node_is_primary);\n                var direction = (b1 === null) ? end : b1;\n                start = displaced_coords(disp, start, direction, 'start');\n            }\n            if (end['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.to_node_coefficient,\n                                    end.node_is_primary);\n                var direction = (b2 === null) ? start : b2;\n                end = displaced_coords(disp, direction, end, 'end');\n            }\n            var curve = ('M' + start.x + ',' + start.y + ' ');\n            if (b1 !== null && b2 !== null) {\n                curve += ('C' + b1.x + ',' + b1.y + ' ' +\n                          b2.x + ',' + b2.y + ' ');\n            }\n            curve += (end.x + ',' + end.y);\n            return curve;\n        })\n        .style('stroke', function(d) {\n            var reaction_id = this.parentNode.parentNode.__data__.bigg_id,\n                show_missing = (highlight_missing &&\n                                cobra_model !== null &&\n                                !(reaction_id in cobra_model.reactions));\n            if (show_missing) {\n                return 'red';\n            }\n            if (should_color) {\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            return null;\n        })\n        .style('stroke-width', function(d) {\n            if (should_size) {\n                var f = d.data;\n                return f === null ? no_data_size : scale.reaction_size(f);\n            } else {\n                return null;\n            }\n        });\n\n    // new arrowheads\n    var arrowheads = update_selection.select('.arrowheads')\n            .selectAll('.arrowhead')\n            .data(function (d) {\n                var arrowheads = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return arrowheads;\n\n                if (start.node_type == 'metabolite' && (d.reversibility || d.from_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.from_node_coefficient,\n                                        start.node_is_primary),\n                        direction = (b1 === null) ? end : b1,\n                        rotation = utils.to_degrees(utils.get_angle([start, direction])) + 90,\n                        loc = displaced_coords(disp, start, direction, 'start');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.from_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                if (end.node_type == 'metabolite' && (d.reversibility || d.to_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.to_node_coefficient,\n                                        end.node_is_primary),\n                        direction = (b2 === null) ? start : b2,\n                        rotation = utils.to_degrees(utils.get_angle([end, direction])) + 90,\n                        loc = displaced_coords(disp, direction, end, 'end');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.to_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                return arrowheads;\n            });\n    arrowheads.enter().append('path')\n        .classed('arrowhead', true);\n    // update arrowheads\n    arrowheads.attr('d', function(d) {\n        return ('M' + [-d.size.width / 2, 0] +\n                ' L' + [0, d.size.height] +\n                ' L' + [d.size.width / 2, 0] + ' Z');\n    }).attr('transform', function(d) {\n        return 'translate(' + d.x + ',' + d.y + ')rotate(' + d.rotation + ')';\n    }).style('fill', function(d) {\n        if (should_color) {\n            if (d.show_arrowhead_flux) {\n                // show the flux\n                var f = d.data;\n                return f===null ? no_data_color : scale.reaction_color(f);\n            } else {\n                // if the arrowhead is not filled because it is reversed\n                return '#FFFFFF';\n            }\n        }\n        // default fill color\n        return null;\n    }).style('stroke', function(d) {\n        if (should_color) {\n            // show the flux color in the stroke whether or not the fill is present\n            var f = d.data;\n            return f===null ? no_data_color : scale.reaction_color(f);\n        }\n        // default stroke color\n        return null;\n    });\n    // remove\n    arrowheads.exit().remove();\n\n    // new stoichiometry labels\n    var stoichiometry_labels = update_selection.select('.stoichiometry-labels')\n            .selectAll('.stoichiometry-label')\n            .data(function (d) {\n                var labels = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2,\n                    disp_factor = 1.5;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return labels;\n\n                if (start.node_type=='metabolite' && (Math.abs(d.from_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b1 === null) ? end : b1;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, start));\n                    var loc = displaced_coords(disp, start, direction, 'start');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.from_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                if (end.node_type=='metabolite' && (Math.abs(d.to_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b2 === null) ? start : b2;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, end));\n                    var loc = displaced_coords(disp, direction, end, 'end');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.to_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                return labels;\n            });\n\n    // add labels\n    stoichiometry_labels.enter()\n        .append('text')\n        .attr('class', 'stoichiometry-label')\n        .attr('text-anchor', 'middle');\n    // update stoichiometry_labels\n    stoichiometry_labels\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .text(function(d) {\n            return d.coefficient;\n        })\n        .style('fill', function (d) {\n            if (should_color) {\n                // show the flux color\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            // default segment color\n            return null;\n        });\n    // remove\n    stoichiometry_labels.exit().remove();\n\n    this.callback_manager.run('update_segment', this, update_selection);\n}\n\nfunction create_bezier(enter_selection) {\n    var g = enter_selection.append('g')\n            .attr('id', function(d) { return d.bezier_id; })\n            .attr('class', function(d) { return 'bezier'; });\n    g.append('path')\n        .attr('class', 'connect-line');\n    g.append('circle')\n        .attr('class', function(d) { return 'bezier-circle '+d.bezier; })\n        .style('stroke-width', String(1)+'px')\n        .attr('r', String(7)+'px');\n\n    this.callback_manager.run('create_bezier', this, enter_selection);\n}\n\nfunction update_bezier(update_selection, show_beziers, drag_behavior,\n                       mouseover, mouseout, drawn_nodes, drawn_reactions) {\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n\n    if (!show_beziers) {\n        update_selection.attr('visibility', 'hidden');\n        return;\n    } else {\n        update_selection.attr('visibility', 'visible');\n    }\n\n    // hide secondary\n    update_selection\n        .style('visibility', function(d) {\n            var seg_data = drawn_reactions[d.reaction_id].segments[d.segment_id],\n                start = drawn_nodes[seg_data.from_node_id],\n                end = drawn_nodes[seg_data.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        });\n\n    // draw bezier points\n    update_selection.select('.bezier-circle')\n        .call(this.behavior.turn_off_drag)\n        .call(drag_behavior)\n        .on('mouseover', mouseover)\n        .on('mouseout', mouseout)\n        .attr('transform', function(d) {\n            if (d.x==null || d.y==null) return '';\n            return 'translate('+d.x+','+d.y+')';\n        });\n\n    // update bezier line\n    update_selection\n        .select('.connect-line')\n        .attr('d', function(d) {\n            var node,\n                segment_d = drawn_reactions[d.reaction_id].segments[d.segment_id];\n            node = (d.bezier=='b1' ?\n                    drawn_nodes[segment_d.from_node_id] :\n                    drawn_nodes[segment_d.to_node_id]);\n            if (d.x==null || d.y==null || node.x==null || node.y==null)\n                return '';\n            return 'M'+d.x+', '+d.y+' '+(node.x)+','+(node.y);\n        });\n\n    this.callback_manager.run('update_bezier', this, update_selection);\n}\n\nfunction create_node(enter_selection, drawn_nodes, drawn_reactions) {\n    /** Run on enter selection for nodes.\n\n     Arguments\n     ---------\n\n     enter_selection: The D3.js enter selection.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     drawn_reactions: The reactions object (e.g. Map.reactions).\n\n     */\n\n    // create nodes\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'node')\n            .attr('id', function(d) { return 'n'+d.node_id; });\n\n    // create metabolite circle and label\n    g.append('circle')\n        .attr('class', function(d) {\n            var c = 'node-circle';\n            if (d.node_type!==null)\n                c += (' ' + d.node_type + '-circle');\n            return c;\n        });\n    // labels\n    var metabolite_groups = g.filter(function(d) {\n        return d.node_type=='metabolite';\n    });\n    metabolite_groups.append('text')\n        .attr('class', 'node-label label');\n    metabolite_groups.append('title'); // tooltip\n\n    this.callback_manager.run('create_node', this, enter_selection);\n}\n\n/**\n * Run on the update selection for nodes.\n * @param {D3 Selection} update_selection - The D3.js update selection.\n * @param {Scale} scale - A Scale object.\n * @param {Boolean} has_data_on_nodes - Boolean to determine whether data needs to be drawn.\n * @param {Function} mousedown_fn - A function to call on mousedown for a node.\n * @param {Function} click_fn - A function to call on click for a node.\n * @param {Function} mouseover_fn - A function to call on mouseover for a node.\n * @param {Function} mouseout_fn - A function to call on mouseout for a node.\n * @param {D3 Behavior} drag_behavior - The D3.js drag behavior object for the nodes.\n * @param {D3 Behavior} label_drag_behavior - The D3.js drag behavior object for the node labels.\n */\nfunction update_node (update_selection, scale, has_data_on_nodes,\n                      mousedown_fn, click_fn, mouseover_fn, mouseout_fn,\n                      drag_behavior, label_drag_behavior) {\n    // update circle and label location\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites')\n    var primary_r = this.settings.get_option('primary_metabolite_radius')\n    var secondary_r = this.settings.get_option('secondary_metabolite_radius')\n    var marker_r = this.settings.get_option('marker_radius')\n    var hide_all_labels = this.settings.get_option('hide_all_labels')\n    var identifiers_on_map = this.settings.get_option('identifiers_on_map')\n    var identifiers_in_tooltip = (identifiers_on_map === 'bigg_id' ? 'name' : 'bigg_id')\n    var metabolite_data_styles = this.settings.get_option('metabolite_styles')\n    var no_data_style = { color: this.settings.get_option('metabolite_no_data_color'),\n                          size: this.settings.get_option('metabolite_no_data_size') }\n\n    var mg = update_selection\n            .select('.node-circle')\n            .attr('transform', function(d) {\n                return 'translate('+d.x+','+d.y+')'\n            })\n            .style('visibility', function(d) {\n                return hideNode(d, hide_secondary_metabolites) ? 'hidden' : null\n            })\n            .attr('r', function(d) {\n                if (d.node_type === 'metabolite') {\n                    var should_scale = (has_data_on_nodes &&\n                                        metabolite_data_styles.indexOf('size') !== -1)\n                    if (should_scale) {\n                        var f = d.data\n                        return f === null ? no_data_style['size'] : scale.metabolite_size(f)\n                    } else {\n                        return d.node_is_primary ? primary_r : secondary_r\n                    }\n                }\n                // midmarkers and multimarkers\n                return marker_r\n            })\n            .style('fill', function(d) {\n                if (d.node_type=='metabolite') {\n                    var should_color_data = (has_data_on_nodes &&\n                                             metabolite_data_styles.indexOf('color') != -1)\n                    if (should_color_data) {\n                        var f = d.data\n                        return f===null ? no_data_style['color'] : scale.metabolite_color(f)\n                    } else {\n                        return null\n                    }\n                }\n                // midmarkers and multimarkers\n                return null\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(drag_behavior)\n            .on('mousedown', mousedown_fn)\n            .on('click', click_fn)\n            .on('mouseover', mouseover_fn)\n            .on('mouseout', mouseout_fn)\n\n    // update node label visibility\n    var node_label = update_selection\n            .select('.node-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible')\n    if (!hide_all_labels) {\n        node_label\n            .style('visibility', function(d) {\n                return hideNode(d, hide_secondary_metabolites) ? 'hidden' : null\n            })\n            .attr('transform', function(d) {\n                return 'translate(' + d.label_x + ',' + d.label_y + ')'\n            })\n            .text(function(d) {\n                var t = d[identifiers_on_map]\n                if (has_data_on_nodes && metabolite_data_styles.indexOf('text') !== -1)\n                    t += ' ' + d.data_string\n                return t\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(label_drag_behavior)\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip]\n        })\n    }\n\n    this.callback_manager.run('update_node', this, update_selection)\n\n    function hideNode (d, hide_secondary_metabolites) {\n        return (d.node_type === 'metabolite' &&\n                hide_secondary_metabolites &&\n                !d.node_is_primary)\n    }\n}\n\nfunction create_text_label(enter_selection) {\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'l'+d.text_label_id; })\n        .attr('class', 'text-label')\n        .append('text')\n        .attr('class', 'label');\n\n    this.callback_manager.run('create_text_label', this, enter_selection);\n}\n\nfunction update_text_label(update_selection) {\n    var mousedown_fn = this.behavior.text_label_mousedown,\n        click_fn = this.behavior.text_label_click,\n        drag_behavior = this.behavior.selectable_drag,\n        turn_off_drag = this.behavior.turn_off_drag;\n\n    update_selection\n        .select('.label')\n        .text(function(d) { return d.text; })\n        .attr('transform', function(d) { return 'translate('+d.x+','+d.y+')';})\n        .on('mousedown', mousedown_fn)\n        .on('click', click_fn)\n        .call(turn_off_drag)\n        .call(drag_behavior);\n\n    this.callback_manager.run('update_text_label', this, update_selection);\n}\n\nfunction displaced_coords(reaction_arrow_displacement, start, end, displace) {\n    utils.check_undefined(arguments, ['reaction_arrow_displacement', 'start', 'end', 'displace']);\n\n    var length = reaction_arrow_displacement,\n        hyp = utils.distance(start, end),\n        new_x, new_y;\n    if (!length || !hyp) console.error('Bad value');\n    if (displace=='start') {\n        new_x = start.x + length * (end.x - start.x) / hyp,\n        new_y = start.y + length * (end.y - start.y) / hyp;\n    } else if (displace=='end') {\n        new_x = end.x - length * (end.x - start.x) / hyp,\n        new_y = end.y - length * (end.y - start.y) / hyp;\n    } else { console.error('bad displace value: ' + displace); }\n    return {x: new_x, y: new_y};\n}\n","/** KeyManager\n\n Manage key listeners and events.\n\n Arguments\n ---------\n\n assigned_keys (default: {}): An object defining keys to bind.\n\n input_list (default: []): A list of inputs that will override keyboard\n shortcuts when in focus.\n\n selection (default: global): A node to bind the events to.\n\n ctrl_equals_cmd (default: false): If true, then control and command have the\n same effect.\n\n */\n\n\nvar utils = require('./utils');\nvar Mousetrap = require('mousetrap');\nvar _ = require('underscore');\n\n\nvar KeyManager = utils.make_class();\n// instance methods\nKeyManager.prototype = {\n    init: init,\n    update: update,\n    toggle: toggle,\n    add_escape_listener: add_escape_listener,\n    add_enter_listener: add_enter_listener,\n    add_key_listener: add_key_listener\n};\nmodule.exports = KeyManager;\n\n\n// instance methods\nfunction init(assigned_keys, input_list, selection, ctrl_equals_cmd) {\n    // default Arguments\n    this.assigned_keys = assigned_keys || {};\n    this.input_list = input_list || [];\n    this.mousetrap = selection ? new Mousetrap(selection) : new Mousetrap;\n    this.ctrl_equals_cmd = (!_.isBoolean(ctrl_equals_cmd)) ? false : ctrl_equals_cmd;\n\n    // Fix mousetrap behavior; by default, it ignore shortcuts when inputs are\n    // in focus.\n    // TODO NOT WORKING https://craig.is/killing/mice\n    // consider swithching to https://github.com/PolicyStat/combokeys\n    this.mousetrap.stopCallback = function() { return false; };\n\n    this.enabled = true;\n    this.update();\n}\n\n\nfunction _add_cmd(key, ctrl_equals_cmd) {\n    /** If ctrl_equals_cmd is true and key has ctrl+ in it, return an array with\n     ctrl+ and meta+ variations.\n\n     */\n    if (!ctrl_equals_cmd) return key;\n    var key_ar = _.isArray(key) ? key : [key];\n    var new_ar = key_ar.reduce(function(c, k) {\n        var n = k.replace('ctrl+', 'meta+');\n        if (n !== k) c.push(n);\n        return c;\n    }, key_ar.slice());\n    return new_ar.length === key_ar.length ? key : new_ar;\n}\n\n/**\n * Updated key bindings if attributes have changed.\n */\nfunction update() {\n    this.mousetrap.reset();\n    if (!this.enabled) return;\n\n    // loop through keys\n    for (var key_id in this.assigned_keys) {\n        var assigned_key = this.assigned_keys[key_id];\n\n        // OK if this is missing\n        if (!assigned_key.key) continue;\n\n        var key_to_bind = _add_cmd(assigned_key.key, this.ctrl_equals_cmd);\n        // remember the input_list\n        assigned_key.input_list = this.input_list;\n        this.mousetrap.bind(key_to_bind, function(e) {\n            // check inputs\n            var input_blocking = false;\n            if (this.ignore_with_input) {\n                for (var i = 0, l = this.input_list.length; i < l; i++) {\n                    if (this.input_list[i].is_visible()) {\n                        input_blocking = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!input_blocking) {\n                if (this.fn) this.fn.call(this.target);\n                else console.warn('No function for key: ' + this.key);\n                e.preventDefault();\n            }\n        }.bind(assigned_key), 'keydown');\n    }\n}\n\n\nfunction toggle(on_off) {\n    /** Turn the key manager on or off.\n\n     */\n    if (_.isUndefined(on_off)) on_off = !this.enabled;\n    this.enabled = on_off;\n    this.update();\n}\n\n\nfunction add_enter_listener(callback, one_time) {\n    /** Call the callback when the enter key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener('enter', callback, one_time);\n}\n\n\nfunction add_escape_listener(callback, one_time) {\n    /** Call the callback when the escape key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener('escape', callback, one_time);\n}\n\n\nfunction add_key_listener(key_name, callback, one_time) {\n    /** Call the callback when the key is pressed, then unregisters the\n     listener. Returns a function that will unbind the event.\n\n     callback: The callback function with no arguments.\n\n     key_name: A key name, or list of key names, as defined by the mousetrap\n     library: https://craig.is/killing/mice\n\n     one_time: If True, then cancel the listener after the first execution.\n\n     */\n\n    if (_.isUndefined(one_time)) one_time = false;\n\n    // unbind function ready to go\n    var unbind = this.mousetrap.unbind.bind(this.mousetrap, key_name);\n\n    this.mousetrap.bind(_add_cmd(key_name, this.ctrl_equals_cmd), function(e) {\n        e.preventDefault();\n        callback();\n        if (one_time) unbind();\n    });\n\n    return unbind;\n}\n","/** Map\n\n Defines the metabolic map data, and manages drawing and building.\n\n Arguments\n ---------\n\n svg: The parent SVG container for the map.\n\n css:\n\n selection: A d3 selection for a node to place the map inside.\n\n selection:\n\n zoom_container:\n\n settings:\n\n cobra_model:\n\n canvas_size_and_loc:\n\n enable_search:\n\n map_name: (Optional, Default: 'new map')\n\n map_id: (Optional, Default: A string of random characters.)\n\n map_description: (Optional, Default: '')\n\n Callbacks\n ---------\n\n map.callback_manager.run('set_status', null, status);\n map.callback_manager.run('toggle_beziers', null, beziers_enabled);\n map.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n map.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n map.callback_manager.run('deselect_nodes');\n map.callback_manager.run('select_text_label');\n map.callback_manager.run('before_svg_export');\n map.callback_manager.run('after_svg_export');\n map.callback_manager.run('before_png_export');\n map.callback_manager.run('after_png_export');\n map.callback_manager.run('before_convert_map');\n map.callback_manager.run('after_convert_map');\n this.callback_manager.run('calc_data_stats__reaction', null, changed);\n this.callback_manager.run('calc_data_stats__metabolite', null, changed);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar Draw = require('./Draw');\nvar Behavior = require('./Behavior');\nvar Scale = require('./Scale');\nvar build = require('./build');\nvar UndoStack = require('./UndoStack');\nvar CallbackManager = require('./CallbackManager');\nvar KeyManager = require('./KeyManager');\nvar Canvas = require('./Canvas');\nvar data_styles = require('./data_styles');\nvar SearchIndex = require('./SearchIndex');\n\nvar bacon = require('baconjs');\nvar _ = require('underscore');\n\n\nvar Map = utils.make_class();\n// class methods\nMap.from_data = from_data;\n// instance methods\nMap.prototype = {\n    // setup\n    init: init,\n    // more setup\n    setup_containers: setup_containers,\n    reset_containers: reset_containers,\n    // appearance\n    set_status: set_status,\n    clear_map: clear_map,\n    // selection\n    select_all: select_all,\n    select_none: select_none,\n    invert_selection: invert_selection,\n    select_selectable: select_selectable,\n    select_metabolite_with_id: select_metabolite_with_id,\n    select_single_node: select_single_node,\n    deselect_nodes: deselect_nodes,\n    select_text_label: select_text_label,\n    deselect_text_labels: deselect_text_labels,\n    // build\n    new_reaction_from_scratch: new_reaction_from_scratch,\n    extend_nodes: extend_nodes,\n    extend_reactions: extend_reactions,\n    new_reaction_for_metabolite: new_reaction_for_metabolite,\n    cycle_primary_node: cycle_primary_node,\n    toggle_selected_node_primary: toggle_selected_node_primary,\n    new_text_label: new_text_label,\n    edit_text_label: edit_text_label,\n    // delete\n    delete_selected: delete_selected,\n    delete_selectable: delete_selectable,\n    delete_node_data: delete_node_data,\n    delete_segment_data: delete_segment_data,\n    delete_reaction_data: delete_reaction_data,\n    delete_text_label_data: delete_text_label_data,\n    // find\n    get_selected_node_ids: get_selected_node_ids,\n    get_selected_nodes: get_selected_nodes,\n    get_selected_text_label_ids: get_selected_text_label_ids,\n    get_selected_text_labels: get_selected_text_labels,\n    segments_and_reactions_for_nodes: segments_and_reactions_for_nodes,\n    // draw\n    draw_everything: draw_everything,\n    // draw reactions\n    draw_all_reactions: draw_all_reactions,\n    draw_these_reactions: draw_these_reactions,\n    clear_deleted_reactions: clear_deleted_reactions,\n    // draw nodes\n    draw_all_nodes: draw_all_nodes,\n    draw_these_nodes: draw_these_nodes,\n    clear_deleted_nodes: clear_deleted_nodes,\n    // draw text_labels\n    draw_all_text_labels: draw_all_text_labels,\n    draw_these_text_labels: draw_these_text_labels,\n    clear_deleted_text_labels: clear_deleted_text_labels,\n    // draw beziers\n    draw_all_beziers: draw_all_beziers,\n    draw_these_beziers: draw_these_beziers,\n    clear_deleted_beziers: clear_deleted_beziers,\n    toggle_beziers: toggle_beziers,\n    hide_beziers: hide_beziers,\n    show_beziers: show_beziers,\n    // data\n    has_cobra_model: has_cobra_model,\n    apply_reaction_data_to_map: apply_reaction_data_to_map,\n    apply_metabolite_data_to_map: apply_metabolite_data_to_map,\n    apply_gene_data_to_map: apply_gene_data_to_map,\n    // data statistics\n    get_data_statistics: get_data_statistics,\n    calc_data_stats: calc_data_stats,\n    // zoom\n    zoom_extent_nodes: zoom_extent_nodes,\n    zoom_extent_canvas: zoom_extent_canvas,\n    _zoom_extent: _zoom_extent,\n    get_size: get_size,\n    zoom_to_reaction: zoom_to_reaction,\n    zoom_to_node: zoom_to_node,\n    zoom_to_text_label: zoom_to_text_label,\n    highlight_reaction: highlight_reaction,\n    highlight_node: highlight_node,\n    highlight_text_label: highlight_text_label,\n    highlight: highlight,\n    // full screen\n    listen_for_full_screen: listen_for_full_screen,\n    unlisten_for_full_screen: unlisten_for_full_screen,\n    full_screen: full_screen,\n    // io\n    save: save,\n    map_for_export: map_for_export,\n    save_svg: save_svg,\n    save_png: save_png,\n    convert_map: convert_map\n};\nmodule.exports = Map;\n\n\n// -------------------------------------------------------------------------\n// setup\n\nfunction init(svg, css, selection, zoom_container, settings,\n              cobra_model, canvas_size_and_loc, enable_search,\n              map_name, map_id, map_description) {\n    if (canvas_size_and_loc === null) {\n        var size = zoom_container.get_size()\n        canvas_size_and_loc = {x: -size.width, y: -size.height,\n                               width: size.width*3, height: size.height*3}\n    }\n\n    if (_.isUndefined(map_name) || map_name === null || map_name == '')\n        map_name = 'new_map'\n    else\n        map_name = String(map_name)\n    if (_.isUndefined(map_id) || map_id === null || map_id == '')\n        map_id = utils.generate_map_id()\n    else\n        map_id = String(map_id)\n    if (_.isUndefined(map_description) || map_description === null)\n        map_description = ''\n    else\n        map_description = String(map_description)\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager()\n\n    // set up the defs\n    this.svg = svg\n    this.defs = utils.setup_defs(svg, css)\n\n    // make the canvas\n    this.canvas = new Canvas(selection, canvas_size_and_loc)\n\n    this.setup_containers(selection)\n    this.sel = selection\n    this.zoom_container = zoom_container\n\n    this.settings = settings\n\n    // set the model AFTER loading the datasets\n    this.cobra_model = cobra_model\n\n    this.largest_ids = { reactions: -1,\n                         nodes: -1,\n                         segments: -1,\n                         text_labels: -1 }\n\n    // make the scales\n    this.scale = new Scale()\n    // initialize stats\n    this.calc_data_stats('reaction')\n    this.calc_data_stats('metabolite')\n    this.scale.connect_to_settings(this.settings, this,\n                                   get_data_statistics.bind(this))\n\n    // make the undo/redo stack\n    this.undo_stack = new UndoStack()\n\n    // make a behavior object\n    this.behavior = new Behavior(this, this.undo_stack)\n\n    // draw manager\n    this.draw = new Draw(this.behavior, this.settings)\n\n    // make a key manager\n    this.key_manager = new KeyManager()\n    this.key_manager.ctrl_equals_cmd = true\n\n    // make the search index\n    this.enable_search = enable_search\n    this.search_index = new SearchIndex()\n\n    // map properties\n    this.map_name = map_name\n    this.map_id = map_id\n    this.map_description = map_description\n\n    // deal with the window\n    var window_translate = {'x': 0, 'y': 0},\n        window_scale = 1\n\n    // hide beziers\n    this.beziers_enabled = false\n\n    // data\n    this.has_data_on_reactions = false\n    this.has_data_on_nodes = false\n\n    this.nodes = {}\n    this.reactions = {}\n    this.beziers = {}\n    this.text_labels = {}\n\n    // update data with null to populate data-specific attributes\n    this.apply_reaction_data_to_map(null)\n    this.apply_metabolite_data_to_map(null)\n    this.apply_gene_data_to_map(null)\n\n    // rotation mode off\n    this.rotation_on = false\n\n    // set up full screen listener\n    this.listen_for_full_screen(function () {\n        setTimeout(function() {\n            this.zoom_extent_canvas()\n        }.bind(this), 50)\n    }.bind(this))\n}\n\n// -------------------------------------------------------------------------\n// Import\n\nfunction from_data(map_data, svg, css, selection, zoom_container, settings,\n                   cobra_model, enable_search) {\n    /** Load a json map and add necessary fields for rendering.\n\n     */\n\n    var canvas = map_data[1].canvas,\n        map_name = map_data[0].map_name,\n        map_id = map_data[0].map_id,\n        map_description = (map_data[0].map_description.replace(/(\\nLast Modified.*)+$/g, '')\n                           + '\\nLast Modified ' + Date(Date.now()).toString()),\n        map = new Map(svg, css, selection, zoom_container, settings,\n                      cobra_model, canvas, enable_search,\n                      map_name, map_id, map_description);\n\n    map.reactions = map_data[1].reactions;\n    map.nodes = map_data[1].nodes;\n    map.text_labels = map_data[1].text_labels;\n\n    for (var n_id in map.nodes) {\n        var node = map.nodes[n_id];\n\n        // clear all the connected segments\n        node.connected_segments = [];\n\n        //  populate the nodes search index.\n        if (enable_search) {\n            if (node.node_type!='metabolite') continue;\n            map.search_index.insert('n'+n_id, { 'name': node.bigg_id,\n                                                'data': { type: 'metabolite',\n                                                          node_id: n_id }});\n            map.search_index.insert('n_name'+n_id, { 'name': node.name,\n                                                     'data': { type: 'metabolite',\n                                                               node_id: n_id }});\n        }\n    }\n\n    // Propagate coefficients and reversibility, build the connected\n    // segments, add bezier points, and populate the reaction search index.\n    for (var r_id in map.reactions) {\n        var reaction = map.reactions[r_id];\n\n        // reaction search index\n        if (enable_search) {\n            map.search_index.insert('r' + r_id,\n                                    { 'name': reaction.bigg_id,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            map.search_index.insert('r_name' + r_id,\n                                    { 'name': reaction.name,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                map.search_index.insert('r' + r_id + '_g' + g_id,\n                                        { 'name': gene.bigg_id,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n                map.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                        { 'name': gene.name,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n            }\n        }\n\n        // keep track of any bad segments\n        var segments_to_delete = [];\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id];\n\n            // propagate reversibility\n            segment.reversibility = reaction.reversibility;\n\n            // if there is an error with to_ or from_ nodes, remove this segment\n            if (!(segment.from_node_id in map.nodes) || !(segment.to_node_id in map.nodes)) {\n                console.warn('Bad node references in segment ' + s_id + '. Deleting segment.');\n                segments_to_delete.push(s_id);\n                continue\n            }\n\n            var from_node = map.nodes[segment.from_node_id],\n                to_node = map.nodes[segment.to_node_id];\n\n            // propagate coefficients\n            reaction.metabolites.forEach(function(met) {\n                if (met.bigg_id==from_node.bigg_id) {\n                    segment.from_node_coefficient = met.coefficient;\n                } else if (met.bigg_id==to_node.bigg_id) {\n                    segment.to_node_coefficient = met.coefficient;\n                }\n            });\n\n            // build connected segments\n            [from_node, to_node].forEach(function(node) {\n                node.connected_segments.push({ segment_id: s_id,\n                                               reaction_id: r_id });\n            });\n\n            // If the metabolite has no bezier points, then add them.\n            var start = map.nodes[segment.from_node_id],\n                end = map.nodes[segment.to_node_id];\n            if (start['node_type']=='metabolite' || end['node_type']=='metabolite') {\n                var midpoint = utils.c_plus_c(start, utils.c_times_scalar(utils.c_minus_c(end, start), 0.5));\n                if (segment.b1 === null) segment.b1 = midpoint;\n                if (segment.b2 === null) segment.b2 = midpoint;\n            }\n\n        }\n        // delete the bad segments\n        segments_to_delete.forEach(function(s_id) {\n            delete reaction.segments[s_id];\n        });\n    }\n\n    // add text_labels to the search index\n    if (enable_search) {\n        for (var label_id in map.text_labels) {\n            var label = map.text_labels[label_id];\n            map.search_index.insert('l'+label_id, { 'name': label.text,\n                                                    'data': { type: 'text_label',\n                                                              text_label_id: label_id }});\n        }\n    }\n\n    // populate the beziers\n    map.beziers = build.new_beziers_for_reactions(map.reactions);\n\n    // get largest ids for adding new reactions, nodes, text labels, and\n    // segments\n    map.largest_ids.reactions = get_largest_id(map.reactions);\n    map.largest_ids.nodes = get_largest_id(map.nodes);\n    map.largest_ids.text_labels = get_largest_id(map.text_labels);\n\n    var largest_segment_id = 0;\n    for (var id in map.reactions) {\n        largest_segment_id = get_largest_id(map.reactions[id].segments,\n                                            largest_segment_id);\n    }\n    map.largest_ids.segments = largest_segment_id;\n\n    // update data with null to populate data-specific attributes\n    map.apply_reaction_data_to_map(null);\n    map.apply_metabolite_data_to_map(null);\n    map.apply_gene_data_to_map(null);\n\n    return map;\n\n    // definitions\n    function get_largest_id(obj, current_largest) {\n        /** Return the largest integer key in obj, or current_largest, whichever is bigger. */\n        if (_.isUndefined(current_largest)) current_largest = 0;\n        if (_.isUndefined(obj)) return current_largest;\n        return Math.max.apply(null, Object.keys(obj).map(function(x) {\n            return parseInt(x);\n        }).concat([current_largest]));\n    }\n}\n\n// ---------------------------------------------------------------------\n// more setup\n\nfunction setup_containers(sel) {\n    sel.append('g')\n        .attr('id', 'reactions');\n    sel.append('g')\n        .attr('id', 'nodes');\n    sel.append('g')\n        .attr('id', 'beziers');\n    sel.append('g')\n        .attr('id', 'text-labels');\n}\nfunction reset_containers() {\n    this.sel.select('#reactions')\n        .selectAll('.reaction')\n        .remove();\n    this.sel.select('#nodes')\n        .selectAll('.node')\n        .remove();\n    this.sel.select('#beziers')\n        .selectAll('.bezier')\n        .remove();\n    this.sel.select('#text-labels')\n        .selectAll('.text-label')\n        .remove();\n}\n\n// -------------------------------------------------------------------------\n// Appearance\n\nfunction set_status(status, time) {\n    /** Set the status of the map, with an optional expiration\n     time. Rendering the status is taken care of by the Builder.\n\n     Arguments\n     ---------\n\n     status: The status string.\n\n     time: An optional time, in ms, after which the status is set to ''.\n\n     */\n\n    this.callback_manager.run('set_status', null, status);\n    // clear any other timers on the status bar\n    clearTimeout(this._status_timer);\n    this._status_timer = null;\n\n    if (time!==undefined) {\n        this._status_timer = setTimeout(function() {\n            this.callback_manager.run('set_status', null, '');\n        }.bind(this), time);\n    }\n}\nfunction clear_map() {\n    this.reactions = {};\n    this.beziers = {};\n    this.nodes = {};\n    this.text_labels = {};\n    this.map_name = 'new_map';\n    this.map_id = utils.generate_map_id();\n    this.map_description = '';\n    // reaction_data onto existing map reactions\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n    this.draw_everything();\n}\nfunction has_cobra_model() {\n    return (this.cobra_model !== null);\n}\nfunction draw_everything() {\n    /** Draw the all reactions, nodes, & text labels.\n\n     */\n    this.draw_all_reactions(true, true); // also draw beziers\n    this.draw_all_nodes(true);\n    this.draw_all_text_labels();\n}\n\nfunction draw_all_reactions(draw_beziers, clear_deleted) {\n    /** Draw all reactions, and clear deleted reactions.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (_.isUndefined(draw_beziers)) draw_beziers = true;\n    if (_.isUndefined(clear_deleted)) clear_deleted = true;\n\n    // Draw all reactions.\n    var reaction_ids = [];\n    for (var reaction_id in this.reactions) {\n        reaction_ids.push(reaction_id);\n    }\n    // If draw_beziers is true, just draw them all, rather than deciding\n    // which ones to draw.\n    this.draw_these_reactions(reaction_ids, false);\n    if (draw_beziers && this.beziers_enabled)\n        this.draw_all_beziers();\n\n    // Clear all deleted reactions.\n    if (clear_deleted)\n        this.clear_deleted_reactions(draw_beziers);\n}\n\nfunction draw_these_reactions(reaction_ids, draw_beziers) {\n    /** Draw specific reactions.\n\n     Does nothing with exit selection. Use clear_deleted_reactions to remove\n     reactions from the DOM.\n\n     Arguments\n     ---------\n\n     reactions_ids: An array of reaction_ids to update.\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     */\n    if (_.isUndefined(draw_beziers)) draw_beziers = true;\n\n    // find reactions for reaction_ids\n    var reaction_subset = utils.object_slice_for_ids_ref(this.reactions,\n                                                         reaction_ids);\n\n    // function to update reactions\n    var update_fn = function(sel) {\n        return this.draw.update_reaction(sel, this.scale, this.cobra_model,\n                                         this.nodes, this.defs,\n                                         this.has_data_on_reactions);\n    }.bind(this);\n\n    // draw the reactions\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', reaction_subset,\n                         'reaction_id', this.draw.create_reaction.bind(this.draw),\n                         update_fn);\n\n    if (draw_beziers) {\n        // particular beziers to draw\n        var bezier_ids = build.bezier_ids_for_reaction_ids(reaction_subset);\n        this.draw_these_beziers(bezier_ids);\n    }\n}\n\nfunction clear_deleted_reactions(draw_beziers) {\n    /** Remove any reactions that are not in *this.reactions*.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also clear deleted\n     bezier control points.\n\n     */\n    if (_.isUndefined(draw_beziers)) draw_beziers = true;\n\n    // remove deleted reactions and segments\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', this.reactions, 'reaction_id',\n                         null,\n                         clear_deleted_segments,\n                         function(sel) { sel.remove(); });\n\n    if (draw_beziers==true)\n        this.clear_deleted_beziers();\n\n    // definitions\n    function clear_deleted_segments(update_selection) {\n        // draw segments\n        utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                                   null,\n                                   null,\n                                   function(sel) { sel.remove(); });\n    };\n}\n\nfunction draw_all_nodes(clear_deleted) {\n    /** Draw all nodes, and clear deleted nodes.\n\n     Arguments\n     ---------\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (clear_deleted === undefined) clear_deleted = true;\n\n    var node_ids = [];\n    for (var node_id in this.nodes) {\n        node_ids.push(node_id);\n    }\n    this.draw_these_nodes(node_ids);\n\n    // clear the deleted nodes\n    if (clear_deleted)\n        this.clear_deleted_nodes();\n}\n\nfunction draw_these_nodes(node_ids) {\n    /** Draw specific nodes.\n\n     Does nothing with exit selection. Use clear_deleted_nodes to remove\n     nodes from the DOM.\n\n     Arguments\n     ---------\n\n     nodes_ids: An array of node_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var node_subset = utils.object_slice_for_ids_ref(this.nodes, node_ids);\n\n    // functions to create and update nodes\n    var create_fn = function(sel) {\n        return this.draw.create_node(sel,\n                                     this.nodes,\n                                     this.reactions);\n    }.bind(this),\n        update_fn = function(sel) {\n            return this.draw.update_node(sel,\n                                         this.scale,\n                                         this.has_data_on_nodes,\n                                         this.behavior.selectable_mousedown,\n                                         this.behavior.selectable_click,\n                                         this.behavior.node_mouseover,\n                                         this.behavior.node_mouseout,\n                                         this.behavior.selectable_drag,\n                                         this.behavior.node_label_drag);\n        }.bind(this);\n\n    // draw the nodes\n    utils.draw_an_object(this.sel, '#nodes', '.node', node_subset, 'node_id',\n                         create_fn, update_fn);\n}\n\nfunction clear_deleted_nodes() {\n    /** Remove any nodes that are not in *this.nodes*.\n\n     */\n    // run remove for exit selection\n    utils.draw_an_object(this.sel, '#nodes', '.node', this.nodes, 'node_id',\n                         null, null, function(sel) { sel.remove(); });\n}\n\nfunction draw_all_text_labels() {\n    // Draw all text_labels.\n    var text_label_ids = [];\n    for (var text_label_id in this.text_labels) {\n        text_label_ids.push(text_label_id);\n    }\n    this.draw_these_text_labels(text_label_ids);\n\n    // Clear all deleted text_labels.\n    this.clear_deleted_text_labels();\n}\n\nfunction draw_these_text_labels(text_label_ids) {\n    /** Draw specific text_labels.\n\n     Does nothing with exit selection. Use clear_deleted_text_labels to remove\n     text_labels from the DOM.\n\n     Arguments\n     ---------\n\n     text_labels_ids: An array of text_label_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var text_label_subset = utils.object_slice_for_ids_ref(this.text_labels, text_label_ids);\n\n    // function to update text_labels\n    var update_fn = function(sel) {\n        return this.draw.update_text_label(sel, this.behavior);;\n    }.bind(this);\n\n    // draw the text_labels\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         text_label_subset, 'text_label_id',\n                         this.draw.create_text_label.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_text_labels() {\n    /** Remove any text_labels that are not in *this.text_labels*.\n\n     */\n    // clear deleted\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         this.text_labels, 'text_label_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction draw_all_beziers() {\n    /** Draw all beziers, and clear deleted reactions.\n\n     */\n    var bezier_ids = [];\n    for (var bezier_id in this.beziers) {\n        bezier_ids.push(bezier_id);\n    }\n    this.draw_these_beziers(bezier_ids);\n\n    // clear delete beziers\n    this.clear_deleted_beziers();\n}\n\nfunction draw_these_beziers(bezier_ids) {\n    /** Draw specific beziers.\n\n     Does nothing with exit selection. Use clear_deleted_beziers to remove\n     beziers from the DOM.\n\n     Arguments\n     ---------\n\n     beziers_ids: An array of bezier_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var bezier_subset = utils.object_slice_for_ids_ref(this.beziers, bezier_ids);\n\n    // function to update beziers\n    var update_fn = function(sel) {\n        return this.draw.update_bezier(sel,\n                                       this.beziers_enabled,\n                                       this.behavior.bezier_drag,\n                                       this.behavior.bezier_mouseover,\n                                       this.behavior.bezier_mouseout,\n                                       this.nodes,\n                                       this.reactions);\n    }.bind(this);\n\n    // draw the beziers\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', bezier_subset,\n                         'bezier_id', this.draw.create_bezier.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_beziers() {\n    /** Remove any beziers that are not in *this.beziers*.\n\n     */\n    // remove deleted\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', this.beziers,\n                         'bezier_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction show_beziers() {\n    this.toggle_beziers(true);\n}\n\nfunction hide_beziers() {\n    this.toggle_beziers(false);\n}\n\nfunction toggle_beziers(on_off) {\n    if (_.isUndefined(on_off)) this.beziers_enabled = !this.beziers_enabled;\n    else this.beziers_enabled = on_off;\n    this.draw_all_beziers();\n    this.callback_manager.run('toggle_beziers', null, this.beziers_enabled);\n}\n\nfunction apply_reaction_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style');\n    var has_data = data_styles.apply_reaction_data_to_reactions(this.reactions, data,\n                                                                styles, compare_style);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\nfunction apply_metabolite_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('metabolite_styles'),\n        compare_style = this.settings.get_option('metabolite_compare_style');\n\n    var has_data = data_styles.apply_metabolite_data_to_nodes(this.nodes, data,\n                                                              styles, compare_style);\n    this.has_data_on_nodes = has_data;\n\n    return this.calc_data_stats('metabolite');\n}\n\nfunction apply_gene_data_to_map(gene_data_obj) {\n    /** Returns True if the scale has changed.\n\n     Arguments\n     ---------\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { rule: 'rule_string', genes: { gene_id: value } } }\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        and_method_in_gene_reaction_rule = this.settings.get_option('and_method_in_gene_reaction_rule');\n\n    var has_data = data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                                            styles, identifiers_on_map,\n                                                            compare_style,\n                                                            and_method_in_gene_reaction_rule);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\n// ------------------------------------------------\n// Data domains\nfunction get_data_statistics() {\n    return this.data_statistics;\n}\n\nfunction calc_data_stats(type) {\n    /** Returns True if the stats have changed.\n\n     Arguments\n     ---------\n\n     type: Either 'metabolite' or 'reaction'\n\n     */\n\n    if (['reaction', 'metabolite'].indexOf(type) == -1)\n        throw new Error('Bad type ' + type);\n\n    // make the data structure\n    if (!('data_statistics' in this)) {\n        this.data_statistics = {};\n        this.data_statistics[type] = {};\n    } else if (!(type in this.data_statistics)) {\n        this.data_statistics[type] = {};\n    }\n\n    var same = true;\n    // default min and max\n    var vals = [];\n    if (type == 'metabolite') {\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            // check number\n            if (node.data !== null)\n                vals.push(node.data);\n        }\n    } else if (type == 'reaction') {\n        for (var reaction_id in this.reactions) {\n            var reaction = this.reactions[reaction_id];\n            // check number\n            if (reaction.data !== null)\n                vals.push(reaction.data);\n        }\n    }\n\n    // calculate these statistics\n    var quartiles = utils.quartiles(vals),\n        funcs = [['min', on_array(Math.min)],\n                 ['max', on_array(Math.max)],\n                 ['mean', utils.mean],\n                 ['Q1', function() { return quartiles[0]; }],\n                 ['median', function() { return quartiles[1]; }],\n                 ['Q3', function() { return quartiles[2]; }]];\n    funcs.forEach(function(ar) {\n        var new_val, name = ar[0];\n        if (vals.length == 0) {\n            new_val = null;\n        } else {\n            var fn = ar[1];\n            new_val = fn(vals);\n        }\n        if (new_val != this.data_statistics[type][name])\n            same = false;\n        this.data_statistics[type][name] = new_val;\n    }.bind(this));\n\n    if (type == 'reaction')\n        this.callback_manager.run('calc_data_stats__reaction', null, !same);\n    else\n        this.callback_manager.run('calc_data_stats__metabolite', null, !same);\n    return !same;\n\n    // definitions\n    function on_array(fn) {\n        return function (array) { return fn.apply(null, array); };\n    }\n}\n\n// ---------------------------------------------------------------------\n// Node interaction\n\nfunction get_coords_for_node(node_id) {\n    var node = this.nodes[node_id],\n        coords = {'x': node.x, 'y': node.y};\n    return coords;\n}\nfunction get_selected_node_ids() {\n    var selected_node_ids = [];\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) { selected_node_ids.push(d.node_id); });\n    return selected_node_ids;\n}\nfunction get_selected_nodes() {\n    var selected_nodes = {},\n        self = this;\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_nodes[d.node_id] = this.nodes[d.node_id];\n        }.bind(this));\n    return selected_nodes;\n}\nfunction get_selected_text_label_ids() {\n    var selected_text_label_ids = [];\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) { selected_text_label_ids.push(d.text_label_id); });\n    return selected_text_label_ids;\n}\nfunction get_selected_text_labels() {\n    var selected_text_labels = {},\n        self = this;\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_text_labels[d.text_label_id] = this.text_labels[d.text_label_id];\n        }.bind(this));\n    return selected_text_labels;\n}\n\nfunction select_all() {\n    /** Select all nodes and text labels.\n\n     */\n    this.sel.selectAll('#nodes,#text-labels')\n        .selectAll('.node,.text-label')\n        .classed('selected', true);\n}\n\nfunction select_none() {\n    /** Deselect all nodes and text labels.\n\n     */\n    this.sel.selectAll('.selected')\n        .classed('selected', false);\n}\n\nfunction invert_selection() {\n    /** Invert selection of nodes and text labels.\n\n     */\n    var selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label');\n    selection.classed('selected', function() {\n        return !d3.select(this).classed('selected');\n    });\n}\n\nfunction select_metabolite_with_id(node_id) {\n    /** Select a metabolite with the given id, and turn off the reaction\n     target.\n\n     */\n    // deselect all text labels\n    this.deselect_text_labels();\n\n    var node_selection = this.sel.select('#nodes').selectAll('.node'),\n        coords,\n        selected_node;\n    node_selection.classed('selected', function(d) {\n        var selected = String(d.node_id) == String(node_id);\n        if (selected) {\n            selected_node = d;\n            coords = { x: d.x, y: d.y };\n        }\n        return selected;\n    });\n    this.sel.selectAll('.start-reaction-target').style('visibility', 'hidden');\n    this.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n}\n\nfunction select_selectable(node, d, shift_key_on) {\n    /** Select a metabolite or text label, and manage the shift key. */\n    shift_key_on = _.isUndefined(shift_key_on) ? false : shift_key_on;\n    var classable_selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label'),\n        classable_node;\n    if (d3.select(node).attr('class').indexOf('text-label') == -1) {\n        // node\n        classable_node = node.parentNode;\n    } else {\n        // text-label\n        classable_node = node;\n    }\n    // toggle selection\n    if (shift_key_on) {\n        // toggle this node\n        d3.select(classable_node)\n            .classed('selected', !d3.select(classable_node).classed('selected'));\n    } else {\n        // unselect all other nodes, and select this one\n        classable_selection.classed('selected', false);\n        d3.select(classable_node).classed('selected', true);\n    }\n    // run the select_metabolite callback\n    var selected_nodes = this.sel.select('#nodes').selectAll('.selected'),\n        node_count = 0,\n        coords,\n        selected_node;\n    selected_nodes.each(function(d) {\n        selected_node = d;\n        coords = { x: d.x, y: d.y };\n        node_count++;\n    });\n    this.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n}\n\nfunction select_single_node() {\n    /** Unselect all but one selected node, and return the node.\n\n     If no nodes are selected, return null.\n\n     */\n    var out = null,\n        self = this,\n        node_selection = this.sel.select('#nodes').selectAll('.selected');\n    node_selection.classed('selected', function(d, i) {\n        if (i==0) {\n            out = d;\n            return true;\n        } else {\n            return false;\n        }\n    });\n    return out;\n}\nfunction deselect_nodes() {\n    var node_selection = this.sel.select('#nodes').selectAll('.node');\n    node_selection.classed('selected', false);\n    this.callback_manager.run('deselect_nodes');\n}\nfunction select_text_label(sel, d) {\n    // deselect all nodes\n    this.deselect_nodes();\n    // find the new selection\n    // Ignore shift key and only allow single selection for now\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', function(p) { return d === p; });\n    var selected_text_labels = this.sel.select('#text-labels').selectAll('.selected'),\n        coords;\n    selected_text_labels.each(function(d) {\n        coords = { x: d.x, y: d.y };\n    });\n    this.callback_manager.run('select_text_label');\n}\n\nfunction deselect_text_labels() {\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', false);\n}\n\n// ---------------------------------------------------------------------\n// Delete\n\nfunction delete_selected() {\n    /** Delete the selected nodes and associated segments and reactions, and selected labels.\n\n     Undoable.\n\n     */\n    var selected_nodes = this.get_selected_nodes(),\n        selected_text_labels = this.get_selected_text_labels();\n    if (Object.keys(selected_nodes).length >= 1 ||\n        Object.keys(selected_text_labels).length >= 1)\n        this.delete_selectable(selected_nodes, selected_text_labels, true);\n}\n\nfunction delete_selectable(selected_nodes, selected_text_labels, should_draw) {\n    /** Delete the nodes and associated segments and reactions. Undoable.\n\n     Arguments\n     ---------\n\n     selected_nodes: An object that is a subset of map.nodes.\n\n     selected_text_labels: An object that is a subset of map.text_labels.\n\n     should_draw: A boolean argument to determine whether to draw the changes to the map.\n\n     */\n\n    var out = this.segments_and_reactions_for_nodes(selected_nodes),\n        segment_objs_w_segments = out.segment_objs_w_segments, // TODO repeated values here\n        reactions = out.reactions;\n\n    // copy nodes to undelete\n    var saved_nodes = utils.clone(selected_nodes),\n        saved_segment_objs_w_segments = utils.clone(segment_objs_w_segments),\n        saved_reactions = utils.clone(reactions),\n        saved_text_labels = utils.clone(selected_text_labels),\n        delete_and_draw = function(nodes, reactions, segment_objs,\n                                   selected_text_labels) {\n            // delete nodes, segments, and reactions with no segments\n            this.delete_node_data(Object.keys(selected_nodes));\n            this.delete_segment_data(segment_objs); // also deletes beziers\n            this.delete_reaction_data(Object.keys(reactions));\n            this.delete_text_label_data(Object.keys(selected_text_labels));\n\n            // apply the reaction and node data\n            var changed_r_scale = false,\n                changed_m_scale = false;\n            if (this.has_data_on_reactions)\n                changed_r_scale = this.calc_data_stats('reaction');\n            if (this.has_data_on_nodes)\n                changed_m_scale = this.calc_data_stats('metabolite');\n\n            // redraw\n            if (should_draw) {\n                if (changed_r_scale)\n                    this.draw_all_reactions(true, true);\n                else\n                    this.clear_deleted_reactions(); // also clears segments and beziers\n                if (changed_m_scale)\n                    this.draw_all_nodes(true);\n                else\n                    this.clear_deleted_nodes();\n                this.clear_deleted_text_labels();\n            }\n        }.bind(this);\n\n    // delete\n    delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                    selected_text_labels);\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // redraw the saved nodes, reactions, and segments\n\n        this.extend_nodes(saved_nodes);\n        this.extend_reactions(saved_reactions);\n        var reaction_ids_to_draw = Object.keys(saved_reactions);\n        for (var segment_id in saved_segment_objs_w_segments) {\n            var segment_obj = saved_segment_objs_w_segments[segment_id];\n\n            var segment = segment_obj.segment;\n            this.reactions[segment_obj.reaction_id]\n                .segments[segment_obj.segment_id] = segment;\n\n            // updated connected nodes\n            [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n                // not necessary for the deleted nodes\n                if (node_id in saved_nodes) return;\n                var node = this.nodes[node_id];\n                node.connected_segments.push({ reaction_id: segment_obj.reaction_id,\n                                               segment_id: segment_obj.segment_id });\n            }.bind(this));\n\n            // extend the beziers\n            var seg_id = segment_obj.segment_id,\n                r_id = segment_obj.reaction_id,\n                seg_o = {};\n            seg_o[seg_id] = segment_obj.segment;\n            utils.extend(this.beziers, build.new_beziers_for_segments(seg_o, r_id));\n\n            if (reaction_ids_to_draw.indexOf(segment_obj.reaction_id)==-1)\n                reaction_ids_to_draw.push(segment_obj.reaction_id);\n        }\n\n        // apply the reaction and node data\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(reaction_ids_to_draw);\n        } else {\n            if (should_draw) this.draw_these_reactions(reaction_ids_to_draw);\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (should_draw) {\n                if (scale_changed) this.draw_all_nodes(false);\n                else this.draw_these_nodes(Object.keys(saved_nodes));\n            }\n        } else {\n            if (should_draw) this.draw_these_nodes(Object.keys(saved_nodes));\n        }\n\n        // redraw the saved text_labels\n        utils.extend(this.text_labels, saved_text_labels);\n        if (should_draw) this.draw_these_text_labels(Object.keys(saved_text_labels));\n        // copy text_labels to re-delete\n        selected_text_labels = utils.clone(saved_text_labels);\n\n        // copy nodes to re-delete\n        selected_nodes = utils.clone(saved_nodes);\n        segment_objs_w_segments = utils.clone(saved_segment_objs_w_segments);\n        reactions = utils.clone(saved_reactions);\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                        selected_text_labels);\n    }.bind(this));\n}\n\nfunction delete_node_data(node_ids) {\n    /** Delete nodes, and remove from search index.\n     */\n    node_ids.forEach(function(node_id) {\n        if (this.enable_search && this.nodes[node_id].node_type=='metabolite') {\n            var found = (this.search_index.remove('n' + node_id)\n                         && this.search_index.remove('n_name' + node_id));\n            if (!found)\n                console.warn('Could not find deleted metabolite in search index');\n        }\n        delete this.nodes[node_id];\n    }.bind(this));\n}\n\nfunction delete_segment_data(segment_objs) {\n    /** Delete segments, update connected_segments in nodes, and delete\n     bezier points.\n\n     segment_objs: Object with values like { reaction_id: '123', segment_id: '456' }\n\n     */\n    for (var segment_id in segment_objs) {\n        var segment_obj = segment_objs[segment_id];\n        var reaction = this.reactions[segment_obj.reaction_id];\n\n        // segment already deleted\n        if (!(segment_obj.segment_id in reaction.segments)) return;\n\n        var segment = reaction.segments[segment_obj.segment_id];\n        // updated connected nodes\n        [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n            if (!(node_id in this.nodes)) return;\n            var node = this.nodes[node_id];\n            node.connected_segments = node.connected_segments.filter(function(so) {\n                return so.segment_id != segment_obj.segment_id;\n            });\n        }.bind(this));\n\n        // remove beziers\n        ['b1', 'b2'].forEach(function(bez) {\n            var bez_id = build.bezier_id_for_segment_id(segment_obj.segment_id, bez);\n            delete this.beziers[bez_id];\n        }.bind(this));\n\n        delete reaction.segments[segment_obj.segment_id];\n    }\n}\nfunction delete_reaction_data(reaction_ids) {\n    /** Delete reactions, segments, and beziers, and remove reaction from\n     search index.\n\n     */\n    reaction_ids.forEach(function(reaction_id) {\n        // remove beziers\n        var reaction = this.reactions[reaction_id];\n        for (var segment_id in reaction.segments) {\n            ['b1', 'b2'].forEach(function(bez) {\n                var bez_id = build.bezier_id_for_segment_id(segment_id, bez);\n                delete this.beziers[bez_id];\n            }.bind(this));\n        }\n        // delete reaction\n        delete this.reactions[reaction_id];\n        // remove from search index\n        var found = (this.search_index.remove('r' + reaction_id)\n                     && this.search_index.remove('r_name' + reaction_id));\n        if (!found)\n            console.warn('Could not find deleted reaction ' +\n                         reaction_id + ' in search index');\n        for (var g_id in reaction.genes) {\n            var found = (this.search_index.remove('r' + reaction_id + '_g' + g_id)\n                         && this.search_index.remove('r' + reaction_id + '_g_name' + g_id));\n            if (!found)\n                console.warn('Could not find deleted gene ' +\n                             g_id + ' in search index');\n        }\n    }.bind(this));\n}\nfunction delete_text_label_data(text_label_ids) {\n    /** delete text labels for an array of ids\n     */\n    text_label_ids.forEach(function(text_label_id) {\n        // delete label\n        delete this.text_labels[text_label_id];\n        // remove from search index\n        var found = this.search_index.remove('l'+text_label_id);\n        if (!found)\n            console.warn('Could not find deleted text label in search index');\n    }.bind(this));\n}\n\n// ---------------------------------------------------------------------\n// Building\n// ---------------------------------------------------------------------\n\n/**\n * Draw a reaction on a blank canvas.\n * @param {String} starting_reaction - bigg_id for a reaction to draw.\n * @param {Coords} coords - coordinates to start drawing\n */\nfunction new_reaction_from_scratch(starting_reaction, coords, direction) {\n    // If there is no cobra model, error\n    if (!this.cobra_model) {\n        console.error('No CobraModel. Cannot build new reaction')\n        return\n    }\n\n    // Set reaction coordinates and angle. Be sure to clone the reaction.\n    var cobra_reaction = utils.clone(this.cobra_model.reactions[starting_reaction])\n\n    // check for empty reactions\n    if (_.size(cobra_reaction.metabolites) === 0)\n        throw Error('No metabolites in reaction ' + cobra_reaction.bigg_id)\n\n    // create the first node\n    var reactant_ids = _.map(cobra_reaction.metabolites,\n                             function (coeff, met_id) { return [ coeff, met_id ] })\n            .filter(function (x) { return x[0] < 0 }) // coeff < 0\n            .map(function(x) { return x[1] }) // metabolite id\n    // get the first reactant or else the first product\n    var metabolite_id = (reactant_ids.length > 0 ?\n                         reactant_ids[0] :\n                         Object.keys(cobra_reaction.metabolites)[0])\n    var metabolite = this.cobra_model.metabolites[metabolite_id]\n    var selected_node_id = String(++this.largest_ids.nodes)\n    var label_d = { x: 30, y: 10 }\n    var selected_node = { connected_segments: [],\n                          x: coords.x,\n                          y: coords.y,\n                          node_is_primary: true,\n                          label_x: coords.x + label_d.x,\n                          label_y: coords.y + label_d.y,\n                          name: metabolite.name,\n                          bigg_id: metabolite_id,\n                          node_type: 'metabolite' }\n    var new_nodes = {}\n    new_nodes[selected_node_id] = selected_node\n\n    // draw\n    extend_and_draw_metabolite.apply(this, [ new_nodes, selected_node_id ])\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes)\n\n    // draw the reaction\n    var out = this.new_reaction_for_metabolite(starting_reaction,\n                                               selected_node_id,\n                                               direction, false),\n        reaction_redo = out.redo,\n        reaction_undo = out.undo\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // first undo the reaction\n        reaction_undo()\n        // get the nodes to delete\n        this.delete_node_data(Object.keys(new_nodes))\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes)\n        // draw\n        this.clear_deleted_nodes()\n        // deselect\n        this.deselect_nodes()\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id])\n        // now redo the reaction\n        reaction_redo()\n    }.bind(this))\n\n    return\n\n    // definitions\n    function extend_and_draw_metabolite(new_nodes, selected_node_id) {\n        this.extend_nodes(new_nodes)\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.apply_metabolite_data_to_nodes(new_nodes)\n            if (scale_changed) this.draw_all_nodes(false)\n            else this.draw_these_nodes([selected_node_id])\n        } else {\n            this.draw_these_nodes([selected_node_id])\n        }\n    }\n}\n\nfunction extend_nodes(new_nodes) {\n    /** Add new nodes to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_type != 'metabolite')\n                continue;\n            this.search_index.insert('n' + node_id,\n                                     { 'name': node.bigg_id,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n            this.search_index.insert('n_name' + node_id,\n                                     { 'name': node.name,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n        }\n    }\n    utils.extend(this.nodes, new_nodes);\n}\nfunction extend_reactions(new_reactions) {\n    /** Add new reactions to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var r_id in new_reactions) {\n            var reaction = new_reactions[r_id];\n            this.search_index.insert('r' + r_id, { 'name': reaction.bigg_id,\n                                                   'data': { type: 'reaction',\n                                                             reaction_id: r_id }});\n            this.search_index.insert('r_name' + r_id, { 'name': reaction.name,\n                                                        'data': { type: 'reaction',\n                                                                  reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                this.search_index.insert('r' + r_id + '_g' + g_id,\n                                         { 'name': gene.bigg_id,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n                this.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                         { 'name': gene.name,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n            }\n        }\n    }\n    utils.extend(this.reactions, new_reactions);\n}\n\n/**\n * Build a new reaction starting with selected_met. Undoable.\n * @param {String} reaction_bigg_id - The BiGG ID of the reaction to draw.\n * @param {String} selected_node_id - The ID of the node to begin drawing with.\n * @param {Number} direction - The direction to draw in.\n * @param {Boolean} [apply_undo_redo=true] - If true, then add to the undo\n * stack. Otherwise, just return the undo and redo functions.\n * @return An object of undo and redo functions:\n *   { undo: undo_function, redo: redo_function }\n */\nfunction new_reaction_for_metabolite(reaction_bigg_id, selected_node_id,\n                                     direction, apply_undo_redo) {\n    // default args\n    if (apply_undo_redo === undefined) apply_undo_redo = true;\n\n    // get the metabolite node\n    var selected_node = this.nodes[selected_node_id];\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = this.cobra_model.reactions[reaction_bigg_id];\n\n    // build the new reaction\n    var out = build.new_reaction(reaction_bigg_id, cobra_reaction,\n                                 this.cobra_model.metabolites,\n                                 selected_node_id,\n                                 utils.clone(selected_node),\n                                 this.largest_ids,\n                                 this.settings.get_option('cofactors'),\n                                 direction),\n        new_nodes = out.new_nodes,\n        new_reactions = out.new_reactions,\n        new_beziers = out.new_beziers;\n\n    // draw\n    extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                          new_beziers, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes),\n        saved_reactions = utils.clone(new_reactions),\n        saved_beziers = utils.clone(new_beziers);\n\n    // add to undo/redo stack\n    var undo_fn = function() {\n        // undo\n        // get the nodes to delete\n        delete new_nodes[selected_node_id];\n        this.delete_node_data(Object.keys(new_nodes));\n        this.delete_reaction_data(Object.keys(new_reactions)); // also deletes beziers\n        select_metabolite_with_id.apply(this, [selected_node_id]);\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        new_reactions = utils.clone(saved_reactions);\n        new_beziers = utils.clone(saved_beziers);\n        // draw\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, true);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.clear_deleted_reactions(true); // also clears segments and beziers\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(true);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.clear_deleted_nodes();\n        }\n    }.bind(this),\n        redo_fn = function () {\n            // redo\n            // clone the nodes and reactions, to redo this action later\n            extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                                  new_beziers, selected_node_id]);\n        }.bind(this);\n\n    if (apply_undo_redo)\n        this.undo_stack.push(undo_fn, redo_fn);\n\n    return { undo: undo_fn,\n             redo: redo_fn };\n\n    // definitions\n    function extend_and_draw_reaction(new_nodes, new_reactions, new_beziers,\n                                      selected_node_id) {\n        this.extend_reactions(new_reactions);\n        utils.extend(this.beziers, new_beziers);\n        // remove the selected node so it can be updated\n        this.delete_node_data([selected_node_id]); // TODO this is a hack. fix\n        this.extend_nodes(new_nodes);\n\n        // apply the reaction and node data to the scales\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.draw_these_reactions(Object.keys(new_reactions));\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.draw_these_nodes(Object.keys(new_nodes));\n        }\n\n        // select new primary metabolite\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_is_primary && node_id!=selected_node_id) {\n                this.select_metabolite_with_id(node_id);\n                var new_coords = { x: node.x, y: node.y };\n                if (this.zoom_container)\n                    this.zoom_container.translate_off_screen(new_coords);\n            }\n        }\n    }\n\n}\nfunction cycle_primary_node() {\n    var selected_nodes = this.get_selected_nodes();\n    // get the first node\n    var node_id = Object.keys(selected_nodes)[0],\n        node = selected_nodes[node_id],\n        reactions = this.reactions,\n        nodes = this.nodes;\n    // make the other reactants or products secondary\n    // 1. Get the connected anchor nodes for the node\n    var connected_anchor_ids = [],\n        reactions_to_draw;\n    nodes[node_id].connected_segments.forEach(function(segment_info) {\n        reactions_to_draw = [segment_info.reaction_id];\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        connected_anchor_ids.push(segment.from_node_id==node_id ?\n                                  segment.to_node_id : segment.from_node_id);\n    });\n    // can only be connected to one anchor\n    if (connected_anchor_ids.length != 1) {\n        console.error('Only connected nodes with a single reaction can be selected');\n        return;\n    }\n    var connected_anchor_id = connected_anchor_ids[0];\n    // 2. find nodes connected to the anchor that are metabolites\n    var related_node_ids = [node_id];\n    var segments = [];\n    nodes[connected_anchor_id].connected_segments.forEach(function(segment_info) { // deterministic order\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        var conn_met_id = segment.from_node_id == connected_anchor_id ? segment.to_node_id : segment.from_node_id,\n            conn_node = nodes[conn_met_id];\n        if (conn_node.node_type == 'metabolite' && conn_met_id != node_id) {\n            related_node_ids.push(String(conn_met_id));\n        }\n    });\n    // 3. make sure they only have 1 reaction connection, and check if\n    // they match the other selected nodes\n    for (var i=0; i<related_node_ids.length; i++) {\n        if (nodes[related_node_ids[i]].connected_segments.length > 1) {\n            console.error('Only connected nodes with a single reaction can be selected');\n            return;\n        }\n    }\n    for (var a_selected_node_id in selected_nodes) {\n        if (a_selected_node_id!=node_id && related_node_ids.indexOf(a_selected_node_id) == -1) {\n            console.warn('Selected nodes are not on the same reaction');\n            return;\n        }\n    }\n    // 4. change the primary node, and change coords, label coords, and beziers\n    var nodes_to_draw = [],\n        last_i = related_node_ids.length - 1,\n        last_node = nodes[related_node_ids[last_i]],\n        last_is_primary = last_node.node_is_primary,\n        last_coords = { x: last_node.x, y: last_node.y,\n                        label_x: last_node.label_x, label_y: last_node.label_y };\n    if (last_node.connected_segments.length > 1)\n        console.warn('Too many connected segments for node ' + last_node.node_id);\n    var last_segment_info = last_node.connected_segments[0], // guaranteed above to have only one\n        last_segment;\n    try {\n        last_segment = reactions[last_segment_info.reaction_id].segments[last_segment_info.segment_id];\n        if (last_segment === undefined) throw new Error('undefined segment');\n    } catch (e) {\n        console.error('Could not find connected segment ' + last_segment_info.segment_id);\n        return;\n    }\n    var last_bezier = { b1: last_segment.b1, b2: last_segment.b2 },\n        primary_node_id;\n    related_node_ids.forEach(function(related_node_id) {\n        var node = nodes[related_node_id],\n            this_is_primary = node.node_is_primary,\n            these_coords = { x: node.x, y: node.y,\n                             label_x: node.label_x, label_y: node.label_y },\n            this_segment_info = node.connected_segments[0],\n            this_segment = reactions[this_segment_info.reaction_id].segments[this_segment_info.segment_id],\n            this_bezier = { b1: this_segment.b1, b2: this_segment.b2 };\n        node.node_is_primary = last_is_primary;\n        node.x = last_coords.x; node.y = last_coords.y;\n        node.label_x = last_coords.label_x; node.label_y = last_coords.label_y;\n        this_segment.b1 = last_bezier.b1; this_segment.b2 = last_bezier.b2;\n        last_is_primary = this_is_primary;\n        last_coords = these_coords;\n        last_bezier = this_bezier;\n        if (node.node_is_primary) primary_node_id = related_node_id;\n        nodes_to_draw.push(related_node_id);\n    });\n    // 5. cycle the connected_segments array so the next time, it cycles differently\n    var old_connected_segments = nodes[connected_anchor_id].connected_segments,\n        last_i = old_connected_segments.length - 1,\n        new_connected_segments = [old_connected_segments[last_i]];\n    old_connected_segments.forEach(function(segment, i) {\n        if (last_i==i) return;\n        new_connected_segments.push(segment);\n    });\n    nodes[connected_anchor_id].connected_segments = new_connected_segments;\n    // 6. draw the nodes\n    this.draw_these_nodes(nodes_to_draw);\n    this.draw_these_reactions(reactions_to_draw);\n    // 7. select the primary node\n    this.select_metabolite_with_id(primary_node_id);\n    return;\n}\n\nfunction toggle_selected_node_primary() {\n    /** Toggle the primary/secondary status of each selected node.\n\n     Undoable.\n\n     */\n    var selected_node_ids = this.get_selected_node_ids(),\n        go = function(ids) {\n            var nodes_to_draw = {},\n                hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n            ids.forEach(function(id) {\n                if (!(id in this.nodes)) {\n                    console.warn('Could not find node: ' + id);\n                    return;\n                }\n                var node = this.nodes[id];\n                if (node.node_type == 'metabolite') {\n                    node.node_is_primary = !node.node_is_primary;\n                    nodes_to_draw[id] = node;\n                }\n            }.bind(this));\n            // draw the nodes\n            this.draw_these_nodes(Object.keys(nodes_to_draw));\n            // draw associated reactions\n            if (hide_secondary_metabolites) {\n                var out = this.segments_and_reactions_for_nodes(nodes_to_draw),\n                    reaction_ids_to_draw_o = {};\n                for (var id in out.segment_objs_w_segments) {\n                    var r_id = out.segment_objs_w_segments[id].reaction_id;\n                    reaction_ids_to_draw_o[r_id] = true;\n                }\n                this.draw_these_reactions(Object.keys(reaction_ids_to_draw_o));\n            }\n        }.bind(this);\n\n    // go\n    go(selected_node_ids);\n\n    // add to the undo stack\n    this.undo_stack.push(function () {\n        go(selected_node_ids);\n    }, function () {\n        go(selected_node_ids);\n    });\n}\n\nfunction segments_and_reactions_for_nodes(nodes) {\n    /** Get segments and reactions that should be deleted with node deletions\n\n     */\n    var segment_objs_w_segments = {},\n        these_reactions = {},\n        segment_ids_for_reactions = {},\n        reactions = this.reactions;\n    // for each node\n    for (var node_id in nodes) {\n        var node = nodes[node_id];\n        // find associated segments and reactions\n        node.connected_segments.forEach(function(segment_obj) {\n            var segment;\n            try {\n                segment = reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segments for node');\n                return;\n            }\n            var segment_obj_w_segment = utils.clone(segment_obj);\n            segment_obj_w_segment['segment'] = utils.clone(segment);\n            segment_objs_w_segments[segment_obj.segment_id] = segment_obj_w_segment;\n            if (!(segment_obj.reaction_id in segment_ids_for_reactions))\n                segment_ids_for_reactions[segment_obj.reaction_id] = [];\n            segment_ids_for_reactions[segment_obj.reaction_id].push(segment_obj.segment_id);\n        });\n    }\n    // find the reactions that should be deleted because they have no segments left\n    for (var reaction_id in segment_ids_for_reactions) {\n        var reaction = reactions[reaction_id],\n            these_ids = segment_ids_for_reactions[reaction_id],\n            has = true;\n        for (var segment_id in reaction.segments) {\n            if (these_ids.indexOf(segment_id)==-1) has = false;\n        }\n        if (has) these_reactions[reaction_id] = reaction;\n    }\n    return { segment_objs_w_segments: segment_objs_w_segments, reactions: these_reactions };\n}\n\nfunction new_text_label(coords, text) {\n    // make an label\n    var out = build.new_text_label(this.largest_ids, text, coords);\n    this.text_labels[out.id] = out.label;\n    var sel = this.draw_these_text_labels([out.id]);\n    // add to the search index\n    this.search_index.insert('l' + out.id, { 'name': text,\n                                             'data': { type: 'text_label',\n                                                       text_label_id: out.id }});\n    return out.id;\n}\n\nfunction edit_text_label(text_label_id, new_value, should_draw) {\n    // save old value\n    var saved_value = this.text_labels[text_label_id].text,\n        edit_and_draw = function(new_val, should_draw) {\n            // set the new value\n            this.text_labels[text_label_id].text = new_val;\n            if (should_draw) this.draw_these_text_labels([text_label_id]);\n            // update in the search index\n            var record_id = 'l' + text_label_id,\n                found = this.search_index.remove(record_id);\n            if (!found)\n                console.warn('Could not find modified text label in search index');\n            this.search_index.insert(record_id, { 'name': new_val,\n                                                  'data': { type: 'text_label',\n                                                            text_label_id: text_label_id }});\n        }.bind(this);\n\n    // edit the label\n    edit_and_draw(new_value, should_draw);\n\n    // add to undo stack\n    this.undo_stack.push(function() {\n        edit_and_draw(saved_value, should_draw);\n    }, function () {\n        edit_and_draw(new_value, should_draw);\n    });\n}\n\n// -------------------------------------------------------------------------\n// Zoom\n\nfunction zoom_extent_nodes(margin) {\n    /** Zoom to fit all the nodes.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'nodes');\n}\n\nfunction zoom_extent_canvas(margin) {\n    /** Zoom to fit the canvas.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'canvas');\n}\n\nfunction _zoom_extent(margin, mode) {\n    /** Zoom to fit the canvas or all the nodes. Returns error if one is\n     raised.\n\n     Arguments\n     ---------\n\n     margin: optional argument to set the margins.\n\n     mode: Values are 'nodes', 'canvas'.\n\n     */\n\n    // optional args\n    if (_.isUndefined(margin)) margin = (mode=='nodes' ? 0.2 : 0);\n    if (_.isUndefined(mode)) mode = 'canvas';\n\n    var new_zoom, new_pos,\n        size = this.get_size();\n    // scale margin to window size\n    margin = margin * size.height;\n\n    if (mode=='nodes') {\n        // get the extent of the nodes\n        var min = { x: null, y: null }, // TODO make infinity?\n            max = { x: null, y: null };\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            if (min.x===null) min.x = node.x;\n            if (min.y===null) min.y = node.y;\n            if (max.x===null) max.x = node.x;\n            if (max.y===null) max.y = node.y;\n\n            min.x = Math.min(min.x, node.x);\n            min.y = Math.min(min.y, node.y);\n            max.x = Math.max(max.x, node.x);\n            max.y = Math.max(max.y, node.y);\n        }\n        // set the zoom\n        new_zoom = Math.min((size.width - margin*2) / (max.x - min.x),\n                            (size.height - margin*2) / (max.y - min.y));\n        new_pos = { x: - (min.x * new_zoom) + margin + ((size.width - margin*2 - (max.x - min.x)*new_zoom) / 2),\n                    y: - (min.y * new_zoom) + margin + ((size.height - margin*2 - (max.y - min.y)*new_zoom) / 2) };\n    } else if (mode=='canvas') {\n        // center the canvas\n        new_zoom =  Math.min((size.width - margin*2) / (this.canvas.width),\n                             (size.height - margin*2) / (this.canvas.height));\n        new_pos = { x: - (this.canvas.x * new_zoom) + margin + ((size.width - margin*2 - this.canvas.width*new_zoom) / 2),\n                    y: - (this.canvas.y * new_zoom) + margin + ((size.height - margin*2 - this.canvas.height*new_zoom) / 2) };\n    } else {\n        return console.error('Did not recognize mode');\n    }\n    this.zoom_container.go_to(new_zoom, new_pos);\n    return null;\n}\n\nfunction get_size() {\n    return this.zoom_container.get_size();\n}\n\nfunction zoom_to_reaction(reaction_id) {\n    var reaction = this.reactions[reaction_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - reaction.label_x * new_zoom + size.width/2,\n                    y: - reaction.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_node(node_id) {\n    var node = this.nodes[node_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - node.label_x * new_zoom + size.width/2,\n                    y: - node.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_text_label(text_label_id) {\n    var text_label = this.text_labels[text_label_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - text_label.x * new_zoom + size.width/2,\n                    y: - text_label.y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction highlight_reaction(reaction_id) {\n    this.highlight(this.sel.selectAll('#r'+reaction_id).selectAll('text'));\n}\n\nfunction highlight_node(node_id) {\n    this.highlight(this.sel.selectAll('#n'+node_id).selectAll('text'));\n}\n\nfunction highlight_text_label(text_label_id) {\n    this.highlight(this.sel.selectAll('#l'+text_label_id).selectAll('text'));\n}\n\nfunction highlight(sel) {\n    this.sel.selectAll('.highlight')\n        .classed('highlight', false);\n    if (sel !== null) {\n        sel.classed('highlight', true);\n    }\n}\n\n// -------------------------------------------------------------------------\n// Full screen\n// -------------------------------------------------------------------------\n\nfunction full_screen_event () {\n    if      (document.fullscreenEnabled)       return 'fullscreenchange'\n    else if (document.mozFullScreenEnabled)    return 'mozfullscreenchange'\n    else if (document.webkitFullscreenEnabled) return 'webkitfullscreenchange'\n    else if (document.msFullscreenEnabled)     return 'MSFullscreenChange'\n    else                                       return null\n}\n\n/**\n * Call the function when full screen is enabled.\n *\n * To unregister the event listener for the full screen event,\n * unlisten_for_full_screen.\n */\nfunction listen_for_full_screen (fn) {\n    document.addEventListener(full_screen_event(), fn)\n    this.full_screen_listener = fn\n}\n\n/**\n * Remove the listener created by listen_for_full_screen.\n */\nfunction unlisten_for_full_screen () {\n    document.removeEventListener(full_screen_event(), this.full_screen_listener)\n}\n\n/**\n * Enter full screen if supported by the browser.\n */\nfunction full_screen() {\n    var sel = this.zoom_container.selection\n    var e = sel.node()\n    var d = document\n    var full_screen_on = (d.fullscreenElement || d.mozFullScreenElement ||\n                          d.webkitFullscreenElement || d.msFullscreenElement)\n    if (full_screen_on) {\n        // apply full heigh/width 100%\n        sel.classed('full-screen-on', false)\n        // exit\n        if      (d.exitFullscreen)       d.exitFullscreen()\n        else if (d.mozCancelFullScreen)  d.mozCancelFullScreen()\n        else if (d.webkitExitFullscreen) d.webkitExitFullscreen()\n        else if (d.msExitFullscreen)     d.msExitFullscreen()\n        else throw Error('Cannot exit full screen')\n    } else {\n        sel.classed('full-screen-on', true)\n        // enter\n        if      (e.requestFullscreen)       e.requestFullscreen()\n        else if (e.mozRequestFullScreen)    e.mozRequestFullScreen()\n        else if (e.webkitRequestFullscreen) e.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)\n        else if (e.msRequestFullscreen)     e.msRequestFullscreen()\n        else throw Error('Full screen does not seem to be supported on this system.')\n    }\n}\n\n// -------------------------------------------------------------------------\n// IO\n\nfunction save() {\n    utils.download_json(this.map_for_export(), this.map_name);\n}\n\n\nfunction map_for_export() {\n    var out = [{ \"map_name\": this.map_name,\n                 \"map_id\": this.map_id,\n                 \"map_description\": this.map_description,\n                 \"homepage\": \"https://escher.github.io\",\n                 \"schema\": \"https://escher.github.io/escher/jsonschema/1-0-0#\"\n               },\n               { reactions: utils.clone(this.reactions),\n                 nodes: utils.clone(this.nodes),\n                 text_labels: utils.clone(this.text_labels),\n                 canvas: this.canvas.size_and_location() }\n              ];\n\n    // remove extra data\n    for (var r_id in out[1].reactions) {\n        var reaction = out[1].reactions[r_id],\n            new_reaction = {};\n        ['name', 'bigg_id','reversibility', 'label_x', 'label_y',\n         'gene_reaction_rule', 'genes', 'metabolites'\n        ].forEach(function(attr) {\n            new_reaction[attr] = reaction[attr];\n        });\n        new_reaction['segments'] = {};\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id],\n                new_segment = {};\n            ['from_node_id', 'to_node_id', 'b1', 'b2'\n            ].forEach(function(attr) {\n                new_segment[attr] = segment[attr];\n            });\n            new_reaction['segments'][s_id] = new_segment;\n        }\n        out[1].reactions[r_id] = new_reaction;\n    }\n    for (var n_id in out[1].nodes) {\n        var node = out[1].nodes[n_id],\n            new_node = {},\n            attrs;\n        if (node.node_type == 'metabolite') {\n            attrs = ['node_type', 'x', 'y', 'bigg_id', 'name', 'label_x', 'label_y',\n                     'node_is_primary'];\n        } else {\n            attrs = ['node_type', 'x', 'y'];\n        }\n        attrs.forEach(function(attr) {\n            new_node[attr] = node[attr];\n        });\n        out[1].nodes[n_id] = new_node;\n    }\n    for (var t_id in out[1].text_labels) {\n        var text_label = out[1].text_labels[t_id],\n            new_text_label = {},\n            attrs = [\"x\", \"y\", \"text\"];\n        attrs.forEach(function(attr) {\n            new_text_label[attr] = text_label[attr];\n        });\n        out[1].text_labels[t_id] = new_text_label;\n    }\n    // canvas\n    var canvas_el = out[1].canvas,\n        new_canvas_el = {},\n        attrs = [\"x\", \"y\", \"width\", \"height\"];\n    attrs.forEach(function(attr) {\n        new_canvas_el[attr] = canvas_el[attr];\n    });\n    out[1].canvas = new_canvas_el;\n\n    return out;\n}\n\nfunction save_map(obj, callback_before, callback_after, map_type) {\n    /** Rescale the canvas and save as svg/png.\n\n     */\n\n    // run the before callback\n    obj.callback_manager.run(callback_before);\n\n    // turn ofo zoom and translate so that illustrator likes the map\n    var window_scale = obj.zoom_container.window_scale,\n        window_translate = obj.zoom_container.window_translate,\n        canvas_size_and_loc = obj.canvas.size_and_location(),\n        mouse_node_size_and_trans = {\n            w: obj.canvas.mouse_node.attr('width'),\n            h: obj.canvas.mouse_node.attr('height'),\n            transform: obj.canvas.mouse_node.attr('transform')\n        };\n\n    obj.zoom_container._go_to_svg(1.0, { x: -canvas_size_and_loc.x, y: -canvas_size_and_loc.y }, function() {\n        obj.svg.attr('width', canvas_size_and_loc.width);\n        obj.svg.attr('height', canvas_size_and_loc.height);\n        obj.canvas.mouse_node.attr('width', '0px');\n        obj.canvas.mouse_node.attr('height', '0px');\n        obj.canvas.mouse_node.attr('transform', null);\n\n        // hide the segment control points\n        var hidden_sel = obj.sel.selectAll('.multimarker-circle,.midmarker-circle,#canvas')\n            .style('visibility', 'hidden');\n\n        // do the export\n        if(map_type == 'svg') {\n            utils.download_svg('saved_map', obj.svg, true);\n        } else if(map_type == 'png') {\n            utils.download_png('saved_map', obj.svg, true);\n        }\n\n        // revert everything\n        obj.zoom_container._go_to_svg(window_scale, window_translate, function() {\n            obj.svg.attr('width', null);\n            obj.svg.attr('height', null);\n            obj.canvas.mouse_node.attr('width', mouse_node_size_and_trans.w);\n            obj.canvas.mouse_node.attr('height', mouse_node_size_and_trans.h);\n            obj.canvas.mouse_node.attr('transform', mouse_node_size_and_trans.transform);\n            // unhide the segment control points\n            hidden_sel.style('visibility', null);\n\n            // run the after callback\n            obj.callback_manager.run(callback_after);\n        }.bind(obj));\n    }.bind(obj));\n}\n\nfunction save_svg() {\n    save_map(this, 'before_svg_export', 'after_svg_export', 'svg');\n}\n\nfunction save_png() {\n    save_map(this, 'before_png_export', 'after_png_export', 'png');\n}\n\nfunction convert_map() {\n    /** Assign the descriptive names and gene_reaction_rules from the model\n     to the map.\n\n     If no map is loaded, then throw an Error.\n\n     If some reactions are not in the model, then warn in the status.\n\n     */\n    // run the before callback\n    this.callback_manager.run('before_convert_map');\n\n    // check the model\n    if (!this.has_cobra_model()) throw Error('No COBRA model loaded.');\n    var model = this.cobra_model;\n\n    // ids for reactions and metabolites not found in the model\n    var reactions_not_found = {},\n        reaction_attrs = ['name', 'gene_reaction_rule', 'genes'],\n        met_nodes_not_found = {},\n        metabolite_attrs = ['name'],\n        found;\n    // convert reactions\n    for (var reaction_id in this.reactions) {\n        var reaction = this.reactions[reaction_id];\n        found = false;\n        // find in cobra model\n        for (var model_reaction_id in model.reactions) {\n            var model_reaction = model.reactions[model_reaction_id];\n            if (model_reaction.bigg_id == reaction.bigg_id) {\n                reaction_attrs.forEach(function(attr) {\n                    reaction[attr] = model_reaction[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            reactions_not_found[reaction_id] = true;\n    }\n    // convert metabolites\n    for (var node_id in this.nodes) {\n        var node = this.nodes[node_id];\n        // only look at metabolites\n        if (node.node_type != 'metabolite') continue;\n        found = false;\n        // find in cobra model\n        for (var model_metabolite_id in model.metabolites) {\n            var model_metabolite = model.metabolites[model_metabolite_id];\n            if (model_metabolite.bigg_id == node.bigg_id) {\n                metabolite_attrs.forEach(function(attr) {\n                    node[attr] = model_metabolite[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            met_nodes_not_found[node_id] = true;\n    }\n\n    // status\n    var n_reactions_not_found = Object.keys(reactions_not_found).length,\n        n_met_nodes_not_found = Object.keys(met_nodes_not_found).length,\n        status_delay = 3000;\n    if (n_reactions_not_found == 0 &&\n        n_met_nodes_not_found == 0) {\n        this.set_status('Successfully converted attributes.', status_delay);\n    } else if (n_met_nodes_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else if (n_reactions_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_met_nodes_not_found +\n                        ' metabolites in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions and ' + n_met_nodes_not_found + ' metabolites in the model.',\n                        status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    }\n\n    // redraw\n    this.draw_everything();\n\n    // run the after callback\n    this.callback_manager.run('after_convert_map');\n}\n","/** PlacedDiv. A container to position an html div to match the coordinates of a\n SVG element. */\n\nvar utils = require('./utils');\n\n\nvar PlacedDiv = utils.make_class();\n// instance methods\nPlacedDiv.prototype = {\n    init: init,\n    is_visible: is_visible,\n    place: place,\n    hide: hide\n};\nmodule.exports = PlacedDiv;\n\n\n// definitions\nfunction init(div, map, displacement) {\n    // make the input box\n    this.div = div;\n\n    if (displacement===undefined)\n        displacement = {x: 0, y: 0};\n    this.displacement = displacement;\n\n    this.map = map;\n}\n\nfunction is_visible() {\n    return this.div.style('display') != 'none';\n}\n\nfunction place(coords) {\n    /** Position the html div to match the given SVG coordinates.\n\n     */\n    // show the input\n    this.div.style('display', null);\n\n    // move the new input\n    var window_translate = this.map.zoom_container.window_translate,\n        window_scale = this.map.zoom_container.window_scale,\n        map_size = this.map.get_size(),\n        left = Math.max(20,\n                        Math.min(map_size.width - 270,\n                                 (window_scale * coords.x + window_translate.x - this.displacement.x))),\n        top = Math.max(20,\n                       Math.min(map_size.height - 40,\n                                (window_scale * coords.y + window_translate.y - this.displacement.y)));\n    this.div.style('position', 'absolute')\n        .style('display', 'block')\n        .style('left', left+'px')\n        .style('top', top+'px');\n}\n\nfunction hide() {\n    this.div.style('display', 'none');\n}\n","/** A QuickJump menu to move between maps.\n\n Arguments\n ---------\n\n sel: The d3 selection of an html node to place the menu inside.\n\n options: An array of map names to jump to.\n\n load_callback: A callback function that accepts two arguments: map_name,\n and another callback which returns true or false for success or failure\n (callback purgatory).\n\n */\n\nvar utils = require('./utils');\n\n\nvar QuickJump = utils.make_class();\n// instance methods\nQuickJump.prototype = {\n    init: init,\n    reset_selection: reset_selection,\n    replace_state_for_map_name: replace_state_for_map_name\n};\nmodule.exports = QuickJump;\n\n\n// instance methods\nfunction init(sel, load_callback) {\n    // set up the menu\n    var select_sel = sel.append('select')\n            .attr('id', 'quick-jump-menu')\n            .attr('class', 'form-control');\n    this.selector = select_sel;\n\n    // get the options to show\n    var url_comp = utils.parse_url_components(window),\n        current = ('map_name' in url_comp) ? url_comp.map_name : null,\n        quick_jump_path = ('quick_jump_path' in url_comp) ? url_comp.quick_jump_path : null,\n        options = ('quick_jump' in url_comp) ? url_comp.quick_jump : [],\n        default_value = '— Jump to map —',\n        view_options = [default_value].concat(options);\n    if (current !== null) {\n        view_options = view_options.filter(function(o) {\n            return o != current;\n        });\n    }\n\n    select_sel.selectAll('option')\n        .data(view_options)\n        .enter()\n        .append('option')\n        .text(function(d) {\n            // works whether or not a '.' is present\n            return d.split('.').slice(-1)[0];\n        });\n\n    // only show if there are options\n    select_sel.style('display', view_options.length > 1 ? 'block' : 'none');\n\n    // on selection\n    var change_map = function(map_name) {\n        load_callback(map_name, quick_jump_path, function(success) {\n            if (success)\n                this.replace_state_for_map_name(map_name);\n            else\n                this.reset_selection();\n        }.bind(this));\n    }.bind(this);\n\n    select_sel.on('change', function() {\n        // get the new map\n        var map_name = this.options[this.selectedIndex].__data__;\n        change_map(map_name);\n    });\n}\n\nfunction reset_selection() {\n    this.selector.node().selectedIndex = 0;\n}\n\nfunction replace_state_for_map_name(map_name) {\n    /** Just changes the url to match the new map name. Does not actually\n     manage the HTML5 history.\n\n     */\n\n    // update the url with the new map\n    var url = window.location.href\n            .replace(/(map_name=)([^&]+)(&|$)/, '$1' + map_name + '$3');\n    window.history.replaceState('Not implemented', '', url);\n}\n","/** Scale */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Scale = utils.make_class();\nScale.prototype = {\n    init: init,\n    connect_to_settings: connect_to_settings\n};\nmodule.exports = Scale;\n\n\nfunction init() {\n    this.x = d3.scale.linear();\n    this.y = d3.scale.linear();\n    this.x_size = d3.scale.linear();\n    this.y_size = d3.scale.linear();\n    this.size = d3.scale.linear();\n    this.reaction_color = d3.scale.linear().clamp(true);\n    this.reaction_size = d3.scale.linear().clamp(true);\n    this.metabolite_color = d3.scale.linear().clamp(true);\n    this.metabolite_size = d3.scale.linear().clamp(true);\n    this.scale_path = function(path) {\n        var x_fn = this.x, y_fn = this.y;\n        // TODO: scale arrow width\n        var str = d3.format(\".2f\"),\n            path = path.replace(/(M|L)([0-9-.]+),?\\s*([0-9-.]+)/g, function (match, p0, p1, p2) {\n                return p0 + [str(x_fn(parseFloat(p1))), str(y_fn(parseFloat(p2)))].join(', ');\n            }),\n            reg = /C([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)/g;\n        path = path.replace(reg, function (match, p1, p2, p3, p4, p5, p6) {\n            return 'C'+str(x_fn(parseFloat(p1)))+','+\n                str(y_fn(parseFloat(p2)))+' '+\n                str(x_fn(parseFloat(p3)))+','+\n                str(y_fn(parseFloat(p4)))+' '+\n                [str(x_fn(parseFloat(p5)))+','+str(y_fn(parseFloat(p6)))];\n        });\n        return path;\n    }.bind(this);\n    this.scale_decimals = function(path, scale_fn, precision) {\n        var str = d3.format(\".\"+String(precision)+\"f\");\n        path = path.replace(/([0-9.]+)/g, function (match, p1) {\n            return str(scale_fn(parseFloat(p1)));\n        });\n        return path;\n    };\n}\n\nfunction connect_to_settings(settings, map, get_data_statistics) {\n    // domains\n    var update_reaction = function(s) {\n        var out = sort_scale(s, get_data_statistics()['reaction']);\n        this.reaction_color.domain(out.domain);\n        this.reaction_size.domain(out.domain);\n        this.reaction_color.range(out.color_range);\n        this.reaction_size.range(out.size_range);\n    }.bind(this);\n    var update_metabolite = function(s) {\n        var out = sort_scale(s, get_data_statistics()['metabolite']);\n        this.metabolite_color.domain(out.domain);\n        this.metabolite_size.domain(out.domain);\n        this.metabolite_color.range(out.color_range);\n        this.metabolite_size.range(out.size_range);\n    }.bind(this);\n\n    // scale changes\n    settings.streams['reaction_scale'].onValue(update_reaction);\n    settings.streams['metabolite_scale'].onValue(update_metabolite);\n    // stats changes\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) update_reaction(settings.get_option('reaction_scale'));\n    });\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) update_metabolite(settings.get_option('metabolite_scale'));\n    });\n\n    // definitions\n    function sort_scale(scale, stats) {\n        var sorted = scale.map(function(x) {\n            var v;\n            if (x.type in stats)\n                v = stats[x.type];\n            else if (x.type == 'value')\n                v = x.value;\n            else\n                throw new Error('Bad domain type ' + x.type);\n            return { v: v,\n                     color: x.color,\n                     size: x.size };\n        }).sort(function(a, b) {\n            return a.v - b.v;\n        });\n        return { domain: sorted.map(function(x) { return x.v; }),\n                 color_range: sorted.map(function(x) { return x.color; }),\n                 size_range: sorted.map(function(x) { return x.size; }) };\n    }\n}\n","/** ScaleEditor. An interactive UI to edit color and size scales.\n\n Attributes\n ----------\n\n sel: A d3 selection.\n\n type: A type, that should be unique on the page.\n\n settings: The Settings object.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar bacon = require('baconjs');\n\n\nvar ScaleEditor = utils.make_class();\n// instance methods\nScaleEditor.prototype = {\n    init: init,\n    update: update,\n    update_no_data: update_no_data,\n    _data_not_loaded: _data_not_loaded\n};\nmodule.exports = ScaleEditor;\n\n\n// instance methods\nfunction init(sel, type, settings, get_data_statistics) {\n    // sels\n    var grad_id = 'grad' + type + this.unique_string;\n    this.w = 400;\n    this.h = 30;\n    this.x = 20;\n    this.input_width = 90;\n    this.input_height = 24;\n    var b = sel.append('div')\n            .attr('class', 'scale-editor');\n    // no data loaded\n    this.data_not_loaded = b.append('div')\n        .attr('class', 'data-not-loaded')\n        .text((type == 'reaction' ? 'Reaction and gene' : 'Metabolite') + ' data not loaded');\n    // label\n    this.input_label_group = b.append('div')\n        .attr('class', 'input-label-group');\n    // no data\n    var nd = b.append('div')\n            .style('top', this.input_height * 3 + 56 + 10 + 'px')\n            .attr('class', 'no-data');\n    nd.append('span').text('Styles for ' + type + 's with no data')\n        .attr('class', 'no-data-heading');\n    this.no_data_container = nd.append('div');\n    var c = b.append('div')\n            .attr('class', 'centered');\n    this.add_group = c.append('div');\n    this.trash_group = c.append('div')\n        .attr('class', 'trash-container');\n    var svg = c.append('svg')\n            .attr('class', 'scale-svg');\n    this.input_group = c.append('div')\n        .attr('class', 'input-container');\n    this.gradient = svg.append('defs')\n        .append('linearGradient')\n        .attr('id', grad_id);\n    svg.append('rect')\n        .attr('class', 'rect')\n        .attr('fill', 'url(#' + grad_id + ')')\n        .attr('width', this.w + 'px')\n        .attr('height', this.h + 'px')\n        .attr('x', this.x + 'px'),\n    this.pickers_group = svg.append('g');\n\n    // settings\n    this.type = type;\n    this.settings = settings;\n    this.get_data_statistics = get_data_statistics;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    // collect data\n    this.no_data = {};\n    ['color', 'size'].forEach(function(s) {\n        this.no_data[s] = null;\n        this.settings.streams[this.type + '_no_data_' + s].onValue(function(val) {\n            this.no_data[s] = val;\n            this.update_no_data();\n        }.bind(this));\n    }.bind(this));\n\n    this.settings.streams[type + '_scale'].onValue(function(scale) {\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n}\n\nfunction update() {\n    var scale = this.scale,\n        stats = this.get_data_statistics()[this.type],\n        bar_w = 14,\n        bar_h = 35,\n        x_disp = this.x,\n        data_not_loaded = this._data_not_loaded();\n\n    // Must have max and min. Otherwise, assume that no data is loaded.\n    if (data_not_loaded) {\n        scale = [{ type: 'min', 'color': null, 'size': null },\n                 { type: 'max', 'color': null, 'size': null }];\n        stats = { 'min': 0, 'max': 1 };\n    }\n\n    var sc = d3.scale.linear()\n            .domain([0, this.w])\n            .range([stats.min, stats.max]),\n        sc_size = d3.scale.linear()\n            .domain([0, this.w])\n            .range([0, stats.max - stats.min]);\n\n    // ---------------------------------------------------------------------\n    // convenience functions\n    var bring_to_front = function(d, i) {\n        // bring an input set to the front\n        this.input_group.selectAll('.input-set').each(function(d2) {\n            d3.select(this).classed('selected-set', d === d2);\n        });\n    }.bind(this);\n\n    var get_this_val = function(d) {\n        return (d.type == 'value') ? d.value : stats[d.type];\n    };\n\n    var set_scale = function(scale) {\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this);\n\n    // ---------------------------------------------------------------------\n    // make the gradient\n    var sorted_domain = scale.map(function(d) {\n        return { frac: (get_this_val(d) - stats.min) / (stats.max - stats.min),\n                 color: d.color };\n    }).filter(function(d) {\n        return (d.frac >= 0 && d.frac <= 1.0);\n    }).sort(function(a, b) {\n        return a.frac - b.frac;\n    });\n    var stops = this.gradient.selectAll('stop')\n            .data(sorted_domain);\n    stops.enter()\n        .append('stop');\n    stops.attr('offset', function(d) {\n        return d.frac * 100 + '%';\n    }).style('stop-color', function (d) {\n        return d.color === null ? '#F1ECFA' : d.color;\n    });\n    stops.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // no data sign\n\n    this.data_not_loaded.style('visibility', (data_not_loaded ? null : 'hidden'));\n\n    // ---------------------------------------------------------------------\n    // make the pickers\n    var pickers = this.pickers_group\n            .selectAll('.picker')\n            .data(scale);\n    // drag\n    var drag = d3.behavior.drag();\n    drag.on('drag', function(d, i) {\n        // on drag, make it a value type\n        if (['value', 'min', 'max'].indexOf(scale[i].type) === -1) {\n            // get the current value and set it\n            scale[i].value = get_this_val(d);\n            scale[i].type = 'value';\n        }\n        // change the model on drag\n        var new_d = scale[i].value + sc_size(d3.event.dx),\n            buf = sc_size(bar_w + 2);\n        if (new_d > stats.max - buf) new_d = stats.max - buf;\n        if (new_d < stats.min + buf) new_d = stats.min + buf;\n        // round to 2 decimals\n        new_d = Math.floor(new_d * 100.0) / 100.0;\n        scale[i].value = new_d;\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // enter\n    pickers.enter()\n        .append('g')\n        .attr('class', 'picker')\n        .style('cursor', 'pointer')\n        .append('rect');\n    // update\n    pickers.select('rect')\n        .attr('x', function(d, i) {\n            var val = get_this_val(d),\n                buf = bar_w + 2;\n            if (d.type == 'value' && val <= stats.min)\n                return sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            if (d.type == 'value' && val >= stats.max)\n                return sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            return sc.invert(val) - (bar_w / 2) + x_disp;\n        })\n        .attr('width', bar_w + 'px')\n        .attr('height', bar_h + 'px')\n        .call(drag)\n        .on('mousedown', bring_to_front);\n    // exit\n    pickers.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the delete buttons\n    var trashes = this.trash_group.selectAll('span')\n            .data(scale);\n    // enter\n    trashes.enter()\n        .append('span');\n    // update\n    trashes.attr('class', function(d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return null;\n        return 'trash glyphicon glyphicon-trash';\n    }).style('left', function(d) {\n        return sc.invert(get_this_val(d)) - (bar_w / 2) + x_disp + 'px';\n    }).on('click', function (d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return;\n        scale = scale.slice(0, i).concat(scale.slice(i + 1));\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // exit\n    trashes.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the add button\n    var add = this.add_group.selectAll('.add')\n            .data(['add']);\n    // enter\n    add.enter()\n        .append('span')\n        .attr('class', 'add glyphicon glyphicon-plus');\n    // update\n    add.on('click', function (d) {\n        if (data_not_loaded) return;\n\n        var new_d = (stats.max + stats.min) / 2,\n            buf = sc_size(bar_w + 2),\n            last_ind = 0;\n        // try to make the new point not overlap\n        for (var j = 0, l = scale.length; j < l; j++) {\n            var th = get_this_val(scale[j]);\n            if (Math.abs(th - new_d) < buf) {\n                new_d = new_d + buf;\n                if (new_d > stats.max - buf) new_d = stats.max - buf;\n                if (new_d < stats.min + buf) new_d = stats.min + buf;\n            }\n            if (new_d > th)\n                last_ind = j;\n        }\n        // add\n        scale.push({ type: 'value',\n                     value: new_d,\n                     color: scale[last_ind].color,\n                     size: scale[last_ind].size });\n        set_scale(scale);\n    }.bind(this));\n    // exit\n    add.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // input labels\n    var labels = this.input_label_group.selectAll('.row-label')\n            .data(['Value:', 'Color:', 'Size:']);\n    // enter\n    labels.enter().append('div')\n        .attr('class', 'row-label')\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px');\n    // update\n    labels\n        .style('top', function(d, i) {\n            return 56 + (i * this.input_height) + 'px';\n        }.bind(this))\n        .text(function(d) { return d; });\n    // exit\n    labels.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // inputs\n    var inputs = this.input_group.selectAll('.input-set')\n            .data(scale);\n\n    // enter\n    var i = inputs.enter()\n            .append('div')\n            .attr('class', 'input-set');\n    i.append('input')\n        .attr('class', 'domain-input')\n        .style('width', this.input_width + 'px');\n    // type picker\n    i.append('select')\n        .attr('class', 'domain-type-picker'),\n    // color input\n    i.append('input')\n        .attr('class', 'color-input')\n        .style('width', this.input_width + 'px');\n    i.append('input')\n        .attr('type', 'color')\n        .style('visibility', function() {\n            // hide the input if the HTML5 color picker is not supported\n            return (this.type == 'text') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    i.append('input')\n        .attr('class', 'size-input')\n        .style('width', this.input_width + 'px');\n\n    // update\n    inputs.style('height', this.input_height * 3 + 'px')\n        .style('width', this.input_width + 'px')\n        .style('left', function(d) {\n            var val = get_this_val(d),\n                buf = bar_w + 2,\n                l;\n            if (d.type == 'value' && val <= stats.min)\n                l = sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            else if (d.type == 'value' && val >= stats.max)\n                l = sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            else\n                l = sc.invert(val) - (bar_w / 2) + x_disp;\n            // don't go over the right edge of the bar\n            if (l + this.input_width > this.w + this.x)\n                l = l - this.input_width + (bar_w / 2);\n            return l + 'px';\n        }.bind(this))\n        .on('mousedown', bring_to_front);\n\n    var format = d3.format('.4g');\n    inputs.select('.domain-input')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            if (d.type == 'value') {\n                this.value = get_this_val(d);\n                this.disabled = false;\n            } else {\n                this.value = d.type + ' (' + format(get_this_val(d)) + ')';\n                this.disabled = true;\n            }\n        }).on('change', function(d, i) {\n            var buf = sc_size(bar_w + 2),\n                new_d = parseFloat(this.value);\n            scale[i].value = new_d;\n            set_scale(scale);\n        });\n    // update type picker\n    var select = inputs.select('.domain-type-picker'),\n        // get the function types, except min and max\n        stat_types = (['value'].concat(Object.keys(stats))\n                      .filter(function(x) {\n                          return x != 'min' && x != 'max';\n                      })),\n        opts = select.selectAll('option').data(stat_types);\n    opts.enter().append('option');\n    opts.attr('value', function(d) { return d; })\n        .text(function(d) { return d; });\n    opts.exit().remove();\n    select.style('visibility', function(d) {\n        return (d.type == 'min' || d.type == 'max') ? 'hidden' : null;\n    })\n        .style('left', (this.input_width - 20) + 'px')\n        .style('width', '20px')\n        .each(function (d, i) {\n            var sind = 0;\n            d3.select(this).selectAll('option').each(function(_, i) {\n                if (this.value == d.type)\n                    sind = i;\n            });\n            this.selectedIndex = sind;\n        }).on('change', function(d, i) {\n            // set the value to the current location\n            if (this.value == 'value')\n                scale[i].value = stats[d.type];\n            // switch to the new type\n            scale[i].type = this.value;\n            // reload\n            set_scale(scale);\n        });\n    // update color input\n    inputs.select('.color-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.color-picker')\n        .style('left', (this.input_width - this.input_height) + 'px')\n        .style('top', this.input_height + 'px')\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '#dddddd' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.size-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height * 2 + 'px')\n        .each(function (d, i) {\n            this.value = (d.size === null ? '' : d.size);\n            this.disabled = (d.size === null);\n        }).on('change', function(d, i) {\n            scale[i].size = parseFloat(this.value);\n            set_scale(scale);\n        });\n\n    // exit\n    inputs.exit().remove();\n}\n\nfunction update_no_data() {\n    var no_data = this.no_data,\n        data_not_loaded = this._data_not_loaded(),\n        label_w = 40;\n\n    var ins = this.no_data_container\n            .selectAll('.input-group')\n            .data([['color', 'Color:'], ['size', 'Size:']]);\n    // enter\n    var t = ins.enter().append('div')\n            .attr('class', 'input-group');\n    t.append('span');\n    t.append('input');\n    t.append('input')\n        .attr('type', 'color')\n        .style('visibility', function(d) {\n            // hide the input if the HTML5 color picker is not supported,\n            // or if this is a size box\n            return (this.type == 'text' || d[0] != 'color') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    // update\n    ins.select('span')\n        .text(function(d) { return d[1]; })\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this));\n    var get_o = function(kind) {\n        return this.settings.get_option(this.type + '_no_data_' + kind);\n    }.bind(this);\n    ins.select('input')\n        .style('left', function(d, i) {\n            return (label_w + (label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this))\n        .style('height', this.input_height + 'px')\n        .style('width', this.input_width + 'px')\n        .each(function(d) {\n            // initial value\n            this.value = data_not_loaded ? '' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d) {\n            var val = d3.event.target.value;\n            if (d[0] == 'size')\n                val = parseFloat(val);\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    ins.select('.color-picker')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width) * (i + 1) - this.input_height) + 'px';\n        }.bind(this))\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = data_not_loaded ? '#dddddd' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d, i) {\n            var val = d3.event.target.value;\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    // exit\n    ins.exit().remove();\n}\n\nfunction _data_not_loaded() {\n    var stats = this.get_data_statistics()[this.type];\n    return (stats.max === null || stats.min === null);\n}\n","/** SearchBar */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\nvar _ = require('underscore');\n\nvar SearchBar = utils.make_class();\n// instance methods\nSearchBar.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    update: update,\n    next: next,\n    previous: previous\n};\nmodule.exports = SearchBar;\n\nfunction init(sel, search_index, map) {\n    var container = sel.attr('class', 'search-container')\n            .style('display', 'none');\n    this.input = container.append('input')\n        .attr('class', 'search-bar');\n    var group = container.append('div').attr('class', 'btn-group btn-group-sm');\n    group.append('button')\n        .attr('class', 'btn btn-default')\n        .on('click', this.previous.bind(this))\n        .append('span').attr('class', 'glyphicon glyphicon-chevron-left');\n    group.append('button')\n        .attr('class', 'btn btn-default')\n        .on('click', this.next.bind(this))\n        .append('span').attr('class', 'glyphicon glyphicon-chevron-right');\n    this.counter = container.append('div')\n        .attr('class', 'search-counter');\n    container.append('button')\n        .attr('class', 'btn btn-sm btn-default close-button')\n        .on('click', function() {\n            this.toggle(false);\n        }.bind(this))\n        .append('span').attr('class',  'glyphicon glyphicon-remove');\n\n    this.callback_manager = new CallbackManager();\n\n    this.selection = container;\n    this.map = map;\n    this.search_index = search_index;\n\n    this.current = 1;\n    this.results = null;\n\n    var on_input_fn = function(input) {\n        this.current = 1;\n        this.results = _drop_duplicates(this.search_index.find(input.value));\n        this.update();\n    }.bind(this, this.input.node());\n    this.input.on('input', utils.debounce(on_input_fn, 200));\n}\n\nvar comp_keys = {\n    metabolite: ['m', 'node_id'],\n    reaction: ['r', 'reaction_id'],\n    text_label: ['t', 'text_label_id']\n};\nfunction _drop_duplicates(results) {\n    return _.uniq(results, function(item) {\n        // make a string for fast comparison\n        var t = comp_keys[item.type];\n        return t[0] + item[t[1]];\n    });\n}\n\nfunction is_visible() {\n    return this.selection.style('display') !== 'none';\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n\n    if (this.is_active) {\n        this.selection.style('display', null);\n        this.counter.text('');\n        this.input.node().value = '';\n        this.input.node().focus();\n        // escape key\n        this.clear_escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.toggle(false);\n            }.bind(this), true);\n        // next keys\n        this.clear_next = this.map.key_manager\n            .add_key_listener(['enter', 'ctrl+g'], function() {\n                this.next();\n            }.bind(this), false);\n        // previous keys\n        this.clear_previous = this.map.key_manager\n            .add_key_listener(['shift+enter', 'shift+ctrl+g'], function() {\n                this.previous();\n            }.bind(this), false);\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        this.map.highlight(null);\n        this.selection.style('display', 'none');\n        this.results = null;\n        if (this.clear_escape) this.clear_escape();\n        this.clear_escape = null;\n        if (this.clear_next) this.clear_next();\n        this.clear_next = null;\n        if (this.clear_previous) this.clear_previous();\n        this.clear_previous = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\n\nfunction update() {\n    if (this.results === null) {\n        this.counter.text('');\n        this.map.highlight(null);\n    } else if (this.results.length === 0) {\n        this.counter.text('0 / 0');\n        this.map.highlight(null);\n    } else {\n        this.counter.text(this.current + ' / ' + this.results.length);\n        var r = this.results[this.current - 1];\n        if (r.type=='reaction') {\n            this.map.zoom_to_reaction(r.reaction_id);\n            this.map.highlight_reaction(r.reaction_id);\n        } else if (r.type=='metabolite') {\n            this.map.zoom_to_node(r.node_id);\n            this.map.highlight_node(r.node_id);\n        } else if (r.type=='text_label') {\n            this.map.zoom_to_text_label(r.text_label_id);\n            this.map.highlight_text_label(r.text_label_id);\n        } else {\n            throw new Error('Bad search index data type: ' + r.type);\n        }\n    }\n}\n\nfunction next() {\n    if (this.results === null) return;\n    if (this.current === this.results.length)\n        this.current = 1;\n    else\n        this.current += 1;\n    this.update();\n}\n\nfunction previous() {\n    if (this.results === null) return;\n    if (this.current === 1)\n        this.current = this.results.length;\n    else\n        this.current -= 1;\n    this.update();\n}\n","/** SearchIndex. Define an index for searching for reaction and metabolites in\n the map.\n\n The index is stored in SearchIndex.index, an object of id/record pairs.\n\n */\n\nvar utils = require('./utils');\n\nvar SearchIndex = utils.make_class();\nSearchIndex.prototype = {\n    init: init,\n    insert: insert,\n    remove: remove,\n    find: find\n};\nmodule.exports = SearchIndex;\n\n\nfunction init() {\n    this.index = {};\n}\n\nfunction insert(id, record, overwrite, check_record) {\n    /** Insert a record into the index.\n\n     id: A unique string id.\n\n     record: Records have the form:\n\n     { 'name': '',\n     'data': {} }\n\n     Search is performed on substrings of the name.\n\n     overwrite: (Default false) For faster performance, make overwrite true,\n     and records will be inserted without checking for an existing record.\n\n     check_record: (Default false) For faster performance, make check_record\n     false. If true, records will be checked to make sure they have name and\n     data attributes.\n\n     Returns undefined.\n\n     */\n    if (!overwrite && (id in this.index))\n        throw new Error(\"id is already in the index\");\n    if (check_record && !(('name' in record) && ('data' in record)))\n        throw new Error(\"malformed record\");\n    this.index[id] = record;\n}\n\nfunction remove(record_id) {\n    /** Remove the matching record.\n\n     Returns true is a record is found, or false if no match is found.\n\n     */\n    if (record_id in this.index) {\n        delete this.index[record_id];\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction find(substring) {\n    /** Find a record that matches the substring.\n\n     Returns an array of data from matching records.\n\n     */\n\n    var re = RegExp(substring, \"i\"), // ignore case\n        matches = [];\n    for (var id in this.index) {\n        var record = this.index[id];\n        if (re.exec(record.name))\n            matches.push(record.data);\n    }\n    return matches;\n}\n","/** Settings. A class to manage settings for a Map.\n\n Arguments\n ---------\n\n set_option: A function, fn(key), that returns the option value for the\n key.\n\n get_option: A function, fn(key, value), that sets the option for the key\n and value.\n\n conditional_options: The options to that are conditionally accepted when\n changed. Changes can be abandoned by calling abandon_changes(), or accepted\n by calling accept_changes().\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\nvar bacon = require('baconjs');\n\n\nvar Settings = utils.make_class();\n// instance methods\nSettings.prototype = {\n    init: init,\n    set_conditional: set_conditional,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes\n};\nmodule.exports = Settings;\n\n\n// instance methods\nfunction init(set_option, get_option, conditional_options) {\n    this.set_option = set_option;\n    this.get_option = get_option;\n\n    // manage accepting/abandoning changes\n    this.status_bus = new bacon.Bus();\n\n    // force an update of ui components\n    this.force_update_bus = new bacon.Bus();\n\n    // modify bacon.observable\n    bacon.Observable.prototype.convert_to_conditional_stream = _convert_to_conditional_stream;\n    bacon.Observable.prototype.force_update_with_bus = _force_update_with_bus;\n\n    // create the options\n    this.busses = {};\n    this.streams = {};\n    for (var i = 0, l = conditional_options.length; i < l; i++) {\n        var name = conditional_options[i],\n            out = _create_conditional_setting(name, get_option(name), set_option,\n                                              this.status_bus, this.force_update_bus);\n        this.busses[name] = out.bus;\n        this.streams[name] = out.stream;\n    }\n}\n\nfunction _convert_to_conditional_stream(status_stream) {\n    /** Hold on to event when hold_property is true, and only keep them\n     if accept_property is true (when hold_property becomes false).\n\n     */\n\n    // true if hold is pressed\n    var is_not_hold_event = status_stream\n            .map(function(x) { return x=='hold'; })\n            .not()\n            .toProperty(true),\n        is_not_first_clear = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && (x=='accepted' || x=='rejected'));\n            }).not(),\n        is_not_first_hold = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && x=='hold');\n            }).not(),\n        combined = bacon.combineAsArray(this, status_stream),\n        held = combined\n            .scan([], function(c, x) {\n                if (x[1]=='hold') {\n                    c.push(x[0]);\n                    return c;\n                } else if (x[1]=='accept') {\n                    return c;\n                } else if (x[1]=='reject') {\n                    return [];\n                } else if (x[1]=='rejected' || x[1]=='accepted') {\n                    return [x[0]];\n                } else {\n                    throw Error('bad status ' + x[1]);\n                }\n            })\n    // don't pass in events until the end of a hold\n            .filter(is_not_hold_event)\n    // ignore the event when clear is passed\n            .filter(is_not_first_clear)\n    // ignore the event when hold is passed\n            .filter(is_not_first_hold)\n            .flatMap(function(ar) {\n                return bacon.fromArray(ar);\n            }),\n        unheld = this.filter(is_not_hold_event);\n    return unheld.merge(held);\n}\n\nfunction _force_update_with_bus(bus) {\n    return bacon\n        .combineAsArray(this, bus.toProperty(false))\n        .map(function(t) {\n            return t[0];\n        });\n}\n\nfunction _create_conditional_setting(name, initial_value, set_option,\n                                     status_bus, force_update_bus) {\n    // set up the bus\n    var bus = new bacon.Bus();\n    // make the event stream\n    var stream = bus\n    // conditionally accept changes\n            .convert_to_conditional_stream(status_bus)\n    // force updates\n            .force_update_with_bus(force_update_bus);\n\n    // get the latest\n    stream.onValue(function(v) {\n        set_option(name, v);\n    });\n\n    // push the initial value\n    bus.push(initial_value);\n\n    return { bus: bus, stream: stream };\n}\n\nfunction set_conditional(name, value) {\n    /** Set the value of a conditional setting, one that will only be\n     accepted if this.accept_changes() is called.\n\n     Arguments\n     ---------\n\n     name: The option name\n\n     value: The new value\n\n     */\n\n    if (!(name in this.busses))\n        throw new Error('Invalid setting name');\n    this.busses[name].push(value);\n}\n\nfunction hold_changes() {\n    this.status_bus.push('hold');\n}\n\nfunction abandon_changes() {\n    this.status_bus.push('reject');\n    this.status_bus.push('rejected');\n    this.force_update_bus.push(true);\n}\n\nfunction accept_changes() {\n    this.status_bus.push('accept');\n    this.status_bus.push('accepted');\n}\n","/** SettingsMenu */\n\n'strict mode';\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\nvar ScaleEditor = require('./ScaleEditor');\n\n\nvar SettingsMenu = utils.make_class();\n// instance methods\nSettingsMenu.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes,\n    style_gui: style_gui,\n    view_gui: view_gui\n};\nmodule.exports = SettingsMenu;\n\n\n// instance methods\nfunction init(sel, settings, map, toggle_abs_and_apply_data) {\n    this.sel = sel;\n    this.settings = settings;\n    this.draw = false;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    var background = sel.append('div')\n            .attr('class', 'settings-box-background')\n            .style('display', 'none'),\n        container = background.append('div')\n            .attr('class', 'settings-box-container')\n            .style('display', 'none');\n\n    // done button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button\")\n        .on('click', function() {\n            this.accept_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-ok\");\n    // quit button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button settings-button-close\")\n        .on('click', function() {\n            this.abandon_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\");\n\n    var box = container.append('div')\n            .attr('class', 'settings-box');\n\n    // Tip\n    box.append('div')\n        .text('Tip: Hover over an option to see more details about it.')\n        .classed('settings-tip', true);\n    box.append('hr');\n\n    // view and build\n    box.append('div').text('View and build options')\n        .attr('class', 'settings-section-heading-large');\n    this.view_gui(box.append('div'));\n\n    // reactions\n    box.append('hr');\n    box.append('div')\n        .text('Reactions').attr('class', 'settings-section-heading-large');\n    var rse = new ScaleEditor(box.append('div'), 'reaction', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) {\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n    box.append('div')\n        .text('Reaction or Gene data').attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'reaction', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('reaction', on_off);\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n\n    // metabolite data\n    box.append('hr');\n    box.append('div').text('Metabolites')\n        .attr('class', 'settings-section-heading-large');\n    var mse = new ScaleEditor(box.append('div'), 'metabolite', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) {\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n    box.append('div').text('Metabolite data')\n        .attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'metabolite', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('metabolite', on_off);\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n\n    this.callback_manager = new CallbackManager();\n\n    this.map = map;\n    this.selection = container;\n    this.background = background;\n}\nfunction is_visible() {\n    return this.selection.style('display') != 'none';\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) on_off = !this.is_visible();\n\n    if (on_off) {\n        // hold changes until accepting/abandoning\n        this.hold_changes();\n        // show the menu\n        this.selection.style(\"display\", \"inline-block\");\n        this.background.style(\"display\", \"block\");\n        this.selection.select('input').node().focus();\n        // escape key\n        this.clear_escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.abandon_changes();\n            }.bind(this), true);\n        // enter key\n        this.clear_enter = this.map.key_manager\n            .add_enter_listener(function() {\n                this.accept_changes();\n            }.bind(this), true);\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        // draw on finish\n        if (this.draw) this.map.draw_everything();\n        // hide the menu\n        this.selection.style(\"display\", \"none\");\n        this.background.style(\"display\", \"none\");\n        if (this.clear_escape) this.clear_escape();\n        this.clear_escape = null;\n        if (this.clear_enter) this.clear_enter();\n        this.clear_enter = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\nfunction hold_changes() {\n    this.settings.hold_changes();\n}\nfunction abandon_changes() {\n    this.draw = false;\n    this.settings.abandon_changes();\n    this.toggle(false);\n}\nfunction accept_changes() {\n    this.sel.selectAll('input').each(function (s) {\n        this.blur();\n    });\n    this.draw = true;\n    this.settings.accept_changes();\n    this.toggle(false);\n}\n\nfunction style_gui(sel, type, abs_callback) {\n    /** A UI to edit style.\n\n     */\n\n    var t = sel.append('table').attr('class', 'settings-table'),\n        settings = this.settings;\n\n    // styles\n    t.append('tr').call(function(r) {\n        r.append('td').text('Options:')\n            .attr('class', 'options-label')\n            .attr('title', ('Options for ' + type + ' data.'));\n        var cell = r.append('td');\n\n        var styles = [['Absolute value', 'abs',\n                       ('If checked, use the absolute value when ' +\n                        'calculating colors and sizes of ' + type + 's on the map')],\n                      ['Size', 'size',\n                       ('If checked, then size the ' +\n                        (type == 'metabolite' ? 'radius of metabolite circles ' : 'thickness of reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Color', 'color',\n                       ('If checked, then color the ' +\n                        (type == 'metabolite' ? 'metabolite circles ' : 'reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Text (Show data in label)', 'text',\n                       ('If checked, then show data values in the ' + type + ' ' +\n                        'labels')]],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var streams = [],\n            get_styles = function() {\n                var styles = [];\n                cell.selectAll('input')\n                    .each(function(d) { if (this.checked) styles.push(d[1]); });\n                return styles;\n            };\n        s.append('input').attr('type', 'checkbox')\n            .on('change', function(d) {\n                settings.set_conditional(type + '_styles', get_styles());\n                if (d[1] == 'abs')\n                    abs_callback(this.checked);\n            }).each(function(d) {\n                // subscribe to changes in the model\n                settings.streams[type + '_styles'].onValue(function(ar) {\n                    // check the box if the style is present\n                    this.checked = (ar.indexOf(d[1]) != -1);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; })\n            .attr('title', function(d) { return d[2]; });\n    });\n\n    // compare_style\n    t.append('tr').call(function(r) {\n        r.append('td')\n            .text('Comparison:')\n            .attr('class', 'options-label')\n            .attr('title', ('The function that will be used to compare ' +\n                            'datasets, when paired data is loaded'));\n        var cell = r.append('td')\n                .attr('title', ('The function that will be used to compare ' +\n                                'datasets, when paired data is loaded'));;\n\n        var styles = [['Fold Change', 'fold'],\n                      ['Log2(Fold Change)', 'log2_fold'],\n                      ['Difference', 'diff']],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the radio\n        s.append('input').attr('type', 'radio')\n            .attr('name', type + '_compare_style' + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(type + '_compare_style', this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[type + '_compare_style'].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    // gene-specific settings\n    if (type=='reaction') {\n        var t = sel.append('table').attr('class', 'settings-table')\n                .attr('title', ('The function that will be used to evaluate ' +\n                                'AND connections in gene reaction rules (AND ' +\n                                'connections generally connect components of ' +\n                                'an enzyme complex)'));\n\n        // and_method_in_gene_reaction_rule\n        t.append('tr').call(function(r) {\n            r.append('td')\n                .text('Method for evaluating AND:')\n                .attr('class', 'options-label-wide');\n            var cell = r.append('td');\n\n            var styles = [['Mean', 'mean'], ['Min', 'min']],\n                style_cells = cell.selectAll('.option-group')\n                    .data(styles),\n                s = style_cells.enter()\n                    .append('label')\n                    .attr('class', 'option-group');\n\n            // make the radio\n            var name = 'and_method_in_gene_reaction_rule';\n            s.append('input').attr('type', 'radio')\n                .attr('name', name + this.unique_string)\n                .attr('value', function(d) { return d[1]; })\n                .on('change', function() {\n                    if (this.checked)\n                        settings.set_conditional(name, this.value);\n                })\n                .each(function() {\n                    // subscribe to changes in the model\n                    settings.streams[name].onValue(function(value) {\n                        // check the box for the new value\n                        this.checked = (this.value == value);\n                    }.bind(this));\n                });\n            s.append('span')\n                .text(function(d) { return d[0]; });\n        }.bind(this));\n\n    }\n}\n\nfunction view_gui(s, option_name, string, options) {\n\n    // columns\n    var settings = this.settings;\n\n    var t = s.append('table').attr('class', 'settings-table');\n    t.append('tr').call(function(r) {\n        // identifiers\n        r.attr('title', ('The identifiers that are show in the reaction, ' +\n                         'gene, and metabolite labels on the map.'));\n        r.append('td').text('Identifiers:')\n            .attr('class', 'options-label');\n        var cell = r.append('td');\n\n        var options = [['ID\\'s', 'bigg_id'], ['Descriptive names', 'name']],\n            style_cells = cell.selectAll('.option-group')\n                .data(options),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var name = 'identifiers_on_map';\n        s.append('input').attr('type', 'radio')\n            .attr('name', name + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(name, this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[name].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span').text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    var boolean_options = [\n        ['scroll_behavior', 'Scroll to zoom (instead of scroll to pan)',\n         ('If checked, then the scroll wheel and trackpad will control zoom ' +\n          'rather than pan.'), {'zoom': true, 'pan': false}],\n        ['hide_secondary_metabolites', 'Hide secondary metabolites',\n         ('If checked, then only the primary metabolites ' +\n          'will be displayed.')],\n        ['show_gene_reaction_rules', 'Show gene reaction rules',\n         ('If checked, then gene reaction rules will be displayed ' +\n          'below each reaction label. (Gene reaction rules are always ' +\n          'shown when gene data is loaded.)')],\n        ['hide_all_labels', 'Hide reaction, gene, and metabolite labels',\n         ('If checked, hide all reaction, gene, and metabolite labels')],\n        ['allow_building_duplicate_reactions', 'Allow duplicate reactions',\n         ('If checked, then allow duplicate reactions during model building.')],\n        ['highlight_missing', 'Highlight reactions not in model',\n         ('If checked, then highlight in red all the ' +\n          'reactions on the map that are not present in ' +\n          'the loaded model.')],\n    ];\n\n    var opts = s.append('div').attr('class', 'settings-container')\n            .selectAll('.option-group')\n            .data(boolean_options);\n    // enter\n    var e = opts.enter()\n            .append('label')\n            .attr('class', 'option-group full-line');\n    e.append('input').attr('type', 'checkbox');\n    e.append('span');\n    // update\n    opts.attr('title', function(d) { return d[2]; });\n    opts.select('input')\n        .on('change', function(d) {\n            if (d.length >= 4) { // not a boolean setting\n                for (var key in d[3]) {\n                    if (d[3][key] == this.checked) {\n                        settings.set_conditional(d[0], key);\n                        break;\n                    }\n                }\n            } else { // boolean setting\n                settings.set_conditional(d[0], this.checked);\n            }\n        })\n        .each(function(d) {\n            settings.streams[d[0]].onValue(function(value) {\n                if (d.length >= 4) { // not a boolean setting\n                    this.checked = d[3][value];\n                } else { // boolean setting\n                    this.checked = value;\n                }\n            }.bind(this));\n        });\n    opts.select('span')\n        .text(function(d) { return d[1]; });\n    // exit\n    opts.exit().remove();\n\n    // message about text performance\n    s.append('div')\n        .style('margin-top', '16px')\n        .classed('settings-tip', true)\n        .text('Tip: To increase map performance, turn off text boxes (i.e. labels and gene reaction rules).');\n}\n","/** TextEditInput */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar build = require('./build');\n\n\nvar TextEditInput = utils.make_class();\n// instance methods\nTextEditInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    show: show,\n    hide: hide,\n    _accept_changes: _accept_changes,\n    _add_and_edit: _add_and_edit\n};\nmodule.exports = TextEditInput;\n\n\n// definitions\nfunction init(selection, map, zoom_container) {\n    var div = selection.append('div')\n            .attr('id', 'text-edit-input');\n    this.placed_div = PlacedDiv(div, map);\n    this.placed_div.hide();\n    this.input = div.append('input');\n\n    this.map = map;\n    this.setup_map_callbacks(map);\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('edit_text_label.text_edit_input', function(target, coords) {\n        this.show(target, coords);\n    }.bind(this));\n\n    // new text_label\n    map.callback_manager.set('new_text_label.text_edit_input', function(coords) {\n        if (this.active_target !== null)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n        this._add_and_edit(coords);\n    }.bind(this));\n\n    map.callback_manager.set('hide_text_label_editor.text_edit_input', function() {\n        this.hide();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n    zoom_container.callback_manager.set('go_to.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction show(target, coords) {\n    // save any existing edit\n    if (this.active_target) {\n        this._accept_changes(this.active_target.target);\n    }\n\n    // set the current target\n    this.active_target = { target: target,\n                           coords: coords };\n\n    // set the new value\n    target.each(function(d) {\n        this.input.node().value = d.text;\n    }.bind(this));\n\n    // place the input\n    this.placed_div.place(coords);\n    this.input.node().focus();\n\n    // escape key\n    this.clear_escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this), true);\n    // enter key\n    this.clear_enter = this.map.key_manager\n        .add_enter_listener(function(target) {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this, target), true);\n}\n\nfunction hide() {\n    // hide the input\n    this.placed_div.hide();\n\n    // clear the value\n    this.input.attr('value', '');\n    this.active_target = null;\n\n    // clear escape\n    if (this.clear_escape) this.clear_escape();\n    this.clear_escape = null;\n    // clear enter\n    if (this.clear_enter) this.clear_enter();\n    this.clear_enter = null;\n    // turn off click listener\n    // this.map.sel.on('click.', null);\n}\n\nfunction _accept_changes(target) {\n    if (this.input.node().value == '') {\n        // delete the label\n        target.each(function(d) {\n            var selected = {};\n            selected[d.text_label_id] = this.map.text_labels[d.text_label_id];\n            this.map.delete_selectable({}, selected, true);\n        }.bind(this));\n    } else {\n        // set the text\n        var text_label_ids = [];\n        target.each(function(d) {\n            this.map.edit_text_label(d.text_label_id, this.input.node().value, true);\n            text_label_ids.push(d.text_label_id);\n        }.bind(this));\n    }\n}\n\nfunction _add_and_edit(coords) {\n    // make an empty label\n    var text_label_id = this.map.new_text_label(coords, '');\n    // apply the cursor to the new label\n    var sel = this.map.sel.select('#text-labels').selectAll('.text-label')\n            .filter(function(d) { return d.text_label_id == text_label_id; });\n    sel.select('text').classed('edit-text-cursor', true);\n    this.show(sel, coords);\n}\n","/** UndoStack. A constructor that can be used to store undo info. */\n\nvar utils = require('./utils');\n\n\nvar UndoStack = utils.make_class();\nUndoStack.prototype = {\n    init: init,\n    push: push,\n    undo: undo,\n    redo: redo\n};\nmodule.exports = UndoStack;\n\n\n// definitions\nfunction init() {\n    var stack_size = 40;\n    this.stack = Array(stack_size);\n    this.current = -1;\n    this.oldest = -1;\n    this.newest = -1;\n    this.end_of_stack = true;\n    this.top_of_stack = true;\n}\n\n\nfunction _incr(a, l) {\n    return a + 1 > l - 1 ? 0 : a + 1;\n}\n\n\nfunction _decr(a, l) {\n    return a - 1 < 0 ? l - 1 : a -  1;\n}\n\n\nfunction push(undo_fn, redo_fn) {\n    this.current = _incr(this.current, this.stack.length);\n    // change the oldest\n    if (this.end_of_stack)\n        this.oldest = this.current;\n    else if (this.oldest == this.current)\n        this.oldest = _incr(this.oldest, this.stack.length);\n    this.stack[this.current] = { undo: undo_fn, redo: redo_fn };\n    this.newest = this.current;\n\n    // top of the stack\n    this.top_of_stack = true;\n    this.end_of_stack = false;\n}\n\n\nfunction undo() {\n    // check that we haven't reached the end\n    if (this.end_of_stack) return console.warn('End of stack.');\n    // run the lastest stack function\n    this.stack[this.current].undo();\n    if (this.current == this.oldest) {\n        // if the next index is less than the oldest, then the stack is dead\n        this.end_of_stack = true;\n    } else {\n        // reference the next fn\n        this.current = _decr(this.current, this.stack.length);\n    }\n\n    // not at the top of the stack\n    this.top_of_stack = false;\n}\n\n\nfunction redo() {\n    // check that we haven't reached the end\n    if (this.top_of_stack) return console.warn('Top of stack.');\n\n    if (!this.end_of_stack)\n        this.current = _incr(this.current, this.stack.length);\n    this.stack[this.current].redo();\n\n    // if at top of stack\n    if (this.current == this.newest)\n        this.top_of_stack = true;\n\n    // not at the end of the stack\n    this.end_of_stack = false;\n}\n","/** ZoomContainer\n *\n *\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\nvar _ = require('underscore');\n\n\nvar ZoomContainer = utils.make_class();\nZoomContainer.prototype = {\n    init: init,\n    set_scroll_behavior: set_scroll_behavior,\n    set_use_3d_transform: set_use_3d_transform,\n    _update_scroll: _update_scroll,\n    toggle_pan_drag: toggle_pan_drag,\n    go_to: go_to,\n    _go_to_3d: _go_to_3d,\n    _clear_3d: _clear_3d,\n    _go_to_svg: _go_to_svg,\n    zoom_by: zoom_by,\n    zoom_in: zoom_in,\n    zoom_out: zoom_out,\n    get_size: get_size,\n    translate_off_screen: translate_off_screen\n};\nmodule.exports = ZoomContainer;\n\n\n// definitions\nfunction init(selection, scroll_behavior, use_3d_transform, fill_screen) {\n    /** Make a container that will manage panning and zooming. Creates a new\n     SVG element, with a parent div for CSS3 3D transforms.\n\n     Arguments\n     ---------\n\n     selection: A d3 selection of a HTML node to put the zoom container\n     in. Should have a defined width and height.\n\n     scroll_behavior: Either 'zoom' or 'pan'.\n\n     use_3d_transform: If true, then use CSS3 3D transform to speed up pan\n     and zoom.\n\n     fill_screen: If true, then apply styles to body and selection that fill\n     the screen. The styled classes are \"fill-screen-body\" and\n     \"fill-screen-div\".\n\n     */\n\n    // set the selection class\n    selection.classed('escher-container', true);\n\n    // fill screen classes\n    if (fill_screen) {\n        d3.select('html').classed('fill-screen', true)\n        d3.select('body').classed('fill-screen', true)\n        selection.classed('fill-screen-div', true)\n    }\n\n    // make the svg\n    var zoom_container = selection.append('div')\n            .attr('class', 'escher-zoom-container');\n\n    var css3_transform_container = zoom_container.append('div')\n            .attr('class', 'escher-3d-transform-container');\n\n    var svg = css3_transform_container.append('svg')\n            .attr(\"class\", \"escher-svg\")\n            .attr('xmlns', \"http://www.w3.org/2000/svg\");\n\n    // set up the zoom container\n    svg.select(\".zoom-g\").remove();\n    var zoomed_sel = svg.append(\"g\")\n            .attr(\"class\", \"zoom-g\");\n\n    // attributes\n    this.selection = selection;\n    this.zoom_container = zoom_container;\n    this.css3_transform_container = css3_transform_container;\n    this.svg = svg;\n    this.zoomed_sel = zoomed_sel;\n    this.window_translate = {x: 0, y: 0};\n    this.window_scale = 1.0;\n\n    this._scroll_behavior = scroll_behavior;\n    this._use_3d_transform = use_3d_transform;\n    this._pan_drag_on = true;\n    this._zoom_behavior = null;\n    this._zoom_timeout = null;\n    this._svg_scale = this.window_scale;\n    this._svg_translate = this.window_translate;\n    // this._last_svg_ms = null;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // update the scroll behavior\n    this._update_scroll();\n}\n\nfunction set_scroll_behavior(scroll_behavior) {\n    /** Set up pan or zoom on scroll.\n     *\n     * Arguments\n     * ---------\n     *\n     * scroll_behavior: 'none', 'pan' or 'zoom'.\n     *\n     */\n\n    this._scroll_behavior = scroll_behavior;\n    this._update_scroll();\n}\n\nfunction set_use_3d_transform(use_3d_transform) {\n    /** Set the option use_3d_transform */\n    this._use_3d_transform = use_3d_transform;\n}\n\nfunction toggle_pan_drag(on_off) {\n    /** Toggle the zoom drag and the cursor UI for it. */\n\n    if (_.isUndefined(on_off)) {\n        this._pan_drag_on = !this._pan_drag_on;\n    } else {\n        this._pan_drag_on = on_off;\n    }\n\n    if (this._pan_drag_on) {\n        // turn on the hand\n        this.zoomed_sel\n            .classed('cursor-grab', true).classed('cursor-grabbing', false);\n        this.zoomed_sel\n            .on('mousedown.cursor', function(sel) {\n                sel.classed('cursor-grab', false).classed('cursor-grabbing', true);\n            }.bind(null, this.zoomed_sel))\n            .on('mouseup.cursor', function(sel) {\n                sel.classed('cursor-grab', true).classed('cursor-grabbing', false);\n            }.bind(null, this.zoomed_sel));\n    } else {\n        // turn off the hand\n        this.zoomed_sel.style('cursor', null)\n            .classed('cursor-grab', false)\n            .classed('cursor-grabbing', false);\n        this.zoomed_sel.on('mousedown.cursor', null);\n        this.zoomed_sel.on('mouseup.cursor', null);\n    }\n\n    // update the behaviors\n    this._update_scroll();\n}\n\nfunction _update_scroll() {\n    /** Update the pan and zoom behaviors. The behaviors are applied to the\n     * css3_transform_container node.\n     *\n     */\n\n    if (!_.contains(['zoom', 'pan', 'none'], this._scroll_behavior)) {\n        throw Error('Bad value for scroll_behavior: ' + this._scroll_behavior);\n    }\n\n    // clear all behaviors\n    this.zoom_container.on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n        .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n        .on(\"wheel.zoom\", null) // disables newer versions of Firefox\n        .on('dblclick.zoom', null)\n        .on('mousewheel.escher', null) // pan scroll behaviors\n        .on('DOMMouseScroll.escher', null)\n        .on('wheel.escher', null)\n        .on(\"mousedown.zoom\", null) // drag behaviors\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    // This handles dragging to pan, and touch events (in any scroll mode). It\n    // also handles scrolling to zoom (only 'zoom' mode). It also raises an\n    // exception in node, so catch that during testing. This may be a bug with\n    // d3 related to d3 using the global this.document. TODO look into this.\n    try {\n        this._zoom_behavior = d3.behavior.zoom()\n            .on(\"zoom\", function() {\n                this.go_to(d3.event.scale, {x: d3.event.translate[0], y: d3.event.translate[1]});\n            }.bind(this));\n    } catch (err) {\n        console.log('Not in a browser, so d3.behavior.zoom does not work.');\n        this._zoom_behavior = null;\n        return;\n    }\n\n    // set current location\n    this._zoom_behavior.scale(this.window_scale);\n    this._zoom_behavior.translate([this.window_translate.x,\n                                   this.window_translate.y]);\n\n    // set it up\n    this.zoom_container.call(this._zoom_behavior);\n\n    // always turn off double-clicking to zoom\n    this.zoom_container.on('dblclick.zoom', null);\n\n    // if panning is off, then turn off these listeners\n    if (!this._pan_drag_on) {\n        this.zoom_container.on(\"mousedown.zoom\", null)\n            .on(\"touchstart.zoom\", null)\n            .on(\"touchmove.zoom\", null)\n            .on(\"touchend.zoom\", null);\n    }\n\n    // if scroll to zoom is off, then turn off these listeners\n    if (this._scroll_behavior !== 'zoom') {\n        this.zoom_container\n            .on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n            .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n            .on(\"wheel.zoom\", null); // disables newer versions of Firefox\n    }\n\n    // add listeners for scrolling to pan\n    if (this._scroll_behavior === 'pan') {\n        // Add the wheel listener\n        var wheel_fn = function() {\n            var ev = d3.event,\n                sensitivity = 0.5;\n            // stop scroll in parent elements\n            ev.stopPropagation();\n            ev.preventDefault();\n            ev.returnValue = false;\n            // change the location\n            var get_directional_disp = function(wheel_delta, delta) {\n                var the_delt = _.isUndefined(wheel_delta) ? delta : -wheel_delta / 1.5;\n                return the_delt * sensitivity;\n            };\n            var new_translate = {\n                x: this.window_translate.x - get_directional_disp(ev.wheelDeltaX, ev.deltaX),\n                y: this.window_translate.y - get_directional_disp(ev.wheelDeltaY, ev.deltaY)\n            };\n            this.go_to(this.window_scale, new_translate);\n        }.bind(this);\n\n        // apply it\n        this.zoom_container.on('mousewheel.escher', wheel_fn);\n        this.zoom_container.on('DOMMouseScroll.escher', wheel_fn);\n        this.zoom_container.on('wheel.escher', wheel_fn);\n    }\n}\n\n// functions to scale and translate\nfunction go_to(scale, translate) {\n    /** Zoom the container to a specified location.\n\n     Arguments\n     ---------\n\n     scale: The scale, between 0 and 1.\n\n     translate: The location, of the form {x: 2.0, y: 3.0}.\n\n     */\n\n    utils.check_undefined(arguments, ['scale', 'translate']);\n\n    var use_3d_transform = this._use_3d_transform;\n\n    // check inputs\n    if (!scale) throw new Error('Bad scale value');\n    if (!translate || !('x' in translate) || !('y' in translate) ||\n        isNaN(translate.x) || isNaN(translate.y))\n        return console.error('Bad translate value');\n\n    // save inputs\n    this.window_scale = scale;\n    this.window_translate = translate;\n\n    // save to zoom behavior\n    if (!_.isNull(this._zoom_behavior)) {\n        this._zoom_behavior.scale(scale);\n        var translate_array = [translate.x, translate.y];\n        this._zoom_behavior.translate(translate_array);\n    }\n\n    if (use_3d_transform) { // 3d tranform\n        // cancel all timeouts\n        if (!_.isNull(this._zoom_timeout))\n            clearTimeout(this._zoom_timeout);\n\n        // set the 3d transform\n        this._go_to_3d(scale, translate,\n                       this._svg_scale, this._svg_translate);\n\n        // if another go_to does not happen within the delay time, then\n        // redraw the svg\n        this._zoom_timeout = _.delay(function() {\n            // redraw the svg\n            this._go_to_svg(scale, translate);\n        }.bind(this), 100); // between 100 and 600 seems to be usable\n\n    } else { // no 3d transform\n        this._go_to_svg(scale, translate);\n    }\n\n    this.callback_manager.run('go_to');\n}\n\nfunction _go_to_3d(scale, translate, svg_scale, svg_translate) {\n    /** Zoom & pan the CSS 3D transform container */\n    var n_scale = scale / svg_scale,\n        n_translate = utils.c_minus_c(\n            translate,\n            utils.c_times_scalar(svg_translate, n_scale)\n        ),\n        tranform = ('translate(' + n_translate.x + 'px,' + n_translate.y + 'px) ' +\n                    'scale(' + n_scale + ')');\n    this.css3_transform_container.style('transform', tranform);\n    this.css3_transform_container.style('-webkit-transform', tranform);\n    this.css3_transform_container.style('transform-origin', '0 0');\n    this.css3_transform_container.style('-webkit-transform-origin', '0 0');\n}\n\nfunction _clear_3d() {\n    this.css3_transform_container.style('transform', null);\n    this.css3_transform_container.style('-webkit-transform', null);\n    this.css3_transform_container.style('transform-origin', null);\n    this.css3_transform_container.style('-webkit-transform-origin', null);\n}\n\nfunction _go_to_svg(scale, translate, callback) {\n    /** Zoom & pan the svg element.\n\n     Also runs the svg_start and svg_finish callbacks.\n\n     Arguments\n     ---------\n\n     scale: The scale, between 0 and 1.\n\n     translate: The location, of the form {x: 2.0, y: 3.0}.\n\n     callback: (optional) A callback to run after scaling.\n\n     */\n\n    this.callback_manager.run('svg_start');\n\n    // defer to update callbacks\n    _.defer(function() {\n\n        // start time\n        // var start = new Date().getTime();\n\n        // reset the 3d transform\n        this._clear_3d();\n\n        // redraw the svg\n        this.zoomed_sel\n            .attr('transform',\n                  'translate(' + translate.x + ',' + translate.y + ') ' +\n                  'scale(' + scale + ')');\n        // save svg location\n        this._svg_scale = this.window_scale;\n        this._svg_translate = this.window_translate;\n\n        _.defer(function() {\n            // defer for callback after draw\n            this.callback_manager.run('svg_finish');\n\n            if (!_.isUndefined(callback)) callback();\n\n            // wait a few ms to get a reliable end time\n            // _.delay(function() {\n            //     // end time\n            //     var t = new Date().getTime() - start;\n            //     this._last_svg_ms = t;\n            // }.bind(this), 20);\n        }.bind(this));\n    }.bind(this));\n}\n\nfunction zoom_by(amount) {\n    /** Zoom by a specified multiplier.\n     *\n     * Arguments\n     * ---------\n     *\n     * amount: A multiplier for the zoom. Greater than 1 zooms in and less\n     * than 1 zooms out.\n     *\n     */\n    var size = this.get_size(),\n        shift = { x: size.width/2 - ((size.width/2 - this.window_translate.x) * amount +\n                                     this.window_translate.x),\n                  y: size.height/2 - ((size.height/2 - this.window_translate.y) * amount +\n                                      this.window_translate.y) };\n    this.go_to(this.window_scale * amount,\n               utils.c_plus_c(this.window_translate, shift));\n}\n\nfunction zoom_in() {\n    /** Zoom in by the default amount with the default options. */\n    this.zoom_by(1.5);\n}\n\nfunction zoom_out() {\n    /** Zoom out by the default amount with the default options. */\n    this.zoom_by(0.667);\n}\n\nfunction get_size() {\n    /** Return the size of the zoom container as coordinates.\n     *\n     * e.g. {x: 2, y: 3}\n     *\n     */\n    return { width: parseInt(this.selection.style('width'), 10),\n             height: parseInt(this.selection.style('height'), 10) };\n}\n\nfunction translate_off_screen(coords) {\n    /** Shift window if new reaction will draw off the screen */\n\n    // TODO BUG not accounting for scale correctly\n\n    var margin = 120, // pixels\n        size = this.get_size(),\n        current = {'x': {'min': - this.window_translate.x / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.x / this.window_scale +\n                         (size.width-margin) / this.window_scale },\n                   'y': {'min': - this.window_translate.y / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.y / this.window_scale +\n                         (size.height-margin) / this.window_scale } };\n    if (coords.x < current.x.min) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.x > current.x.max) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n    if (coords.y < current.y.min) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.y > current.y.max) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n}\n","/** build */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    new_reaction: new_reaction,\n    rotate_nodes: rotate_nodes,\n    move_node_and_dependents: move_node_and_dependents,\n    new_text_label: new_text_label,\n    bezier_id_for_segment_id: bezier_id_for_segment_id,\n    bezier_ids_for_reaction_ids: bezier_ids_for_reaction_ids,\n    new_beziers_for_segments: new_beziers_for_segments,\n    new_beziers_for_reactions: new_beziers_for_reactions\n};\n\n\n// definitions\nfunction new_reaction(bigg_id, cobra_reaction, cobra_metabolites,\n                      selected_node_id, selected_node,\n                      largest_ids, cofactors, angle) {\n    /** New reaction.\n\n     angle: clockwise from 'right', in degrees\n\n     */\n\n    // rotate the new reaction around the selected metabolite\n    // convert to radians\n    angle = Math.PI / 180 * angle;\n\n    // generate a new integer id\n    var new_reaction_id = String(++largest_ids.reactions);\n\n    // calculate coordinates of reaction\n    var selected_node_coords = { x: selected_node.x,\n                                 y: selected_node.y };\n\n    // rotate main axis around angle with distance\n    var reaction_length = 300,\n        main_axis = [ selected_node_coords,\n                      utils.c_plus_c(selected_node_coords,\n                                     {'x': reaction_length, 'y': 0}) ],\n        center = { 'x': (main_axis[0].x + main_axis[1].x)/2,\n                   'y': (main_axis[0].y + main_axis[1].y)/2 };\n\n    // relative label location\n    var label_d;\n    if (Math.abs(angle) < Math.PI/4 ||\n        Math.abs(angle - Math.PI) < Math.PI/4 ) {\n            label_d = { x: -50, y: -40 };\n        } else {\n            label_d = { x: 30, y: 10 };\n        }\n\n    // relative anchor node distance\n    var anchor_distance = 20;\n\n    // new reaction structure\n    var new_reaction = utils.clone(cobra_reaction);\n    utils.extend(new_reaction,\n                 { label_x: center.x + label_d.x,\n                   label_y: center.y + label_d.y,\n                   segments: {} });\n\n    // set primary metabolites and count reactants/products\n\n    // look for the selected metabolite, and record the indices\n    var reactant_ranks = [], product_ranks = [],\n        reactant_count = 0, product_count = 0,\n        reaction_is_reversed = false;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        // make the metabolites into objects\n        var metabolite = cobra_metabolites[met_bigg_id],\n            coefficient = new_reaction.metabolites[met_bigg_id],\n            formula = metabolite.formula,\n            new_metabolite = { coefficient: coefficient,\n                               bigg_id: met_bigg_id,\n                               name: metabolite.name };\n        if (coefficient < 0) {\n            new_metabolite.index = reactant_count;\n            // score the metabolites. Infinity == selected, >= 1 == carbon containing\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                reactant_ranks.push([new_metabolite.index, Infinity]);\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                reactant_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            reactant_count++;\n        } else {\n            new_metabolite.index = product_count;\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                product_ranks.push([new_metabolite.index, Infinity]);\n                reaction_is_reversed = true;\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                product_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            product_count++;\n        }\n        new_reaction.metabolites[met_bigg_id] = new_metabolite;\n    }\n\n    // get the rank with the highest score\n    var max_rank = function(old, current) { return current[1] > old[1] ? current : old; },\n        primary_reactant_index = reactant_ranks.reduce(max_rank, [0,0])[0],\n        primary_product_index = product_ranks.reduce(max_rank, [0,0])[0];\n\n    // set primary metabolites, and keep track of the total counts\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id];\n        if (metabolite.coefficient < 0) {\n            if (metabolite.index==primary_reactant_index) metabolite.is_primary = true;\n            metabolite.count = reactant_count + 1;\n        } else {\n            if (metabolite.index==primary_product_index) metabolite.is_primary = true;\n            metabolite.count = product_count + 1;\n        }\n    }\n\n    // generate anchor nodes\n    var new_anchors = {},\n        anchors = [ { node_type: 'anchor_reactants',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? 1 : -1), y: 0 } },\n                    { node_type: 'center',\n                      dis: { x: 0, y: 0 } },\n                    { node_type: 'anchor_products',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? -1 : 1), y: 0 } } ],\n        anchor_ids = {};\n    anchors.map(function(n) {\n        var new_id = String(++largest_ids.nodes),\n            general_node_type = (n.node_type=='center' ? 'midmarker' : 'multimarker');\n        new_anchors[new_id] = { node_type: general_node_type,\n                                x: center.x + n.dis.x,\n                                y: center.y + n.dis.y,\n                                connected_segments: [],\n                                name: null,\n                                bigg_id: null,\n                                label_x: null,\n                                label_y: null,\n                                node_is_primary: null };\n        anchor_ids[n.node_type] = new_id;\n    });\n\n    // add the segments, outside to inside\n    var new_anchor_groups = [ [ anchor_ids['anchor_reactants'], anchor_ids['center'] ],\n                              [ anchor_ids['anchor_products'],  anchor_ids['center'] ] ];\n    new_anchor_groups.map(function(l) {\n        var from_id = l[0], to_id = l[1],\n            new_segment_id = String(++largest_ids.segments);\n        new_reaction.segments[new_segment_id] =  { b1: null,\n                                                   b2: null,\n                                                   from_node_id: from_id,\n                                                   to_node_id: to_id,\n                                                   from_node_coefficient: null,\n                                                   to_node_coefficient: null,\n                                                   reversibility: new_reaction.reversibility,\n                                                   data: new_reaction.data,\n                                                   reverse_flux: new_reaction.reverse_flux };\n        new_anchors[from_id].connected_segments.push({ segment_id: new_segment_id,\n                                                       reaction_id: new_reaction_id });\n        new_anchors[to_id].connected_segments.push({ segment_id: new_segment_id,\n                                                     reaction_id: new_reaction_id });\n    });\n\n    // Add the metabolites, keeping track of total reactants and products.\n    var new_nodes = new_anchors;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id],\n            primary_index, from_node_id;\n        if (metabolite.coefficient < 0) {\n            // metabolite.count = reactant_count + 1;\n            primary_index = primary_reactant_index;\n            from_node_id = anchor_ids['anchor_reactants'];\n        } else {\n            // metabolite.count = product_count + 1;\n            primary_index = primary_product_index;\n            from_node_id = anchor_ids['anchor_products'];\n        }\n\n        // calculate coordinates of metabolite components\n        var met_loc = calculate_new_metabolite_coordinates(metabolite,\n                                                           primary_index,\n                                                           main_axis,\n                                                           center,\n                                                           reaction_length,\n                                                           reaction_is_reversed);\n\n        // if this is the existing metabolite\n        if (selected_node.bigg_id==metabolite.bigg_id) {\n            var new_segment_id = String(++largest_ids.segments);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: selected_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // update the existing node\n            selected_node.connected_segments.push({ segment_id: new_segment_id,\n                                                    reaction_id: new_reaction_id });\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        } else {\n            // save new metabolite\n            var new_segment_id = String(++largest_ids.segments),\n                new_node_id = String(++largest_ids.nodes);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: new_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // save new node\n            new_nodes[new_node_id] = { connected_segments: [{ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id }],\n                                       x: met_loc.circle.x,\n                                       y: met_loc.circle.y,\n                                       node_is_primary: Boolean(metabolite.is_primary),\n                                       label_x: met_loc.circle.x + label_d.x,\n                                       label_y: met_loc.circle.y + label_d.y,\n                                       name: metabolite.name,\n                                       bigg_id: metabolite.bigg_id,\n                                       node_type: 'metabolite' };\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        }\n    }\n\n    // now take out the extra reaction details\n    var metabolites_array = []\n    for (var bigg_id in new_reaction.metabolites) {\n        metabolites_array.push({'bigg_id': bigg_id,\n                                'coefficient': new_reaction.metabolites[bigg_id].coefficient});\n    }\n    new_reaction.metabolites = metabolites_array;\n\n    // new_reactions object\n    var new_reactions = {};\n    new_reactions[new_reaction_id] = new_reaction;\n\n    // new_beziers object\n    var new_beziers = new_beziers_for_reactions(new_reactions);\n\n    // add the selected node for rotation, and return it as a new (updated) node\n    new_nodes[selected_node_id] = selected_node;\n    rotate_nodes(new_nodes, new_reactions, new_beziers,\n                 angle, selected_node_coords);\n\n    return { new_reactions: new_reactions,\n             new_beziers: new_beziers,\n             new_nodes: new_nodes };\n}\n\nfunction rotate_nodes(selected_nodes, reactions, beziers, angle, center) {\n    /** Rotate the nodes around center.\n\n     selected_nodes: Nodes to rotate.\n     reactions: Only updates beziers for these reactions.\n     beziers: Also update the bezier points.\n     angle: Angle to rotate in radians.\n     center: Point to rotate around.\n\n     */\n\n    // functions\n    var rotate_around = function(coord) {\n        if (coord === null)\n            return null;\n        return utils.rotate_coords(coord, angle, center);\n    };\n\n    // recalculate: node\n    var updated_node_ids = [], updated_reaction_ids = [];\n    for (var node_id in selected_nodes) {\n        var node = selected_nodes[node_id],\n            // rotation distance\n            displacement = rotate_around({ x: node.x, y: node.y }),\n            // move the node\n            updated = move_node_and_labels(node, reactions,\n                                           displacement);\n        // move the bezier points\n        node.connected_segments.map(function(segment_obj) {\n            var reaction = reactions[segment_obj.reaction_id];\n            // If the reaction was not passed in the reactions argument, then ignore\n            if (reaction === undefined) return;\n\n            // rotate the beziers\n            var segment_id = segment_obj.segment_id,\n                segment = reaction.segments[segment_id];\n            if (segment.to_node_id==node_id && segment.b2) {\n                var displacement = rotate_around(segment.b2),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b2');\n                segment.b2 = utils.c_plus_c(segment.b2, displacement);\n                beziers[bez_id].x = segment.b2.x;\n                beziers[bez_id].y = segment.b2.y;\n            } else if (segment.from_node_id==node_id && segment.b1) {\n                var displacement = rotate_around(segment.b1),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b1');\n                segment.b1 = utils.c_plus_c(segment.b1, displacement);\n                beziers[bez_id].x = segment.b1.x;\n                beziers[bez_id].y = segment.b1.y;\n            }\n        });\n\n        updated_reaction_ids = utils.unique_concat([updated_reaction_ids,\n                                                    updated.reaction_ids]);\n        updated_node_ids.push(node_id);\n    }\n\n    return { node_ids: updated_node_ids,\n             reaction_ids: updated_reaction_ids };\n}\n\nfunction move_node_and_dependents(node, node_id, reactions, beziers, displacement) {\n    /** Move the node and its labels and beziers.\n\n     */\n    var updated = move_node_and_labels(node, reactions, displacement);\n\n    // move beziers\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // If the reaction was not passed in the reactions argument, then ignore\n        if (reaction === undefined) return;\n\n        // update beziers\n        var segment_id = segment_obj.segment_id,\n            segment = reaction.segments[segment_id];\n        [['b1', 'from_node_id'], ['b2', 'to_node_id']].forEach(function(c) {\n            var bez = c[0],\n                node = c[1];\n            if (segment[node]==node_id && segment[bez]) {\n                segment[bez] = utils.c_plus_c(segment[bez], displacement);\n                var tbez = beziers[bezier_id_for_segment_id(segment_id, bez)];\n                tbez.x = segment[bez].x;\n                tbez.y = segment[bez].y;\n            }\n        });\n\n        // add to list of updated reaction ids if it isn't already there\n        if (updated.reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated.reaction_ids.push(segment_obj.reaction_id);\n        }\n    });\n    return updated;\n}\n\nfunction move_node_and_labels(node, reactions, displacement) {\n    node.x = node.x + displacement.x;\n    node.y = node.y + displacement.y;\n\n    // recalculate: node label\n    node.label_x = node.label_x + displacement.x;\n    node.label_y = node.label_y + displacement.y;\n\n    // recalculate: reaction label\n    var updated_reaction_ids = [];\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // add to list of updated reaction ids if it isn't already there\n        if (updated_reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated_reaction_ids.push(segment_obj.reaction_id);\n\n            // update reaction label (but only once per reaction\n            if (node.node_type == 'midmarker') {\n                reaction.label_x = reaction.label_x + displacement.x;\n                reaction.label_y = reaction.label_y + displacement.y;\n            }\n        }\n    });\n    return { reaction_ids: updated_reaction_ids };\n}\n\nfunction calculate_new_metabolite_coordinates(met, primary_index, main_axis, center, dis, is_reversed) {\n    /** Calculate metabolite coordinates for a new reaction metabolite.\n\n     */\n    // new local coordinate system\n    var displacement = main_axis[0],\n        main_axis = [utils.c_minus_c(main_axis[0], displacement),\n                     utils.c_minus_c(main_axis[1], displacement)],\n        center = utils.c_minus_c(center, displacement);\n\n    // Curve parameters\n    var w = 80,  // distance between reactants and between products\n        b1_strength = 0.4,\n        b2_strength = 0.25,\n        w2 = w*0.7,\n        secondary_dis = 40,\n        num_slots = Math.min(2, met.count - 1);\n\n    // size and spacing for primary and secondary metabolites\n    var ds, draw_at_index, r;\n    if (met.is_primary) { // primary\n        ds = 20;\n    } else { // secondary\n        ds = 10;\n        // don't use center slot\n        if (met.index > primary_index) draw_at_index = met.index - 1;\n        else draw_at_index = met.index;\n    }\n\n    var de = dis - ds, // distance between ends of line axis\n        reaction_axis = [{'x': ds, 'y': 0},\n                         {'x': de, 'y': 0}];\n\n    // Define line parameters and axis.\n    // Begin with unrotated coordinate system. +y = Down, +x = Right.\n    var end, circle, b1, b2;\n    // reactants\n    if (((met.coefficient < 0) != is_reversed) && met.is_primary) { // Ali == BADASS\n        end = {'x': reaction_axis[0].x,\n               'y': reaction_axis[0].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + (end.x)*(1-b2_strength),\n              'y': center.y*b2_strength + (end.y)*(1-b2_strength)},\n        circle = {'x': main_axis[0].x,\n                  'y': main_axis[0].y};\n    } else if ((met.coefficient < 0) != is_reversed) {\n        end = {'x': reaction_axis[0].x + secondary_dis,\n               'y': reaction_axis[0].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength},\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[0].x + secondary_dis,\n                  'y': main_axis[0].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    } else if (((met.coefficient > 0) != is_reversed) && met.is_primary) {        // products\n        end = {'x': reaction_axis[1].x,\n               'y': reaction_axis[1].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x,\n                  'y': main_axis[1].y};\n    } else if ((met.coefficient > 0) != is_reversed) {\n        end = {'x': reaction_axis[1].x - secondary_dis,\n               'y': reaction_axis[1].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x - secondary_dis,\n                  'y': main_axis[1].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    }\n    var loc = {};\n    loc.b1 = utils.c_plus_c(displacement, b1);\n    loc.b2 = utils.c_plus_c(displacement, b2);\n    loc.circle = utils.c_plus_c(displacement, circle);\n    return loc;\n}\n\nfunction new_text_label(largest_ids, text, coords) {\n    var new_id = String(++largest_ids.text_labels),\n        new_label = { text: text,\n                      x: coords.x,\n                      y: coords.y };\n    return {id: new_id, label: new_label};\n}\n\nfunction bezier_id_for_segment_id(segment_id, bez) {\n    return segment_id+'_'+bez;\n}\n\nfunction bezier_ids_for_reaction_ids(reactions) {\n    /** Return an array of beziers ids for the array of reaction ids.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. a subset of *escher.Map.reactions*.\n\n     */\n    var bezier_ids = [];\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n\n            ['b1', 'b2'].forEach(function(bez) {\n                var seg_bez = segment[bez];\n                if (seg_bez !== null) {\n                    bezier_ids.push(bezier_id_for_segment_id(segment_id, bez));\n                }\n            });\n        }\n    }\n    return bezier_ids;\n}\n\nfunction new_beziers_for_segments(segments, reaction_id) {\n    /** Return an object containing beziers for the segments object.\n\n     Arguments\n     ---------\n\n     segments: A segments object, e.g. *escher.Map.segments*.\n\n     reaction_id: The reaction id for the segments.\n\n     */\n    var beziers = {};\n    for (var segment_id in segments) {\n        var segment = segments[segment_id];\n\n        ['b1', 'b2'].forEach(function(bez) {\n            var seg_bez = segment[bez];\n            if (seg_bez !== null) {\n                var bezier_id = bezier_id_for_segment_id(segment_id, bez);\n                beziers[bezier_id] = {\n                    bezier: bez,\n                    x: seg_bez.x,\n                    y: seg_bez.y,\n                    reaction_id: reaction_id,\n                    segment_id: segment_id\n                };\n            }\n        });\n    }\n    return beziers;\n}\n\nfunction new_beziers_for_reactions(reactions) {\n    /** Return an object containing beziers for the reactions object.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. *escher.Map.reactions*.\n\n     */\n    var beziers = {};\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        var these = new_beziers_for_segments(reaction.segments, reaction_id);\n        utils.extend(beziers, these);\n    }\n    return beziers;\n}\n","/**\n * @license\n *\n * complete.ly 1.0.0\n * MIT Licensing\n * Copyright (c) 2013 Lorenzo Puccetti\n *\n * This Software shall be used for doing good things, not bad things.\n *\n *\n * Modified by Zachary King (c) 2014.\n *\n **/\n\nvar utils = require('./utils');\n\nmodule.exports = function(container, config) {\n    document = utils.get_document(container);\n    window = utils.get_window(container);\n\n    config = config || {};\n    config.fontSize =                       config.fontSize   || '13px';\n    config.fontFamily =                     config.fontFamily || 'sans-serif';\n    config.promptInnerHTML =                config.promptInnerHTML || '';\n    config.color =                          config.color || '#333';\n    config.hintColor =                      config.hintColor || '#aaa';\n    config.backgroundColor =                config.backgroundColor || '#fff';\n    config.dropDownBorderColor =            config.dropDownBorderColor || '#aaa';\n    config.dropDownZIndex =                 config.dropDownZIndex || '100'; // to ensure we are in front of everybody\n    config.dropDownOnHoverBackgroundColor = config.dropDownOnHoverBackgroundColor || '#ddd';\n\n    var txtInput = document.createElement('input');\n    txtInput.type ='text';\n    txtInput.spellcheck = false;\n    txtInput.style.fontSize =        config.fontSize;\n    txtInput.style.fontFamily =      config.fontFamily;\n    txtInput.style.color =           config.color;\n    txtInput.style.backgroundColor = config.backgroundColor;\n    txtInput.style.width = '100%';\n    txtInput.style.outline = '0';\n    txtInput.style.border =  '0';\n    txtInput.style.margin =  '0';\n    txtInput.style.padding = '0';\n\n    var txtHint = txtInput.cloneNode();\n    txtHint.disabled='';\n    txtHint.style.position = 'absolute';\n    txtHint.style.top =  '0';\n    txtHint.style.left = '0';\n    txtHint.style.borderColor = 'transparent';\n    txtHint.style.boxShadow =   'none';\n    txtHint.style.color = config.hintColor;\n\n    txtInput.style.backgroundColor ='transparent';\n    txtInput.style.verticalAlign = 'top';\n    txtInput.style.position = 'relative';\n\n    var wrapper = document.createElement('div');\n    wrapper.style.position = 'relative';\n    wrapper.style.outline = '0';\n    wrapper.style.border =  '0';\n    wrapper.style.margin =  '0';\n    wrapper.style.padding = '0';\n\n    var prompt = document.createElement('div');\n    prompt.style.position = 'absolute';\n    prompt.style.outline = '0';\n    prompt.style.margin =  '0';\n    prompt.style.padding = '0';\n    prompt.style.border =  '0';\n    prompt.style.fontSize =   config.fontSize;\n    prompt.style.fontFamily = config.fontFamily;\n    prompt.style.color =           config.color;\n    prompt.style.backgroundColor = config.backgroundColor;\n    prompt.style.top = '0';\n    prompt.style.left = '0';\n    prompt.style.overflow = 'hidden';\n    prompt.innerHTML = config.promptInnerHTML;\n    prompt.style.background = 'transparent';\n    if (document.body === undefined) {\n        throw 'document.body is undefined. The library was wired up incorrectly.';\n    }\n    document.body.appendChild(prompt);\n    var w = prompt.getBoundingClientRect().right; // works out the width of the prompt.\n    wrapper.appendChild(prompt);\n    prompt.style.visibility = 'visible';\n    prompt.style.left = '-'+w+'px';\n    wrapper.style.marginLeft= w+'px';\n\n    wrapper.appendChild(txtHint);\n    wrapper.appendChild(txtInput);\n\n    var dropDown = document.createElement('div');\n    dropDown.style.position = 'absolute';\n    dropDown.style.visibility = 'hidden';\n    dropDown.style.outline = '0';\n    dropDown.style.margin =  '0';\n    dropDown.style.padding = '0';\n    dropDown.style.textAlign = 'left';\n    dropDown.style.fontSize =   config.fontSize;\n    dropDown.style.fontFamily = config.fontFamily;\n    dropDown.style.backgroundColor = config.backgroundColor;\n    dropDown.style.zIndex = config.dropDownZIndex;\n    dropDown.style.cursor = 'default';\n    dropDown.style.borderStyle = 'solid';\n    dropDown.style.borderWidth = '1px';\n    dropDown.style.borderColor = config.dropDownBorderColor;\n    dropDown.style.overflowX= 'hidden';\n    dropDown.style.whiteSpace = 'pre';\n    dropDown.style.overflowY = 'scroll';\n\n    var createDropDownController = function(elem) {\n        var rows = [];\n        var ix = 0;\n        var oldIndex = -1;\n        var current_row = null;\n\n        var onMouseOver =  function() { this.style.outline = '1px solid #ddd'; }\n        var onMouseOut =   function() { this.style.outline = '0'; }\n        var onDblClick =  function(e) {\n            e.preventDefault();\n            p.onmouseselection(this.id);\n        }\n\n        var p = {\n            hide :  function() { elem.style.visibility = 'hidden'; },\n            refresh : function(token, options) {\n                elem.style.visibility = 'hidden';\n                ix = 0;\n                elem.innerHTML ='';\n                var vph = (window.innerHeight || document.documentElement.clientHeight);\n                var rect = elem.parentNode.getBoundingClientRect();\n                var distanceToTop = rect.top - 6;                        // heuristic give 6px\n                var distanceToBottom = vph - rect.bottom -6;  // distance from the browser border.\n\n                rows = [];\n                for (var i = 0; i < options.length; i++) {\n                    // ignore case\n                    var found = options[i].matches.filter(function(match) {\n                        return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                    });\n                    if (found.length == 0)\n                        continue;\n                    var divRow = document.createElement('div');\n                    divRow.style.color = config.color;\n                    divRow.onmouseover = onMouseOver;\n                    divRow.onmouseout =  onMouseOut;\n                    // prevent selection for double click\n                    divRow.onmousedown = function(e) { e.preventDefault(); };\n                    divRow.ondblclick = onDblClick;\n                    divRow.__hint = found[0];\n                    divRow.id = options[i].id;\n                    divRow.innerHTML = options[i].html;\n                    rows.push(divRow);\n                    elem.appendChild(divRow);\n                    // limit results and add a note at the buttom\n                    if (rows.length >= rs.display_limit) {\n                        var divRow2 = document.createElement('div');\n                        divRow2.innerHTML = ' ' + (options.length - rows.length) + ' more';\n                        rows.push(divRow2);\n                        elem.appendChild(divRow2);\n                        break;\n                    }\n                }\n                if (rows.length===0) {\n                    return; // nothing to show.\n                }\n                p.highlight(0);\n\n                // Heuristic (only when the distance to the to top is 4\n                // times more than distance to the bottom\n                if (distanceToTop > distanceToBottom*3) {\n                    // we display the dropDown on the top of the input text\n                    elem.style.maxHeight =  distanceToTop+'px';\n                    elem.style.top ='';\n                    elem.style.bottom ='100%';\n                } else {\n                    elem.style.top = '100%';\n                    elem.style.bottom = '';\n                    elem.style.maxHeight =  distanceToBottom+'px';\n                }\n                elem.style.visibility = 'visible';\n            },\n            highlight : function(index) {\n                if (oldIndex !=-1 && rows[oldIndex]) {\n                    rows[oldIndex].style.backgroundColor = config.backgroundColor;\n                }\n                rows[index].style.backgroundColor = config.dropDownOnHoverBackgroundColor; // <-- should be config\n                oldIndex = index;\n                current_row = rows[index];\n            },\n            // moves the selection either up or down (unless it's not\n            // possible) step is either +1 or -1.\n            move : function(step) {\n                // nothing to move if there is no dropDown. (this happens if\n                // the user hits escape and then down or up)\n                if (elem.style.visibility === 'hidden')\n                    return '';\n                // No circular scrolling\n                if (ix+step === -1 || ix+step === rows.length)\n                    return rows[ix].__hint;\n                ix+=step;\n                p.highlight(ix);\n                return rows[ix].__hint;\n            },\n            onmouseselection : function() {},\n            get_current_row: function () {\n                return current_row;\n            }\n        };\n        return p;\n    }\n\n    var dropDownController = createDropDownController(dropDown);\n\n    dropDownController.onmouseselection = function(id) {\n        rs.onEnter(id)\n        rs.input.focus();\n    }\n\n    wrapper.appendChild(dropDown);\n    container.appendChild(wrapper);\n\n    var spacer,\n        // This will contain the leftSide part of the textfield (the bit that\n        // was already autocompleted)\n        leftSide;\n\n    function calculateWidthForText(text) {\n        if (spacer === undefined) { // on first call only.\n            spacer = document.createElement('span');\n            spacer.style.visibility = 'hidden';\n            spacer.style.position = 'fixed';\n            spacer.style.outline = '0';\n            spacer.style.margin =  '0';\n            spacer.style.padding = '0';\n            spacer.style.border =  '0';\n            spacer.style.left = '0';\n            spacer.style.whiteSpace = 'pre';\n            spacer.style.fontSize =   config.fontSize;\n            spacer.style.fontFamily = config.fontFamily;\n            spacer.style.fontWeight = 'normal';\n            document.body.appendChild(spacer);\n        }\n\n        // Used to encode an HTML string into a plain text.\n        // taken from http://stackoverflow.com/questions/1219860/javascript-jquery-html-encoding\n        spacer.innerHTML = String(text).replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        return spacer.getBoundingClientRect().right;\n    }\n\n\n    var rs = {\n        get_hint :    function(x) { return x; },\n        display_limit: 1000,\n        onArrowDown : function() {},               // defaults to no action.\n        onArrowUp :   function() {},               // defaults to no action.\n        onEnter :     function() {},               // defaults to no action.\n        onTab :       function() {},               // defaults to no action.\n        onChange:     function() { rs.repaint() }, // defaults to repainting.\n        startFrom:    0,\n        options:      [],\n\n        // Only to allow easy access to the HTML elements to the final user\n        // (possibly for minor customizations)\n        wrapper : wrapper,\n        input :  txtInput,\n        hint  :  txtHint,\n        dropDown :  dropDown,\n\n        prompt : prompt,\n        setText : function(text) {\n            txtHint.value = text;\n            txtInput.value = text;\n        },\n        getText : function() {\n            return txtInput.value;\n        },\n        hideDropDown : function() {\n            dropDownController.hide();\n        },\n        repaint : function() {\n            var text = txtInput.value;\n            var startFrom =  rs.startFrom;\n            var options =    rs.options;\n            var optionsLength = options.length;\n\n            // breaking text in leftSide and token.\n            var token = text.substring(startFrom);\n            leftSide =  text.substring(0,startFrom);\n\n            // updating the hint.\n            txtHint.value ='';\n            for (var i = 0; i < optionsLength; i++) {\n                var found = options[i].matches.filter(function(match) {\n                    return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                });\n                if (found.length == 0)\n                    continue;\n                txtHint.value = rs.get_hint(found[0]);\n                break;\n            }\n\n            // moving the dropDown and refreshing it.\n            dropDown.style.left = calculateWidthForText(leftSide)+'px';\n            dropDownController.refresh(token, rs.options);\n        }\n    };\n\n    var registerOnTextChangeOldValue;\n\n    // Register a callback function to detect changes to the content of the\n    // input-type-text.  Those changes are typically followed by user's\n    // action: a key-stroke event but sometimes it might be a mouse click.\n    var registerOnTextChange = function(txt, callback) {\n        registerOnTextChangeOldValue = txt.value;\n        var handler = function() {\n            var value = txt.value;\n            if (registerOnTextChangeOldValue !== value) {\n                registerOnTextChangeOldValue = value;\n                callback(value);\n            }\n        };\n\n        // For user's actions, we listen to both input events and key up events\n        // It appears that input events are not enough so we defensively listen to key up events too.\n        // source: http://help.dottoro.com/ljhxklln.php\n        //\n        // The cost of listening to three sources should be negligible as the handler will invoke callback function\n        // only if the text.value was effectively changed.\n        txt.addEventListener(\"input\",  handler, false);\n        txt.addEventListener('keyup',  handler, false);\n        txt.addEventListener('change', handler, false);\n    };\n\n\n    registerOnTextChange(txtInput,function(text) { // note the function needs to be wrapped as API-users will define their onChange\n        rs.onChange(text);\n        rs.repaint();\n    });\n\n\n    var keyDownHandler = function(e) {\n        e = e || window.event;\n        var keyCode = e.keyCode;\n\n        if (keyCode == 33) { return; } // page up (do nothing)\n        if (keyCode == 34) { return; } // page down (do nothing);\n\n        // right,  end, tab  (autocomplete triggered)\n        if (keyCode == 39 || keyCode == 35 || keyCode == 9) {\n            // for tabs we need to ensure that we override the default\n            // behaviour: move to the next focusable HTML-element\n            if (keyCode == 9) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (txtHint.value.length == 0) {\n                    // tab was called with no action.\n                    rs.onTab();\n                }\n            }\n            // if there is a hint\n            if (txtHint.value.length > 0) {\n                txtInput.value = txtHint.value;\n                var hasTextChanged = registerOnTextChangeOldValue != txtInput.value\n                // avoid dropDown to appear again\n                registerOnTextChangeOldValue = txtInput.value;\n                // for example imagine the array contains the following\n                // words: bee, beef, beetroot. User has hit enter to get\n                // 'bee' it would be prompted with the dropDown again (as\n                // beef and beetroot also match)\n                if (hasTextChanged) {\n                    // force it.\n                    rs.onChange(txtInput.value);\n                }\n            }\n            return;\n        }\n\n        if (keyCode == 13) { // enter\n            // get current\n            var id = dropDownController.get_current_row().id;\n            rs.onEnter(id);\n            return;\n        }\n\n        if (keyCode == 40) { // down\n            var m = dropDownController.move(+1);\n            if (m == '') { rs.onArrowDown(); }\n            txtHint.value = rs.get_hint(m);\n            return;\n        }\n\n        if (keyCode == 38 ) { // up\n            var m = dropDownController.move(-1);\n            if (m == '') { rs.onArrowUp(); }\n            txtHint.value = rs.get_hint(m);\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        // it's important to reset the txtHint on key down. Think: user\n        // presses a letter (e.g. 'x') and never releases. You get\n        // (xxxxxxxxxxxxxxxxx) and you would see still the hint. Reset the\n        // txtHint. (it might be updated onKeyUp).\n        txtHint.value ='';\n    };\n\n    txtInput.addEventListener(\"keydown\",  keyDownHandler, false);\n    return rs;\n};\n","/** data_styles */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar _ = require('underscore');\n\nmodule.exports = {\n    import_and_check: import_and_check,\n    text_for_data: text_for_data,\n    float_for_data: float_for_data,\n    reverse_flux_for_data: reverse_flux_for_data,\n    gene_string_for_data: gene_string_for_data,\n    csv_converter: csv_converter,\n    genes_for_gene_reaction_rule: genes_for_gene_reaction_rule,\n    evaluate_gene_reaction_rule: evaluate_gene_reaction_rule,\n    replace_gene_in_rule: replace_gene_in_rule,\n    apply_reaction_data_to_reactions: apply_reaction_data_to_reactions,\n    apply_metabolite_data_to_nodes: apply_metabolite_data_to_nodes,\n    apply_gene_data_to_reactions: apply_gene_data_to_reactions\n};\n\n\n// globals\nvar RETURN_ARG = function(x) { return x; },\n    ESCAPE_REG = /([.*+?^=!:${}()|\\[\\]\\/\\\\])/g,\n    EMPTY_LINES = /\\n\\s*\\n/g,\n    TRAILING_NEWLINE = /\\n\\s*(\\)*)\\s*$/,\n    AND_OR = /([\\(\\) ])(?:and|or)([\\)\\( ])/ig,\n    ALL_PARENS = /[\\(\\)]/g,\n    // capture an expression surrounded by whitespace and a set of parentheses\n    EXCESS_PARENS = /\\(\\s*(\\S+)\\s*\\)/g,\n    OR = /\\s+or\\s+/i,\n    AND = /\\s+and\\s+/i,\n    // find ORs\n    OR_EXPRESSION = /(^|\\()(\\s*-?[0-9.]+\\s+(?:or\\s+-?[0-9.]+\\s*)+)(\\)|$)/ig,\n    // find ANDS, respecting order of operations (and before or)\n    AND_EXPRESSION = /(^|\\(|or\\s)(\\s*-?[0-9.]+\\s+(?:and\\s+-?[0-9.]+\\s*)+)(\\sor|\\)|$)/ig;\n\n\nfunction import_and_check(data, name, all_reactions) {\n    /** Convert imported data to a style that can be applied to reactions\n     and nodes.\n\n     Arguments\n     ---------\n\n     data: The data object.\n\n     name: Either 'reaction_data', 'metabolite_data', or 'gene_data'\n\n     all_reactions: Required for name == 'gene_data'. Must include all\n     GPRs for the map and model.\n\n     */\n\n    // check arguments\n    if (data===null)\n        return null;\n    if (['reaction_data', 'metabolite_data', 'gene_data'].indexOf(name) == -1)\n        throw new Error('Invalid name argument: ' + name);\n\n    // make array\n    if (!(data instanceof Array)) {\n        data = [data];\n    }\n    // check data\n    var check = function() {\n        if (data===null)\n            return null;\n        if (data.length==1)\n            return null;\n        if (data.length==2)\n            return null;\n        return console.warn('Bad data style: ' + name);\n    };\n    check();\n    data = utils.array_to_object(data);\n\n    if (name == 'gene_data') {\n        if (all_reactions === undefined)\n            throw new Error('Must pass all_reactions argument for gene_data');\n        data = align_gene_data_to_reactions(data, all_reactions);\n    }\n\n    return data;\n\n    // definitions\n    function align_gene_data_to_reactions(data, reactions) {\n        var aligned = {},\n            null_val = [null];\n        // make an array of nulls as the default\n        for (var first_gene_id in data) {\n            null_val = data[first_gene_id].map(function() { return null; });\n            break;\n        }\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id],\n                bigg_id = reaction.bigg_id,\n                this_gene_data = {};\n\n            reaction.genes.forEach(function(gene) {\n                // check both gene id and gene name\n                ['bigg_id', 'name'].forEach(function(kind) {\n                    var d = data[gene[kind]] || utils.clone(null_val);\n                    // merger with existing data if present\n                    var existing_d = this_gene_data[gene.bigg_id];\n                    if (typeof existing_d === 'undefined') {\n                        this_gene_data[gene.bigg_id] = d;\n                    } else {\n                        for (var i = 0; i < d.length; i++) {\n                            var pnt = d[i];\n                            if (pnt !== null)\n                                existing_d[i] = pnt;\n                        }\n                    }\n                });\n            });\n            aligned[bigg_id] = this_gene_data;\n        }\n        return aligned;\n    }\n}\n\nfunction float_for_data(d, styles, compare_style) {\n    // all null\n    if (d === null)\n        return null;\n\n    // absolute value\n    var take_abs = (styles.indexOf('abs') != -1);\n\n    if (d.length==1) { // 1 set\n        // 1 null\n        var f = _parse_float_or_null(d[0]);\n        if (f === null)\n            return null;\n        return abs(f, take_abs);\n    } else if (d.length==2) { // 2 sets\n        // 2 null\n        var fs = d.map(_parse_float_or_null);\n        if (fs[0] === null || fs[1] === null)\n            return null;\n\n        if (compare_style == 'diff') {\n            return diff(fs[0], fs[1], take_abs);\n        } else if (compare_style == 'fold') {\n            return check_finite(fold(fs[0], fs[1], take_abs));\n        }\n        else if (compare_style == 'log2_fold') {\n            return check_finite(log2_fold(fs[0], fs[1], take_abs));\n        }\n    } else {\n        throw new Error('Data array must be of length 1 or 2');\n    }\n    throw new Error('Bad data compare_style: ' + compare_style);\n\n    // definitions\n    function check_finite(x) {\n        return isFinite(x) ? x : null;\n    }\n    function abs(x, take_abs) {\n        return take_abs ? Math.abs(x) : x;\n    }\n    function diff(x, y, take_abs) {\n        if (take_abs) return Math.abs(y - x);\n        else return y - x;\n    }\n    function fold(x, y, take_abs) {\n        if (x == 0 || y == 0) return null;\n        var fold = (y >= x ? y / x : - x / y);\n        return take_abs ? Math.abs(fold) : fold;\n    }\n    function log2_fold(x, y, take_abs) {\n        if (x == 0) return null;\n        if (y / x < 0) return null;\n        var log = Math.log(y / x) / Math.log(2);\n        return take_abs ? Math.abs(log) : log;\n    }\n}\n\nfunction reverse_flux_for_data(d) {\n    if (d === null || d[0] === null)\n        return false;\n    return (d[0] < 0);\n}\n\n/**\n * Add gene values to the gene_reaction_rule string.\n * @param {String} rule - The gene reaction rule.\n * @param {} gene_values - The values.\n * @param {} genes - An array of objects specifying the gene bigg_id and name.\n * @param {} styles - The reaction styles.\n * @param {String} identifiers_on_map - The type of identifiers ('bigg_id' or 'name').\n * @param {} compare_style - The comparison style.\n *\n * @return {Array} A list of objects with:\n *\n * {\n *    bigg_id: The bigg ID.\n *    name: The name.\n *    text: The new string with formatted data values.\n * }\n *\n * The text elements should each appear on a new line.\n */\nfunction gene_string_for_data (rule, gene_values, genes, styles,\n                               identifiers_on_map, compare_style) {\n    var out_text = rule\n    var no_data = (gene_values === null)\n    // keep track of bigg_ids to remove repeats\n    var genes_found = {}\n\n    genes.forEach(function(g_obj) {\n        var bigg_id = g_obj.bigg_id\n\n        // ignore repeats that may have found their way into the genes object\n        if (bigg_id in genes_found) return\n        genes_found[bigg_id] = true\n\n        // generate the string\n        if (no_data) {\n            out_text = replace_gene_in_rule(out_text, bigg_id, bigg_id + '\\n')\n        } else {\n            if (!(bigg_id in gene_values))\n                return\n            var d = gene_values[bigg_id]\n            var f = float_for_data(d, styles, compare_style)\n            var format = (f === null ? RETURN_ARG : d3.format('.3g'))\n            if (d.length === 1) {\n                out_text = replace_gene_in_rule(out_text, bigg_id,\n                                                bigg_id + ' (' + null_or_d(d[0], format) + ')\\n')\n            } else if (d.length === 2) {\n                var new_str\n                // check if they are all text\n                var any_num = _.any(d, function (x) {\n                    return _parse_float_or_null(x) !== null\n                })\n                if (any_num) {\n                    new_str = (bigg_id + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ': ' +\n                               null_or_d(f, format) +\n                               ')\\n');\n                } else {\n                    new_str = (bigg_id + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ')\\n')\n                }\n                out_text = replace_gene_in_rule(out_text, bigg_id, new_str)\n            }\n        }\n    })\n    out_text = (out_text\n                // remove empty lines\n                .replace(EMPTY_LINES, '\\n')\n                // remove trailing newline (with or without parens)\n                .replace(TRAILING_NEWLINE, '$1'))\n\n    // split by newlines, and switch to names if necessary\n    var result = out_text.split('\\n').map(function (text) {\n        for (var i = 0, l = genes.length; i < l; i++) {\n            var gene = genes[i]\n            if (text.indexOf(gene.bigg_id) !== -1) {\n                // replace with names\n                if (identifiers_on_map === 'name')\n                    text = replace_gene_in_rule(text, gene.bigg_id, gene.name)\n                return { bigg_id: gene.bigg_id, name: gene.name, text: text }\n            }\n        }\n        // not found, then none\n        return { bigg_id: null, name: null, text: text }\n    })\n    return result\n\n    // definitions\n    function null_or_d (d, format) {\n        return d === null ? 'nd' : format(d)\n    }\n}\n\nfunction text_for_data(d, f) {\n    if (d === null)\n        return null_or_d(null);\n    if (d.length == 1) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g'));\n        return null_or_d(d[0], format);\n    }\n    if (d.length == 2) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g')),\n            t = null_or_d(d[0], format);\n        t += ', ' + null_or_d(d[1], format);\n        t += ': ' + null_or_d(f, format);\n        return t;\n    }\n    return '';\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? '(nd)' : format(d);\n    }\n}\n\nfunction csv_converter(csv_rows) {\n    /** Convert data from a csv file to json-style data.\n\n     File must include a header row.\n\n     */\n    // count rows\n    var c = csv_rows[0].length,\n        converted = [];\n    if (c < 2 || c > 3)\n        throw new Error('CSV file must have 2 or 3 columns');\n    // set up rows\n    for (var i = 1; i < c; i++) {\n        converted[i - 1] = {};\n    }\n    // fill\n    csv_rows.slice(1).forEach(function(row) {\n        for (var i = 1, l = row.length; i < l; i++) {\n            converted[i - 1][row[0]] = row[i];\n        }\n    });\n    return converted;\n}\n\nfunction genes_for_gene_reaction_rule(rule) {\n    /** Find unique genes in gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     Returns\n     -------\n\n     An array of gene strings.\n\n     */\n    var genes = rule\n    // remove ANDs and ORs, surrounded by space or parentheses\n            .replace(AND_OR, '$1$2')\n    // remove parentheses\n            .replace(ALL_PARENS, '')\n    // split on whitespace\n            .split(' ')\n            .filter(function(x) { return x != ''; });\n    // unique strings\n    return utils.unique_strings_array(genes);\n}\n\nfunction evaluate_gene_reaction_rule(rule, gene_values, and_method_in_gene_reaction_rule) {\n    /** Return a value given the rule and gene_values object.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     gene_values: Object with gene_ids for keys and numbers for values.\n\n     and_method_in_gene_reaction_rule: Either 'mean' or 'min'.\n\n     */\n\n    var null_val = [null],\n        l = 1;\n    // make an array of nulls as the default\n    for (var gene_id in gene_values) {\n        null_val = gene_values[gene_id].map(function() { return null; });\n        l = null_val.length;\n        break;\n    }\n\n    if (rule == '') return utils.clone(null_val);\n\n    // for each element in the arrays\n    var out = [];\n    for (var i = 0; i < l; i++) {\n        // get the rule\n        var curr_val = rule;\n\n        // put all the numbers into the expression\n        var all_null = true;\n        for (var gene_id in gene_values) {\n            var f = _parse_float_or_null(gene_values[gene_id][i]);\n            if (f === null) {\n                f = 0;\n            } else {\n                all_null = false;\n            }\n            curr_val = replace_gene_in_rule(curr_val, gene_id, f);\n        }\n        if (all_null) {\n            out.push(null);\n            continue;\n        }\n\n        // recursively evaluate\n        while (true) {\n            // arithemtic expressions\n            var new_curr_val = curr_val;\n\n            // take out excessive parentheses\n            new_curr_val = new_curr_val.replace(EXCESS_PARENS, ' $1 ');\n\n            // or's\n            new_curr_val = new_curr_val.replace(OR_EXPRESSION, function(match, p1, p2, p3) {\n                // sum\n                var nums = p2.split(OR).map(parseFloat),\n                    sum = nums.reduce(function(a, b) { return a + b;});\n                return p1 + sum + p3;\n            });\n            // and's\n            new_curr_val = new_curr_val.replace(AND_EXPRESSION, function(match, p1, p2, p3) {\n                // find min\n                var nums = p2.split(AND).map(parseFloat),\n                    val = (and_method_in_gene_reaction_rule == 'min' ?\n                           Math.min.apply(null, nums) :\n                           nums.reduce(function(a, b) { return a + b; }) / nums.length);\n                return p1 + val + p3;\n            });\n            // break if there is no change\n            if (new_curr_val == curr_val)\n                break;\n            curr_val = new_curr_val;\n        }\n        // strict test for number\n        var num = Number(curr_val);\n        if (isNaN(num)) {\n            console.warn('Could not evaluate ' + rule);\n            out.push(null);\n        } else {\n            out.push(num);\n        }\n    }\n    return out;\n}\n\nfunction replace_gene_in_rule (rule, gene_id, val) {\n    // get the escaped string, with surrounding space or parentheses\n    var space_or_par_start = '(^|[\\\\\\s\\\\\\(\\\\\\)])'\n    var space_or_par_finish = '([\\\\\\s\\\\\\(\\\\\\)]|$)'\n    var escaped = space_or_par_start + escape_reg_exp(gene_id) + space_or_par_finish\n    return rule.replace(new RegExp(escaped, 'g'),  '$1' + val + '$2')\n\n    // definitions\n    function escape_reg_exp(string) {\n        return string.replace(ESCAPE_REG, \"\\\\$1\")\n    }\n}\n\nfunction apply_reaction_data_to_reactions(reactions, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var reaction_id, reaction, segment_id, segment;\n\n    if (data === null) {\n        for (reaction_id in reactions) {\n            reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            for (segment_id in reaction.segments) {\n                segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // apply the datasets to the reactions\n    for (reaction_id in reactions) {\n        reaction = reactions[reaction_id];\n        // check bigg_id and name\n        var d = data[reaction.bigg_id] || data[reaction.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        reaction.gene_string = null;\n        // apply to the segments\n        for (segment_id in reaction.segments) {\n            segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n    }\n    return true;\n}\n\nfunction apply_metabolite_data_to_nodes(nodes, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var node_id;\n\n    if (data === null) {\n        for (node_id in nodes) {\n            nodes[node_id].data = null;\n            nodes[node_id].data_string = '';\n        }\n        return false;\n    }\n\n    // grab the data\n    for (node_id in nodes) {\n        var node = nodes[node_id];\n            // check bigg_id and name\n        var d = data[node.bigg_id] || data[node.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            s = text_for_data(d, f);\n        node.data = f;\n        node.data_string = s;\n    }\n    return true;\n}\n\nfunction apply_gene_data_to_reactions(reactions, gene_data_obj, styles, identifiers_on_map,\n                                      compare_style, and_method_in_gene_reaction_rule) {\n    /** Returns true if data is present\n\n     Arguments\n     ---------\n\n     reactions: The reactions to update.\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { gene_id: value } }\n\n     styles:  Gene styles array.\n\n     identifiers_on_map:\n\n     compare_style:\n\n     and_method_in_gene_reaction_rule:\n\n     */\n\n    if (gene_data_obj === null) {\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            reaction.reverse_flux = false;\n            for (var segment_id in reaction.segments) {\n                var segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // get the null val\n    var null_val = [null];\n    // make an array of nulls as the default\n    for (var reaction_id in gene_data_obj) {\n        for (var gene_id in gene_data_obj[reaction_id]) {\n            null_val = gene_data_obj[reaction_id][gene_id]\n                .map(function() { return null; });\n            break;\n        }\n        break;\n    }\n\n    // apply the datasets to the reactions\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id],\n            rule = reaction.gene_reaction_rule;\n        // find the data\n        var d, gene_values,\n            r_data = gene_data_obj[reaction.bigg_id];\n        if (typeof r_data !== 'undefined') {\n            gene_values = r_data;\n            d = evaluate_gene_reaction_rule(rule, gene_values,\n                                            and_method_in_gene_reaction_rule);\n        } else {\n            gene_values = {};\n            d = utils.clone(null_val);\n        }\n        var f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        // apply to the segments\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n        // always update the gene string\n        reaction.gene_string = gene_string_for_data(rule,\n                                                    gene_values,\n                                                    reaction.genes,\n                                                    styles,\n                                                    identifiers_on_map,\n                                                    compare_style);\n    }\n    return true;\n}\n\nfunction _parse_float_or_null(x) {\n    // strict number casting\n    var f = Number(x);\n    // check for null and '', which haven't been caught yet\n    return (isNaN(f) || parseFloat(x) != f) ? null : f;\n}\n","module.exports = {'version': '1.5.0', builder_embed: 'svg.escher-svg .gene-label,svg.escher-svg .label{text-rendering:optimizelegibility;cursor:default}svg.escher-svg #mouse-node{fill:none}svg.escher-svg #canvas{stroke:#ccc;stroke-width:7px;fill:#fff}svg.escher-svg .resize-rect{fill:#000;opacity:0;stroke:none}svg.escher-svg .label{font-family:sans-serif;font-style:italic;font-weight:700;font-size:8px;fill:#000;stroke:none}svg.escher-svg .reaction-label{font-size:30px;fill:#202078;text-rendering:optimizelegibility}svg.escher-svg .node-label{font-size:20px}svg.escher-svg .gene-label{font-size:18px;fill:#202078}svg.escher-svg .text-label .label,svg.escher-svg .text-label-input{font-size:50px}svg.escher-svg .node-circle{stroke-width:2px}svg.escher-svg .midmarker-circle,svg.escher-svg .multimarker-circle{fill:#fff;fill-opacity:.2;stroke:#323232}svg.escher-svg g.selected .node-circle{stroke-width:6px;stroke:#1471c7}svg.escher-svg g.selected .label{fill:#1471c7}svg.escher-svg .metabolite-circle{stroke:#a24510;fill:#e0865b}svg.escher-svg g.selected .metabolite-circle{stroke:#050200}svg.escher-svg .segment{stroke:#334E75;stroke-width:10px;fill:none}svg.escher-svg .arrowhead{fill:#334E75}svg.escher-svg .stoichiometry-label-rect{fill:#fff;opacity:.5}svg.escher-svg .stoichiometry-label{fill:#334E75;font-size:17px}svg.escher-svg .membrane{fill:none;stroke:#fb0}svg.escher-svg .brush .extent{fill-opacity:.1;fill:#000;stroke:#fff;shape-rendering:crispEdges}svg.escher-svg #brush-container .background{fill:none}svg.escher-svg .bezier-circle{fill:#fff}svg.escher-svg .bezier-circle.b1{stroke:red}svg.escher-svg .bezier-circle.b2{stroke:#00f}svg.escher-svg .connect-line{stroke:#c8c8c8}svg.escher-svg .direction-arrow{stroke:#000;stroke-width:1px;fill:#fff;opacity:.3}svg.escher-svg .start-reaction-cursor{cursor:pointer}svg.escher-svg .start-reaction-target{stroke:#646464;fill:none;opacity:.5}svg.escher-svg .rotation-center-line{stroke:red;stroke-width:5px}svg.escher-svg .highlight{fill:#D97000;text-decoration:underline}svg.escher-svg .cursor-grab{cursor:grab;cursor:-webkit-grab}svg.escher-svg .cursor-grabbing{cursor:grabbing;cursor:-webkit-grabbing}svg.escher-svg .edit-text-cursor{cursor:text}'};","/**\n* @license\n*\n* Escher\n* Author: Zachary King\n*\n* The MIT License (MIT)\n*\n* This software is Copyright © 2015 The Regents of the University of\n* California. All Rights Reserved.\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in\n* all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n* THE SOFTWARE.\n*/\n\nmodule.exports = {\n    version: require('./inline').version,\n    Builder: require('./Builder'),\n    Map: require('./Map'),\n    Behavior: require('./Behavior'),\n    KeyManager: require('./KeyManager'),\n    DataMenu: require('./DataMenu'),\n    UndoStack: require('./UndoStack'),\n    CobraModel: require('./CobraModel'),\n    utils: require('./utils'),\n    SearchIndex: require('./SearchIndex'),\n    Settings: require('./Settings'),\n    data_styles: require('./data_styles'),\n    ui: require('./ui'),\n    static: require('./static'),\n    ZoomContainer: require('./ZoomContainer')\n};\n","/** static */\n\n/* global d3 */\n\nvar utils = require('./utils')\n\nmodule.exports = {\n    load_map_model_from_url: load_map_model_from_url\n}\n\nfunction load_map_model_from_url(map_download_url, model_download_url,\n                                 local_index, options, callback) {\n    var opt = utils.parse_url_components(window, options),\n        to_load = [],\n        load_map = function (fn) { fn(null); },\n        load_model = function (fn) { fn(null); }\n    if (opt.map_name) {\n        var map_path = _get_path('map', opt.map_name,\n                                 local_index, map_download_url)\n        if (map_path) {\n            load_map = function (fn) {\n                d3.json(map_path, function(error, data) {\n                    if (error) console.warn(error)\n                    fn(data)\n                })\n            }\n        }\n    }\n    if (opt.model_name) {\n        var model_path = _get_path('model', opt.model_name,\n                                   local_index, model_download_url)\n        if (model_path) {\n            load_model = function (fn) {\n                d3.json(model_path, function(error, data) {\n                    if (error) console.warn(error)\n                    fn(data)\n                })\n            }\n        }\n    }\n    if (opt.hasOwnProperty('enable_editing')) {\n        options.enable_editing = opt.enable_editing.toLowerCase() === 'true'\n    }\n    load_map(function(map_data) {\n        load_model(function(model_data) {\n            callback(map_data, model_data, options)\n        })\n    })\n}\n\nfunction _get_path(kind, name, index, url) {\n    var match = index[kind+'s'].filter(function(x) {\n        return x[kind+'_name'] == name\n    })\n    if (match.length == 0)\n        throw new Error('Bad ' + kind + ' ' + name)\n    return (url + encodeURIComponent(match[0].organism) +\n            '/' + encodeURIComponent(match[0][kind+'_name'])) + '.json'\n}\n","/** ui */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nmodule.exports = {\n    individual_button: individual_button,\n    radio_button_group: radio_button_group,\n    button_group: button_group,\n    dropdown_menu: dropdown_menu,\n    set_json_input_button: set_json_input_button,\n    set_json_or_csv_input_button: set_json_or_csv_input_button\n};\n\nfunction _button_with_sel(b, button) {\n    var ignore_bootstrap = button.ignore_bootstrap || false\n    b.attr('class', 'btn btn-default simple-button')\n    // icon\n    var c = b.append('span')\n    // text / bootstrap fallback\n    var t = c.append('span')\n    if ('id' in button) b.attr('id', button.id)\n    if ('text' in button) t.text(button.text)\n    if ('icon' in button && !ignore_bootstrap) c.classed(button.icon, true)\n    if (!ignore_bootstrap) t.attr('class', 'hidden')\n    if ('key' in button) set_button(b, button.key)\n\n    // tooltip\n    if ('key_text' in button && 'tooltip' in button && button.key_text !== null)\n        b.attr('title', button.tooltip + button.key_text)\n    else if ('tooltip' in button)\n        b.attr('title', button.tooltip)\n}\n\nfunction individual_button(s, button) {\n    var b = s.append('button')\n    _button_with_sel(b, button)\n}\n\nfunction radio_button_group(s) {\n    var s2 = s.append('li')\n            .attr('class', 'btn-group-vertical')\n            .attr('data-toggle', 'buttons')\n    return { button: function(button) {\n        var ignore_bootstrap = button.ignore_bootstrap || false\n        var b = s2.append('label')\n        b.append('input').attr('type', 'radio')\n        _button_with_sel(b, button)\n        return this\n    }}\n}\n\nfunction button_group(s) {\n    var s2 = s.attr('class', 'btn-group-vertical');\n    return { button: function(button) {\n        var b = s2.append(\"button\")\n        _button_with_sel(b, button)\n        return this;\n    }};\n}\n\nfunction dropdown_menu(s, name, pull_right) {\n    if (pull_right === undefined) pull_right = false;\n    var s2 = s.append('li')\n            .attr('class', 'dropdown');\n    s2.append('button').text(name+\" \")\n        .attr('class', 'btn btn-link btn-sm dropdown-button')\n        .attr('data-toggle', 'dropdown')\n        .append('b').attr('class', 'caret');\n    var ul = s2.append('ul')\n            .attr('class', 'dropdown-menu')\n            .classed('pull-right', pull_right)\n            .attr('role', 'menu')\n            .attr('aria-labelledby', 'dLabel');\n    return {\n        dropdown: s2,\n        button: function(button) {\n            var li = ul.append(\"li\")\n                    .attr('role', 'presentation')\n                    .datum(button),\n                link = li.append(\"a\")\n                    .attr('href', '#'),\n                icon = link.append('span')\n                    .attr('class', 'dropdown-button-icon'),\n                text = link.append('span')\n                    .attr('class', 'dropdown-button-text');\n            if ('id' in button) li.attr('id', button.id);\n\n            // text\n            if ('key_text' in button && 'text' in button && button.key_text !== null)\n                text.text(\" \"+button.text + button.key_text);\n            else if ('text' in button)\n                text.text(\" \"+button.text);\n\n            if ('icon' in button) icon.classed(button.icon, true);\n\n            if ('key' in button) {\n                set_button(link, button.key);\n            } else if ('input' in button) {\n                var input = button.input,\n                    out = (input.accept_csv ?\n                           set_json_or_csv_input_button(link, li, input.pre_fn,\n                                                        input.fn, input.failure_fn) :\n                           set_json_input_button(link, li, input.pre_fn,\n                                                 input.fn, input.failure_fn));\n                // assign a function to the key\n                if ('assign' in input && 'key' in input)\n                    input.assign[input.key] = out;\n            }\n            return this;\n        },\n        divider: function() {\n            ul.append(\"li\")\n                .attr('role', 'presentation')\n                .attr('class', 'divider');\n            return this;\n        }\n    };\n}\n\nfunction set_button(b, key) {\n    b.on(\"click\", function() {\n        key.fn.call(key.target);\n    });\n}\n\nfunction set_json_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json(this.files[0],\n                                function(e, d) {\n                                    post_fn(e, d);\n                                    this.value = \"\";\n                                }.bind(this),\n                                pre_fn,\n                                failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n\nfunction set_json_or_csv_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json_or_csv(this.files[0],\n                                       data_styles.csv_converter,\n                                       function(e, d) {\n                                           post_fn(e, d);\n                                           this.value = \"\";\n                                       }.bind(this),\n                                       pre_fn,\n                                       failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n","/* global d3, Blob, XMLSerializer */\n\nvar vkbeautify = require('vkbeautify');\nvar _ = require('underscore');\ntry {\n    var saveAs = require('filesaverjs').saveAs;\n} catch (e) {\n    console.warn('filesaverjs not available');\n}\n\n\nmodule.exports = {\n    set_options: set_options,\n    remove_child_nodes: remove_child_nodes,\n    load_css: load_css,\n    load_files: load_files,\n    load_the_file: load_the_file,\n    make_class: make_class,\n    setup_defs: setup_defs,\n    draw_an_object: draw_an_object,\n    draw_a_nested_object: draw_a_nested_object,\n    make_array: make_array,\n    make_array_ref: make_array_ref,\n    compare_arrays: compare_arrays,\n    array_to_object: array_to_object,\n    clone: clone,\n    extend: extend,\n    unique_concat: unique_concat,\n    unique_strings_array: unique_strings_array,\n    debounce: debounce,\n    object_slice_for_ids: object_slice_for_ids,\n    object_slice_for_ids_ref: object_slice_for_ids_ref,\n    c_plus_c: c_plus_c,\n    c_minus_c: c_minus_c,\n    c_times_scalar: c_times_scalar,\n    download_json: download_json,\n    load_json: load_json,\n    load_json_or_csv: load_json_or_csv,\n    download_svg: download_svg,\n    download_png: download_png,\n    rotate_coords_recursive: rotate_coords_recursive,\n    rotate_coords: rotate_coords,\n    get_angle: get_angle,\n    to_degrees: to_degrees,\n    angle_for_event: angle_for_event,\n    distance: distance,\n    check_undefined: check_undefined,\n    compartmentalize: compartmentalize,\n    decompartmentalize: decompartmentalize,\n    mean: mean,\n    median: median,\n    quartiles: quartiles,\n    random_characters: random_characters,\n    generate_map_id: generate_map_id,\n    check_for_parent_tag: check_for_parent_tag,\n    name_to_url: name_to_url,\n    parse_url_components: parse_url_components,\n    get_document: get_document,\n    get_window: get_window,\n    d3_transform_catch: d3_transform_catch,\n    check_browser: check_browser\n};\n\n\n// definitions\nfunction _check_filesaver() {\n    /** Check if Blob is available, and alert if it is not. */\n    try {\n        var isFileSaverSupported = !!new Blob();\n    } catch (e) {\n        alert(\"Blob not supported\");\n    }\n}\n\nfunction set_options(options, defaults, must_be_float) {\n    if (options === undefined || options === null)\n        return defaults;\n    var i = -1,\n        out = {};\n    for (var key in defaults) {\n        var has_key = ((key in options) &&\n                       (options[key] !== null) &&\n                       (options[key] !== undefined));\n        var val = (has_key ? options[key] : defaults[key]);\n        if (must_be_float && key in must_be_float) {\n            val = parseFloat(val);\n            if (isNaN(val)) {\n                if (has_key) {\n                    console.warn('Bad float for option ' + key);\n                    val = parseFloat(defaults[key]);\n                    if (isNaN(val)) {\n                        console.warn('Bad float for default ' + key);\n                        val = null;\n                    }\n                } else {\n                    console.warn('Bad float for default ' + key);\n                    val = null;\n                }\n            }\n        }\n        out[key] = val;\n    }\n    return out;\n}\n\n\nfunction remove_child_nodes(selection) {\n    /** Removes all child nodes from a d3 selection\n\n     */\n    var node = selection.node();\n    while (node.hasChildNodes()) {\n        node.removeChild(node.lastChild);\n    }\n}\n\n\nfunction load_css(css_path, callback) {\n    var css = \"\";\n    if (css_path) {\n        d3.text(css_path, function(error, text) {\n            if (error) {\n                console.warn(error);\n            }\n            css = text;\n            callback(css);\n        });\n    }\n    return false;\n};\n\n\nfunction load_the_file(t, file, callback, value) {\n    /** Load a file.\n\n     t: this context for callback. Should be an object.\n\n     files_to_load: A filename to load. Must be JSON or CSS.\n\n     callback: Function to run after the file is loaded. Takes the arguments\n     error and data.\n\n     value: If the value is specified, just assign it and do not execute the\n     ajax query.\n\n     */\n    if (value) {\n        if (file) console.warn('File ' + file + ' overridden by value.');\n        callback.call(t, null, value);\n        return;\n    }\n    if (!file) {\n        callback.call(t, 'No filename', null);\n        return;\n    }\n    if (ends_with(file, 'json'))\n        d3.json(file, function(e, d) { callback.call(t, e, d); });\n    else if (ends_with(file, 'css'))\n        d3.text(file, function(e, d) { callback.call(t, e, d); });\n    else\n        callback.call(t, 'Unrecognized file type', null);\n    return;\n\n    // definitions\n    function ends_with(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n}\n\n\nfunction load_files(t, files_to_load, final_callback) {\n    /** Load multiple files asynchronously by calling utils.load_the_file.\n\n     t: this context for callback. Should be an object.\n\n     files_to_load: A list of objects with the attributes:\n\n        { file: a_filename.json, callback: a_callback_fn }\n\n        File must be JSON or CSS.\n\n     final_callback: Function that runs after all files have loaded.\n\n     */\n    if (files_to_load.length === 0) final_callback.call(t);\n    var i = -1,\n        remaining = files_to_load.length;\n    while (++i < files_to_load.length) {\n        load_the_file(\n            t,\n            files_to_load[i].file,\n            function(e, d) {\n                this.call(t, e, d);\n                if (!--remaining) final_callback.call(t);\n            }.bind(files_to_load[i].callback),\n            files_to_load[i].value\n        );\n    }\n}\n\n\nfunction make_class(){\n    /** Create a constructor that returns a new object with our without the\n     'new' keyword.\n\n     Adapted from Hubert Kauker (MIT Licensed), John Resig (MIT Licensed).\n     http://stackoverflow.com/questions/7892884/simple-class-instantiation\n\n     */\n    var is_internal,\n        constructor = function(args) {\n            if (this instanceof constructor) {\n                if (typeof this.init === 'function') {\n                    this.init.apply(this, is_internal ? args : arguments);\n                }\n            } else {\n                is_internal = true;\n                var instance = new constructor(arguments);\n                is_internal = false;\n                return instance;\n            }\n        };\n    return constructor;\n}\n\n\nfunction setup_defs(svg, style) {\n    // add stylesheet\n    svg.select(\"defs\").remove();\n    var defs = svg.append(\"defs\");\n    // make sure the defs is the first node\n    var node = defs.node();\n    node.parentNode.insertBefore(node, node.parentNode.firstChild);\n    defs.append(\"style\")\n        .attr(\"type\", \"text/css\")\n        .text(style);\n    return defs;\n}\n\nfunction draw_an_object(container_sel, parent_node_selector, children_selector,\n                        object, id_key, create_function, update_function,\n                        exit_function) {\n    /** Run through the d3 data binding steps for an object. Also checks to\n     make sure none of the values in the *object* are undefined, and\n     ignores those.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     parent_node_selector: A selector string for a subselection of\n     container_sel.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object: An object to bind to the selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var draw_object = {};\n    for (var id in object) {\n        if (object[id] === undefined) {\n            console.warn('Undefined value for id ' + id + ' in object. Ignoring.');\n        } else {\n            draw_object[id] = object[id];\n        }\n    }\n\n    var sel = container_sel.select(parent_node_selector)\n            .selectAll(children_selector)\n            .data(make_array_ref(draw_object, id_key),\n                  function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction draw_a_nested_object(container_sel, children_selector, object_data_key,\n                              id_key, create_function, update_function,\n                              exit_function) {\n    /** Run through the d3 data binding steps for an object that is nested\n     within another element with d3 data.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object_data_key: A key for the parent object containing data for the\n     new selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var sel = container_sel.selectAll(children_selector)\n            .data(function(d) {\n                return make_array_ref(d[object_data_key], id_key);\n            }, function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction make_array(obj, id_key) { // is this super slow?\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = clone(obj[key]);\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction make_array_ref(obj, id_key) {\n    /** Turn the object into an array, but only by reference. Faster than\n     make_array.\n\n     */\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = obj[key];\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction compare_arrays(a1, a2) {\n    /** Compares two simple (not-nested) arrays.\n\n     */\n    if (!a1 || !a2) return false;\n    if (a1.length != a2.length) return false;\n    for (var i = 0, l=a1.length; i < l; i++) {\n        if (a1[i] != a2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction array_to_object(arr) {\n    /** Convert an array of objects to an object with all keys and values\n     that are arrays of the same length as arr. Fills in spaces with null.\n\n     For example, [ { a: 1 }, { b: 2 }] becomes { a: [1, null], b: [null, 2] }.\n\n     */\n    // new object\n    var obj = {};\n    // for each element of the array\n    for (var i = 0, l = arr.length; i < l; i++) {\n        var column = arr[i],\n            keys = Object.keys(column);\n        for (var k = 0, nk = keys.length; k < nk; k++) {\n            var id = keys[k];\n            if (!(id in obj)) {\n                var n = [];\n                // fill spaces with null\n                for (var j = 0; j < l; j++) {\n                    n[j] = null;\n                }\n                n[i] = column[id];\n                obj[id] = n;\n            } else {\n                obj[id][i] = column[id];\n            }\n        }\n    }\n    return obj;\n}\n\n/**\n * Deep copy for array and object types. All other types are returned by\n * reference.\n * @param {T<Object|Array|*>} obj - The object to copy.\n * @return {T} The copied object.\n */\nfunction clone (obj) {\n    if (_.isArray(obj))\n        return _.map(obj, function(t) { return clone(t) })\n    else if (_.isObject(obj))\n        return _.mapObject(obj, function (t, k) { return clone(t) })\n    else\n        return obj\n}\n\nfunction extend(obj1, obj2, overwrite) {\n    /** Extends obj1 with keys/values from obj2. Performs the extension\n     cautiously, and does not override attributes, unless the overwrite\n     argument is true.\n\n     Arguments\n     ---------\n\n     obj1: Object to extend\n\n     obj2: Object with which to extend.\n\n     overwrite: (Optional, Default false) Overwrite attributes in obj1.\n\n     */\n\n    if (overwrite === undefined)\n        overwrite = false;\n\n    for (var attrname in obj2) {\n        if (!(attrname in obj1) || overwrite) // UNIT TEST This\n            obj1[attrname] = obj2[attrname];\n        else\n            throw new Error('Attribute ' + attrname + ' already in object.');\n    }\n}\n\nfunction unique_concat(arrays) {\n    var new_array = [];\n    arrays.forEach(function (a) {\n        a.forEach(function(x) {\n            if (new_array.indexOf(x) < 0)\n                new_array.push(x);\n        });\n    });\n    return new_array;\n}\n\nfunction unique_strings_array(arr) {\n    /** Return unique values in array of strings.\n\n     http://stackoverflow.com/questions/1960473/unique-values-in-an-array\n\n     */\n    var a = [];\n    for (var i = 0, l = arr.length; i < l; i++)\n        if (a.indexOf(arr[i]) === -1)\n            a.push(arr[i]);\n    return a;\n}\n\nfunction debounce(func, wait, immediate) {\n    /** Returns a function, that, as long as it continues to be invoked, will\n     not be triggered.\n\n     The function will be called after it stops being called for N\n     milliseconds. If `immediate` is passed, trigger the function on the leading\n     edge, instead of the trailing.\n\n     */\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\nfunction object_slice_for_ids(obj, ids) {\n    /** Return a copy of the object with just the given ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = clone(obj[ids[i]]);\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction object_slice_for_ids_ref(obj, ids) {\n    /** Return a reference of the object with just the given ids. Faster\n     than object_slice_for_ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = obj[ids[i]];\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction c_plus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x + coords2.x,\n             \"y\": coords1.y + coords2.y };\n}\nfunction c_minus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x - coords2.x,\n             \"y\": coords1.y - coords2.y };\n}\n\nfunction c_times_scalar(coords, scalar) {\n    return { \"x\": coords.x * scalar,\n             \"y\": coords.y * scalar };\n}\n\nfunction download_json(json, name) {\n    /** Download json file in a blob.\n\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    var j = JSON.stringify(json),\n        blob = new Blob([j], {type: \"application/json\"});\n    saveAs(blob, name + '.json');\n}\n\nfunction load_json(f, callback, pre_fn, failure_fn) {\n    /** Try to load the file as JSON.\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     */\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n\n    var reader = new window.FileReader();\n    // Closure to capture the file information.\n    reader.onload = function(event) {\n        var result = event.target.result,\n            data;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            // if it failed, return the error\n            callback(e, null);\n            return;\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n}\n\nfunction load_json_or_csv(f, csv_converter, callback, pre_fn, failure_fn,\n                          debug_event) {\n    /** Try to load the file as JSON or CSV (JSON first).\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     csv_converter: A function to convert the CSV output to equivalent JSON.\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     debug_event: (optional) An event, with a string at event.target.result, to\n     load as though it was the contents of a loaded file.\n\n     */\n\n    // Capture the file information.\n    var onload_function = function(event) {\n        var result = event.target.result,\n            data, errors;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            errors = 'JSON error: ' + e;\n\n            // try csv\n            try {\n                data = csv_converter(d3.csv.parseRows(result));\n            } catch (e) {\n                // if both failed, return the errors\n                callback(errors + '\\nCSV error: ' + e, null);\n                return;\n            }\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (debug_event !== undefined && debug_event !== null) {\n        console.warn('Debugging load_json_or_csv');\n        return onload_function(debug_event);\n    }\n\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n    var reader = new window.FileReader();\n\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.onload = onload_function;\n    reader.readAsText(f);\n}\n\nfunction download_svg(name, svg_sel, do_beautify) {\n    /** Download an svg file using FileSaver.js.\n     *\n     * Arguments\n     * ---------\n     *\n     * name: The filename (without extension).\n     *\n     * svg_sel: The d3 selection for the SVG element.\n     *\n     * do_beautify: (Boolean) If true, then beautify the SVG output.\n     *\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    // make the xml string\n    var xml = (new XMLSerializer()).serializeToString(svg_sel.node());\n    if (do_beautify) xml = vkbeautify.xml(xml);\n    xml = ('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n           '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n' +\n           ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n           xml);\n\n    // save\n    var blob = new Blob([xml], { type: 'image/svg+xml' });\n    saveAs(blob, name + '.svg');\n};\n\nfunction download_png(name, svg_sel, do_beautify) {\n    /** Download a png file using FileSaver.js.\n     *\n     * Arguments\n     * ---------\n     *\n     * name: The filename (without extension).\n     *\n     * svg_sel: The d3 selection for the SVG element.\n     *\n     * do_beautify: (Boolean) If true, then beautify the SVG output.\n     *\n     */\n\n    // Alert if blob isn't going to work\n    _check_filesaver();\n\n    // Make the xml string\n    var xml = (new XMLSerializer()).serializeToString(svg_sel.node());\n    if (do_beautify) xml = vkbeautify.xml(xml);\n    xml = ('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n           '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n' +\n           ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n           xml);\n\n    // Canvas to hold the image\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    // Get SVG size\n    var svg_size = svg_sel.node().getBBox();\n    var svg_width = svg_size.width + svg_size.x;\n    var svg_height = svg_size.height + svg_size.y;\n\n    // Canvas size = SVG size. Constrained to 10000px for very large SVGs\n    if (svg_width < 10000 && svg_height < 10000) {\n        canvas.width = svg_width;\n        canvas.height = svg_height;\n    } else {\n        if (canvas.width > canvas.height) {\n            canvas.width = 10000;\n            canvas.height = 10000*(svg_height/svg_width);\n        } else {\n            canvas.width = 10000*(svg_width/svg_height);\n            canvas.height = 10000;\n        }\n    }\n\n    // Image element appended with data\n    var base_image = new Image();\n    base_image.src = 'data:image/svg+xml;base64,' + btoa(xml);\n\n    base_image.onload = function() {\n        // Draw image to canvas with white background\n        context.fillStyle=\"#FFF\";\n        context.fillRect( 0, 0, canvas.width, canvas.height);\n        context.drawImage(base_image, 0, 0, canvas.width, canvas.height);\n\n        // Save image\n        canvas.toBlob(function(blob) {\n            saveAs(blob, name + \".png\");\n        });\n    };\n};\n\nfunction rotate_coords_recursive(coords_array, angle, center) {\n    var rot = function(c) { return rotate_coords(c, angle, center); };\n    return coords_array.map(rot);\n}\n\nfunction rotate_coords(c, angle, center) {\n    /** Calculates displacement { x: dx, y: dy } based on rotating point c around\n     center with angle.\n\n     */\n    var dx = Math.cos(-angle) * (c.x - center.x) +\n            Math.sin(-angle) * (c.y - center.y)\n            + center.x - c.x,\n        dy = - Math.sin(-angle) * (c.x - center.x) +\n            Math.cos(-angle) * (c.y - center.y)\n            + center.y - c.y;\n    return { x: dx, y: dy };\n}\n\nfunction get_angle(coords) {\n    /* Takes an array of 2 coordinate objects {\"x\": 1, \"y\": 1}\n     *\n     * Returns angle between 0 and 2PI.\n     */\n    var denominator = coords[1].x - coords[0].x,\n        numerator = coords[1].y - coords[0].y;\n    if (denominator==0 && numerator >= 0) return Math.PI/2;\n    else if (denominator==0 && numerator < 0) return 3*Math.PI/2;\n    else if (denominator >= 0 && numerator >= 0) return Math.atan(numerator/denominator);\n    else if (denominator >= 0) return (Math.atan(numerator/denominator) + 2*Math.PI);\n    else return (Math.atan(numerator/denominator) + Math.PI);\n}\n\nfunction to_degrees(radians) { return radians*180/Math.PI; }\n\nfunction angle_for_event(displacement, point, center) {\n    var gamma =  Math.atan2((point.x - center.x), (center.y - point.y)),\n        beta = Math.atan2((point.x - center.x + displacement.x),\n                          (center.y - point.y - displacement.y)),\n        angle = beta - gamma;\n    return angle;\n}\n\nfunction distance(start, end) { return Math.sqrt(Math.pow(end.y-start.y, 2) + Math.pow(end.x-start.x, 2)); }\n\nfunction check_undefined(args, names) {\n    /** Report an error if any of the arguments are undefined.\n\n     Call by passing in *arguments* from any function and an array of\n     argument names.\n\n     */\n    names.map(function(name, i) {\n        if (args[i]===undefined) {\n            console.error('Argument is undefined: '+String(names[i]));\n        }\n    });\n}\n\nfunction compartmentalize(bigg_id, compartment_id) {\n    return bigg_id + '_' + compartment_id;\n}\n\n\n// definitions\nfunction decompartmentalize(id) {\n    /** Convert ids to bigg_id and compartment_id.\n\n     */\n    var out = no_compartment(id);\n    if (out===null) out = [id, null];\n    return out;\n\n    // definitions\n    function no_compartment(id) {\n        /** Returns an array of [bigg_id, compartment id].\n\n         Matches compartment ids with length 1 or 2.\n\n         Return null if no match is found.\n\n         */\n        var reg = /(.*)_([a-z0-9]{1,2})$/,\n            result = reg.exec(id);\n        if (result===null) return null;\n        return result.slice(1,3);\n    }\n}\n\nfunction mean(array) {\n    var sum = array.reduce(function(a, b) { return a + b; });\n    var avg = sum / array.length;\n    return avg;\n}\n\nfunction median(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if(array.length % 2 == 1)\n        return array[half];\n    else\n        return (array[half-1] + array[half]) / 2.0;\n}\n\nfunction quartiles(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if (array.length == 1)\n        return [ array[0], array[0], array[0] ];\n    else if (array.length % 2 == 1)\n        return [ median(array.slice(0, half)),\n                 array[half],\n                 median(array.slice(half + 1)) ];\n    else\n        return [ median(array.slice(0, half)),\n                 (array[half-1] + array[half]) / 2.0,\n                 median(array.slice(half)) ];\n}\n\nfunction random_characters(num) {\n    // Thanks to @csharptest.net\n    // http://stackoverflow.com/questions/1349404/generate-a-string-of-5-random-characters-in-javascript\n    var text = '',\n        possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < num; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    return text;\n}\n\nfunction generate_map_id() {\n    return random_characters(12);\n}\n\nfunction check_for_parent_tag(el, tag) {\n    /** Check that the selection has the given parent tag.\n\n     el: A d3 selection or node.\n\n     tag: A tag name (case insensitive)\n\n     */\n    // make sure it is a node\n    if (el instanceof Array)\n        el = el.node();\n    while (el.parentNode !== null) {\n        el = el.parentNode;\n        if (el.tagName === undefined) continue;\n        if (el.tagName.toLowerCase() === tag.toLowerCase())\n            return true;\n    }\n    return false;\n}\n\nfunction name_to_url(name, download_url) {\n    /** Convert model or map name to url.\n\n     Arguments\n     ---------\n\n     name: The short name, e.g. e_coli.iJO1366.central_metabolism.\n\n     download_url: The url to prepend (optional).\n\n     */\n\n    if (download_url !== undefined && download_url !== null) {\n        // strip download_url\n        download_url = download_url.replace(/^\\/|\\/$/g, '');\n        name = [download_url, name].join('/');\n    }\n    // strip final path\n    return name.replace(/^\\/|\\/$/g, '') + '.json';\n}\n\nfunction parse_url_components(the_window, options) {\n    /** Parse the URL and return options based on the URL arguments.\n\n     Arguments\n     ---------\n\n     the_window: A reference to the global window.\n\n     options: (optional) an existing options object to which new options\n     will be added. Overwrites existing arguments in options.\n\n     Adapted from http://stackoverflow.com/questions/979975/how-to-get-the-value-from-url-parameter\n\n     */\n    if (_.isUndefined(options)) options = {}\n\n    var query = the_window.location.search.substring(1),\n        vars = query.split('&')\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split('='),\n            val = decodeURIComponent(pair[1])\n        // deal with array options\n        if (pair[0].indexOf('[]') == pair[0].length - 2) {\n            var o = pair[0].replace('[]', '')\n            if (!(o in options))\n                options[o] = []\n            options[o].push(val)\n        } else {\n            options[pair[0]] = val\n        }\n    }\n    return options\n}\n\n\nfunction get_document(node) {\n    /** Get the document for the node */\n    return node.ownerDocument;\n}\n\nfunction get_window(node) {\n    /** Get the window for the node */\n    return get_document(node).defaultView;\n}\n\nfunction d3_transform_catch(transform_attr) {\n    /** Return the result of d3.transform, but catch errors if we are in\n     node/jsdom. See also https://github.com/mbostock/d3/issues/1545\n\n     */\n    try {\n        return d3.transform(transform_attr);\n    } catch (err) {\n        console.error('Cannot run d3.transform, probably becuase this is a node/jsdom test. ' +\n                      'Returning a tranform object for testing.');\n        return { translate: [0, 0], rotate: 0 };\n    }\n}\n\nfunction check_browser(name) {\n    /** Look for name in the user agent string */\n    var browser = function() {\n        /** Thanks to http://stackoverflow.com/questions/2400935/browser-detection-in-javascript */\n        var ua = navigator.userAgent,\n            M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [],\n            tem;\n        if (/trident/i.test(M[1])) {\n            tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n            return 'IE '+ (tem[1] || '');\n        }\n        if (M[1] === 'Chrome') {\n            tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n            if (tem != null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\n        }\n        M = M[2] ? [ M[1], M[2] ]: [ navigator.appName, navigator.appVersion, '-?' ];\n        if((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\n        return M.join(' ');\n    };\n\n    try {\n        // navigator.userAgent is deprecated, so don't count on it\n        return browser().toLowerCase().indexOf(name) > -1;\n    } catch (e) {\n        return false;\n    }\n}\n","(function() {\nvar _slice = Array.prototype.slice;\nvar Bacon = {\n  toString: function () {\n    return \"Bacon\";\n  }\n};\n\nBacon.version = '0.7.83';\n\nvar Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\nvar nop = function () {};\nvar latter = function (_, x) {\n  return x;\n};\nvar former = function (x, _) {\n  return x;\n};\nvar cloneArray = function (xs) {\n  return xs.slice(0);\n};\nvar assert = function (message, condition) {\n  if (!condition) {\n    throw new Exception(message);\n  }\n};\nvar assertObservableIsProperty = function (x) {\n  if ((x != null ? x._isObservable : void 0) && !(x != null ? x._isProperty : void 0)) {\n    throw new Exception(\"Observable is not a Property : \" + x);\n  }\n};\nvar assertEventStream = function (event) {\n  if (!(event != null ? event._isEventStream : void 0)) {\n    throw new Exception(\"not an EventStream : \" + event);\n  }\n};\n\nvar assertObservable = function (event) {\n  if (!(event != null ? event._isObservable : void 0)) {\n    throw new Exception(\"not an Observable : \" + event);\n  }\n};\nvar assertFunction = function (f) {\n  return assert(\"not a function : \" + f, _.isFunction(f));\n};\nvar isArray = function (xs) {\n  return xs instanceof Array;\n};\nvar isObservable = function (x) {\n  return x && x._isObservable;\n};\nvar assertArray = function (xs) {\n  if (!isArray(xs)) {\n    throw new Exception(\"not an array : \" + xs);\n  }\n};\nvar assertNoArguments = function (args) {\n  return assert(\"no arguments supported\", args.length === 0);\n};\nvar assertString = function (x) {\n  if (typeof x === \"string\") {\n    throw new Exception(\"not a string : \" + x);\n  }\n};\n\nvar extend = function (target) {\n  var length = arguments.length;\n  for (var i = 1; 1 < length ? i < length : i > length; 1 < length ? i++ : i--) {\n    for (var prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n};\n\nvar inherit = function (child, parent) {\n  var hasProp = ({}).hasOwnProperty;\n  var ctor = function () {};\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) {\n      child[key] = parent[key];\n    }\n  }\n  return child;\n};\n\nvar _ = {\n  indexOf: (function () {\n    if (Array.prototype.indexOf) {\n      return function (xs, x) {\n        return xs.indexOf(x);\n      };\n    } else {\n      return function (xs, x) {\n        for (var i = 0, y; i < xs.length; i++) {\n          y = xs[i];\n          if (x === y) {\n            return i;\n          }\n        }\n        return -1;\n      };\n    }\n  })(),\n  indexWhere: function (xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n      y = xs[i];\n      if (f(y)) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  head: function (xs) {\n    return xs[0];\n  },\n  always: function (x) {\n    return function () {\n      return x;\n    };\n  },\n  negate: function (f) {\n    return function (x) {\n      return !f(x);\n    };\n  },\n  empty: function (xs) {\n    return xs.length === 0;\n  },\n  tail: function (xs) {\n    return xs.slice(1, xs.length);\n  },\n  filter: function (f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        filtered.push(x);\n      }\n    }\n    return filtered;\n  },\n  map: function (f, xs) {\n    return (function () {\n      var result = [];\n      for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n      }\n      return result;\n    })();\n  },\n  each: function (xs, f) {\n    for (var key in xs) {\n      if (Object.prototype.hasOwnProperty.call(xs, key)) {\n        var value = xs[key];\n        f(key, value);\n      }\n    }\n  },\n  toArray: function (xs) {\n    return isArray(xs) ? xs : [xs];\n  },\n  contains: function (xs, x) {\n    return _.indexOf(xs, x) !== -1;\n  },\n  id: function (x) {\n    return x;\n  },\n  last: function (xs) {\n    return xs[xs.length - 1];\n  },\n  all: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (!f(x)) {\n        return false;\n      }\n    }\n    return true;\n  },\n  any: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  without: function (x, xs) {\n    return _.filter(function (y) {\n      return y !== x;\n    }, xs);\n  },\n  remove: function (x, xs) {\n    var i = _.indexOf(xs, x);\n    if (i >= 0) {\n      return xs.splice(i, 1);\n    }\n  },\n  fold: function (xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      seed = f(seed, x);\n    }\n    return seed;\n  },\n  flatMap: function (f, xs) {\n    return _.fold(xs, [], function (ys, x) {\n      return ys.concat(f(x));\n    });\n  },\n  cached: function (f) {\n    var value = None;\n    return function () {\n      if (typeof value !== \"undefined\" && value !== null ? value._isNone : undefined) {\n        value = f();\n        f = undefined;\n      }\n      return value;\n    };\n  },\n  bind: function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n  isFunction: function (f) {\n    return typeof f === \"function\";\n  },\n  toString: function (obj) {\n    var internals, key, value;\n    var hasProp = ({}).hasOwnProperty;\n    try {\n      recursionDepth++;\n      if (obj == null) {\n        return \"undefined\";\n      } else if (_.isFunction(obj)) {\n        return \"function\";\n      } else if (isArray(obj)) {\n        if (recursionDepth > 5) {\n          return \"[..]\";\n        }\n        return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n      } else if ((obj != null ? obj.toString : void 0) != null && obj.toString !== Object.prototype.toString) {\n        return obj.toString();\n      } else if (typeof obj === \"object\") {\n        if (recursionDepth > 5) {\n          return \"{..}\";\n        }\n        internals = (function () {\n          var results = [];\n          for (key in obj) {\n            if (!hasProp.call(obj, key)) continue;\n            value = (function () {\n              var error;\n              try {\n                return obj[key];\n              } catch (error) {\n                return error;\n              }\n            })();\n            results.push(_.toString(key) + \":\" + _.toString(value));\n          }\n          return results;\n        })();\n        return \"{\" + internals + \"}\";\n      } else {\n        return obj;\n      }\n    } finally {\n      recursionDepth--;\n    }\n  }\n};\n\nvar recursionDepth = 0;\n\nBacon._ = _;\n\nvar UpdateBarrier = Bacon.UpdateBarrier = (function () {\n  var rootEvent;\n  var waiterObs = [];\n  var waiters = {};\n  var afters = [];\n  var aftersIndex = 0;\n  var flushed = {};\n\n  var afterTransaction = function (f) {\n    if (rootEvent) {\n      return afters.push(f);\n    } else {\n      return f();\n    }\n  };\n\n  var whenDoneWith = function (obs, f) {\n    if (rootEvent) {\n      var obsWaiters = waiters[obs.id];\n      if (!(typeof obsWaiters !== \"undefined\" && obsWaiters !== null)) {\n        obsWaiters = waiters[obs.id] = [f];\n        return waiterObs.push(obs);\n      } else {\n        return obsWaiters.push(f);\n      }\n    } else {\n      return f();\n    }\n  };\n\n  var flush = function () {\n    while (waiterObs.length > 0) {\n      flushWaiters(0, true);\n    }\n    flushed = {};\n  };\n\n  var flushWaiters = function (index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n      flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n      f = obsWaiters[i];\n      f();\n    }\n  };\n\n  var flushDepsOf = function (obs) {\n    if (flushed[obs.id]) return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n      dep = deps[i];\n      flushDepsOf(dep);\n      if (waiters[dep.id]) {\n        var index = _.indexOf(waiterObs, dep);\n        flushWaiters(index, false);\n      }\n    }\n    flushed[obs.id] = true;\n  };\n\n  var inTransaction = function (event, context, f, args) {\n    if (rootEvent) {\n      return f.apply(context, args);\n    } else {\n      rootEvent = event;\n      try {\n        var result = f.apply(context, args);\n\n        flush();\n      } finally {\n        rootEvent = undefined;\n        while (aftersIndex < afters.length) {\n          var after = afters[aftersIndex];\n          aftersIndex++;\n          after();\n        }\n        aftersIndex = 0;\n        afters = [];\n      }\n      return result;\n    }\n  };\n\n  var currentEventId = function () {\n    return rootEvent ? rootEvent.id : undefined;\n  };\n\n  var wrappedSubscribe = function (obs, sink) {\n    var unsubd = false;\n    var shouldUnsub = false;\n    var doUnsub = function () {\n      shouldUnsub = true;\n      return shouldUnsub;\n    };\n    var unsub = function () {\n      unsubd = true;\n      return doUnsub();\n    };\n    doUnsub = obs.dispatcher.subscribe(function (event) {\n      return afterTransaction(function () {\n        if (!unsubd) {\n          var reply = sink(event);\n          if (reply === Bacon.noMore) {\n            return unsub();\n          }\n        }\n      });\n    });\n    if (shouldUnsub) {\n      doUnsub();\n    }\n    return unsub;\n  };\n\n  var hasWaiters = function () {\n    return waiterObs.length > 0;\n  };\n\n  return { whenDoneWith: whenDoneWith, hasWaiters: hasWaiters, inTransaction: inTransaction, currentEventId: currentEventId, wrappedSubscribe: wrappedSubscribe, afterTransaction: afterTransaction };\n})();\n\nfunction Source(obs, sync) {\n  var lazy = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n  this.obs = obs;\n  this.sync = sync;\n  this.lazy = lazy;\n  this.queue = [];\n}\n\nextend(Source.prototype, {\n  _isSource: true,\n\n  subscribe: function (sink) {\n    return this.obs.dispatcher.subscribe(sink);\n  },\n  toString: function () {\n    return this.obs.toString();\n  },\n  markEnded: function () {\n    this.ended = true;\n    return true;\n  },\n  consume: function () {\n    if (this.lazy) {\n      return { value: _.always(this.queue[0]) };\n    } else {\n      return this.queue[0];\n    }\n  },\n  push: function (x) {\n    this.queue = [x];\n    return [x];\n  },\n  mayHave: function () {\n    return true;\n  },\n  hasAtLeast: function () {\n    return this.queue.length;\n  },\n  flatten: true\n});\n\nfunction ConsumingSource() {\n  Source.apply(this, arguments);\n}\n\ninherit(ConsumingSource, Source);\nextend(ConsumingSource.prototype, {\n  consume: function () {\n    return this.queue.shift();\n  },\n  push: function (x) {\n    return this.queue.push(x);\n  },\n  mayHave: function (c) {\n    return !this.ended || this.queue.length >= c;\n  },\n  hasAtLeast: function (c) {\n    return this.queue.length >= c;\n  },\n  flatten: false\n});\n\nfunction BufferingSource(obs) {\n  Source.call(this, obs, true);\n}\n\ninherit(BufferingSource, Source);\nextend(BufferingSource.prototype, {\n  consume: function () {\n    var values = this.queue;\n    this.queue = [];\n    return {\n      value: function () {\n        return values;\n      }\n    };\n  },\n  push: function (x) {\n    return this.queue.push(x.value());\n  },\n  hasAtLeast: function () {\n    return true;\n  }\n});\n\nSource.isTrigger = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s.sync;\n  } else {\n    return s != null ? s._isEventStream : void 0;\n  }\n};\n\nSource.fromObservable = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s;\n  } else if (s != null ? s._isProperty : void 0) {\n    return new Source(s, false);\n  } else {\n    return new ConsumingSource(s, true);\n  }\n};\n\nfunction Desc(context, method, args) {\n  this.context = context;\n  this.method = method;\n  this.args = args;\n}\n\nextend(Desc.prototype, {\n  _isDesc: true,\n  deps: function () {\n    if (!this.cached) {\n      this.cached = findDeps([this.context].concat(this.args));\n    }\n    return this.cached;\n  },\n  toString: function () {\n    return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n  }\n});\n\nvar describe = function (context, method) {\n  var ref = context || method;\n  if (ref && ref._isDesc) {\n    return context || method;\n  } else {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return new Desc(context, method, args);\n  }\n};\n\nvar withDesc = function (desc, obs) {\n  obs.desc = desc;\n  return obs;\n};\n\nvar findDeps = function (x) {\n  if (isArray(x)) {\n    return _.flatMap(findDeps, x);\n  } else if (isObservable(x)) {\n    return [x];\n  } else if (typeof x !== \"undefined\" && x !== null ? x._isSource : undefined) {\n    return [x.obs];\n  } else {\n    return [];\n  }\n};\n\nBacon.Desc = Desc;\nBacon.Desc.empty = new Bacon.Desc(\"\", \"\", []);\n\nvar withMethodCallSupport = function (wrapped) {\n  return function (f) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof f === \"object\" && args.length) {\n      var context = f;\n      var methodName = args[0];\n      f = function () {\n        return context[methodName].apply(context, arguments);\n      };\n      args = args.slice(1);\n    }\n    return wrapped.apply(undefined, [f].concat(args));\n  };\n};\n\nvar makeFunctionArgs = function (args) {\n  args = Array.prototype.slice.call(args);\n  return makeFunction_.apply(undefined, args);\n};\n\nvar partiallyApplied = function (f, applied) {\n  return function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return f.apply(undefined, applied.concat(args));\n  };\n};\n\nvar toSimpleExtractor = function (args) {\n  return function (key) {\n    return function (value) {\n      if (!(typeof value !== \"undefined\" && value !== null)) {\n        return;\n      } else {\n        var fieldValue = value[key];\n        if (_.isFunction(fieldValue)) {\n          return fieldValue.apply(value, args);\n        } else {\n          return fieldValue;\n        }\n      }\n    };\n  };\n};\n\nvar toFieldExtractor = function (f, args) {\n  var parts = f.slice(1).split(\".\");\n  var partFuncs = _.map(toSimpleExtractor(args), parts);\n  return function (value) {\n    for (var i = 0, f; i < partFuncs.length; i++) {\n      f = partFuncs[i];\n      value = f(value);\n    }\n    return value;\n  };\n};\n\nvar isFieldKey = function (f) {\n  return typeof f === \"string\" && f.length > 1 && f.charAt(0) === \".\";\n};\n\nvar makeFunction_ = withMethodCallSupport(function (f) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  if (_.isFunction(f)) {\n    if (args.length) {\n      return partiallyApplied(f, args);\n    } else {\n      return f;\n    }\n  } else if (isFieldKey(f)) {\n    return toFieldExtractor(f, args);\n  } else {\n    return _.always(f);\n  }\n});\n\nvar makeFunction = function (f, args) {\n  return makeFunction_.apply(undefined, [f].concat(args));\n};\n\nvar convertArgsToFunction = function (obs, f, args, method) {\n  if (typeof f !== \"undefined\" && f !== null ? f._isProperty : undefined) {\n    var sampled = f.sampledBy(obs, function (p, s) {\n      return [p, s];\n    });\n    return method.call(sampled, function (_ref) {\n      var p = _ref[0];\n      var s = _ref[1];\n      return p;\n    }).map(function (_ref2) {\n      var p = _ref2[0];\n      var s = _ref2[1];\n      return s;\n    });\n  } else {\n    f = makeFunction(f, args);\n    return method.call(obs, f);\n  }\n};\n\nvar toCombinator = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else if (isFieldKey(f)) {\n    var key = toFieldKey(f);\n    return function (left, right) {\n      return left[key](right);\n    };\n  } else {\n    throw new Exception(\"not a function or a field key: \" + f);\n  }\n};\n\nvar toFieldKey = function (f) {\n  return f.slice(1);\n};\n\nfunction Some(value) {\n  this.value = value;\n}\n\nextend(Some.prototype, {\n  _isSome: true,\n  getOrElse: function () {\n    return this.value;\n  },\n  get: function () {\n    return this.value;\n  },\n  filter: function (f) {\n    if (f(this.value)) {\n      return new Some(this.value);\n    } else {\n      return None;\n    }\n  },\n  map: function (f) {\n    return new Some(f(this.value));\n  },\n  forEach: function (f) {\n    return f(this.value);\n  },\n  isDefined: true,\n  toArray: function () {\n    return [this.value];\n  },\n  inspect: function () {\n    return \"Some(\" + this.value + \")\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n});\n\nvar None = {\n  _isNone: true,\n  getOrElse: function (value) {\n    return value;\n  },\n  filter: function () {\n    return None;\n  },\n  map: function () {\n    return None;\n  },\n  forEach: function () {},\n  isDefined: false,\n  toArray: function () {\n    return [];\n  },\n  inspect: function () {\n    return \"None\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n};\n\nvar toOption = function (v) {\n  if ((typeof v !== \"undefined\" && v !== null ? v._isSome : undefined) || (typeof v !== \"undefined\" && v !== null ? v._isNone : undefined)) {\n    return v;\n  } else {\n    return new Some(v);\n  }\n};\n\nBacon.noMore = \"<no-more>\";\nBacon.more = \"<more>\";\n\nvar eventIdCounter = 0;\n\nfunction Event() {\n  this.id = ++eventIdCounter;\n}\n\nEvent.prototype._isEvent = true;\nEvent.prototype.isEvent = function () {\n  return true;\n};\nEvent.prototype.isEnd = function () {\n  return false;\n};\nEvent.prototype.isInitial = function () {\n  return false;\n};\nEvent.prototype.isNext = function () {\n  return false;\n};\nEvent.prototype.isError = function () {\n  return false;\n};\nEvent.prototype.hasValue = function () {\n  return false;\n};\nEvent.prototype.filter = function () {\n  return true;\n};\nEvent.prototype.inspect = function () {\n  return this.toString();\n};\nEvent.prototype.log = function () {\n  return this.toString();\n};\n\nfunction Next(valueF, eager) {\n  if (!(this instanceof Next)) {\n    return new Next(valueF, eager);\n  }\n\n  Event.call(this);\n\n  if (!eager && _.isFunction(valueF) || (valueF != null ? valueF._isNext : void 0)) {\n    this.valueF = valueF;\n    this.valueInternal = void 0;\n  } else {\n    this.valueF = void 0;\n    this.valueInternal = valueF;\n  }\n}\n\ninherit(Next, Event);\n\nNext.prototype.isNext = function () {\n  return true;\n};\nNext.prototype.hasValue = function () {\n  return true;\n};\nNext.prototype.value = function () {\n  var ref;\n  if ((ref = this.valueF) != null ? ref._isNext : void 0) {\n    this.valueInternal = this.valueF.value();\n    this.valueF = void 0;\n  } else if (this.valueF) {\n    this.valueInternal = this.valueF();\n    this.valueF = void 0;\n  }\n  return this.valueInternal;\n};\n\nNext.prototype.fmap = function (f) {\n  var event, value;\n  if (this.valueInternal) {\n    value = this.valueInternal;\n    return this.apply(function () {\n      return f(value);\n    });\n  } else {\n    event = this;\n    return this.apply(function () {\n      return f(event.value());\n    });\n  }\n};\n\nNext.prototype.apply = function (value) {\n  return new Next(value);\n};\nNext.prototype.filter = function (f) {\n  return f(this.value());\n};\nNext.prototype.toString = function () {\n  return _.toString(this.value());\n};\nNext.prototype.log = function () {\n  return this.value();\n};\nNext.prototype._isNext = true;\n\nfunction Initial(valueF, eager) {\n  if (!(this instanceof Initial)) {\n    return new Initial(valueF, eager);\n  }\n  Next.call(this, valueF, eager);\n}\n\ninherit(Initial, Next);\nInitial.prototype._isInitial = true;\nInitial.prototype.isInitial = function () {\n  return true;\n};\nInitial.prototype.isNext = function () {\n  return false;\n};\nInitial.prototype.apply = function (value) {\n  return new Initial(value);\n};\nInitial.prototype.toNext = function () {\n  return new Next(this);\n};\n\nfunction End() {\n  if (!(this instanceof End)) {\n    return new End();\n  }\n  Event.call(this);\n}\n\ninherit(End, Event);\nEnd.prototype.isEnd = function () {\n  return true;\n};\nEnd.prototype.fmap = function () {\n  return this;\n};\nEnd.prototype.apply = function () {\n  return this;\n};\nEnd.prototype.toString = function () {\n  return \"<end>\";\n};\n\nfunction Error(error) {\n  if (!(this instanceof Error)) {\n    return new Error(error);\n  }\n  this.error = error;\n  Event.call(this);\n}\n\ninherit(Error, Event);\nError.prototype.isError = function () {\n  return true;\n};\nError.prototype.fmap = function () {\n  return this;\n};\nError.prototype.apply = function () {\n  return this;\n};\nError.prototype.toString = function () {\n  return \"<error> \" + _.toString(this.error);\n};\n\nBacon.Event = Event;\nBacon.Initial = Initial;\nBacon.Next = Next;\nBacon.End = End;\nBacon.Error = Error;\n\nvar initialEvent = function (value) {\n  return new Initial(value, true);\n};\nvar nextEvent = function (value) {\n  return new Next(value, true);\n};\nvar endEvent = function () {\n  return new End();\n};\nvar toEvent = function (x) {\n  if (x && x._isEvent) {\n    return x;\n  } else {\n    return nextEvent(x);\n  }\n};\n\nvar idCounter = 0;\nvar registerObs = function () {};\n\nfunction Observable(desc) {\n  this.desc = desc;\n  this.id = ++idCounter;\n  this.initialDesc = this.desc;\n}\n\nextend(Observable.prototype, {\n  _isObservable: true,\n\n  subscribe: function (sink) {\n    return UpdateBarrier.wrappedSubscribe(this, sink);\n  },\n\n  subscribeInternal: function (sink) {\n    return this.dispatcher.subscribe(sink);\n  },\n\n  onValue: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.hasValue()) {\n        return f(event.value());\n      }\n    });\n  },\n\n  onValues: function (f) {\n    return this.onValue(function (args) {\n      return f.apply(undefined, args);\n    });\n  },\n\n  onError: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isError()) {\n        return f(event.error);\n      }\n    });\n  },\n\n  onEnd: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isEnd()) {\n        return f();\n      }\n    });\n  },\n\n  name: function (name) {\n    this._name = name;\n    return this;\n  },\n\n  withDescription: function () {\n    this.desc = describe.apply(undefined, arguments);\n    return this;\n  },\n\n  toString: function () {\n    if (this._name) {\n      return this._name;\n    } else {\n      return this.desc.toString();\n    }\n  },\n\n  internalDeps: function () {\n    return this.initialDesc.deps();\n  }\n});\n\nObservable.prototype.assign = Observable.prototype.onValue;\nObservable.prototype.forEach = Observable.prototype.onValue;\nObservable.prototype.inspect = Observable.prototype.toString;\n\nBacon.Observable = Observable;\n\nfunction CompositeUnsubscribe() {\n  var ss = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n  this.unsubscribe = _.bind(this.unsubscribe, this);\n  this.unsubscribed = false;\n  this.subscriptions = [];\n  this.starting = [];\n  for (var i = 0, s; i < ss.length; i++) {\n    s = ss[i];\n    this.add(s);\n  }\n}\n\nextend(CompositeUnsubscribe.prototype, {\n  add: function (subscription) {\n    var _this2 = this;\n\n    if (this.unsubscribed) {\n      return;\n    }\n    var ended = false;\n    var unsub = nop;\n    this.starting.push(subscription);\n    var unsubMe = function () {\n      if (_this2.unsubscribed) {\n        return;\n      }\n      ended = true;\n      _this2.remove(unsub);\n      return _.remove(subscription, _this2.starting);\n    };\n    unsub = subscription(this.unsubscribe, unsubMe);\n    if (!(this.unsubscribed || ended)) {\n      this.subscriptions.push(unsub);\n    } else {\n      unsub();\n    }\n    _.remove(subscription, this.starting);\n    return unsub;\n  },\n\n  remove: function (unsub) {\n    if (this.unsubscribed) {\n      return;\n    }\n    if (_.remove(unsub, this.subscriptions) !== undefined) {\n      return unsub();\n    }\n  },\n\n  unsubscribe: function () {\n    if (this.unsubscribed) {\n      return;\n    }\n    this.unsubscribed = true;\n    var iterable = this.subscriptions;\n    for (var i = 0; i < iterable.length; i++) {\n      iterable[i]();\n    }\n    this.subscriptions = [];\n    this.starting = [];\n    return [];\n  },\n\n  count: function () {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.subscriptions.length + this.starting.length;\n  },\n\n  empty: function () {\n    return this.count() === 0;\n  }\n});\n\nBacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\nfunction Dispatcher(_subscribe, _handleEvent) {\n  this._subscribe = _subscribe;\n  this._handleEvent = _handleEvent;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.handleEvent = _.bind(this.handleEvent, this);\n  this.pushing = false;\n  this.ended = false;\n  this.prevError = undefined;\n  this.unsubSrc = undefined;\n  this.subscriptions = [];\n  this.queue = [];\n}\n\nDispatcher.prototype.hasSubscribers = function () {\n  return this.subscriptions.length > 0;\n};\n\nDispatcher.prototype.removeSub = function (subscription) {\n  this.subscriptions = _.without(subscription, this.subscriptions);\n  return this.subscriptions;\n};\n\nDispatcher.prototype.push = function (event) {\n  if (event.isEnd()) {\n    this.ended = true;\n  }\n  return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n};\n\nDispatcher.prototype.pushToSubscriptions = function (event) {\n  try {\n    var tmp = this.subscriptions;\n    var len = tmp.length;\n    for (var i = 0; i < len; i++) {\n      var sub = tmp[i];\n      var reply = sub.sink(event);\n      if (reply === Bacon.noMore || event.isEnd()) {\n        this.removeSub(sub);\n      }\n    }\n    return true;\n  } catch (error) {\n    this.pushing = false;\n    this.queue = [];\n    throw error;\n  }\n};\n\nDispatcher.prototype.pushIt = function (event) {\n  if (!this.pushing) {\n    if (event === this.prevError) {\n      return;\n    }\n    if (event.isError()) {\n      this.prevError = event;\n    }\n    this.pushing = true;\n    this.pushToSubscriptions(event);\n    this.pushing = false;\n    while (this.queue.length) {\n      event = this.queue.shift();\n      this.push(event);\n    }\n    if (this.hasSubscribers()) {\n      return Bacon.more;\n    } else {\n      this.unsubscribeFromSource();\n      return Bacon.noMore;\n    }\n  } else {\n    this.queue.push(event);\n    return Bacon.more;\n  }\n};\n\nDispatcher.prototype.handleEvent = function (event) {\n  if (this._handleEvent) {\n    return this._handleEvent(event);\n  } else {\n    return this.push(event);\n  }\n};\n\nDispatcher.prototype.unsubscribeFromSource = function () {\n  if (this.unsubSrc) {\n    this.unsubSrc();\n  }\n  this.unsubSrc = undefined;\n};\n\nDispatcher.prototype.subscribe = function (sink) {\n  var subscription;\n  if (this.ended) {\n    sink(endEvent());\n    return nop;\n  } else {\n    assertFunction(sink);\n    subscription = {\n      sink: sink\n    };\n    this.subscriptions.push(subscription);\n    if (this.subscriptions.length === 1) {\n      this.unsubSrc = this._subscribe(this.handleEvent);\n      assertFunction(this.unsubSrc);\n    }\n    return (function (_this) {\n      return function () {\n        _this.removeSub(subscription);\n        if (!_this.hasSubscribers()) {\n          return _this.unsubscribeFromSource();\n        }\n      };\n    })(this);\n  }\n};\n\nBacon.Dispatcher = Dispatcher;\n\nfunction EventStream(desc, subscribe, handler) {\n  if (!(this instanceof EventStream)) {\n    return new EventStream(desc, subscribe, handler);\n  }\n  if (_.isFunction(desc)) {\n    handler = subscribe;\n    subscribe = desc;\n    desc = Desc.empty;\n  }\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new Dispatcher(subscribe, handler);\n  registerObs(this);\n}\n\ninherit(EventStream, Observable);\nextend(EventStream.prototype, {\n  _isEventStream: true,\n\n  toProperty: function (initValue_) {\n    var initValue = arguments.length === 0 ? None : toOption(function () {\n      return initValue_;\n    });\n    var disp = this.dispatcher;\n    var desc = new Bacon.Desc(this, \"toProperty\", [initValue_]);\n    return new Property(desc, function (sink) {\n      var initSent = false;\n      var subbed = false;\n      var unsub = nop;\n      var reply = Bacon.more;\n      var sendInit = function () {\n        if (!initSent) {\n          return initValue.forEach(function (value) {\n            initSent = true;\n            reply = sink(new Initial(value));\n            if (reply === Bacon.noMore) {\n              unsub();\n              unsub = nop;\n              return nop;\n            }\n          });\n        }\n      };\n\n      unsub = disp.subscribe(function (event) {\n        if (event.hasValue()) {\n          if (event.isInitial() && !subbed) {\n            initValue = new Some(function () {\n              return event.value();\n            });\n            return Bacon.more;\n          } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = true;\n            initValue = new Some(event);\n            return sink(event);\n          }\n        } else {\n          if (event.isEnd()) {\n            reply = sendInit();\n          }\n          if (reply !== Bacon.noMore) {\n            return sink(event);\n          }\n        }\n      });\n      subbed = true;\n      sendInit();\n      return unsub;\n    });\n  },\n\n  toEventStream: function () {\n    return this;\n  },\n\n  withHandler: function (handler) {\n    return new EventStream(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  }\n});\n\nBacon.EventStream = EventStream;\n\nBacon.never = function () {\n  return new EventStream(describe(Bacon, \"never\"), function (sink) {\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.when = function () {\n  if (arguments.length === 0) {\n    return Bacon.never();\n  }\n  var len = arguments.length;\n  var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n\n  assert(usage, len % 2 === 0);\n  var sources = [];\n  var pats = [];\n  var i = 0;\n  var patterns = [];\n  while (i < len) {\n    patterns[i] = arguments[i];\n    patterns[i + 1] = arguments[i + 1];\n    var patSources = _.toArray(arguments[i]);\n    var f = constantToFunction(arguments[i + 1]);\n    var pat = { f: f, ixs: [] };\n    var triggerFound = false;\n    for (var j = 0, s; j < patSources.length; j++) {\n      s = patSources[j];\n      var index = _.indexOf(sources, s);\n      if (!triggerFound) {\n        triggerFound = Source.isTrigger(s);\n      }\n      if (index < 0) {\n        sources.push(s);\n        index = sources.length - 1;\n      }\n      for (var k = 0, ix; k < pat.ixs.length; k++) {\n        ix = pat.ixs[k];\n        if (ix.index === index) {\n          ix.count++;\n        }\n      }\n      pat.ixs.push({ index: index, count: 1 });\n    }\n\n    assert(\"At least one EventStream required\", triggerFound || !patSources.length);\n\n    if (patSources.length > 0) {\n      pats.push(pat);\n    }\n    i = i + 2;\n  }\n\n  if (!sources.length) {\n    return Bacon.never();\n  }\n\n  sources = _.map(Source.fromObservable, sources);\n  var needsBarrier = _.any(sources, function (s) {\n    return s.flatten;\n  }) && containsDuplicateDeps(_.map(function (s) {\n    return s.obs;\n  }, sources));\n\n  var desc = new Bacon.Desc(Bacon, \"when\", patterns);\n  var resultStream = new EventStream(desc, function (sink) {\n    var triggers = [];\n    var ends = false;\n    var match = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].hasAtLeast(i.count)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var cannotSync = function (source) {\n      return !source.sync || source.ended;\n    };\n    var cannotMatch = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].mayHave(i.count)) {\n          return true;\n        }\n      }\n    };\n    var nonFlattened = function (trigger) {\n      return !trigger.source.flatten;\n    };\n    var part = function (source) {\n      return function (unsubAll) {\n        var flushLater = function () {\n          return UpdateBarrier.whenDoneWith(resultStream, flush);\n        };\n        var flushWhileTriggers = function () {\n          if (triggers.length > 0) {\n            var reply = Bacon.more;\n            var trigger = triggers.pop();\n            for (var i1 = 0, p; i1 < pats.length; i1++) {\n              p = pats[i1];\n              if (match(p)) {\n                var events = (function () {\n                  var result = [];\n                  for (var i2 = 0, i; i2 < p.ixs.length; i2++) {\n                    i = p.ixs[i2];\n                    result.push(sources[i.index].consume());\n                  }\n                  return result;\n                })();\n                reply = sink(trigger.e.apply(function () {\n                  var _p;\n\n                  var values = (function () {\n                    var result = [];\n                    for (var i2 = 0, event; i2 < events.length; i2++) {\n                      event = events[i2];\n                      result.push(event.value());\n                    }\n                    return result;\n                  })();\n\n                  return (_p = p).f.apply(_p, values);\n                }));\n                if (triggers.length) {\n                  triggers = _.filter(nonFlattened, triggers);\n                }\n                if (reply === Bacon.noMore) {\n                  return reply;\n                } else {\n                  return flushWhileTriggers();\n                }\n              }\n            }\n          } else {\n            return Bacon.more;\n          }\n        };\n        var flush = function () {\n          var reply = flushWhileTriggers();\n          if (ends) {\n            if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n              reply = Bacon.noMore;\n              sink(endEvent());\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n\n          return reply;\n        };\n        return source.subscribe(function (e) {\n          if (e.isEnd()) {\n            ends = true;\n            source.markEnded();\n            flushLater();\n          } else if (e.isError()) {\n            var reply = sink(e);\n          } else {\n            source.push(e);\n            if (source.sync) {\n              triggers.push({ source: source, e: e });\n              if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                flushLater();\n              } else {\n                flush();\n              }\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n          return reply || Bacon.more;\n        });\n      };\n    };\n\n    return new Bacon.CompositeUnsubscribe((function () {\n      var result = [];\n      for (var i1 = 0, s; i1 < sources.length; i1++) {\n        s = sources[i1];\n        result.push(part(s));\n      }\n      return result;\n    })()).unsubscribe;\n  });\n  return resultStream;\n};\n\nvar containsDuplicateDeps = function (observables) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n  var checkObservable = function (obs) {\n    if (_.contains(state, obs)) {\n      return true;\n    } else {\n      var deps = obs.internalDeps();\n      if (deps.length) {\n        state.push(obs);\n        return _.any(deps, checkObservable);\n      } else {\n        state.push(obs);\n        return false;\n      }\n    }\n  };\n\n  return _.any(observables, checkObservable);\n};\n\nvar constantToFunction = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else {\n    return _.always(f);\n  }\n};\n\nBacon.groupSimultaneous = function () {\n  for (var _len5 = arguments.length, streams = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    streams[_key5] = arguments[_key5];\n  }\n\n  if (streams.length === 1 && isArray(streams[0])) {\n    streams = streams[0];\n  }\n  var sources = (function () {\n    var result = [];\n    for (var i = 0, s; i < streams.length; i++) {\n      s = streams[i];\n      result.push(new BufferingSource(s));\n    }\n    return result;\n  })();\n  return withDesc(new Bacon.Desc(Bacon, \"groupSimultaneous\", streams), Bacon.when(sources, function () {\n    for (var _len6 = arguments.length, xs = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      xs[_key6] = arguments[_key6];\n    }\n\n    return xs;\n  }));\n};\n\nfunction PropertyDispatcher(property, subscribe, handleEvent) {\n  Dispatcher.call(this, subscribe, handleEvent);\n  this.property = property;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.current = None;\n  this.currentValueRootId = undefined;\n  this.propertyEnded = false;\n}\n\ninherit(PropertyDispatcher, Dispatcher);\nextend(PropertyDispatcher.prototype, {\n  push: function (event) {\n    if (event.isEnd()) {\n      this.propertyEnded = true;\n    }\n    if (event.hasValue()) {\n      this.current = new Some(event);\n      this.currentValueRootId = UpdateBarrier.currentEventId();\n    }\n    return Dispatcher.prototype.push.call(this, event);\n  },\n\n  maybeSubSource: function (sink, reply) {\n    if (reply === Bacon.noMore) {\n      return nop;\n    } else if (this.propertyEnded) {\n      sink(endEvent());\n      return nop;\n    } else {\n      return Dispatcher.prototype.subscribe.call(this, sink);\n    }\n  },\n\n  subscribe: function (sink) {\n    var _this3 = this;\n\n    var initSent = false;\n\n    var reply = Bacon.more;\n\n    if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n      var dispatchingId = UpdateBarrier.currentEventId();\n      var valId = this.currentValueRootId;\n      if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n        UpdateBarrier.whenDoneWith(this.property, function () {\n          if (_this3.currentValueRootId === valId) {\n            return sink(initialEvent(_this3.current.get().value()));\n          }\n        });\n\n        return this.maybeSubSource(sink, reply);\n      } else {\n        UpdateBarrier.inTransaction(undefined, this, function () {\n          reply = sink(initialEvent(this.current.get().value()));\n          return reply;\n        }, []);\n        return this.maybeSubSource(sink, reply);\n      }\n    } else {\n      return this.maybeSubSource(sink, reply);\n    }\n  }\n});\n\nfunction Property(desc, subscribe, handler) {\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n  registerObs(this);\n}\n\ninherit(Property, Observable);\nextend(Property.prototype, {\n  _isProperty: true,\n\n  changes: function () {\n    var _this4 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"changes\", []), function (sink) {\n      return _this4.dispatcher.subscribe(function (event) {\n        if (!event.isInitial()) {\n          return sink(event);\n        }\n      });\n    });\n  },\n\n  withHandler: function (handler) {\n    return new Property(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  },\n\n  toProperty: function () {\n    assertNoArguments(arguments);\n    return this;\n  },\n\n  toEventStream: function () {\n    var _this5 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"toEventStream\", []), function (sink) {\n      return _this5.dispatcher.subscribe(function (event) {\n        if (event.isInitial()) {\n          event = event.toNext();\n        }\n        return sink(event);\n      });\n    });\n  }\n});\n\nBacon.Property = Property;\n\nBacon.constant = function (value) {\n  return new Property(new Bacon.Desc(Bacon, \"constant\", [value]), function (sink) {\n    sink(initialEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.fromBinder = function (binder) {\n  var eventTransformer = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromBinder\", [binder, eventTransformer]);\n  return new EventStream(desc, function (sink) {\n    var unbound = false;\n    var shouldUnbind = false;\n    var unbind = function () {\n      if (!unbound) {\n        if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n          unbinder();\n          return unbound = true;\n        } else {\n          return shouldUnbind = true;\n        }\n      }\n    };\n    var unbinder = binder(function () {\n      var ref;\n\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var value = eventTransformer.apply(this, args);\n      if (!(isArray(value) && ((ref = _.last(value)) != null ? ref._isEvent : undefined))) {\n        value = [value];\n      }\n      var reply = Bacon.more;\n      for (var i = 0, event; i < value.length; i++) {\n        event = value[i];\n        reply = sink(event = toEvent(event));\n        if (reply === Bacon.noMore || event.isEnd()) {\n          unbind();\n          return reply;\n        }\n      }\n      return reply;\n    });\n    if (shouldUnbind) {\n      unbind();\n    }\n    return unbind;\n  });\n};\n\nBacon.Observable.prototype.map = function (p) {\n  for (var _len8 = arguments.length, args = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n\n  return convertArgsToFunction(this, p, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n      return this.push(event.fmap(f));\n    }));\n  });\n};\n\nvar argumentsToObservables = function (args) {\n  if (isArray(args[0])) {\n    return args[0];\n  } else {\n    return Array.prototype.slice.call(args);\n  }\n};\n\nvar argumentsToObservablesAndFunction = function (args) {\n  if (_.isFunction(args[0])) {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n  } else {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n  }\n};\n\nBacon.combineAsArray = function () {\n  var streams = argumentsToObservables(arguments);\n  for (var index = 0, stream; index < streams.length; index++) {\n    stream = streams[index];\n    if (!isObservable(stream)) {\n      streams[index] = Bacon.constant(stream);\n    }\n  }\n  if (streams.length) {\n    var sources = (function () {\n      var result = [];\n      for (var i = 0, s; i < streams.length; i++) {\n        s = streams[i];\n        result.push(new Source(s, true));\n      }\n      return result;\n    })();\n    return withDesc(new Bacon.Desc(Bacon, \"combineAsArray\", streams), Bacon.when(sources, function () {\n      for (var _len9 = arguments.length, xs = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        xs[_key9] = arguments[_key9];\n      }\n\n      return xs;\n    }).toProperty());\n  } else {\n    return Bacon.constant([]);\n  }\n};\n\nBacon.onValues = function () {\n  for (var _len10 = arguments.length, streams = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    streams[_key10] = arguments[_key10];\n  }\n\n  return Bacon.combineAsArray(streams.slice(0, streams.length - 1)).onValues(streams[streams.length - 1]);\n};\n\nBacon.combineWith = function () {\n  var _argumentsToObservablesAndFunction = argumentsToObservablesAndFunction(arguments);\n\n  var streams = _argumentsToObservablesAndFunction[0];\n  var f = _argumentsToObservablesAndFunction[1];\n\n  var desc = new Bacon.Desc(Bacon, \"combineWith\", [f].concat(streams));\n  return withDesc(desc, Bacon.combineAsArray(streams).map(function (values) {\n    return f.apply(undefined, values);\n  }));\n};\n\nBacon.Observable.prototype.combine = function (other, f) {\n  var combinator = toCombinator(f);\n  var desc = new Bacon.Desc(this, \"combine\", [other, f]);\n  return withDesc(desc, Bacon.combineAsArray(this, other).map(function (values) {\n    return combinator(values[0], values[1]);\n  }));\n};\n\nBacon.Observable.prototype.withStateMachine = function (initState, f) {\n  var state = initState;\n  var desc = new Bacon.Desc(this, \"withStateMachine\", [initState, f]);\n  return withDesc(desc, this.withHandler(function (event) {\n    var fromF = f(state, event);\n    var newState = fromF[0];\n    var outputs = fromF[1];\n\n    state = newState;\n    var reply = Bacon.more;\n    for (var i = 0, output; i < outputs.length; i++) {\n      output = outputs[i];\n      reply = this.push(output);\n      if (reply === Bacon.noMore) {\n        return reply;\n      }\n    }\n    return reply;\n  }));\n};\n\nvar equals = function (a, b) {\n  return a === b;\n};\n\nvar isNone = function (object) {\n  return typeof object !== \"undefined\" && object !== null ? object._isNone : false;\n};\n\nBacon.Observable.prototype.skipDuplicates = function () {\n  var isEqual = arguments.length <= 0 || arguments[0] === undefined ? equals : arguments[0];\n\n  var desc = new Bacon.Desc(this, \"skipDuplicates\", []);\n  return withDesc(desc, this.withStateMachine(None, function (prev, event) {\n    if (!event.hasValue()) {\n      return [prev, [event]];\n    } else if (event.isInitial() || isNone(prev) || !isEqual(prev.get(), event.value())) {\n      return [new Some(event.value()), [event]];\n    } else {\n      return [prev, []];\n    }\n  }));\n};\n\nBacon.Observable.prototype.awaiting = function (other) {\n  var desc = new Bacon.Desc(this, \"awaiting\", [other]);\n  return withDesc(desc, Bacon.groupSimultaneous(this, other).map(function (values) {\n    return values[1].length === 0;\n  }).toProperty(false).skipDuplicates());\n};\n\nBacon.Observable.prototype.not = function () {\n  return withDesc(new Bacon.Desc(this, \"not\", []), this.map(function (x) {\n    return !x;\n  }));\n};\n\nBacon.Property.prototype.and = function (other) {\n  return withDesc(new Bacon.Desc(this, \"and\", [other]), this.combine(other, function (x, y) {\n    return x && y;\n  }));\n};\n\nBacon.Property.prototype.or = function (other) {\n  return withDesc(new Bacon.Desc(this, \"or\", [other]), this.combine(other, function (x, y) {\n    return x || y;\n  }));\n};\n\nBacon.scheduler = {\n  setTimeout: function (f, d) {\n    return setTimeout(f, d);\n  },\n  setInterval: function (f, i) {\n    return setInterval(f, i);\n  },\n  clearInterval: function (id) {\n    return clearInterval(id);\n  },\n  clearTimeout: function (id) {\n    return clearTimeout(id);\n  },\n  now: function () {\n    return new Date().getTime();\n  }\n};\n\nBacon.EventStream.prototype.bufferWithTime = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithTime\", [delay]), this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n};\n\nBacon.EventStream.prototype.bufferWithCount = function (count) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithCount\", [count]), this.bufferWithTimeOrCount(undefined, count));\n};\n\nBacon.EventStream.prototype.bufferWithTimeOrCount = function (delay, count) {\n  var flushOrSchedule = function (buffer) {\n    if (buffer.values.length === count) {\n      return buffer.flush();\n    } else if (delay !== undefined) {\n      return buffer.schedule();\n    }\n  };\n  var desc = new Bacon.Desc(this, \"bufferWithTimeOrCount\", [delay, count]);\n  return withDesc(desc, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n};\n\nBacon.EventStream.prototype.buffer = function (delay) {\n  var onInput = arguments.length <= 1 || arguments[1] === undefined ? nop : arguments[1];\n  var onFlush = arguments.length <= 2 || arguments[2] === undefined ? nop : arguments[2];\n\n  var buffer = {\n    scheduled: null,\n    end: undefined,\n    values: [],\n    flush: function () {\n      if (this.scheduled) {\n        Bacon.scheduler.clearTimeout(this.scheduled);\n        this.scheduled = null;\n      }\n      if (this.values.length > 0) {\n        var valuesToPush = this.values;\n        this.values = [];\n        var reply = this.push(nextEvent(valuesToPush));\n        if (this.end != null) {\n          return this.push(this.end);\n        } else if (reply !== Bacon.noMore) {\n          return onFlush(this);\n        }\n      } else {\n        if (this.end != null) {\n          return this.push(this.end);\n        }\n      }\n    },\n    schedule: function () {\n      var _this6 = this;\n\n      if (!this.scheduled) {\n        return this.scheduled = delay(function () {\n          return _this6.flush();\n        });\n      }\n    }\n  };\n  var reply = Bacon.more;\n  if (!_.isFunction(delay)) {\n    var delayMs = delay;\n    delay = function (f) {\n      return Bacon.scheduler.setTimeout(f, delayMs);\n    };\n  }\n  return withDesc(new Bacon.Desc(this, \"buffer\", []), this.withHandler(function (event) {\n    var _this7 = this;\n\n    buffer.push = function (event) {\n      return _this7.push(event);\n    };\n    if (event.isError()) {\n      reply = this.push(event);\n    } else if (event.isEnd()) {\n      buffer.end = event;\n      if (!buffer.scheduled) {\n        buffer.flush();\n      }\n    } else {\n      buffer.values.push(event.value());\n\n      onInput(buffer);\n    }\n    return reply;\n  }));\n};\n\nBacon.Observable.prototype.filter = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len11 = arguments.length, args = Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    args[_key11 - 1] = arguments[_key11];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"filter\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.once = function (value) {\n  return new EventStream(new Desc(Bacon, \"once\", [value]), function (sink) {\n    sink(toEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.EventStream.prototype.concat = function (right) {\n  var left = this;\n  return new EventStream(new Bacon.Desc(left, \"concat\", [right]), function (sink) {\n    var unsubRight = nop;\n    var unsubLeft = left.dispatcher.subscribe(function (e) {\n      if (e.isEnd()) {\n        unsubRight = right.dispatcher.subscribe(sink);\n        return unsubRight;\n      } else {\n        return sink(e);\n      }\n    });\n    return function () {\n      return (unsubLeft(), unsubRight());\n    };\n  });\n};\n\nBacon.Observable.prototype.flatMap = function () {\n  return flatMap_(this, makeSpawner(arguments));\n};\n\nBacon.Observable.prototype.flatMapFirst = function () {\n  return flatMap_(this, makeSpawner(arguments), true);\n};\n\nvar makeSpawner = function (args) {\n  if (args.length === 1 && isObservable(args[0])) {\n    return _.always(args[0]);\n  } else {\n    return makeFunctionArgs(args);\n  }\n};\n\nvar makeObservable = function (x) {\n  if (isObservable(x)) {\n    return x;\n  } else {\n    return Bacon.once(x);\n  }\n};\n\nvar flatMap_ = function (root, f, firstOnly, limit) {\n  var rootDep = [root];\n  var childDeps = [];\n  var desc = new Bacon.Desc(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), [f]);\n  var result = new EventStream(desc, function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var queue = [];\n    var spawn = function (event) {\n      var child = makeObservable(f(event.value()));\n      childDeps.push(child);\n      return composite.add(function (unsubAll, unsubMe) {\n        return child.dispatcher.subscribe(function (event) {\n          if (event.isEnd()) {\n            _.remove(child, childDeps);\n            checkQueue();\n            checkEnd(unsubMe);\n            return Bacon.noMore;\n          } else {\n            if (typeof event !== \"undefined\" && event !== null ? event._isInitial : undefined) {\n              event = event.toNext();\n            }\n            var reply = sink(event);\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          }\n        });\n      });\n    };\n    var checkQueue = function () {\n      var event = queue.shift();\n      if (event) {\n        return spawn(event);\n      }\n    };\n    var checkEnd = function (unsub) {\n      unsub();\n      if (composite.empty()) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (__, unsubRoot) {\n      return root.dispatcher.subscribe(function (event) {\n        if (event.isEnd()) {\n          return checkEnd(unsubRoot);\n        } else if (event.isError()) {\n          return sink(event);\n        } else if (firstOnly && composite.count() > 1) {\n          return Bacon.more;\n        } else {\n          if (composite.unsubscribed) {\n            return Bacon.noMore;\n          }\n          if (limit && composite.count() > limit) {\n            return queue.push(event);\n          } else {\n            return spawn(event);\n          }\n        }\n      });\n    });\n    return composite.unsubscribe;\n  });\n  result.internalDeps = function () {\n    if (childDeps.length) {\n      return rootDep.concat(childDeps);\n    } else {\n      return rootDep;\n    }\n  };\n  return result;\n};\n\nBacon.Observable.prototype.flatMapWithConcurrencyLimit = function (limit) {\n  for (var _len12 = arguments.length, args = Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n    args[_key12 - 1] = arguments[_key12];\n  }\n\n  var desc = new Bacon.Desc(this, \"flatMapWithConcurrencyLimit\", [limit].concat(args));\n  return withDesc(desc, flatMap_(this, makeSpawner(args), false, limit));\n};\n\nBacon.Observable.prototype.flatMapConcat = function () {\n  var desc = new Bacon.Desc(this, \"flatMapConcat\", Array.prototype.slice.call(arguments, 0));\n  return withDesc(desc, this.flatMapWithConcurrencyLimit.apply(this, [1].concat(_slice.call(arguments))));\n};\n\nBacon.later = function (delay, value) {\n  return withDesc(new Bacon.Desc(Bacon, \"later\", [delay, value]), Bacon.fromBinder(function (sink) {\n    var sender = function () {\n      return sink([value, endEvent()]);\n    };\n    var id = Bacon.scheduler.setTimeout(sender, delay);\n    return function () {\n      return Bacon.scheduler.clearTimeout(id);\n    };\n  }));\n};\n\nBacon.Observable.prototype.bufferingThrottle = function (minimumInterval) {\n  var desc = new Bacon.Desc(this, \"bufferingThrottle\", [minimumInterval]);\n  return withDesc(desc, this.flatMapConcat(function (x) {\n    return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n  }));\n};\n\nBacon.Property.prototype.bufferingThrottle = function () {\n  return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n};\n\nfunction Bus() {\n  if (!(this instanceof Bus)) {\n    return new Bus();\n  }\n\n  this.unsubAll = _.bind(this.unsubAll, this);\n  this.subscribeAll = _.bind(this.subscribeAll, this);\n  this.guardedSink = _.bind(this.guardedSink, this);\n\n  this.sink = undefined;\n  this.subscriptions = [];\n  this.ended = false;\n  EventStream.call(this, new Bacon.Desc(Bacon, \"Bus\", []), this.subscribeAll);\n}\n\ninherit(Bus, EventStream);\nextend(Bus.prototype, {\n  unsubAll: function () {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (typeof sub.unsub === \"function\") {\n        sub.unsub();\n      }\n    }\n  },\n\n  subscribeAll: function (newSink) {\n    if (this.ended) {\n      newSink(endEvent());\n    } else {\n      this.sink = newSink;\n      var iterable = cloneArray(this.subscriptions);\n      for (var i = 0, subscription; i < iterable.length; i++) {\n        subscription = iterable[i];\n        this.subscribeInput(subscription);\n      }\n    }\n    return this.unsubAll;\n  },\n\n  guardedSink: function (input) {\n    var _this8 = this;\n\n    return function (event) {\n      if (event.isEnd()) {\n        _this8.unsubscribeInput(input);\n        return Bacon.noMore;\n      } else {\n        return _this8.sink(event);\n      }\n    };\n  },\n\n  subscribeInput: function (subscription) {\n    subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    return subscription.unsub;\n  },\n\n  unsubscribeInput: function (input) {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (sub.input === input) {\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n        this.subscriptions.splice(i, 1);\n        return;\n      }\n    }\n  },\n\n  plug: function (input) {\n    var _this9 = this;\n\n    assertObservable(input);\n    if (this.ended) {\n      return;\n    }\n    var sub = { input: input };\n    this.subscriptions.push(sub);\n    if (typeof this.sink !== \"undefined\") {\n      this.subscribeInput(sub);\n    }\n    return function () {\n      return _this9.unsubscribeInput(input);\n    };\n  },\n\n  end: function () {\n    this.ended = true;\n    this.unsubAll();\n    if (typeof this.sink === \"function\") {\n      return this.sink(endEvent());\n    }\n  },\n\n  push: function (value) {\n    if (!this.ended && typeof this.sink === \"function\") {\n      return this.sink(nextEvent(value));\n    }\n  },\n\n  error: function (error) {\n    if (typeof this.sink === \"function\") {\n      return this.sink(new Error(error));\n    }\n  }\n});\n\nBacon.Bus = Bus;\n\nvar liftCallback = function (desc, wrapped) {\n  return withMethodCallSupport(function (f) {\n    var stream = partiallyApplied(wrapped, [function (values, callback) {\n      return f.apply(undefined, values.concat([callback]));\n    }]);\n\n    for (var _len13 = arguments.length, args = Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n      args[_key13 - 1] = arguments[_key13];\n    }\n\n    return withDesc(new Bacon.Desc(Bacon, desc, [f].concat(args)), Bacon.combineAsArray(args).flatMap(stream));\n  });\n};\n\nBacon.fromCallback = liftCallback(\"fromCallback\", function (f) {\n  for (var _len14 = arguments.length, args = Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n    args[_key14 - 1] = arguments[_key14];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (value) {\n    return [value, endEvent()];\n  });\n});\n\nBacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function (f) {\n  for (var _len15 = arguments.length, args = Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n    args[_key15 - 1] = arguments[_key15];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (error, value) {\n    if (error) {\n      return [new Error(error), endEvent()];\n    }\n    return [value, endEvent()];\n  });\n});\n\nBacon.combineTemplate = function (template) {\n  function current(ctxStack) {\n    return ctxStack[ctxStack.length - 1];\n  }\n  function setValue(ctxStack, key, value) {\n    current(ctxStack)[key] = value;\n    return value;\n  }\n  function applyStreamValue(key, index) {\n    return function (ctxStack, values) {\n      return setValue(ctxStack, key, values[index]);\n    };\n  }\n  function constantValue(key, value) {\n    return function (ctxStack) {\n      return setValue(ctxStack, key, value);\n    };\n  }\n\n  function mkContext(template) {\n    return isArray(template) ? [] : {};\n  }\n\n  function pushContext(key, value) {\n    return function (ctxStack) {\n      var newContext = mkContext(value);\n      setValue(ctxStack, key, newContext);\n      return ctxStack.push(newContext);\n    };\n  }\n\n  function compile(key, value) {\n    if (isObservable(value)) {\n      streams.push(value);\n      return funcs.push(applyStreamValue(key, streams.length - 1));\n    } else if (value && (value.constructor == Object || value.constructor == Array)) {\n      var popContext = function (ctxStack) {\n        return ctxStack.pop();\n      };\n      funcs.push(pushContext(key, value));\n      compileTemplate(value);\n      return funcs.push(popContext);\n    } else {\n      return funcs.push(constantValue(key, value));\n    }\n  }\n\n  function combinator(values) {\n    var rootContext = mkContext(template);\n    var ctxStack = [rootContext];\n    for (var i = 0, f; i < funcs.length; i++) {\n      f = funcs[i];\n      f(ctxStack, values);\n    }\n    return rootContext;\n  }\n\n  function compileTemplate(template) {\n    return _.each(template, compile);\n  }\n\n  var funcs = [];\n  var streams = [];\n\n  compileTemplate(template);\n\n  return withDesc(new Bacon.Desc(Bacon, \"combineTemplate\", [template]), Bacon.combineAsArray(streams).map(combinator));\n};\n\nvar addPropertyInitValueToStream = function (property, stream) {\n  var justInitValue = new EventStream(describe(property, \"justInitValue\"), function (sink) {\n    var value = undefined;\n    var unsub = property.dispatcher.subscribe(function (event) {\n      if (!event.isEnd()) {\n        value = event;\n      }\n      return Bacon.noMore;\n    });\n    UpdateBarrier.whenDoneWith(justInitValue, function () {\n      if (typeof value !== \"undefined\" && value !== null) {\n        sink(value);\n      }\n      return sink(endEvent());\n    });\n    return unsub;\n  });\n  return justInitValue.concat(stream).toProperty();\n};\n\nBacon.Observable.prototype.mapEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      this.push(nextEvent(f(event)));\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.skipErrors = function () {\n  return withDesc(new Bacon.Desc(this, \"skipErrors\", []), this.withHandler(function (event) {\n    if (event.isError()) {\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.takeUntil = function (stopper) {\n  var endMarker = {};\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      var _event$value = event.value();\n\n      var data = _event$value[0];\n      var stopper = _event$value[1];\n\n      if (stopper.length) {\n        return this.push(endEvent());\n      } else {\n        var reply = Bacon.more;\n        for (var i = 0, value; i < data.length; i++) {\n          value = data[i];\n          if (value === endMarker) {\n            reply = this.push(endEvent());\n          } else {\n            reply = this.push(nextEvent(value));\n          }\n        }\n        return reply;\n      }\n    }\n  }));\n};\n\nBacon.Property.prototype.takeUntil = function (stopper) {\n  var changes = this.changes().takeUntil(stopper);\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), addPropertyInitValueToStream(this, changes));\n};\n\nBacon.Observable.prototype.flatMapLatest = function () {\n  var f = makeSpawner(arguments);\n  var stream = this.toEventStream();\n  return withDesc(new Bacon.Desc(this, \"flatMapLatest\", [f]), stream.flatMap(function (value) {\n    return makeObservable(f(value)).takeUntil(stream);\n  }));\n};\n\nBacon.Property.prototype.delayChanges = function (desc, f) {\n  return withDesc(desc, addPropertyInitValueToStream(this, f(this.changes())));\n};\n\nBacon.EventStream.prototype.delay = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"delay\", [delay]), this.flatMap(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.delay = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"delay\", [delay]), function (changes) {\n    return changes.delay(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounce = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounce\", [delay]), this.flatMapLatest(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.debounce = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounce\", [delay]), function (changes) {\n    return changes.debounce(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounceImmediate = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounceImmediate\", [delay]), this.flatMapFirst(function (value) {\n    return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n  }));\n};\n\nBacon.Observable.prototype.decode = function (cases) {\n  return withDesc(new Bacon.Desc(this, \"decode\", [cases]), this.combine(Bacon.combineTemplate(cases), function (key, values) {\n    return values[key];\n  }));\n};\n\nBacon.Observable.prototype.scan = function (seed, f) {\n  var _this10 = this;\n\n  var resultProperty;\n  f = toCombinator(f);\n  var acc = toOption(seed);\n  var initHandled = false;\n  var subscribe = function (sink) {\n    var initSent = false;\n    var unsub = nop;\n    var reply = Bacon.more;\n    var sendInit = function () {\n      if (!initSent) {\n        return acc.forEach(function (value) {\n          initSent = initHandled = true;\n          reply = sink(new Initial(function () {\n            return value;\n          }));\n          if (reply === Bacon.noMore) {\n            unsub();\n            unsub = nop;\n            return unsub;\n          }\n        });\n      }\n    };\n    unsub = _this10.dispatcher.subscribe(function (event) {\n      if (event.hasValue()) {\n        if (initHandled && event.isInitial()) {\n          return Bacon.more;\n        } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = initHandled = true;\n            var prev = acc.getOrElse(undefined);\n            var next = f(prev, event.value());\n\n            acc = new Some(next);\n            return sink(event.apply(function () {\n              return next;\n            }));\n          }\n      } else {\n        if (event.isEnd()) {\n          reply = sendInit();\n        }\n        if (reply !== Bacon.noMore) {\n          return sink(event);\n        }\n      }\n    });\n    UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n    return unsub;\n  };\n  resultProperty = new Property(new Bacon.Desc(this, \"scan\", [seed, f]), subscribe);\n  return resultProperty;\n};\n\nBacon.Observable.prototype.diff = function (start, f) {\n  f = toCombinator(f);\n  return withDesc(new Bacon.Desc(this, \"diff\", [start, f]), this.scan([start], function (prevTuple, next) {\n    return [next, f(prevTuple[0], next)];\n  }).filter(function (tuple) {\n    return tuple.length === 2;\n  }).map(function (tuple) {\n    return tuple[1];\n  }));\n};\n\nBacon.Observable.prototype.doAction = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doAction\", [f]), this.withHandler(function (event) {\n    if (event.hasValue()) {\n      f(event.value());\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      f();\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      f(event.error);\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doLog = function () {\n  for (var _len16 = arguments.length, args = Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    args[_key16] = arguments[_key16];\n  }\n\n  return withDesc(new Bacon.Desc(this, \"doLog\", args), this.withHandler(function (event) {\n    if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.endOnError = function (f) {\n  if (!(typeof f !== \"undefined\" && f !== null)) {\n    f = true;\n  }\n\n  for (var _len17 = arguments.length, args = Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n    args[_key17 - 1] = arguments[_key17];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"endOnError\", []), this.withHandler(function (event) {\n      if (event.isError() && f(event.error)) {\n        this.push(event);\n        return this.push(endEvent());\n      } else {\n        return this.push(event);\n      }\n    }));\n  });\n};\n\nObservable.prototype.errors = function () {\n  return withDesc(new Bacon.Desc(this, \"errors\", []), this.filter(function () {\n    return false;\n  }));\n};\n\nBacon.Observable.prototype.take = function (count) {\n  if (count <= 0) {\n    return Bacon.never();\n  }\n  return withDesc(new Bacon.Desc(this, \"take\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      count--;\n      if (count > 0) {\n        return this.push(event);\n      } else {\n        if (count === 0) {\n          this.push(event);\n        }\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }\n  }));\n};\n\nBacon.Observable.prototype.first = function () {\n  return withDesc(new Bacon.Desc(this, \"first\", []), this.take(1));\n};\n\nBacon.Observable.prototype.mapError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      return this.push(nextEvent(f(event.error)));\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.flatMapError = function (fn) {\n  var desc = new Bacon.Desc(this, \"flatMapError\", [fn]);\n  return withDesc(desc, this.mapError(function (err) {\n    return new Error(err);\n  }).flatMap(function (x) {\n    if (x instanceof Error) {\n      return fn(x.error);\n    } else {\n      return Bacon.once(x);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.sampledBy = function (sampler, combinator) {\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), this.toProperty().sampledBy(sampler, combinator));\n};\n\nBacon.Property.prototype.sampledBy = function (sampler, combinator) {\n  var lazy = false;\n  if (typeof combinator !== \"undefined\" && combinator !== null) {\n    combinator = toCombinator(combinator);\n  } else {\n    lazy = true;\n    combinator = function (f) {\n      return f.value();\n    };\n  }\n  var thisSource = new Source(this, false, lazy);\n  var samplerSource = new Source(sampler, true, lazy);\n  var stream = Bacon.when([thisSource, samplerSource], combinator);\n  var result = sampler._isProperty ? stream.toProperty() : stream;\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), result);\n};\n\nBacon.Property.prototype.sample = function (interval) {\n  return withDesc(new Bacon.Desc(this, \"sample\", [interval]), this.sampledBy(Bacon.interval(interval, {})));\n};\n\nBacon.Observable.prototype.map = function (p) {\n  if (p && p._isProperty) {\n    return p.sampledBy(this, former);\n  } else {\n    for (var _len18 = arguments.length, args = Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {\n      args[_key18 - 1] = arguments[_key18];\n    }\n\n    return convertArgsToFunction(this, p, args, function (f) {\n      return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  }\n};\n\nBacon.Observable.prototype.fold = function (seed, f) {\n  return withDesc(new Bacon.Desc(this, \"fold\", [seed, f]), this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n};\n\nObservable.prototype.reduce = Observable.prototype.fold;\n\nvar eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\nvar findHandlerMethods = function (target) {\n  var pair;\n  for (var i = 0; i < eventMethods.length; i++) {\n    pair = eventMethods[i];\n    var methodPair = [target[pair[0]], target[pair[1]]];\n    if (methodPair[0] && methodPair[1]) {\n      return methodPair;\n    }\n  }\n  for (var j = 0; j < eventMethods.length; j++) {\n    pair = eventMethods[j];\n    var addListener = target[pair[0]];\n    if (addListener) {\n      return [addListener, function () {}];\n    }\n  }\n  throw new Error(\"No suitable event methods in \" + target);\n};\n\nBacon.fromEventTarget = function (target, eventName, eventTransformer) {\n  var _findHandlerMethods = findHandlerMethods(target);\n\n  var sub = _findHandlerMethods[0];\n  var unsub = _findHandlerMethods[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromEvent\", [target, eventName]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    sub.call(target, eventName, handler);\n    return function () {\n      return unsub.call(target, eventName, handler);\n    };\n  }, eventTransformer));\n};\n\nBacon.fromEvent = Bacon.fromEventTarget;\n\nBacon.fromPoll = function (delay, poll) {\n  var desc = new Bacon.Desc(Bacon, \"fromPoll\", [delay, poll]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    var id = Bacon.scheduler.setInterval(handler, delay);\n    return function () {\n      return Bacon.scheduler.clearInterval(id);\n    };\n  }, poll));\n};\n\nfunction valueAndEnd(value) {\n  return [value, endEvent()];\n}\n\nBacon.fromPromise = function (promise, abort) {\n  var eventTransformer = arguments.length <= 2 || arguments[2] === undefined ? valueAndEnd : arguments[2];\n\n  return withDesc(new Bacon.Desc(Bacon, \"fromPromise\", [promise]), Bacon.fromBinder(function (handler) {\n    var bound = promise.then(handler, function (e) {\n      return handler(new Error(e));\n    });\n    if (bound && typeof bound.done === \"function\") {\n      bound.done();\n    }\n\n    if (abort) {\n      return function () {\n        if (typeof promise.abort === \"function\") {\n          return promise.abort();\n        }\n      };\n    } else {\n      return function () {};\n    }\n  }, eventTransformer));\n};\n\nBacon.Observable.prototype.groupBy = function (keyF) {\n  var limitF = arguments.length <= 1 || arguments[1] === undefined ? Bacon._.id : arguments[1];\n\n  var streams = {};\n  var src = this;\n  return src.filter(function (x) {\n    return !streams[keyF(x)];\n  }).map(function (x) {\n    var key = keyF(x);\n    var similar = src.filter(function (x) {\n      return keyF(x) === key;\n    });\n    var data = Bacon.once(x).concat(similar);\n    var limited = limitF(data, x).withHandler(function (event) {\n      this.push(event);\n      if (event.isEnd()) {\n        return delete streams[key];\n      }\n    });\n    streams[key] = limited;\n    return limited;\n  });\n};\n\nBacon.fromArray = function (values) {\n  assertArray(values);\n  if (!values.length) {\n    return withDesc(new Bacon.Desc(Bacon, \"fromArray\", values), Bacon.never());\n  } else {\n    var i = 0;\n    return new EventStream(new Bacon.Desc(Bacon, \"fromArray\", [values]), function (sink) {\n      var unsubd = false;\n      var reply = Bacon.more;\n      var pushing = false;\n      var pushNeeded = false;\n      var push = function () {\n        pushNeeded = true;\n        if (pushing) {\n          return;\n        }\n        pushing = true;\n        while (pushNeeded) {\n          pushNeeded = false;\n          if (reply !== Bacon.noMore && !unsubd) {\n            var value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                sink(endEvent());\n              } else {\n                UpdateBarrier.afterTransaction(push);\n              }\n            }\n          }\n        }\n        pushing = false;\n        return pushing;\n      };\n\n      push();\n      return function () {\n        unsubd = true;\n        return unsubd;\n      };\n    });\n  }\n};\n\nBacon.EventStream.prototype.holdWhen = function (valve) {\n  var onHold = false;\n  var bufferedValues = [];\n  var src = this;\n  return new EventStream(new Bacon.Desc(this, \"holdWhen\", [valve]), function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var subscribed = false;\n    var endIfBothEnded = function (unsub) {\n      if (typeof unsub === \"function\") {\n        unsub();\n      }\n      if (composite.empty() && subscribed) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (unsubAll, unsubMe) {\n      return valve.subscribeInternal(function (event) {\n        if (event.hasValue()) {\n          onHold = event.value();\n          if (!onHold) {\n            var toSend = bufferedValues;\n            bufferedValues = [];\n            return (function () {\n              var result = [];\n              for (var i = 0, value; i < toSend.length; i++) {\n                value = toSend[i];\n                result.push(sink(nextEvent(value)));\n              }\n              return result;\n            })();\n          }\n        } else if (event.isEnd()) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    composite.add(function (unsubAll, unsubMe) {\n      return src.subscribeInternal(function (event) {\n        if (onHold && event.hasValue()) {\n          return bufferedValues.push(event.value());\n        } else if (event.isEnd() && bufferedValues.length) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    subscribed = true;\n    endIfBothEnded();\n    return composite.unsubscribe;\n  });\n};\n\nBacon.interval = function (delay) {\n  var value = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  return withDesc(new Bacon.Desc(Bacon, \"interval\", [delay, value]), Bacon.fromPoll(delay, function () {\n    return nextEvent(value);\n  }));\n};\n\nBacon.$ = {};\nBacon.$.asEventStream = function (eventName, selector, eventTransformer) {\n  var _this11 = this;\n\n  if (_.isFunction(selector)) {\n    eventTransformer = selector;\n    selector = undefined;\n  }\n\n  return withDesc(new Bacon.Desc(this.selector || this, \"asEventStream\", [eventName]), Bacon.fromBinder(function (handler) {\n    _this11.on(eventName, selector, handler);\n    return function () {\n      return _this11.off(eventName, selector, handler);\n    };\n  }, eventTransformer));\n};\n\nif (typeof jQuery !== \"undefined\" && jQuery) {\n  jQuery.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nif (typeof Zepto !== \"undefined\" && Zepto) {\n  Zepto.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDesc(new Bacon.Desc(this, \"last\", []), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.Observable.prototype.log = function () {\n  for (var _len19 = arguments.length, args = Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n    args[_key19] = arguments[_key19];\n  }\n\n  this.subscribe(function (event) {\n    if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n  });\n  return this;\n};\n\nBacon.EventStream.prototype.merge = function (right) {\n  assertEventStream(right);\n  var left = this;\n  return withDesc(new Bacon.Desc(left, \"merge\", [right]), Bacon.mergeAll(this, right));\n};\n\nBacon.mergeAll = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    return new EventStream(new Bacon.Desc(Bacon, \"mergeAll\", streams), function (sink) {\n      var ends = 0;\n      var smartSink = function (obs) {\n        return function (unsubBoth) {\n          return obs.dispatcher.subscribe(function (event) {\n            if (event.isEnd()) {\n              ends++;\n              if (ends === streams.length) {\n                return sink(endEvent());\n              } else {\n                return Bacon.more;\n              }\n            } else {\n              var reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubBoth();\n              }\n              return reply;\n            }\n          });\n        };\n      };\n      var sinks = _.map(smartSink, streams);\n      return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n    });\n  } else {\n    return Bacon.never();\n  }\n};\n\nBacon.repeatedly = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"repeatedly\", [delay, values]), Bacon.fromPoll(delay, function () {\n    return values[index++ % values.length];\n  }));\n};\n\nBacon.repeat = function (generator) {\n  var index = 0;\n  return Bacon.fromBinder(function (sink) {\n    var flag = false;\n    var reply = Bacon.more;\n    var unsub = function () {};\n    function handleEvent(event) {\n      if (event.isEnd()) {\n        if (!flag) {\n          return flag = true;\n        } else {\n          return subscribeNext();\n        }\n      } else {\n        return reply = sink(event);\n      }\n    };\n    function subscribeNext() {\n      var next;\n      flag = true;\n      while (flag && reply !== Bacon.noMore) {\n        next = generator(index++);\n        flag = false;\n        if (next) {\n          unsub = next.subscribeInternal(handleEvent);\n        } else {\n          sink(endEvent());\n        }\n      }\n      return flag = true;\n    };\n    subscribeNext();\n    return function () {\n      return unsub();\n    };\n  });\n};\n\nBacon.retry = function (options) {\n  if (!_.isFunction(options.source)) {\n    throw new Exception(\"'source' option has to be a function\");\n  }\n  var source = options.source;\n  var retries = options.retries || 0;\n  var maxRetries = options.maxRetries || retries;\n  var delay = options.delay || function () {\n    return 0;\n  };\n  var isRetryable = options.isRetryable || function () {\n    return true;\n  };\n  var finished = false;\n  var error = null;\n\n  return withDesc(new Bacon.Desc(Bacon, \"retry\", [options]), Bacon.repeat(function () {\n    function valueStream() {\n      return source().endOnError().withHandler(function (event) {\n        if (event.isError()) {\n          error = event;\n          if (!(isRetryable(error.error) && retries > 0)) {\n            finished = true;\n            return this.push(event);\n          }\n        } else {\n          if (event.hasValue()) {\n            error = null;\n            finished = true;\n          }\n          return this.push(event);\n        }\n      });\n    }\n\n    if (finished) {\n      return null;\n    } else if (error) {\n      var context = {\n        error: error.error,\n        retriesDone: maxRetries - retries\n      };\n      var pause = Bacon.later(delay(context)).filter(false);\n      retries = retries - 1;\n      return pause.concat(Bacon.once().flatMap(valueStream));\n    } else {\n      return valueStream();\n    }\n  }));\n};\n\nBacon.sequentially = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"sequentially\", [delay, values]), Bacon.fromPoll(delay, function () {\n    var value = values[index++];\n    if (index < values.length) {\n      return value;\n    } else if (index === values.length) {\n      return [value, endEvent()];\n    } else {\n      return endEvent();\n    }\n  }));\n};\n\nBacon.Observable.prototype.skip = function (count) {\n  return withDesc(new Bacon.Desc(this, \"skip\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else if (count > 0) {\n      count--;\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.skipUntil = function (starter) {\n  var started = starter.take(1).map(true).toProperty(false);\n  return withDesc(new Bacon.Desc(this, \"skipUntil\", [starter]), this.filter(started));\n};\n\nBacon.EventStream.prototype.skipWhile = function (f) {\n  assertObservableIsProperty(f);\n  var ok = false;\n\n  for (var _len20 = arguments.length, args = Array(_len20 > 1 ? _len20 - 1 : 0), _key20 = 1; _key20 < _len20; _key20++) {\n    args[_key20 - 1] = arguments[_key20];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"skipWhile\", [f]), this.withHandler(function (event) {\n      if (ok || !event.hasValue() || !f(event.value())) {\n        if (event.hasValue()) {\n          ok = true;\n        }\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.Observable.prototype.slidingWindow = function (n) {\n  var minValues = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n  return withDesc(new Bacon.Desc(this, \"slidingWindow\", [n, minValues]), this.scan([], function (window, value) {\n    return window.concat([value]).slice(-n);\n  }).filter(function (values) {\n    return values.length >= minValues;\n  }));\n};\n\nvar spies = [];\nvar registerObs = function (obs) {\n  if (spies.length) {\n    if (!registerObs.running) {\n      try {\n        registerObs.running = true;\n        spies.forEach(function (spy) {\n          spy(obs);\n        });\n      } finally {\n        delete registerObs.running;\n      }\n    }\n  }\n};\n\nBacon.spy = function (spy) {\n  return spies.push(spy);\n};\n\nBacon.Property.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), this.scan(seed, function (prev, next) {\n    return next;\n  }));\n};\n\nBacon.EventStream.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), Bacon.once(seed).concat(this));\n};\n\nBacon.Observable.prototype.takeWhile = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len21 = arguments.length, args = Array(_len21 > 1 ? _len21 - 1 : 0), _key21 = 1; _key21 < _len21; _key21++) {\n    args[_key21 - 1] = arguments[_key21];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"takeWhile\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }));\n  });\n};\n\nBacon.EventStream.prototype.throttle = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"throttle\", [delay]), this.bufferWithTime(delay).map(function (values) {\n    return values[values.length - 1];\n  }));\n};\n\nBacon.Property.prototype.throttle = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"throttle\", [delay]), function (changes) {\n    return changes.throttle(delay);\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this12 = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this12.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nBacon[\"try\"] = function (f) {\n  return function (value) {\n    try {\n      return Bacon.once(f(value));\n    } catch (e) {\n      return new Bacon.Error(e);\n    }\n  };\n};\n\nBacon.update = function (initial) {\n  function lateBindFirst(f) {\n    return function () {\n      for (var _len23 = arguments.length, args = Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n        args[_key23] = arguments[_key23];\n      }\n\n      return function (i) {\n        return f.apply(undefined, [i].concat(args));\n      };\n    };\n  }\n\n  for (var _len22 = arguments.length, patterns = Array(_len22 > 1 ? _len22 - 1 : 0), _key22 = 1; _key22 < _len22; _key22++) {\n    patterns[_key22 - 1] = arguments[_key22];\n  }\n\n  var i = patterns.length - 1;\n  while (i > 0) {\n    if (!(patterns[i] instanceof Function)) {\n      patterns[i] = _.always(patterns[i]);\n    }\n    patterns[i] = lateBindFirst(patterns[i]);\n    i = i - 2;\n  }\n  return withDesc(new Bacon.Desc(Bacon, \"update\", [initial].concat(patterns)), Bacon.when.apply(Bacon, patterns).scan(initial, function (x, f) {\n    return f(x);\n  }));\n};\n\nBacon.zipAsArray = function () {\n  for (var _len24 = arguments.length, args = Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n    args[_key24] = arguments[_key24];\n  }\n\n  var streams = argumentsToObservables(args);\n  return withDesc(new Bacon.Desc(Bacon, \"zipAsArray\", streams), Bacon.zipWith(streams, function () {\n    for (var _len25 = arguments.length, xs = Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n      xs[_key25] = arguments[_key25];\n    }\n\n    return xs;\n  }));\n};\n\nBacon.zipWith = function () {\n  for (var _len26 = arguments.length, args = Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {\n    args[_key26] = arguments[_key26];\n  }\n\n  var observablesAndFunction = argumentsToObservablesAndFunction(args);\n  var streams = observablesAndFunction[0];\n  var f = observablesAndFunction[1];\n\n  streams = _.map(function (s) {\n    return s.toEventStream();\n  }, streams);\n  return withDesc(new Bacon.Desc(Bacon, \"zipWith\", [f].concat(streams)), Bacon.when(streams, f));\n};\n\nBacon.Observable.prototype.zip = function (other, f) {\n  return withDesc(new Bacon.Desc(this, \"zip\", [other]), Bacon.zipWith([this, other], f || Array));\n};\n\nif (typeof define !== \"undefined\" && define !== null && define.amd != null) {\n  define([], function () {\n    return Bacon;\n  });\n  if (typeof this !== \"undefined\" && this !== null) {\n    this.Bacon = Bacon;\n  }\n} else if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n  module.exports = Bacon;\n  Bacon.Bacon = Bacon;\n} else {\n    this.Bacon = Bacon;\n  }\n}).call(this);\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.1.20151003\n *\n * By Eli Grey, http://eligrey.com\n * License: X11/MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and\n\t\t// https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047\n\t\t// for the reasoning behind the timeout and revocation flow\n\t\t, arbitrary_revoke_timeout = 500 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (view.chrome) {\n\t\t\t\trevoker();\n\t\t\t} else {\n\t\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t\t}\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([\"\\ufeff\", blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar base64Data = reader.result;\n\t\t\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (new_tab == undefined && is_safari) {\n\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name, no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\n\t\t};\n\t}\n\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n","/*global define:false */\n/**\n * Copyright 2015 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.5.3\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n        _MAP[i + 96] = i;\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (window, document);\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/**\r\n* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.\r\n*  \r\n* Version - 0.99.00.beta \r\n* Copyright (c) 2012 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/vkbeautify/\r\n* \r\n* Dual licensed under the MIT and GPL licenses:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*   http://www.gnu.org/licenses/gpl.html\r\n*\r\n*   Pretty print\r\n*\r\n*        vkbeautify.xml(text [,indent_pattern]);\r\n*        vkbeautify.json(text [,indent_pattern]);\r\n*        vkbeautify.css(text [,indent_pattern]);\r\n*        vkbeautify.sql(text [,indent_pattern]);\r\n*\r\n*        @text - String; text to beatufy;\r\n*        @indent_pattern - Integer | String;\r\n*                Integer:  number of white spaces;\r\n*                String:   character string to visualize indentation ( can also be a set of white spaces )\r\n*   Minify\r\n*\r\n*        vkbeautify.xmlmin(text [,preserve_comments]);\r\n*        vkbeautify.jsonmin(text);\r\n*        vkbeautify.cssmin(text [,preserve_comments]);\r\n*        vkbeautify.sqlmin(text);\r\n*\r\n*        @text - String; text to minify;\r\n*        @preserve_comments - Bool; [optional];\r\n*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )\r\n*\r\n*   Examples:\r\n*        vkbeautify.xml(text); // pretty print XML\r\n*        vkbeautify.json(text, 4 ); // pretty print JSON\r\n*        vkbeautify.css(text, '. . . .'); // pretty print CSS\r\n*        vkbeautify.sql(text, '----'); // pretty print SQL\r\n*\r\n*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments\r\n*        vkbeautify.jsonmin(text);// minify JSON\r\n*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )\r\n*        vkbeautify.sqlmin(text);// minify SQL\r\n*\r\n*/\r\nfunction createShiftArr(step) {\r\n\r\n\tvar space = '    ';\r\n\t\r\n\tif ( isNaN(parseInt(step)) ) {  // argument is string\r\n\t\tspace = step;\r\n\t} else { // argument is integer\r\n\t\tswitch(step) {\r\n\t\t\tcase 1: space = ' '; break;\r\n\t\t\tcase 2: space = '  '; break;\r\n\t\t\tcase 3: space = '   '; break;\r\n\t\t\tcase 4: space = '    '; break;\r\n\t\t\tcase 5: space = '     '; break;\r\n\t\t\tcase 6: space = '      '; break;\r\n\t\t\tcase 7: space = '       '; break;\r\n\t\t\tcase 8: space = '        '; break;\r\n\t\t\tcase 9: space = '         '; break;\r\n\t\t\tcase 10: space = '          '; break;\r\n\t\t\tcase 11: space = '           '; break;\r\n\t\t\tcase 12: space = '            '; break;\r\n\t\t}\r\n\t}\r\n\r\n\tvar shift = ['\\n']; // array of shifts\r\n\tfor(ix=0;ix<100;ix++){\r\n\t\tshift.push(shift[ix]+space); \r\n\t}\r\n\treturn shift;\r\n}\r\n\r\nfunction vkbeautify(){\r\n\tthis.step = '    '; // 4 spaces\r\n\tthis.shift = createShiftArr(this.step);\r\n};\r\n\r\nvkbeautify.prototype.xml = function(text,step) {\r\n\r\n\tvar ar = text.replace(/>\\s{0,}</g,\"><\")\r\n\t\t\t\t .replace(/</g,\"~::~<\")\r\n\t\t\t\t .replace(/\\s*xmlns\\:/g,\"~::~xmlns:\")\r\n\t\t\t\t .replace(/\\s*xmlns\\=/g,\"~::~xmlns=\")\r\n\t\t\t\t .split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tinComment = false,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t// start comment or <![CDATA[...]]> or <!DOCTYPE //\r\n\t\t\tif(ar[ix].search(/<!/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tinComment = true; \r\n\t\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) { \r\n\t\t\t\t\tinComment = false; \r\n\t\t\t\t}\r\n\t\t\t} else \r\n\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tinComment = false; \r\n\t\t\t} else \r\n\t\t\t// <elm></elm> //\r\n\t\t\tif( /^<\\w/.exec(ar[ix-1]) && /^<\\/\\w/.exec(ar[ix]) &&\r\n\t\t\t\t/^<[\\w:\\-\\.\\,]+/.exec(ar[ix-1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/','')) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tif(!inComment) deep--;\r\n\t\t\t} else\r\n\t\t\t // <elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1 ) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep++]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t // <elm>...</elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// </elm> //\r\n\t\t\tif(ar[ix].search(/<\\//) > -1) { \r\n\t\t\t\tstr = !inComment ? str += shift[--deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <elm/> //\r\n\t\t\tif(ar[ix].search(/\\/>/) > -1 ) { \r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <? xml ... ?> //\r\n\t\t\tif(ar[ix].search(/<\\?/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\t// xmlns //\r\n\t\t\tif( ar[ix].search(/xmlns\\:/) > -1  || ar[ix].search(/xmlns\\=/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\treturn  (str[0] == '\\n') ? str.slice(1) : str;\r\n}\r\n\r\nvkbeautify.prototype.json = function(text,step) {\r\n\r\n\tvar step = step ? step : this.step;\r\n\t\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\tif ( typeof text === \"string\" ) return JSON.stringify(JSON.parse(text), null, step);\r\n\tif ( typeof text === \"object\" ) return JSON.stringify(text, null, step);\r\n\t\t\r\n\treturn text; // text is not string nor object\r\n}\r\n\r\nvkbeautify.prototype.css = function(text, step) {\r\n\r\n\tvar ar = text.replace(/\\s{1,}/g,' ')\r\n\t\t\t\t.replace(/\\{/g,\"{~::~\")\r\n\t\t\t\t.replace(/\\}/g,\"~::~}~::~\")\r\n\t\t\t\t.replace(/\\;/g,\";~::~\")\r\n\t\t\t\t.replace(/\\/\\*/g,\"~::~/*\")\r\n\t\t\t\t.replace(/\\*\\//g,\"*/~::~\")\r\n\t\t\t\t.replace(/~::~\\s{0,}~::~/g,\"~::~\")\r\n\t\t\t\t.split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\t\t\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\r\n\t\t\tif( /\\{/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep++]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\}/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[--deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\*\\\\/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.replace(/^\\n{1,}/,'');\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nfunction isSubquery(str, parenthesisLevel) {\r\n\treturn  parenthesisLevel - (str.replace(/\\(/g,'').length - str.replace(/\\)/g,'').length )\r\n}\r\n\r\nfunction split_sql(str, tab) {\r\n\r\n\treturn str.replace(/\\s{1,}/g,\" \")\r\n\r\n\t\t\t\t.replace(/ AND /ig,\"~::~\"+tab+tab+\"AND \")\r\n\t\t\t\t.replace(/ BETWEEN /ig,\"~::~\"+tab+\"BETWEEN \")\r\n\t\t\t\t.replace(/ CASE /ig,\"~::~\"+tab+\"CASE \")\r\n\t\t\t\t.replace(/ ELSE /ig,\"~::~\"+tab+\"ELSE \")\r\n\t\t\t\t.replace(/ END /ig,\"~::~\"+tab+\"END \")\r\n\t\t\t\t.replace(/ FROM /ig,\"~::~FROM \")\r\n\t\t\t\t.replace(/ GROUP\\s{1,}BY/ig,\"~::~GROUP BY \")\r\n\t\t\t\t.replace(/ HAVING /ig,\"~::~HAVING \")\r\n\t\t\t\t//.replace(/ SET /ig,\" SET~::~\")\r\n\t\t\t\t.replace(/ IN /ig,\" IN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ JOIN /ig,\"~::~JOIN \")\r\n\t\t\t\t.replace(/ CROSS~::~{1,}JOIN /ig,\"~::~CROSS JOIN \")\r\n\t\t\t\t.replace(/ INNER~::~{1,}JOIN /ig,\"~::~INNER JOIN \")\r\n\t\t\t\t.replace(/ LEFT~::~{1,}JOIN /ig,\"~::~LEFT JOIN \")\r\n\t\t\t\t.replace(/ RIGHT~::~{1,}JOIN /ig,\"~::~RIGHT JOIN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ ON /ig,\"~::~\"+tab+\"ON \")\r\n\t\t\t\t.replace(/ OR /ig,\"~::~\"+tab+tab+\"OR \")\r\n\t\t\t\t.replace(/ ORDER\\s{1,}BY/ig,\"~::~ORDER BY \")\r\n\t\t\t\t.replace(/ OVER /ig,\"~::~\"+tab+\"OVER \")\r\n\r\n\t\t\t\t.replace(/\\(\\s{0,}SELECT /ig,\"~::~(SELECT \")\r\n\t\t\t\t.replace(/\\)\\s{0,}SELECT /ig,\")~::~SELECT \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ THEN /ig,\" THEN~::~\"+tab+\"\")\r\n\t\t\t\t.replace(/ UNION /ig,\"~::~UNION~::~\")\r\n\t\t\t\t.replace(/ USING /ig,\"~::~USING \")\r\n\t\t\t\t.replace(/ WHEN /ig,\"~::~\"+tab+\"WHEN \")\r\n\t\t\t\t.replace(/ WHERE /ig,\"~::~WHERE \")\r\n\t\t\t\t.replace(/ WITH /ig,\"~::~WITH \")\r\n\t\t\t\t\r\n\t\t\t\t//.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\r\n\t\t\t\t//.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\r\n\r\n\t\t\t\t.replace(/ ALL /ig,\" ALL \")\r\n\t\t\t\t.replace(/ AS /ig,\" AS \")\r\n\t\t\t\t.replace(/ ASC /ig,\" ASC \")\t\r\n\t\t\t\t.replace(/ DESC /ig,\" DESC \")\t\r\n\t\t\t\t.replace(/ DISTINCT /ig,\" DISTINCT \")\r\n\t\t\t\t.replace(/ EXISTS /ig,\" EXISTS \")\r\n\t\t\t\t.replace(/ NOT /ig,\" NOT \")\r\n\t\t\t\t.replace(/ NULL /ig,\" NULL \")\r\n\t\t\t\t.replace(/ LIKE /ig,\" LIKE \")\r\n\t\t\t\t.replace(/\\s{0,}SELECT /ig,\"SELECT \")\r\n\t\t\t\t.replace(/\\s{0,}UPDATE /ig,\"UPDATE \")\r\n\t\t\t\t.replace(/ SET /ig,\" SET \")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t.replace(/~::~{1,}/g,\"~::~\")\r\n\t\t\t\t.split('~::~');\r\n}\r\n\r\nvkbeautify.prototype.sql = function(text,step) {\r\n\r\n\tvar ar_by_quote = text.replace(/\\s{1,}/g,\" \")\r\n\t\t\t\t\t\t\t.replace(/\\'/ig,\"~::~\\'\")\r\n\t\t\t\t\t\t\t.split('~::~'),\r\n\t\tlen = ar_by_quote.length,\r\n\t\tar = [],\r\n\t\tdeep = 0,\r\n\t\ttab = this.step,//+this.step,\r\n\t\tinComment = true,\r\n\t\tinQuote = false,\r\n\t\tparenthesisLevel = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\tif(ix%2) {\r\n\t\t\t\tar = ar.concat(ar_by_quote[ix]);\r\n\t\t\t} else {\r\n\t\t\t\tar = ar.concat(split_sql(ar_by_quote[ix], tab) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlen = ar.length;\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t\r\n\t\t\tparenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SET\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tdeep++;\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\'/.exec(ar[ix]) )  { \r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t\telse  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tvar junk = 0;\r\n\t\t}\r\n\r\n\t\tstr = str.replace(/^\\n{1,}/,'').replace(/\\n{1,}/g,\"\\n\");\r\n\t\treturn str;\r\n}\r\n\r\n\r\nvkbeautify.prototype.xmlmin = function(text, preserveComments) {\r\n\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g,\"\")\r\n\t\t\t\t\t\t\t\t\t .replace(/[ \\r\\n\\t]{1,}xmlns/g, ' xmlns');\r\n\treturn  str.replace(/>\\s{0,}</g,\"><\"); \r\n}\r\n\r\nvkbeautify.prototype.jsonmin = function(text) {\r\n\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\treturn JSON.stringify(JSON.parse(text), null, 0); \r\n\t\t\t\t\r\n}\r\n\r\nvkbeautify.prototype.cssmin = function(text, preserveComments) {\r\n\t\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g,\"\") ;\r\n\r\n\treturn str.replace(/\\s{1,}/g,' ')\r\n\t\t\t  .replace(/\\{\\s{1,}/g,\"{\")\r\n\t\t\t  .replace(/\\}\\s{1,}/g,\"}\")\r\n\t\t\t  .replace(/\\;\\s{1,}/g,\";\")\r\n\t\t\t  .replace(/\\/\\*\\s{1,}/g,\"/*\")\r\n\t\t\t  .replace(/\\*\\/\\s{1,}/g,\"*/\");\r\n}\r\n\r\nvkbeautify.prototype.sqlmin = function(text) {\r\n\treturn text.replace(/\\s{1,}/g,\" \").replace(/\\s{1,}\\(/,\"(\").replace(/\\s{1,}\\)/,\")\");\r\n}\r\n\r\nmodule.exports = new vkbeautify();\r\n\r\n"]}